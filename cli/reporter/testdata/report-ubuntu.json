{
  "assets": {
    "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc": {
      "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc",
      "name": "ubuntu:24.04",
      "platform_ids": [
        "//platformid.api.mondoo.app/runtime/docker/images/4f1db91d9560cf107b5832c0761364ec64f46777aa4ec637cca3008f287c975e",
        "//platformid.api.mondoo.app/runtime/docker/images/a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061"
      ],
      "platform": {
        "name": "ubuntu",
        "arch": "amd64",
        "title": "Ubuntu 24.04.2 LTS",
        "family": [
          "debian",
          "linux",
          "unix",
          "os"
        ],
        "version": "24.04",
        "kind": "container-image",
        "technology_url_segments": [
          "container",
          "container-image",
          "linux",
          "ubuntu",
          "24.04"
        ],
        "runtime": "docker-image",
        "labels": {
          "distro-id": "ubuntu"
        },
        "metadata": {
          "distro-id": "ubuntu"
        }
      },
      "connections": [
        {
          "host": "ubuntu:24.04",
          "id": 1,
          "type": "docker-image",
          "options": {
            "device-names": "",
            "disable-cache": "false",
            "path": "/tmp/mondoo.tmp2701351020"
          },
          "discover": {
            "targets": [
              "auto"
            ]
          },
          "capabilities": [
            "file",
            "find-file"
          ]
        }
      ],
      "labels": {
        "docker.io/digest": "sha256:a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061",
        "docker.io/digests": "ubuntu:24.04",
        "docker.io/tags": "24.04",
        "mondoo.com/image-id": "sha256:65ae7a6f3544bd2d2b6d19b13bfc64752d776bc92c510f874188bfd404d205a3",
        "mondoo.com/project-id": ""
      },
      "url": "http://localhost:1234/space/inventory/310qEuaqCbVCMU5tGa1HbLx8TZc?spaceId=test-infallible-taussig-796596",
      "kind_string": "container-image"
    }
  },
  "bundle": {
    "owner_mrn": "//policy.api.mondoo.app",
    "policies": [
      {
        "mrn": "//captain.api.mondoo.app/spaces/test-infallible-taussig-796596",
        "name": "test-infallible-taussig-796596",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "policies": [
              {
                "mrn": "//policy.api.mondoo.app/policies/asset-overview",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-aws",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-azure",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-gcp",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-inventory",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security",
                "action": 3,
                "last_applied": 1754671288
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-macos-inventory",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-vex",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/mondoo-windows-asset-inventory",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/risk-factors",
                "action": 3,
                "last_applied": 1753906898
              },
              {
                "mrn": "//policy.api.mondoo.app/policies/sshd-policy",
                "action": 3,
                "last_applied": 1753906898
              }
            ]
          }
        ],
        "scoring_system": "average",
        "props": [
          {
            "mql": "return ['aes256-ctr', 'aes192-ctr', 'aes128-ctr']\n\n",
            "code_id": "cC61mur3af4=",
            "checksum": "ZHzSffScrRs=",
            "mrn": "//policy.api.mondoo.app/spaces/test-infallible-taussig-796596/properties/be0a7faf0354186b03ff1f8415824bdd487f12d731d056a5",
            "type": "\u0019\u0007",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/policies/sshd-policy/properties/sshdTestCiphers"
              }
            ]
          }
        ],
        "local_content_checksum": "UXElufYku+c=",
        "graph_content_checksum": "qqHryd6SrUY=",
        "local_execution_checksum": "n3mLRIrdBKs=",
        "graph_execution_checksum": "f/86eAHNqg8=",
        "computed_filters": {
          "items": {
            "+JnRYnF2Eq4=": {
              "mql": "asset.platform == \"aws-gateway-restapi\"",
              "code_id": "+JnRYnF2Eq4=",
              "checksum": "10D4LUkKqjs=",
              "mrn": "//policy.api.mondoo.app/filter/+JnRYnF2Eq4=",
              "type": "\u0004"
            },
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            },
            "+dxosqhWfaA=": {
              "mql": "asset.platform == \"aws-efs-filesystem\"",
              "code_id": "+dxosqhWfaA=",
              "checksum": "lg1z+X19ABE=",
              "mrn": "//policy.api.mondoo.app/filter/+dxosqhWfaA=",
              "type": "\u0004"
            },
            "+hNUsU8LJQU=": {
              "mql": "asset.family.contains(/redhat|debian/) == false \u0026\u0026 asset.platform != \"amazonlinux\"",
              "code_id": "+hNUsU8LJQU=",
              "checksum": "4lOb8IKR03g=",
              "mrn": "//policy.api.mondoo.app/filter/+hNUsU8LJQU=",
              "type": "\u0004"
            },
            "+vAK1AM4mvk=": {
              "mql": "asset.platform == \"okta-org\"",
              "code_id": "+vAK1AM4mvk=",
              "checksum": "yqb0yQAERmc=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/+vAK1AM4mvk=",
              "type": "\u0004"
            },
            "+zrPv0BAYRs=": {
              "mql": "asset.platform == \"azure-storage-account\" \u0026\u0026 azure.subscription.storage.account.containers != empty",
              "code_id": "+zrPv0BAYRs=",
              "checksum": "Bj/NBueyV54=",
              "mrn": "//policy.api.mondoo.app/filter/+zrPv0BAYRs=",
              "type": "\u0004"
            },
            "/+KCjve1urM=": {
              "mql": "package('openssh-server').installed || package('openssh').installed",
              "code_id": "/+KCjve1urM=",
              "checksum": "C/dDiSF0fQo=",
              "mrn": "//policy.api.mondoo.app/filter//+KCjve1urM=",
              "type": "\u0004"
            },
            "/4iD720uH3E=": {
              "mql": "asset.platform == \"gcp-compute-subnetwork\"\n",
              "code_id": "/4iD720uH3E=",
              "checksum": "Cw9i6qMs5j0=",
              "mrn": "//policy.api.mondoo.app/filter//4iD720uH3E=",
              "type": "\u0004"
            },
            "0U0ANw7sPc4=": {
              "mql": "asset.family.contains('linux')\nasset.runtime != 'container' \u0026\u0026 asset.kind != 'container' \u0026\u0026 asset.kind != 'container-image'\n",
              "code_id": "0U0ANw7sPc4=",
              "checksum": "FSNvZExBvY0=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/0U0ANw7sPc4=",
              "type": "\u0001"
            },
            "0YsqcS4odYM=": {
              "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
              "code_id": "0YsqcS4odYM=",
              "checksum": "geFsJFdVbAo=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/0YsqcS4odYM=",
              "type": "\u0004"
            },
            "0n1ch8Jsk8w=": {
              "mql": "asset.platform == \"azure-storage-container\"",
              "code_id": "0n1ch8Jsk8w=",
              "checksum": "2WBk1FSJotc=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0n1ch8Jsk8w=",
              "type": "\u0004"
            },
            "0nucc9YlORU=": {
              "mql": "asset.platform == \"aws-sagemaker-notebookinstance\"",
              "code_id": "0nucc9YlORU=",
              "checksum": "RVjedaKfbIQ=",
              "mrn": "//policy.api.mondoo.app/filter/0nucc9YlORU=",
              "type": "\u0004"
            },
            "0nvpSmfgEbc=": {
              "mql": "asset.name != \"\"",
              "code_id": "0nvpSmfgEbc=",
              "checksum": "ki87ZqnyZzg=",
              "mrn": "//policy.api.mondoo.app/filter/0nvpSmfgEbc=",
              "type": "\u0004"
            },
            "0oY2st+ixMg=": {
              "mql": "asset.runtime == \"azure\"",
              "code_id": "0oY2st+ixMg=",
              "checksum": "HhIPy3MYJvs=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-azure/filter/0oY2st+ixMg=",
              "type": "\u0004"
            },
            "0temxiiOySw=": {
              "mql": "asset.platform == \"aws-ecr-image\"",
              "code_id": "0temxiiOySw=",
              "checksum": "ymMLEMk0JT0=",
              "mrn": "//policy.api.mondoo.app/filter/0temxiiOySw=",
              "type": "\u0004"
            },
            "0xGx5RDAF4o=": {
              "mql": "asset.platform == \"gcp-compute-network\"\n",
              "code_id": "0xGx5RDAF4o=",
              "checksum": "V/sWJm67UTU=",
              "mrn": "//policy.api.mondoo.app/filter/0xGx5RDAF4o=",
              "type": "\u0004"
            },
            "1z0zLJqMOPc=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('slapd').installed\n",
              "code_id": "1z0zLJqMOPc=",
              "checksum": "Y41mhL0S1Yk=",
              "mrn": "//policy.api.mondoo.app/filter/1z0zLJqMOPc=",
              "type": "\u0004"
            },
            "2/RKPdovsIM=": {
              "mql": "asset.family.contains(_ == 'linux')",
              "code_id": "2/RKPdovsIM=",
              "checksum": "ztMG4Y4LX2k=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/2/RKPdovsIM=",
              "type": "\u0004"
            },
            "2Uf6RgDeLgE=": {
              "mql": "asset.platform == \"github-user\"",
              "code_id": "2Uf6RgDeLgE=",
              "checksum": "4SFYceWGB1Y=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/2Uf6RgDeLgE=",
              "type": "\u0004"
            },
            "3DfQtXum8PI=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.publicHostname.length != 0\n",
              "code_id": "3DfQtXum8PI=",
              "checksum": "/0irabM9Tdg=",
              "mrn": "//policy.api.mondoo.app/filter/3DfQtXum8PI=",
              "type": "\u0001"
            },
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "bG0iGM1CtyQ=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            },
            "3w7JZEbs7D0=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('mongodb').installed\n",
              "code_id": "3w7JZEbs7D0=",
              "checksum": "GVvJQMyvsDA=",
              "mrn": "//policy.api.mondoo.app/filter/3w7JZEbs7D0=",
              "type": "\u0004"
            },
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"",
              "code_id": "3z170zdo7Ac=",
              "checksum": "bxUrAUBGM1g=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            },
            "48ACBWoEuIs=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('cups').installed\n",
              "code_id": "48ACBWoEuIs=",
              "checksum": "XvgKlPhryqU=",
              "mrn": "//policy.api.mondoo.app/filter/48ACBWoEuIs=",
              "type": "\u0004"
            },
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "8di3Utbwcrg=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/5qRCZazhsy4=",
              "type": "\u0004"
            },
            "6JjwtW5h8yk=": {
              "mql": "package('openssh-server').installed",
              "code_id": "6JjwtW5h8yk=",
              "checksum": "hFWTa/waBVM=",
              "mrn": "//policy.api.mondoo.app/filter/6JjwtW5h8yk=",
              "type": "\u0004"
            },
            "6L4Mx8/QL0Q=": {
              "mql": "asset.platform == \"github-repo\"",
              "code_id": "6L4Mx8/QL0Q=",
              "checksum": "yjzej3b/ugM=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/6L4Mx8/QL0Q=",
              "type": "\u0004"
            },
            "6MyoXYw7VKE=": {
              "mql": "asset.family.contains('os')",
              "code_id": "6MyoXYw7VKE=",
              "checksum": "61SN1I5iWz0=",
              "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
              "type": "\u0004"
            },
            "7NvxkDWMVQQ=": {
              "mql": "asset.platform == \"gcp-compute-image\"",
              "code_id": "7NvxkDWMVQQ=",
              "checksum": "ZvhqKzCqo8I=",
              "mrn": "//policy.api.mondoo.app/filter/7NvxkDWMVQQ=",
              "type": "\u0004"
            },
            "7SMsbTMk21g=": {
              "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Owner\"] != null",
              "code_id": "7SMsbTMk21g=",
              "checksum": "iJ2OOuDsDtc=",
              "mrn": "//policy.api.mondoo.app/filter/7SMsbTMk21g=",
              "type": "\u0004"
            },
            "7gmQt2xyyek=": {
              "mql": "asset.platform == \"azure-keyvault-vault\"",
              "code_id": "7gmQt2xyyek=",
              "checksum": "+rzWnYFLv90=",
              "mrn": "//policy.api.mondoo.app/filter/7gmQt2xyyek=",
              "type": "\u0004"
            },
            "7vmuyqQ5FgA=": {
              "mql": "asset.kind == 'baremetal'\nmachine.baseboard.product != \"\"\n",
              "code_id": "7vmuyqQ5FgA=",
              "checksum": "gt3LNyC8sxM=",
              "mrn": "//policy.api.mondoo.app/filter/7vmuyqQ5FgA=",
              "type": "\u0001"
            },
            "8iGUBh79IzA=": {
              "mql": "asset.platform == \"aws-lambda-function\"\n",
              "code_id": "8iGUBh79IzA=",
              "checksum": "eihuwkpzA1w=",
              "mrn": "//policy.api.mondoo.app/filter/8iGUBh79IzA=",
              "type": "\u0004"
            },
            "9eYaJPNxJRc=": {
              "mql": "asset.platform == \"host\"",
              "code_id": "9eYaJPNxJRc=",
              "checksum": "yKrwpjAS8sA=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/9eYaJPNxJRc=",
              "type": "\u0004"
            },
            "AXL6b/SMqY4=": {
              "mql": "asset.platform == \"aws-ebs-volume\"\n",
              "code_id": "AXL6b/SMqY4=",
              "checksum": "m0eqSKvfDhI=",
              "mrn": "//policy.api.mondoo.app/filter/AXL6b/SMqY4=",
              "type": "\u0004"
            },
            "Bb9EpincTEM=": {
              "mql": "asset.platform == \"microsoft365\"",
              "code_id": "Bb9EpincTEM=",
              "checksum": "0A46xwGkIJo=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Bb9EpincTEM=",
              "type": "\u0004"
            },
            "BcOyXN5MJ9w=": {
              "mql": "asset.kind == 'baremetal'\nmachine.chassis.serial != \"\"\n",
              "code_id": "BcOyXN5MJ9w=",
              "checksum": "eMKs1XhdGrY=",
              "mrn": "//policy.api.mondoo.app/filter/BcOyXN5MJ9w=",
              "type": "\u0001"
            },
            "BmvmwwxN7CI=": {
              "mql": "asset.platform == \"azure-storage-account\"",
              "code_id": "BmvmwwxN7CI=",
              "checksum": "9WqtBAdYE38=",
              "mrn": "//policy.api.mondoo.app/filter/BmvmwwxN7CI=",
              "type": "\u0004"
            },
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "7LRkiiC8zGo=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            },
            "CNIfmlvOXUg=": {
              "mql": "asset.platform == \"aws-rds-dbcluster\"",
              "code_id": "CNIfmlvOXUg=",
              "checksum": "dlFMx6QAVvw=",
              "mrn": "//policy.api.mondoo.app/filter/CNIfmlvOXUg=",
              "type": "\u0004"
            },
            "CmBsKqBM1Vs=": {
              "mql": "asset.platform == \"aws-ec2-snapshot\" || asset.platform == \"aws-ebs-snapshot\"",
              "code_id": "CmBsKqBM1Vs=",
              "checksum": "rb+p4NTgf5c=",
              "mrn": "//policy.api.mondoo.app/filter/CmBsKqBM1Vs=",
              "type": "\u0004"
            },
            "E3/ecMmSE9Y=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('nginx').installed\n",
              "code_id": "E3/ecMmSE9Y=",
              "checksum": "MbKns5lX5gU=",
              "mrn": "//policy.api.mondoo.app/filter/E3/ecMmSE9Y=",
              "type": "\u0004"
            },
            "EME+o5rRCGY=": {
              "mql": "asset.family.contains('windows')\n\u0026\u0026 packages.contains(name == 'Microsoft SQL Server')\n",
              "code_id": "EME+o5rRCGY=",
              "checksum": "M8sTatN4YWU=",
              "mrn": "//policy.api.mondoo.app/filter/EME+o5rRCGY=",
              "type": "\u0004"
            },
            "EaABSliBEFU=": {
              "mql": "asset.platform == \"arista-eos\"",
              "code_id": "EaABSliBEFU=",
              "checksum": "bl4d4XL5WoQ=",
              "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
              "type": "\u0004"
            },
            "EcZ+12oxrPM=": {
              "mql": "aws.account.aliases.first != null",
              "code_id": "EcZ+12oxrPM=",
              "checksum": "DFUkgNXX3KQ=",
              "mrn": "//policy.api.mondoo.app/filter/EcZ+12oxrPM=",
              "type": "\u0004"
            },
            "F+ghXkR5x/0=": {
              "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"vmware-esxi\" || asset.platform == \"vmware-vsphere\" || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
              "code_id": "F+ghXkR5x/0=",
              "checksum": "jXbxvc4E76I=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/F+ghXkR5x/0=",
              "type": "\u0004"
            },
            "FFO3jGt7Ya8=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('postgresql').installed\n",
              "code_id": "FFO3jGt7Ya8=",
              "checksum": "+ympF/ydDBs=",
              "mrn": "//policy.api.mondoo.app/filter/FFO3jGt7Ya8=",
              "type": "\u0004"
            },
            "FuF3eusA7QQ=": {
              "mql": "asset.platform == \"windows\"",
              "code_id": "FuF3eusA7QQ=",
              "checksum": "la7L6DCUL98=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-windows-asset-inventory/filter/FuF3eusA7QQ=",
              "type": "\u0004"
            },
            "GFM9hQszwPQ=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('opensearch').installed\n",
              "code_id": "GFM9hQszwPQ=",
              "checksum": "1+4TSNCLRDI=",
              "mrn": "//policy.api.mondoo.app/filter/GFM9hQszwPQ=",
              "type": "\u0004"
            },
            "GGmsRv0eF+o=": {
              "mql": "asset.platform == \"aws-iam-group\"\n",
              "code_id": "GGmsRv0eF+o=",
              "checksum": "D7wZ+V9I9U0=",
              "mrn": "//policy.api.mondoo.app/filter/GGmsRv0eF+o=",
              "type": "\u0004"
            },
            "GIKTqfvfI7E=": {
              "mql": "cloud.provider.upcase == \"UNKNOWN\"\nasset.kind == \"virtualmachine\"\nos.hypervisor\n",
              "code_id": "GIKTqfvfI7E=",
              "checksum": "/IAeUPqRn8A=",
              "mrn": "//policy.api.mondoo.app/filter/GIKTqfvfI7E=",
              "type": "\u0001"
            },
            "GY9f1oFntuQ=": {
              "mql": "asset.platform == \"terraform-hcl\"",
              "code_id": "GY9f1oFntuQ=",
              "checksum": "9BcBEvUxUT4=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/GY9f1oFntuQ=",
              "type": "\u0004"
            },
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "ZEIQJuHxUnQ=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/Gahk63XA/8A=",
              "type": "\u0004"
            },
            "Gd7SIsIOQlc=": {
              "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsModel'] != \"\"\n",
              "code_id": "Gd7SIsIOQlc=",
              "checksum": "+pjdv9oTIgg=",
              "mrn": "//policy.api.mondoo.app/filter/Gd7SIsIOQlc=",
              "type": "\u0001"
            },
            "Hgs86AORbWw=": {
              "mql": "asset.family.contains(/redhat|debian/) == true",
              "code_id": "Hgs86AORbWw=",
              "checksum": "fM/w3a2/VkM=",
              "mrn": "//policy.api.mondoo.app/filter/Hgs86AORbWw=",
              "type": "\u0004"
            },
            "HkeKGQEOnC8=": {
              "mql": "asset.labels[\"windows.mondoo.com/product-type\"] != \"0\"",
              "code_id": "HkeKGQEOnC8=",
              "checksum": "WVx7kpQUhfY=",
              "mrn": "//policy.api.mondoo.app/filter/HkeKGQEOnC8=",
              "type": "\u0004"
            },
            "HrRMIvHMfB4=": {
              "mql": "asset.platform == \"azure-mysql-server\"",
              "code_id": "HrRMIvHMfB4=",
              "checksum": "2jQKXx27fzQ=",
              "mrn": "//policy.api.mondoo.app/filter/HrRMIvHMfB4=",
              "type": "\u0004"
            },
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            },
            "IcMdff/OuqI=": {
              "mql": "asset.platform == \"gitlab\" || asset.platform == \"gitlab-group\"",
              "code_id": "IcMdff/OuqI=",
              "checksum": "SZ+H492hBoY=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/IcMdff/OuqI=",
              "type": "\u0004"
            },
            "ItMukH2UOZA=": {
              "mql": "asset.platform == \"aws-cloudwatch-loggroup\"",
              "code_id": "ItMukH2UOZA=",
              "checksum": "vFidmal67RM=",
              "mrn": "//policy.api.mondoo.app/filter/ItMukH2UOZA=",
              "type": "\u0004"
            },
            "J9lH/zmjDcQ=": {
              "mql": "aws.cloudtrail.trail.snsTopicARN != \"\"",
              "code_id": "J9lH/zmjDcQ=",
              "checksum": "ZXFtZxOdIpg=",
              "mrn": "//policy.api.mondoo.app/filter/J9lH/zmjDcQ=",
              "type": "\u0004"
            },
            "KFFGCoaNXEA=": {
              "mql": "[\n  \"aws-cloudtrail-trail\",\n  \"aws-cloudwatch-loggroup\",\n  \"aws-dynamodb-table\",\n  \"aws-ebs-snapshot\",\n  \"aws-ebs-volume\",\n  \"aws-ec2-instance\",\n  \"aws-ec2-snapshot\",\n  \"aws-ec2-volume\",\n  \"aws-ecr-image\",\n  \"aws-ecs-container\",\n  \"aws-efs-filesystem\",\n  \"aws-elb-loadbalancer\",\n  \"aws-es-domain\",\n  \"aws-gateway-restapi\",\n  \"aws-iam-group\",\n  \"aws-iam-user\",\n  \"aws-kms-key\",\n  \"aws-lambda-function\",\n  \"aws-rds-dbinstance\",\n  \"aws-redshift-cluster\",\n  \"aws-s3-bucket\",\n  \"aws-sagemaker-notebookinstance\",\n  \"aws-security-group\",\n  \"aws-vpc\",\n  \"aws\",\n  \"azure\",\n  \"google-workspace\",\n  \"k8s-cluster\",\n  \"k8s-cronjob\",\n  \"k8s-daemonset\",\n  \"k8s-deployment\",\n  \"k8s-ingress\",\n  \"k8s-job\",\n  \"k8s-namespace\",\n  \"k8s-pod\",\n  \"k8s-replicaset\",\n  \"k8s-statefulset\",\n  \"macos\",\n  \"oci\",\n  \"okta-org\",\n  \"aix\"\n].none(asset.platform)\nasset.family.none('linux')\nasset.family.none('windows')\n",
              "code_id": "KFFGCoaNXEA=",
              "checksum": "qfX+vaUQINI=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/KFFGCoaNXEA=",
              "type": "\u0001"
            },
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "NqCzl75iTlY=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            },
            "Kgi28nuBpag=": {
              "mql": "asset.platform == \"gcp-compute-instance\"\ngcp.compute.instance.networkInterfaces.any(_['accessConfigs'].where(_['name'] == \"External NAT\"))\n",
              "code_id": "Kgi28nuBpag=",
              "checksum": "GKzrTqk61Rc=",
              "mrn": "//policy.api.mondoo.app/filter/Kgi28nuBpag=",
              "type": "\u0001"
            },
            "Li/m/Mk3eh0=": {
              "mql": "asset.platform == \"gcp-org\"",
              "code_id": "Li/m/Mk3eh0=",
              "checksum": "b2+kdWFF/vA=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Li/m/Mk3eh0=",
              "type": "\u0004"
            },
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "8Bh9aB41NyU=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            },
            "M4FgTdRaB8A=": {
              "mql": "asset.platform == \"aws-ecs-container\"",
              "code_id": "M4FgTdRaB8A=",
              "checksum": "TbIX8JR8Wjk=",
              "mrn": "//policy.api.mondoo.app/filter/M4FgTdRaB8A=",
              "type": "\u0004"
            },
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            },
            "MUAwfx81KHc=": {
              "mql": "asset.platform == \"azure-postgresql-flexible-server\"",
              "code_id": "MUAwfx81KHc=",
              "checksum": "PiNv2xK+xX4=",
              "mrn": "//policy.api.mondoo.app/filter/MUAwfx81KHc=",
              "type": "\u0004"
            },
            "Mqc04GMFFRg=": {
              "mql": "asset.platform == \"azure-mariadb-server\"",
              "code_id": "Mqc04GMFFRg=",
              "checksum": "vnxKs7ziI40=",
              "mrn": "//policy.api.mondoo.app/filter/Mqc04GMFFRg=",
              "type": "\u0004"
            },
            "MrxXb13XuN4=": {
              "mql": "asset.kind == 'baremetal'\n",
              "code_id": "MrxXb13XuN4=",
              "checksum": "OPwe5LQG5IE=",
              "mrn": "//policy.api.mondoo.app/filter/MrxXb13XuN4=",
              "type": "\u0004"
            },
            "N1flM1XSV/Y=": {
              "mql": "[\n  \"k8s-pod\",\n  \"k8s-job\",\n  \"k8s-cronjob\",\n  \"k8s-replicaset\",\n  \"k8s-deployment\",\n  \"k8s-statefulset\",\n  \"k8s-daemonset\",\n  \"k8s-ingress\",\n  \"k8s-namespace\",\n  \"k8s-service\"\n].contains(asset.platform)\n",
              "code_id": "N1flM1XSV/Y=",
              "checksum": "K2i5iOl3oK4=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/N1flM1XSV/Y=",
              "type": "\u0004"
            },
            "N3MzRxByezc=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('cassandra').installed\n",
              "code_id": "N3MzRxByezc=",
              "checksum": "13cD3JF/sSk=",
              "mrn": "//policy.api.mondoo.app/filter/N3MzRxByezc=",
              "type": "\u0004"
            },
            "N4jy8Xn7NvY=": {
              "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsManufacturer'] != \"\"\n",
              "code_id": "N4jy8Xn7NvY=",
              "checksum": "ZkpRpiIZdIw=",
              "mrn": "//policy.api.mondoo.app/filter/N4jy8Xn7NvY=",
              "type": "\u0001"
            },
            "NKWGRVMUiaU=": {
              "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Creator\"] != null",
              "code_id": "NKWGRVMUiaU=",
              "checksum": "WxQOmGyHQr8=",
              "mrn": "//policy.api.mondoo.app/filter/NKWGRVMUiaU=",
              "type": "\u0004"
            },
            "OITnYRAA4Lw=": {
              "mql": "asset.kind != \"\"",
              "code_id": "OITnYRAA4Lw=",
              "checksum": "nTtGCysRmXw=",
              "mrn": "//policy.api.mondoo.app/filter/OITnYRAA4Lw=",
              "type": "\u0004"
            },
            "OMDwxipTleI=": {
              "mql": "asset.platform == \"kubernetes\" || asset.platform == \"k8s-cluster\"",
              "code_id": "OMDwxipTleI=",
              "checksum": "eu8jrqulKTU=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/OMDwxipTleI=",
              "type": "\u0004"
            },
            "Pr4TVIqw398=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('mariadb').installed\n",
              "code_id": "Pr4TVIqw398=",
              "checksum": "0eoLI7Zkf1w=",
              "mrn": "//policy.api.mondoo.app/filter/Pr4TVIqw398=",
              "type": "\u0004"
            },
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "2yL4oNxql8g=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/QFF/R18/81w=",
              "type": "\u0004"
            },
            "RjGN9A0+dro=": {
              "mql": "asset.platform == \"gitlab-project\"",
              "code_id": "RjGN9A0+dro=",
              "checksum": "v4RRn6l7nWQ=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/RjGN9A0+dro=",
              "type": "\u0004"
            },
            "RsbXPPme1wg=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"",
              "code_id": "RsbXPPme1wg=",
              "checksum": "/tyZDG+JmEY=",
              "mrn": "//policy.api.mondoo.app/filter/RsbXPPme1wg=",
              "type": "\u0004"
            },
            "SDwUhCi/rQQ=": {
              "mql": "asset.platform == \"aws-es-domain\"",
              "code_id": "SDwUhCi/rQQ=",
              "checksum": "kcqTZZ8RFYo=",
              "mrn": "//policy.api.mondoo.app/filter/SDwUhCi/rQQ=",
              "type": "\u0004"
            },
            "SjETaXBC4Zs=": {
              "mql": "package('openssh-server').version  \u003e= semver(\"6\") \u0026\u0026 package('openssh-server').version \u003c semver(\"7.6\")",
              "code_id": "SjETaXBC4Zs=",
              "checksum": "FXs6HkAIVmQ=",
              "mrn": "//policy.api.mondoo.app/filter/SjETaXBC4Zs=",
              "type": "\u0004"
            },
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            },
            "TIuic08sBuk=": {
              "mql": "false\n",
              "code_id": "TIuic08sBuk=",
              "checksum": "pgQrdp0WvgM=",
              "mrn": "//policy.api.mondoo.app/filter/TIuic08sBuk=",
              "type": "\u0004"
            },
            "TaH+Scvk82A=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 services.where( name.in([\"smb\", \"smbd\"]) ).any(installed)\n",
              "code_id": "TaH+Scvk82A=",
              "checksum": "vwWfqtBrXG8=",
              "mrn": "//policy.api.mondoo.app/filter/TaH+Scvk82A=",
              "type": "\u0004"
            },
            "UiVKwjsOOos=": {
              "mql": "asset.platform == \"vmware-esxi\"",
              "code_id": "UiVKwjsOOos=",
              "checksum": "qoChczLbaHI=",
              "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
              "type": "\u0004"
            },
            "Uo1APC/g5Ss=": {
              "mql": "asset.platform == \"gcp-compute-firewall\"",
              "code_id": "Uo1APC/g5Ss=",
              "checksum": "A/D/xG7cp9w=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Uo1APC/g5Ss=",
              "type": "\u0004"
            },
            "VPkRSzmEtn8=": {
              "mql": "asset.platform == \"azure-compute-vm-api\"",
              "code_id": "VPkRSzmEtn8=",
              "checksum": "CpRtqzMR4cY=",
              "mrn": "//policy.api.mondoo.app/filter/VPkRSzmEtn8=",
              "type": "\u0004"
            },
            "VQwFP0mL4gc=": {
              "mql": "aws.lambda.function.vpcConfig.length \u003e 0",
              "code_id": "VQwFP0mL4gc=",
              "checksum": "pDGml3JaCu0=",
              "mrn": "//policy.api.mondoo.app/filter/VQwFP0mL4gc=",
              "type": "\u0004"
            },
            "VcHiU7ao70I=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 services.where( name.in([\"apache2\", \"httpd\"]) ).any(installed)\n",
              "code_id": "VcHiU7ao70I=",
              "checksum": "GSYGRJ3JvGQ=",
              "mrn": "//policy.api.mondoo.app/filter/VcHiU7ao70I=",
              "type": "\u0004"
            },
            "VhY7HgiGzeI=": {
              "mql": "asset.family.contains('linux')\npackage('openssh-server').installed\n",
              "code_id": "VhY7HgiGzeI=",
              "checksum": "PWR2i3qVoOA=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/VhY7HgiGzeI=",
              "type": "\u0001"
            },
            "X8q+Gj2b/fY=": {
              "mql": "asset.platform == \"macos\"",
              "code_id": "X8q+Gj2b/fY=",
              "checksum": "mqmaCQi8210=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-macos-inventory/filter/X8q+Gj2b/fY=",
              "type": "\u0004"
            },
            "XWZLRzDTtCI=": {
              "mql": "aws.cloudwatch.loggroup.kmsKey != null",
              "code_id": "XWZLRzDTtCI=",
              "checksum": "rGYQGe35+Vg=",
              "mrn": "//policy.api.mondoo.app/filter/XWZLRzDTtCI=",
              "type": "\u0004"
            },
            "XhGWd/sNmOc=": {
              "mql": "asset.platform == \"azure-network-security-group\"",
              "code_id": "XhGWd/sNmOc=",
              "checksum": "h9y/0zM44Pk=",
              "mrn": "//policy.api.mondoo.app/filter/XhGWd/sNmOc=",
              "type": "\u0004"
            },
            "XnuDSoJhNYQ=": {
              "mql": "asset.runtime == \"gcp\"\n",
              "code_id": "XnuDSoJhNYQ=",
              "checksum": "8uqwQ/NvI10=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-gcp/filter/XnuDSoJhNYQ=",
              "type": "\u0004"
            },
            "XsuES+BmSSo=": {
              "mql": "asset.platform == \"github-org\"",
              "code_id": "XsuES+BmSSo=",
              "checksum": "8kPojTbpSAA=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/XsuES+BmSSo=",
              "type": "\u0004"
            },
            "YfgyzI5DUbA=": {
              "mql": "asset.runtime == \"aws\"\n",
              "code_id": "YfgyzI5DUbA=",
              "checksum": "6IhqM5x33KU=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-aws/filter/YfgyzI5DUbA=",
              "type": "\u0004"
            },
            "YhGWafznrIo=": {
              "mql": "asset.platform == \"aws-elb-loadbalancer\"",
              "code_id": "YhGWafznrIo=",
              "checksum": "Grg6RQGhQ8o=",
              "mrn": "//policy.api.mondoo.app/filter/YhGWafznrIo=",
              "type": "\u0004"
            },
            "YrTYqlyYshU=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('nfs-server').installed\n",
              "code_id": "YrTYqlyYshU=",
              "checksum": "dpqSsu+pGQc=",
              "mrn": "//policy.api.mondoo.app/filter/YrTYqlyYshU=",
              "type": "\u0004"
            },
            "Z50YyJG54ZE=": {
              "mql": "asset.family.contains(\"debian\")",
              "code_id": "Z50YyJG54ZE=",
              "checksum": "0jShjMEsdwc=",
              "mrn": "//policy.api.mondoo.app/filter/Z50YyJG54ZE=",
              "type": "\u0004"
            },
            "ZR1xnfg3H2I=": {
              "mql": "asset.platform == \"shodan-domain\"",
              "code_id": "ZR1xnfg3H2I=",
              "checksum": "ikrAh1O4Y8A=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/ZR1xnfg3H2I=",
              "type": "\u0004"
            },
            "a3Uu1Qp7bpw=": {
              "mql": "asset.platform == \"aix\"",
              "code_id": "a3Uu1Qp7bpw=",
              "checksum": "8q0qPoTMK+s=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/a3Uu1Qp7bpw=",
              "type": "\u0004"
            },
            "a6sWxVAvpsc=": {
              "mql": "asset.platform == \"shodan-host\"\n",
              "code_id": "a6sWxVAvpsc=",
              "checksum": "BGSqi39YP7M=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-vex/filter/a6sWxVAvpsc=",
              "type": "\u0004"
            },
            "aBpo44SiOyc=": {
              "mql": "asset.platform == \"azure-sql-server\"",
              "code_id": "aBpo44SiOyc=",
              "checksum": "AD8YCkcfVv0=",
              "mrn": "//policy.api.mondoo.app/filter/aBpo44SiOyc=",
              "type": "\u0004"
            },
            "aoQq5hIlrdc=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.publicIpv4.any()\n",
              "code_id": "aoQq5hIlrdc=",
              "checksum": "6DaQ/SmdWds=",
              "mrn": "//policy.api.mondoo.app/filter/aoQq5hIlrdc=",
              "type": "\u0001"
            },
            "b/T7K7dsnXs=": {
              "mql": "asset.family.contains(_ == 'windows')",
              "code_id": "b/T7K7dsnXs=",
              "checksum": "4cxsY/aSvmE=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/b/T7K7dsnXs=",
              "type": "\u0004"
            },
            "cHDjRc20JOo=": {
              "mql": "asset.build != \"\"",
              "code_id": "cHDjRc20JOo=",
              "checksum": "Fe+HxLL7Udo=",
              "mrn": "//policy.api.mondoo.app/filter/cHDjRc20JOo=",
              "type": "\u0004"
            },
            "cPC5mN127Kg=": {
              "mql": "asset.platform == \"aws-ec2-instance\"",
              "code_id": "cPC5mN127Kg=",
              "checksum": "ypDkzqrbvNQ=",
              "mrn": "//policy.api.mondoo.app/filter/cPC5mN127Kg=",
              "type": "\u0004"
            },
            "cjMP/TXpW3s=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.privateIpv4.any()\n",
              "code_id": "cjMP/TXpW3s=",
              "checksum": "bH0klFPe2KY=",
              "mrn": "//policy.api.mondoo.app/filter/cjMP/TXpW3s=",
              "type": "\u0001"
            },
            "dNrOPq6iZ3Y=": {
              "mql": "asset.platform == \"vmware-vsphere\"",
              "code_id": "dNrOPq6iZ3Y=",
              "checksum": "ICn3D7kQtOI=",
              "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
              "type": "\u0004"
            },
            "eTqruXhu7T4=": {
              "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "eTqruXhu7T4=",
              "checksum": "IVEHesmRA4M=",
              "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
              "type": "\u0001"
            },
            "eWA7Hn/4BL8=": {
              "mql": "asset.platform == \"slack-team\"",
              "code_id": "eWA7Hn/4BL8=",
              "checksum": "dHug2yHi1fI=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/eWA7Hn/4BL8=",
              "type": "\u0004"
            },
            "ejKNUyEFvfU=": {
              "mql": "package('Microsoft Exchange Server').installed\n",
              "code_id": "ejKNUyEFvfU=",
              "checksum": "cpMyYTF9fXY=",
              "mrn": "//policy.api.mondoo.app/filter/ejKNUyEFvfU=",
              "type": "\u0004"
            },
            "ep4o4JpLn/g=": {
              "mql": "asset.platform == \"aws-vpc\"\n",
              "code_id": "ep4o4JpLn/g=",
              "checksum": "kQ4KBC6eRgk=",
              "mrn": "//policy.api.mondoo.app/filter/ep4o4JpLn/g=",
              "type": "\u0004"
            },
            "ewMgcOZrkmI=": {
              "mql": "asset.family.contains(_ == 'unix')\nasset.kind != 'container-image'\n",
              "code_id": "ewMgcOZrkmI=",
              "checksum": "yhFbqhwno1M=",
              "mrn": "//policy.api.mondoo.app/filter/ewMgcOZrkmI=",
              "type": "\u0001"
            },
            "fkjI6ZKFDMU=": {
              "mql": "asset.platform == \"aws-dynamodb-table\"",
              "code_id": "fkjI6ZKFDMU=",
              "checksum": "rZBWcPvkzhk=",
              "mrn": "//policy.api.mondoo.app/filter/fkjI6ZKFDMU=",
              "type": "\u0004"
            },
            "guIqzfk3AXQ=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('docker').installed\n",
              "code_id": "guIqzfk3AXQ=",
              "checksum": "RQ2jUAubdE4=",
              "mrn": "//policy.api.mondoo.app/filter/guIqzfk3AXQ=",
              "type": "\u0004"
            },
            "gyfREa1gL4A=": {
              "mql": "asset.family.contains('linux')\nasset.kind != \"container-image\"\n",
              "code_id": "gyfREa1gL4A=",
              "checksum": "axY4hrU9x24=",
              "mrn": "//policy.api.mondoo.app/filter/gyfREa1gL4A=",
              "type": "\u0001"
            },
            "hJQQ2aVQDgw=": {
              "mql": "asset.platform == \"k8s-cluster\"",
              "code_id": "hJQQ2aVQDgw=",
              "checksum": "UYM8LOPJS7U=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/hJQQ2aVQDgw=",
              "type": "\u0004"
            },
            "iC0Z61Ug6yw=": {
              "mql": "asset.family.contains(/redhat|debian/) == false",
              "code_id": "iC0Z61Ug6yw=",
              "checksum": "JRBbea8s8qs=",
              "mrn": "//policy.api.mondoo.app/filter/iC0Z61Ug6yw=",
              "type": "\u0004"
            },
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "myCiW/aKxAQ=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            },
            "jzQMFuDxQus=": {
              "mql": "asset.arch != \"\"",
              "code_id": "jzQMFuDxQus=",
              "checksum": "W9cM8/XfmGg=",
              "mrn": "//policy.api.mondoo.app/filter/jzQMFuDxQus=",
              "type": "\u0004"
            },
            "kOdP+bt2IPs=": {
              "mql": "asset.platform == \"azure-postgresql-server\"",
              "code_id": "kOdP+bt2IPs=",
              "checksum": "PiFsnCUsx6k=",
              "mrn": "//policy.api.mondoo.app/filter/kOdP+bt2IPs=",
              "type": "\u0004"
            },
            "lQAFhFMIHTo=": {
              "mql": "asset.platform == \"aws-iam-user\"\n",
              "code_id": "lQAFhFMIHTo=",
              "checksum": "jyoGZJn1wD8=",
              "mrn": "//policy.api.mondoo.app/filter/lQAFhFMIHTo=",
              "type": "\u0004"
            },
            "lWdat0IAAMw=": {
              "mql": "asset.platform == \"google-workspace\"",
              "code_id": "lWdat0IAAMw=",
              "checksum": "g/tO0gmxdSg=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lWdat0IAAMw=",
              "type": "\u0004"
            },
            "lcBOE/v/1Mw=": {
              "mql": "true",
              "code_id": "lcBOE/v/1Mw=",
              "checksum": "6/RDovsMLEU=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lcBOE/v/1Mw=",
              "type": "\u0004"
            },
            "mWzpm+ibQcY=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('chrony').installed\n",
              "code_id": "mWzpm+ibQcY=",
              "checksum": "hkKJ9vq5yKk=",
              "mrn": "//policy.api.mondoo.app/filter/mWzpm+ibQcY=",
              "type": "\u0004"
            },
            "n3qCzBJJGo8=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('sshd').installed\n",
              "code_id": "n3qCzBJJGo8=",
              "checksum": "IfP4dG7jyc0=",
              "mrn": "//policy.api.mondoo.app/filter/n3qCzBJJGo8=",
              "type": "\u0004"
            },
            "n7KC7R5JBPo=": {
              "mql": "asset.platform == \"gcp-compute-instance\"\ngcp.compute.instance.status == \"RUNNING\"\n",
              "code_id": "n7KC7R5JBPo=",
              "checksum": "loJqxh4bIWY=",
              "mrn": "//policy.api.mondoo.app/filter/n7KC7R5JBPo=",
              "type": "\u0001"
            },
            "nmfXjdG/9PA=": {
              "mql": "asset.kind == 'baremetal'\nmachine.baseboard.manufacturer != \"\"\n",
              "code_id": "nmfXjdG/9PA=",
              "checksum": "rCDDrPpdvi8=",
              "mrn": "//policy.api.mondoo.app/filter/nmfXjdG/9PA=",
              "type": "\u0001"
            },
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            },
            "pclrCp0Hy+c=": {
              "mql": "asset.platform == \"gcp-bigquery-dataset\"",
              "code_id": "pclrCp0Hy+c=",
              "checksum": "WGwu1ncZKTo=",
              "mrn": "//policy.api.mondoo.app/filter/pclrCp0Hy+c=",
              "type": "\u0004"
            },
            "q0blueS0Elw=": {
              "mql": "mondoo.capabilities.containsNone(['run-command'])\nasset.kind != 'baremetal'\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "q0blueS0Elw=",
              "checksum": "EsEkX0m0kCw=",
              "mrn": "//policy.api.mondoo.app/filter/q0blueS0Elw=",
              "type": "\u0001"
            },
            "qZ0RZfIjQ18=": {
              "mql": "asset.family.contains('linux')\n",
              "code_id": "qZ0RZfIjQ18=",
              "checksum": "t7a1zIeg9mI=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/qZ0RZfIjQ18=",
              "type": "\u0004"
            },
            "qcjTHhgiY8I=": {
              "mql": "asset.platform == \"aws-cloudtrail-trail\"\n",
              "code_id": "qcjTHhgiY8I=",
              "checksum": "fMrzZd0ZBjY=",
              "mrn": "//policy.api.mondoo.app/filter/qcjTHhgiY8I=",
              "type": "\u0004"
            },
            "qw9ZLQfJvD4=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('elasticsearch').installed\n",
              "code_id": "qw9ZLQfJvD4=",
              "checksum": "Tu2lNmo8Nws=",
              "mrn": "//policy.api.mondoo.app/filter/qw9ZLQfJvD4=",
              "type": "\u0004"
            },
            "rBd0ET2aRVI=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('collectd').installed\n",
              "code_id": "rBd0ET2aRVI=",
              "checksum": "2Z+1m7jD63g=",
              "mrn": "//policy.api.mondoo.app/filter/rBd0ET2aRVI=",
              "type": "\u0004"
            },
            "rSl2EbAIW7E=": {
              "mql": "windows.computerInfo['OsProductType'] == 1\n",
              "code_id": "rSl2EbAIW7E=",
              "checksum": "tTjIZqf9Suw=",
              "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
              "type": "\u0004"
            },
            "sGKyqpiAJwo=": {
              "mql": "asset.version != \"\"",
              "code_id": "sGKyqpiAJwo=",
              "checksum": "uzMnYVk/m+8=",
              "mrn": "//policy.api.mondoo.app/filter/sGKyqpiAJwo=",
              "type": "\u0004"
            },
            "sVUqp81M5BQ=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.privateHostname.length != 0\n",
              "code_id": "sVUqp81M5BQ=",
              "checksum": "FWhC+tbxNrY=",
              "mrn": "//policy.api.mondoo.app/filter/sVUqp81M5BQ=",
              "type": "\u0001"
            },
            "sdjDHd7al6U=": {
              "mql": "asset.annotations.contains(key == \"mondoo.com/internet-exposed\")\n",
              "code_id": "sdjDHd7al6U=",
              "checksum": "IOOZZQPosHE=",
              "mrn": "//policy.api.mondoo.app/filter/sdjDHd7al6U=",
              "type": "\u0004"
            },
            "so47OTA+9gQ=": {
              "mql": "asset.platform == \"k8s-namespace\"",
              "code_id": "so47OTA+9gQ=",
              "checksum": "yB20l3KRvtM=",
              "mrn": "//policy.api.mondoo.app/filter/so47OTA+9gQ=",
              "type": "\u0004"
            },
            "t2QzcgpdIbI=": {
              "mql": "asset.platform == \"aws-redshift-cluster\"",
              "code_id": "t2QzcgpdIbI=",
              "checksum": "IAfexHb6TOI=",
              "mrn": "//policy.api.mondoo.app/filter/t2QzcgpdIbI=",
              "type": "\u0004"
            },
            "t3xbgkDA4XI=": {
              "mql": "aws.lambda.function.dlqTargetArn != \"\"",
              "code_id": "t3xbgkDA4XI=",
              "checksum": "8LwFEV2m668=",
              "mrn": "//policy.api.mondoo.app/filter/t3xbgkDA4XI=",
              "type": "\u0004"
            },
            "tgbnxVI1e9A=": {
              "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
              "code_id": "tgbnxVI1e9A=",
              "checksum": "GblDUSvztL8=",
              "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
              "type": "\u0001"
            },
            "toa5dnWxMVU=": {
              "mql": "asset.platform.contains('windows')\n\u0026\u0026 package('Microsoft Exchange Server').installed\n",
              "code_id": "toa5dnWxMVU=",
              "checksum": "jiPjPND2kSM=",
              "mrn": "//policy.api.mondoo.app/filter/toa5dnWxMVU=",
              "type": "\u0004"
            },
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"\n",
              "code_id": "turd8YONuKg=",
              "checksum": "rNfFIKM1qSs=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            },
            "u6qtHYJqMdA=": {
              "mql": "asset.family.contains('unix')",
              "code_id": "u6qtHYJqMdA=",
              "checksum": "+LCgaw6UOdQ=",
              "mrn": "//policy.api.mondoo.app/policies/sshd-policy/filter/u6qtHYJqMdA=",
              "type": "\u0004"
            },
            "uZoJQUInA4Y=": {
              "mql": "asset.family.contains('windows')\n\u0026\u0026 windows.features.where( name == /Web-Server/i ).any( installed )\n",
              "code_id": "uZoJQUInA4Y=",
              "checksum": "YR63Ox/nlKY=",
              "mrn": "//policy.api.mondoo.app/filter/uZoJQUInA4Y=",
              "type": "\u0004"
            },
            "ul8bHSwQHHs=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('proftpd').installed\n",
              "code_id": "ul8bHSwQHHs=",
              "checksum": "InG2RR3IxFw=",
              "mrn": "//policy.api.mondoo.app/filter/ul8bHSwQHHs=",
              "type": "\u0004"
            },
            "up38wkcLwsk=": {
              "mql": "asset.platform == \"aws-ec2-instance\"\naws.ec2.instance.state != \"terminated\"\n",
              "code_id": "up38wkcLwsk=",
              "checksum": "Cbm/P25n45c=",
              "mrn": "//policy.api.mondoo.app/filter/up38wkcLwsk=",
              "type": "\u0001"
            },
            "vEV90lIvykA=": {
              "mql": "asset.platform == \"azure-compute-vm-api\" \u0026\u0026 azure.subscription.compute.vm.properties[\"storageProfile\"][\"osDisk\"][\"managedDisk\"] != empty",
              "code_id": "vEV90lIvykA=",
              "checksum": "0Rathx4+iNM=",
              "mrn": "//policy.api.mondoo.app/filter/vEV90lIvykA=",
              "type": "\u0004"
            },
            "vLnOtXTQbss=": {
              "mql": "asset.platform == \"aws-eks-cluster\"",
              "code_id": "vLnOtXTQbss=",
              "checksum": "tvP1yZmC8aE=",
              "mrn": "//policy.api.mondoo.app/filter/vLnOtXTQbss=",
              "type": "\u0004"
            },
            "vn9Qq1qu38c=": {
              "mql": "asset.platform == \"aws-kms-key\"",
              "code_id": "vn9Qq1qu38c=",
              "checksum": "oW0og/ZIF8w=",
              "mrn": "//policy.api.mondoo.app/filter/vn9Qq1qu38c=",
              "type": "\u0004"
            },
            "vyVn2CyNLr8=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 services.where( name.in([\"mysql\", \"mysqld\"]) ).any(installed)\n",
              "code_id": "vyVn2CyNLr8=",
              "checksum": "CQEDhShIC28=",
              "mrn": "//policy.api.mondoo.app/filter/vyVn2CyNLr8=",
              "type": "\u0004"
            },
            "w68l5ygei1w=": {
              "mql": "asset.platform.contains('windows')\n\u0026\u0026 windows.features.where(name == 'AD-Domain-Services').one(installed == true)\n",
              "code_id": "w68l5ygei1w=",
              "checksum": "TOSv6PGtfWc=",
              "mrn": "//policy.api.mondoo.app/filter/w68l5ygei1w=",
              "type": "\u0004"
            },
            "wDTgvEMsna0=": {
              "mql": "asset.platform == \"gcp-storage-bucket\"",
              "code_id": "wDTgvEMsna0=",
              "checksum": "uVwk47SfQc4=",
              "mrn": "//policy.api.mondoo.app/filter/wDTgvEMsna0=",
              "type": "\u0004"
            },
            "wEKjALBSsDA=": {
              "mql": "asset.platform == \"gcp-gke-cluster\"",
              "code_id": "wEKjALBSsDA=",
              "checksum": "wSXMw47IQAY=",
              "mrn": "//policy.api.mondoo.app/filter/wEKjALBSsDA=",
              "type": "\u0004"
            },
            "wPJsO/U89DU=": {
              "mql": "asset.platform == \"gcp-compute-instance\"",
              "code_id": "wPJsO/U89DU=",
              "checksum": "SM6uu4BJ32E=",
              "mrn": "//policy.api.mondoo.app/filter/wPJsO/U89DU=",
              "type": "\u0004"
            },
            "wgLoyB/qbks=": {
              "mql": "asset.platform == \"aws-ec2-volume\" || asset.platform == \"aws-ebs-volume\"",
              "code_id": "wgLoyB/qbks=",
              "checksum": "DWffPewLqQw=",
              "mrn": "//policy.api.mondoo.app/filter/wgLoyB/qbks=",
              "type": "\u0004"
            },
            "wgy370oVn+k=": {
              "mql": "asset.platform == \"oci\"",
              "code_id": "wgy370oVn+k=",
              "checksum": "xxx/+oVqmEw=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wgy370oVn+k=",
              "type": "\u0004"
            },
            "wrdzoVwkGEs=": {
              "mql": "asset.platform == \"terraform-plan\"",
              "code_id": "wrdzoVwkGEs=",
              "checksum": "RpK5ZbH7uNU=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wrdzoVwkGEs=",
              "type": "\u0004"
            },
            "xJDq/JxOoLM=": {
              "mql": "asset.family.contains(\"redhat\") || asset.platform == \"amazonlinux\"",
              "code_id": "xJDq/JxOoLM=",
              "checksum": "fJWxbo76iRM=",
              "mrn": "//policy.api.mondoo.app/filter/xJDq/JxOoLM=",
              "type": "\u0004"
            },
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "74un3Jja6uY=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            },
            "y+DcS8y50ac=": {
              "mql": "asset.platform == \"azure-mysql-flexible-server\"",
              "code_id": "y+DcS8y50ac=",
              "checksum": "xPRk+ewicag=",
              "mrn": "//policy.api.mondoo.app/filter/y+DcS8y50ac=",
              "type": "\u0004"
            },
            "y9gjx9Fn8MY=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('vsftpd').installed\n",
              "code_id": "y9gjx9Fn8MY=",
              "checksum": "GpDsuI80B00=",
              "mrn": "//policy.api.mondoo.app/filter/y9gjx9Fn8MY=",
              "type": "\u0004"
            },
            "yPkFUe7jchw=": {
              "mql": "aws.cloudtrail.trail.kmsKey != null",
              "code_id": "yPkFUe7jchw=",
              "checksum": "eil5eGsvieE=",
              "mrn": "//policy.api.mondoo.app/filter/yPkFUe7jchw=",
              "type": "\u0004"
            },
            "yfA15ol5mmc=": {
              "mql": "asset.platform == \"aws-security-group\"\n",
              "code_id": "yfA15ol5mmc=",
              "checksum": "MI1MHQ664Q0=",
              "mrn": "//policy.api.mondoo.app/filter/yfA15ol5mmc=",
              "type": "\u0004"
            },
            "z/U7UiKzbXM=": {
              "mql": "asset.platform == \"k8s-service\"",
              "code_id": "z/U7UiKzbXM=",
              "checksum": "HKShLnIjAJU=",
              "mrn": "//policy.api.mondoo.app/filter/z/U7UiKzbXM=",
              "type": "\u0004"
            },
            "zIR8ngn1t8s=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('pure-ftpd').installed\n",
              "code_id": "zIR8ngn1t8s=",
              "checksum": "LjRkwuxWf80=",
              "mrn": "//policy.api.mondoo.app/filter/zIR8ngn1t8s=",
              "type": "\u0004"
            },
            "zT7M2Ge1gZo=": {
              "mql": "asset.platform == \"aws-ebs-snapshot\" || asset.platform == \"aws-ec2-snapshot\"",
              "code_id": "zT7M2Ge1gZo=",
              "checksum": "5wLYnpTxIv8=",
              "mrn": "//policy.api.mondoo.app/filter/zT7M2Ge1gZo=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {}
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/asset-overview",
        "name": "Asset Overview",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "mql": "aws.account.aliases.first",
                "code_id": "7UqdtUQBjao=",
                "checksum": "sr2ZsWsxWlk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-name",
                "type": "\u0007",
                "title": "Name",
                "filters": {
                  "items": {
                    "EcZ+12oxrPM=": {
                      "mql": "aws.account.aliases.first != null",
                      "code_id": "EcZ+12oxrPM=",
                      "checksum": "DFUkgNXX3KQ=",
                      "mrn": "//policy.api.mondoo.app/filter/EcZ+12oxrPM=",
                      "type": "\u0004"
                    }
                  }
                }
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-account",
            "filters": {
              "items": {
                "obFZpPtvU1c=": {
                  "mql": "asset.platform == \"aws\"",
                  "code_id": "obFZpPtvU1c=",
                  "checksum": "2z9ykiIq8hg=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/obFZpPtvU1c=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.iam.user.id",
                "code_id": "+Zn5NaLemMA=",
                "checksum": "hZ8CmIQ9TvA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "aws.iam.user.groups",
                "code_id": "Lj+TZ7g0S4c=",
                "checksum": "mfwGZeUTJo0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-groups",
                "type": "\u0019\u0007",
                "title": "Groups"
              },
              {
                "mql": "if (aws.iam.user.passwordLastUsed != null) {\n  return aws.iam.user.passwordLastUsed\n} else {\n  return \"never\"\n}\n",
                "code_id": "890bQd9Tv/s=",
                "checksum": "XZ8+VGhA6JM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-pass-last-used",
                "type": "\u0007",
                "title": "Password last used"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-iam-user",
            "filters": {
              "items": {
                "lQAFhFMIHTo=": {
                  "mql": "asset.platform == \"aws-iam-user\"",
                  "code_id": "lQAFhFMIHTo=",
                  "checksum": "L8q/m6KdgxA=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lQAFhFMIHTo=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.iam.group.id",
                "code_id": "uchW3MSJOWw=",
                "checksum": "4TaPSQcowpc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-group-id",
                "type": "\u0007",
                "title": "ID"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-iam-group",
            "filters": {
              "items": {
                "GGmsRv0eF+o=": {
                  "mql": "asset.platform == \"aws-iam-group\"",
                  "code_id": "GGmsRv0eF+o=",
                  "checksum": "p46RhCqlGCk=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/GGmsRv0eF+o=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.kms.key.id",
                "code_id": "CqtRJFlCg5Y=",
                "checksum": "+jR3EQNIHNQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "aws.kms.key.metadata[\"KeyState\"]",
                "code_id": "xwiMbCF5Ujw=",
                "checksum": "eNq5UJ1UMrQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-status",
                "type": "\n",
                "title": "Status"
              },
              {
                "mql": "aws.kms.key.metadata[\"KeySpec\"]",
                "code_id": "MpGIwAqYDhk=",
                "checksum": "3VngjiSnpYc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-type",
                "type": "\n",
                "title": "Type"
              },
              {
                "mql": "aws.kms.key.keyRotationEnabled",
                "code_id": "whdSnR8kk3g=",
                "checksum": "9RTz6o2n90s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-rotation",
                "type": "\u0004",
                "title": "Auto rotation"
              },
              {
                "mql": "aws.kms.key.metadata[\"Description\"]",
                "code_id": "X5OaA35ZKgg=",
                "checksum": "mmzq4FjnO3k=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-description",
                "type": "\n",
                "title": "Description"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-kms-key",
            "filters": {
              "items": {
                "vn9Qq1qu38c=": {
                  "mql": "asset.platform == \"aws-kms-key\"",
                  "code_id": "vn9Qq1qu38c=",
                  "checksum": "gV3xOvnhmhM=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/vn9Qq1qu38c=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "if (aws.s3.bucket.versioning[\"Status\"] == \"Enabled\") {\n  return true\n} if (aws.s3.bucket.versioning[\"Status\"] == \"Suspended\") {\n  return \"Suspended\"\n} else {\n  return false\n}\n",
                "code_id": "WWd50S3e1Mg=",
                "checksum": "9RsnO5r09CI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-versioning",
                "type": "\u0004",
                "title": "Versioning"
              },
              {
                "mql": "if (aws.s3.bucket.logging.length \u003e 0) {\n  return true\n} else {\n  return false\n}\n",
                "code_id": "VHHEYnOWjyU=",
                "checksum": "LXadXcqpsCo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-logging",
                "type": "\u0004",
                "title": "Logging"
              },
              {
                "mql": "aws.s3.bucket.public",
                "code_id": "AhVKJra07Jk=",
                "checksum": "zp0S7y+R8k0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-public",
                "type": "\u0004",
                "title": "Public"
              },
              {
                "mql": "aws.s3.bucket.owner['name']",
                "code_id": "zhx/04ciXEo=",
                "checksum": "rh9pkr1LPBM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-owner",
                "type": "\u0007",
                "title": "Owner"
              },
              {
                "mql": "if (aws.s3.bucket.replication != null) {\n  return true\n} else {\n  return false\n}\n",
                "code_id": "sJtdpGVMCFM=",
                "checksum": "JMQEqdDG0FM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-replication",
                "type": "\u0004",
                "title": "Replication"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-s3-bucket",
            "filters": {
              "items": {
                "3z170zdo7Ac=": {
                  "mql": "asset.platform == \"aws-s3-bucket\"",
                  "code_id": "3z170zdo7Ac=",
                  "checksum": "l1Tk7+qlaN0=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/3z170zdo7Ac=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "mql": "aws.vpc.name",
                "code_id": "/dM+VLrrvz8=",
                "checksum": "8kw1udJPLfM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.vpc.id",
                "code_id": "n48IvAwIBbE=",
                "checksum": "VGvP3IgpFiU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "aws.vpc.cidrBlock",
                "code_id": "B8rqnW9KjK4=",
                "checksum": "Faxg14q9Ibo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-cidr-block",
                "type": "\u0007",
                "title": "CIDR Block"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-vpc",
            "filters": {
              "items": {
                "ep4o4JpLn/g=": {
                  "mql": "asset.platform == \"aws-vpc\"",
                  "code_id": "ep4o4JpLn/g=",
                  "checksum": "QVj8c4/qLM8=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/ep4o4JpLn/g=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.ec2.securitygroup.id",
                "code_id": "JPKwbYlYF1U=",
                "checksum": "kJx+14cHy0Y=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "aws.ec2.securitygroup.description",
                "code_id": "Od2R0DJeTXY=",
                "checksum": "4B4Acf6wPWI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "aws.ec2.securitygroup.ipPermissions.length",
                "code_id": "pi9Yti5nXRI=",
                "checksum": "AeUe5GU17AI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-inbound-rules",
                "type": "\u0005",
                "title": "Inbound rule count"
              },
              {
                "mql": "aws.ec2.securitygroup.ipPermissionsEgress.length",
                "code_id": "LBJdWU44NZc=",
                "checksum": "G4UKYM0b4DY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-outbound-rules",
                "type": "\u0005",
                "title": "Outbound rule count"
              },
              {
                "mql": "aws.ec2.securitygroup.vpc.id",
                "code_id": "sAm0NqNFhC8=",
                "checksum": "E5Zu+4qeDzU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-vpc-id",
                "type": "\u0007",
                "title": "VPC ID"
              },
              {
                "mql": "aws.ec2.securitygroup.isAttachedToNetworkInterface",
                "code_id": "rSWTCfXADxI=",
                "checksum": "bIJqMID5gEM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-in-use",
                "type": "\u0004",
                "title": "In use"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-security-group",
            "filters": {
              "items": {
                "yfA15ol5mmc=": {
                  "mql": "asset.platform == \"aws-security-group\"",
                  "code_id": "yfA15ol5mmc=",
                  "checksum": "Nu+vy7ytAwc=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/yfA15ol5mmc=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.ec2.volume.id",
                "code_id": "MthkgQso+Hg=",
                "checksum": "Zu/gdmTVF2A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "aws.ec2.volume.encrypted",
                "code_id": "eVMevAkX02s=",
                "checksum": "eg4SAzcJzS8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-encrypted",
                "type": "\u0004",
                "title": "Encrypted"
              },
              {
                "mql": "aws.ec2.volume.volumeType",
                "code_id": "MqNVvzx0ENk=",
                "checksum": "IbMtMT9BG0s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-type",
                "type": "\u0007",
                "title": "Type"
              },
              {
                "mql": "aws.ec2.volume.state",
                "code_id": "irfUJoIrVAM=",
                "checksum": "KIdNPjj+nqQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-state",
                "type": "\u0007",
                "title": "State"
              },
              {
                "mql": "aws.ec2.volume.size",
                "code_id": "xSBzSyq0r7A=",
                "checksum": "GyiWsoWgpko=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-size",
                "type": "\u0005",
                "title": "Volume size (GiB)"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-ebs-volume",
            "filters": {
              "items": {
                "wgLoyB/qbks=": {
                  "mql": "asset.platform == \"aws-ec2-volume\"  || asset.platform == \"aws-ebs-volume\"",
                  "code_id": "wgLoyB/qbks=",
                  "checksum": "P3LPEPBqq/A=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wgLoyB/qbks=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.ec2.snapshot.id",
                "code_id": "xp3fh3tclkU=",
                "checksum": "x/bWzXVccqw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "aws.ec2.snapshot.volumeId",
                "code_id": "gs1v9Z9trVs=",
                "checksum": "jm3RB2375no=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-volumeid",
                "type": "\u0007",
                "title": "Volume ID"
              },
              {
                "mql": "aws.ec2.snapshot.state",
                "code_id": "irfUJoIrVAM=",
                "checksum": "KIdNPjj+nqQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-state",
                "type": "\u0007",
                "title": "State"
              },
              {
                "mql": "aws.ec2.snapshot.volumeSize",
                "code_id": "tUHLJzRqiLo=",
                "checksum": "73Kj3EFfWmw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-size",
                "type": "\u0005",
                "title": "Volume size (GiB)"
              },
              {
                "mql": "aws.ec2.snapshot.storageTier",
                "code_id": "DDT80ZNKQ9k=",
                "checksum": "2UD2lI8eIeg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-storage-tier",
                "type": "\u0007",
                "title": "Storage tier"
              },
              {
                "mql": "aws.ec2.snapshot.encrypted",
                "code_id": "A8vpxneqd2c=",
                "checksum": "Sv9gbMspF8I=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-encrypted",
                "type": "\u0004",
                "title": "Encrypted"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-ebs-snapshot",
            "filters": {
              "items": {
                "CmBsKqBM1Vs=": {
                  "mql": "asset.platform == \"aws-ec2-snapshot\" || asset.platform == \"aws-ebs-snapshot\"",
                  "code_id": "CmBsKqBM1Vs=",
                  "checksum": "PYKDm333wXU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/CmBsKqBM1Vs=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.rds.dbinstance.id",
                "code_id": "jJbjYt1BjgA=",
                "checksum": "iO/hxPNcZDQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "if (aws.rds.dbinstance.engine == \"mysql\") {\n  return \"MySQL\"\n} else if (aws.rds.dbinstance.engine == \"mariadb\") {\n  return \"MariaDB\"\n} else if (aws.rds.dbinstance.engine == \"oracle-ee\") {\n  return \"Oracle Enterprise Edition\"\n} else if (aws.rds.dbinstance.engine == \"oracle-se2\") {\n  return \"Oracle Standard Edition Two\"\n} else if (aws.rds.dbinstance.engine == \"oracle-ee-cdb\") {\n  return \"Oracle Enterprise Edition (CDB)\"\n} else if (aws.rds.dbinstance.engine == \"oracle-se2-cdb\") {\n  return \"Oracle Standard Edition Two (CDB)\"\n} else if (aws.rds.dbinstance.engine == \"postgres\") {\n  return \"PostgreSQL\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-ee\") {\n  return \"SQL Server Enterprise Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-web\") {\n  return \"SQL Server Web Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-se\") {\n  return \"SQL Server Standard Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-ex\") {\n  return \"SQL Server Express Edition\"\n} else if (aws.rds.dbinstance.engine == \"db2-ae\") {\n  return \"Db2 Advanced Edition\"\n} else if (aws.rds.dbinstance.engine == \"db2-se\") {\n  return \"Db2 Standard Edition\"\n} else if (aws.rds.dbinstance.engine == \"aurora-mysql\") {\n  return \"Aurora MySQL\"\n} else if (aws.rds.dbinstance.engine == \"aurora-postgresql\") {\n  return \"Aurora PostgreSQL\"\n} else {\n  return aws.rds.dbinstance.engine\n}\n",
                "code_id": "+Pj94QWXsLk=",
                "checksum": "MLpoNW9MZLo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-engine",
                "type": "\u0007",
                "title": "Engine"
              },
              {
                "mql": "aws.rds.dbinstance.engineVersion",
                "code_id": "LKwMpZGR1Vk=",
                "checksum": "Irat5J5cZos=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-engine-version",
                "type": "\u0007",
                "title": "Engine version"
              },
              {
                "mql": "aws.rds.dbinstance.deletionProtection",
                "code_id": "8XsvAT8mlLo=",
                "checksum": "sIXADvO3WvU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-deletion-protection",
                "type": "\u0004",
                "title": "Deletion protection"
              },
              {
                "mql": "aws.rds.dbinstance.dbInstanceClass",
                "code_id": "sNZC2vzc7TE=",
                "checksum": "XDM2eAyq2IE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-instance-class",
                "type": "\u0007",
                "title": "Instance class"
              },
              {
                "mql": "aws.rds.dbinstance.storageAllocated",
                "code_id": "wLQkLMXmDQs=",
                "checksum": "Pb9ZknV4XJU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-instance-storage-size",
                "type": "\u0005",
                "title": "Storage (GiB)"
              },
              {
                "mql": "aws.rds.dbinstance.storageType",
                "code_id": "Wvc0p+L6bqU=",
                "checksum": "ashbzqN3vB4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-instance-storage-type",
                "type": "\u0007",
                "title": "Storage type"
              },
              {
                "mql": "aws.rds.dbinstance.storageEncrypted",
                "code_id": "ox9oDoX1ZgQ=",
                "checksum": "FWKT18poBNc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-storage-encrypted",
                "type": "\u0004",
                "title": "Storage encrypted"
              },
              {
                "mql": "aws.rds.dbinstance.backupSettings.first.retentionPeriod",
                "code_id": "wqjOxtgYJok=",
                "checksum": "He/DvdttA7Q=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-backup-retention",
                "type": "\u0005",
                "title": "Backup retention (days)"
              },
              {
                "mql": "aws.rds.dbinstance.backupSettings.first.encrypted",
                "code_id": "346Ha9czq+0=",
                "checksum": "BtpGlKSwGbU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-backup-encryption",
                "type": "\u0004",
                "title": "Backups encrypted"
              }
            ],
            "uid": "asset-overview-platform-overview-group-rds-instance",
            "filters": {
              "items": {
                "xXp4iNDx1BU=": {
                  "mql": "asset.platform == \"aws-rds-dbinstance\"",
                  "code_id": "xXp4iNDx1BU=",
                  "checksum": "Z0m2sY67hG0=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/xXp4iNDx1BU=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.rds.dbcluster.id",
                "code_id": "2eQXjbI/0wc=",
                "checksum": "uozmGbDaOfQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "if (aws.rds.dbcluster.engine == \"mysql\") {\n  return \"MySQL\"\n} else if (aws.rds.dbcluster.engine == \"mariadb\") {\n  return \"MariaDB\"\n} else if (aws.rds.dbcluster.engine == \"oracle-ee\") {\n  return \"Oracle Enterprise Edition\"\n} else if (aws.rds.dbcluster.engine == \"oracle-se2\") {\n  return \"Oracle Standard Edition Two\"\n} else if (aws.rds.dbcluster.engine == \"oracle-ee-cdb\") {\n  return \"Oracle Enterprise Edition (CDB)\"\n} else if (aws.rds.dbcluster.engine == \"oracle-se2-cdb\") {\n  return \"Oracle Standard Edition Two (CDB)\"\n} else if (aws.rds.dbcluster.engine == \"postgres\") {\n  return \"PostgreSQL\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-ee\") {\n  return \"SQL Server Enterprise Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-web\") {\n  return \"SQL Server Web Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-se\") {\n  return \"SQL Server Standard Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-ex\") {\n  return \"SQL Server Express Edition\"\n} else if (aws.rds.dbcluster.engine == \"db2-ae\") {\n  return \"Db2 Advanced Edition\"\n} else if (aws.rds.dbcluster.engine == \"db2-se\") {\n  return \"Db2 Standard Edition\"\n} else if (aws.rds.dbcluster.engine == \"aurora-mysql\") {\n  return \"Aurora MySQL\"\n} else if (aws.rds.dbcluster.engine == \"aurora-postgresql\") {\n  return \"Aurora PostgreSQL\"\n} else {\n  return aws.rds.dbcluster.engine\n}\n",
                "code_id": "TN3EFu0qqVo=",
                "checksum": "5V8UAVop2IU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-engine",
                "type": "\u0007",
                "title": "Engine"
              },
              {
                "mql": "aws.rds.dbcluster.engineVersion",
                "code_id": "/7MysQxDbHA=",
                "checksum": "D28gTwF+0Tk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-engine-version",
                "type": "\u0007",
                "title": "Engine version"
              },
              {
                "mql": "aws.rds.dbcluster.deletionProtection",
                "code_id": "FTV+Cb3NFGU=",
                "checksum": "94fAwVrE6jg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-deletion-protection",
                "type": "\u0004",
                "title": "Deletion protection"
              },
              {
                "mql": "aws.rds.dbcluster.members.length",
                "code_id": "wjj1hufFBTA=",
                "checksum": "VYAkQxPitLs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-instance-count",
                "type": "\u0005",
                "title": "Instance count"
              },
              {
                "mql": "aws.rds.dbcluster.storageEncrypted",
                "code_id": "laWbjKLLGWU=",
                "checksum": "fjWBYborUAc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-storage-encrypted",
                "type": "\u0004",
                "title": "Storage encrypted"
              },
              {
                "mql": "aws.rds.dbcluster.backupSettings.first.retentionPeriod",
                "code_id": "ZsHy/j/g4tw=",
                "checksum": "yM018Ma5qtc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-backup-retention",
                "type": "\u0005",
                "title": "Backup retention (days)"
              },
              {
                "mql": "aws.rds.dbcluster.backupSettings.first.encrypted",
                "code_id": "lvInU6fBK24=",
                "checksum": "y/lcrN/JVLg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-backup-encryption",
                "type": "\u0004",
                "title": "Backups encrypted"
              }
            ],
            "uid": "asset-overview-platform-overview-group-rds-cluster",
            "filters": {
              "items": {
                "CNIfmlvOXUg=": {
                  "mql": "asset.platform == \"aws-rds-dbcluster\"",
                  "code_id": "CNIfmlvOXUg=",
                  "checksum": "Jki4LDdhStM=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/CNIfmlvOXUg=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.dynamodb.table.backups.length",
                "code_id": "NScRsvVZvr4=",
                "checksum": "EbsuldjGfKE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-backups",
                "type": "\u0005",
                "title": "Backups"
              },
              {
                "mql": "aws.dynamodb.table.sizeBytes",
                "code_id": "k8Yk5/hpYQ0=",
                "checksum": "cIeh2Mbs/Vs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-size",
                "type": "\u0005",
                "title": "Size in bytes"
              }
            ],
            "uid": "asset-overview-platform-overview-group-dynamodb-table",
            "filters": {
              "items": {
                "fkjI6ZKFDMU=": {
                  "mql": "asset.platform == \"aws-dynamodb-table\"",
                  "code_id": "fkjI6ZKFDMU=",
                  "checksum": "HWgRjc71myc=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/fkjI6ZKFDMU=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.redshift.cluster.allowVersionUpgrade",
                "code_id": "ygiBdOrzT/8=",
                "checksum": "qZbD/eHmgoA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-upgrades",
                "type": "\u0004",
                "title": "Allow upgrades"
              },
              {
                "mql": "aws.redshift.cluster.nodeType",
                "code_id": "ufBSqn4dBus=",
                "checksum": "U6iKkn+nsPA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-node-type",
                "type": "\u0007",
                "title": "Node type"
              },
              {
                "mql": "aws.redshift.cluster.publiclyAccessible",
                "code_id": "LcOZdcHoIvI=",
                "checksum": "0Gf8iAvq5dk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-public",
                "type": "\u0004",
                "title": "Public"
              }
            ],
            "uid": "asset-overview-platform-overview-group-redshift-cluster",
            "filters": {
              "items": {
                "t2QzcgpdIbI=": {
                  "mql": "asset.platform == \"aws-redshift-cluster\"",
                  "code_id": "t2QzcgpdIbI=",
                  "checksum": "sGyWoOdN4oA=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/t2QzcgpdIbI=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.elb.loadbalancer.dnsName",
                "code_id": "hyotw5yJ7aE=",
                "checksum": "g8CrAFMxoaw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-dnsname",
                "type": "\u0007",
                "title": "DNS name"
              },
              {
                "mql": "aws.elb.loadbalancer.listenerDescriptions.first[\"Port\"]",
                "code_id": "B+FJaxs0+QM=",
                "checksum": "rQ9iGezN98g=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-listening-ports",
                "type": "\n",
                "title": "Listening ports"
              },
              {
                "mql": "aws.elb.loadbalancer.listenerDescriptions.first[\"Protocol\"]",
                "code_id": "4pzJKMzZFhE=",
                "checksum": "pYhKugoPNNA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-listening-protocols",
                "type": "\n",
                "title": "Listening protocols"
              },
              {
                "mql": "aws.elb.loadbalancer.elbType",
                "code_id": "USo86W1U9DE=",
                "checksum": "e2i8lv0LJhQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-type",
                "type": "\u0007",
                "title": "ELB type"
              },
              {
                "mql": "aws.elb.loadbalancer.scheme",
                "code_id": "snHYPYTauQg=",
                "checksum": "1VtkSZbN8BI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-scheme",
                "type": "\u0007",
                "title": "Scheme"
              }
            ],
            "uid": "asset-overview-platform-overview-group-elb-loadbalancer",
            "filters": {
              "items": {
                "YhGWafznrIo=": {
                  "mql": "asset.platform == \"aws-elb-loadbalancer\"",
                  "code_id": "YhGWafznrIo=",
                  "checksum": "ot1hebsv8PE=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/YhGWafznrIo=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.ecr.image.uri",
                "code_id": "ynGoQdzizjw=",
                "checksum": "ZZ4QTZ8gjyU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-uri",
                "type": "\u0007",
                "title": "URI"
              },
              {
                "mql": "aws.ecr.image.tags",
                "code_id": "giIfmFdJmfY=",
                "checksum": "vTRus/VlJKA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-tags",
                "type": "\u0019\u0007",
                "title": "Tags"
              },
              {
                "mql": "aws.ecr.image.repoName",
                "code_id": "n8MYEXpZZS0=",
                "checksum": "7qd6+TC19X0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-repo",
                "type": "\u0007",
                "title": "Repository"
              },
              {
                "mql": "aws.ecr.image.digest",
                "code_id": "JxoBfZCDGVE=",
                "checksum": "Gbg5c8CznCs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-digest",
                "type": "\u0007",
                "title": "Digest"
              }
            ],
            "uid": "asset-overview-platform-overview-group-ecr-image",
            "filters": {
              "items": {
                "0temxiiOySw=": {
                  "mql": "asset.platform == \"aws-ecr-image\"",
                  "code_id": "0temxiiOySw=",
                  "checksum": "Mt8JqF+/B40=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0temxiiOySw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.ecs.container.image",
                "code_id": "XrgZiRH+voM=",
                "checksum": "kx0XSSF1QB0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-image",
                "type": "\u0007",
                "title": "Image"
              },
              {
                "mql": "aws.ecs.container.runtimeId",
                "code_id": "PLV6oyOztrk=",
                "checksum": "jCezNs8/RDM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-runtimeid",
                "type": "\u0007",
                "title": "Runtime ID"
              },
              {
                "mql": "aws.ecs.container.publicIp",
                "code_id": "ZBhBLOWqjac=",
                "checksum": "Rm2rhxCtJiw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-publicip",
                "type": "\u0007",
                "title": "Public IP"
              },
              {
                "mql": "if (aws.ecs.container.platformFamily != \"\") {\n  return aws.ecs.container.platformFamily + \" \" +  aws.ecs.container.platformVersion\n}\n",
                "code_id": "a9iOMLlEDzc=",
                "checksum": "5MbbQ3Hi9Ts=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-platform",
                "type": "\u0007",
                "title": "Container platform"
              },
              {
                "mql": "aws.ecs.container.status",
                "code_id": "4QSzctYu908=",
                "checksum": "m3gCgqRo/sQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-status",
                "type": "\u0007",
                "title": "Status"
              },
              {
                "mql": "aws.ecs.container.clusterName",
                "code_id": "AKX3XkcMLEs=",
                "checksum": "sA+Rh3Y9MOY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-cluster",
                "type": "\u0007",
                "title": "Cluster"
              }
            ],
            "uid": "asset-overview-platform-overview-group-ecs-container",
            "filters": {
              "items": {
                "M4FgTdRaB8A=": {
                  "mql": "asset.platform == \"aws-ecs-container\"",
                  "code_id": "M4FgTdRaB8A=",
                  "checksum": "vcQf7rqu1HI=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/M4FgTdRaB8A=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.ec2.instance.state",
                "code_id": "p1HYVljpzf4=",
                "checksum": "8Er8efR5WL0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-state",
                "type": "\u0007",
                "title": "State"
              },
              {
                "mql": "aws.ec2.instance.instanceType",
                "code_id": "QzcEmOkKCoY=",
                "checksum": "HPfbVH62pXM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-type",
                "type": "\u0007",
                "title": "Type"
              },
              {
                "mql": "aws.ec2.instance.vpc.id",
                "code_id": "NZBlQ+jvrcg=",
                "checksum": "4O3dimXXYAU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-vpc",
                "type": "\u0007",
                "title": "VPC ID"
              },
              {
                "mql": "aws.ec2.instance.publicIp",
                "code_id": "bCoY6g4/m1Q=",
                "checksum": "3nxSgZGrc+M=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-public-ip",
                "type": "\u0007",
                "title": "Public IPv4"
              },
              {
                "mql": "aws.ec2.instance.privateIp",
                "code_id": "pdXDZtUwAJI=",
                "checksum": "MCxcbKiWcvg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-private-ip",
                "type": "\u0007",
                "title": "Private IPv4"
              },
              {
                "mql": "aws.ec2.instance.publicDnsName",
                "code_id": "FoCbtqGInSo=",
                "checksum": "0Ibp+8yjHFY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-public-dns",
                "type": "\u0007",
                "title": "Public DNS"
              },
              {
                "mql": "aws.ec2.instance.privateDnsName",
                "code_id": "VsysbRTPSXA=",
                "checksum": "QHsZGA6VyEU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-private-dns",
                "type": "\u0007",
                "title": "Private DNS"
              }
            ],
            "uid": "asset-overview-platform-overview-group-ec2-instance",
            "filters": {
              "items": {
                "cPC5mN127Kg=": {
                  "mql": "asset.platform == \"aws-ec2-instance\"",
                  "code_id": "cPC5mN127Kg=",
                  "checksum": "AuUq4ssOZo4=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/cPC5mN127Kg=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.efs.filesystem.encrypted",
                "code_id": "+i0Dm11At+I=",
                "checksum": "zAlW2FWTA7Y=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-encrypted",
                "type": "\u0004",
                "title": "Encrypted"
              },
              {
                "mql": "aws.efs.filesystem.kmsKey.id",
                "code_id": "KQWyi2icDL8=",
                "checksum": "W0Xblno1VMo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-kms-key-id",
                "type": "\u0007",
                "title": "KMS key ID"
              },
              {
                "mql": "aws.efs.filesystem.id",
                "code_id": "gCqO0HKaR6k=",
                "checksum": "jcbHBEnHdng=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-id",
                "type": "\u0007",
                "title": "ID"
              }
            ],
            "uid": "asset-overview-platform-overview-group-efs-filesystem",
            "filters": {
              "items": {
                "+dxosqhWfaA=": {
                  "mql": "asset.platform == \"aws-efs-filesystem\"",
                  "code_id": "+dxosqhWfaA=",
                  "checksum": "Vh5Rgb4s8bI=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/+dxosqhWfaA=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "mql": "aws.eks.cluster.name",
                "code_id": "l2hQ2RwP+QM=",
                "checksum": "z3Vl2e1oqHs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.eks.cluster.status",
                "code_id": "HXv+cKR/QEM=",
                "checksum": "bq7H5vwwDY0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-status",
                "type": "\u0007",
                "title": "Status"
              },
              {
                "mql": "aws.eks.cluster.version",
                "code_id": "62pyla6rCyM=",
                "checksum": "rg2sZzqN3Uo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-version",
                "type": "\u0007",
                "title": "Kubernetes Version"
              },
              {
                "mql": "aws.eks.cluster.platformVersion",
                "code_id": "3gjOFJ5YB8Y=",
                "checksum": "QK0o7ZcapMk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-platform-version",
                "type": "\u0007",
                "title": "Kubernetes Version"
              },
              {
                "mql": "aws.eks.cluster.supportType",
                "code_id": "7ms5eQeuC3E=",
                "checksum": "bIytNULuyq8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-support-type",
                "type": "\u0007",
                "title": "Support type"
              }
            ],
            "uid": "asset-overview-platform-overview-group-aws-eks-cluster",
            "filters": {
              "items": {
                "vLnOtXTQbss=": {
                  "mql": "asset.platform == \"aws-eks-cluster\"",
                  "code_id": "vLnOtXTQbss=",
                  "checksum": "Xp3yqIPaaPk=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/vLnOtXTQbss=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "checksum": "YrcIux4a1e0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date"
              },
              {
                "mql": "aws.apigateway.restapi.id",
                "code_id": "fP+X1y3opLI=",
                "checksum": "gPP8XLmbJj4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "aws.apigateway.restapi.name",
                "code_id": "Nc4saX/K8/Y=",
                "checksum": "w/fVwFBi+Yg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "aws.apigateway.restapi.description",
                "code_id": "V5a5Mny5gXw=",
                "checksum": "AbR6YMOQRJ0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-description",
                "type": "\u0007",
                "title": "Description"
              }
            ],
            "uid": "asset-overview-platform-overview-group-gateway-restapi",
            "filters": {
              "items": {
                "+JnRYnF2Eq4=": {
                  "mql": "asset.platform == \"aws-gateway-restapi\"",
                  "code_id": "+JnRYnF2Eq4=",
                  "checksum": "Rz4UhsUbNG0=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/+JnRYnF2Eq4=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.es.domain.encryptionAtRestEnabled",
                "code_id": "nADZv1jdLRI=",
                "checksum": "HbVYA4w3PLk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-encryption-at-rest",
                "type": "\u0004",
                "title": "Encrypted at rest"
              },
              {
                "mql": "aws.es.domain.nodeToNodeEncryptionEnabled",
                "code_id": "+BIbtqZkl1I=",
                "checksum": "ZTmvIEjs7SA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-node-to-node-encryption",
                "type": "\u0004",
                "title": "Node to node encrypted"
              },
              {
                "mql": "aws.es.domain.endpoint",
                "code_id": "oAU3DZS7zzs=",
                "checksum": "Tcv5zU3APWU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-endpoint",
                "type": "\u0007",
                "title": "Endpoint"
              }
            ],
            "uid": "asset-overview-platform-overview-group-es-domain",
            "filters": {
              "items": {
                "SDwUhCi/rQQ=": {
                  "mql": "asset.platform == \"aws-es-domain\"",
                  "code_id": "SDwUhCi/rQQ=",
                  "checksum": "Qd8LW6YIKXI=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/SDwUhCi/rQQ=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.sagemaker.notebookinstance.details.directInternetAccess",
                "code_id": "xaDWZp3h7Js=",
                "checksum": "epjCw1O8bQ8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instances-internet-access",
                "type": "\u0007",
                "title": "Direct internet access"
              }
            ],
            "uid": "asset-overview-platform-overview-group-sagemaker-notebook-instances",
            "filters": {
              "items": {
                "0nucc9YlORU=": {
                  "mql": "asset.platform == \"aws-sagemaker-notebookinstance\"",
                  "code_id": "0nucc9YlORU=",
                  "checksum": "zbSMs0XK1AY=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0nucc9YlORU=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.cloudwatch.loggroup.name",
                "code_id": "W5Esq/IkwL0=",
                "checksum": "7WguXp/ua9s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "aws.cloudwatch.loggroup.kmsKey.id",
                "code_id": "2he2/YdbrMc=",
                "checksum": "lb+yJy0dW8E=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-kms-key-id",
                "type": "\u0007",
                "title": "KMS key ID",
                "filters": {
                  "items": {
                    "XWZLRzDTtCI=": {
                      "mql": "aws.cloudwatch.loggroup.kmsKey != null",
                      "code_id": "XWZLRzDTtCI=",
                      "checksum": "rGYQGe35+Vg=",
                      "mrn": "//policy.api.mondoo.app/filter/XWZLRzDTtCI=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.cloudwatch.loggroup.retentionInDays",
                "code_id": "JiFvv/FO2UM=",
                "checksum": "8IKrflwAB9E=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-retention",
                "type": "\u0005",
                "title": "Retention in days"
              }
            ],
            "uid": "asset-overview-platform-overview-group-cloudwatch-loggroup",
            "filters": {
              "items": {
                "ItMukH2UOZA=": {
                  "mql": "asset.platform == \"aws-cloudwatch-loggroup\"",
                  "code_id": "ItMukH2UOZA=",
                  "checksum": "/O1M66OsEck=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/ItMukH2UOZA=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.cloudtrail.trail.name",
                "code_id": "q4tWDDUdGdY=",
                "checksum": "gVqHAlv2GbE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "aws.cloudtrail.trail.kmsKey.id",
                "code_id": "ouhrxuVXU1k=",
                "checksum": "6lSno6K7D0k=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-kms-key-id",
                "type": "\u0007",
                "title": "KMS key ID",
                "filters": {
                  "items": {
                    "yPkFUe7jchw=": {
                      "mql": "aws.cloudtrail.trail.kmsKey != null",
                      "code_id": "yPkFUe7jchw=",
                      "checksum": "eil5eGsvieE=",
                      "mrn": "//policy.api.mondoo.app/filter/yPkFUe7jchw=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.cloudtrail.trail.s3bucket.name",
                "code_id": "m31vNL+22mA=",
                "checksum": "6U9gxO6ZOm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-s3-bucket",
                "type": "\u0007",
                "title": "S3 bucket"
              },
              {
                "mql": "aws.cloudtrail.trail.snsTopicARN",
                "code_id": "pGP8U3F26cU=",
                "checksum": "yWP7fzUH6sU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-sns-topic",
                "type": "\u0007",
                "title": "SNS topic",
                "filters": {
                  "items": {
                    "J9lH/zmjDcQ=": {
                      "mql": "aws.cloudtrail.trail.snsTopicARN != \"\"",
                      "code_id": "J9lH/zmjDcQ=",
                      "checksum": "ZXFtZxOdIpg=",
                      "mrn": "//policy.api.mondoo.app/filter/J9lH/zmjDcQ=",
                      "type": "\u0004"
                    }
                  }
                }
              }
            ],
            "uid": "asset-overview-platform-overview-group-cloudtrail-trail",
            "filters": {
              "items": {
                "qcjTHhgiY8I=": {
                  "mql": "asset.platform == \"aws-cloudtrail-trail\"",
                  "code_id": "qcjTHhgiY8I=",
                  "checksum": "0n376h9v9hs=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/qcjTHhgiY8I=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "checksum": "vfFUAxEuHm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region"
              },
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "qmMTfbJz49A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
                "type": "\u0007"
              },
              {
                "checksum": "XymaJUWoFSM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn"
              },
              {
                "mql": "aws.lambda.function.name",
                "code_id": "q4tWDDUdGdY=",
                "checksum": "gVqHAlv2GbE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "aws.lambda.function.concurrency",
                "code_id": "5UF8BzdejqE=",
                "checksum": "emH8LYZ/Uws=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-concurrency",
                "type": "\u0005",
                "title": "Concurrency limit"
              },
              {
                "mql": "aws.lambda.function.vpcConfig[\"VpcId\"]",
                "code_id": "KuT0maKg2Yw=",
                "checksum": "TOXnf9lhwn0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-vpc",
                "type": "\n",
                "title": "VPC",
                "filters": {
                  "items": {
                    "VQwFP0mL4gc=": {
                      "mql": "aws.lambda.function.vpcConfig.length \u003e 0",
                      "code_id": "VQwFP0mL4gc=",
                      "checksum": "pDGml3JaCu0=",
                      "mrn": "//policy.api.mondoo.app/filter/VQwFP0mL4gc=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.lambda.function.dlqTargetArn",
                "code_id": "GqMBe8PF5Ts=",
                "checksum": "O8X5V12daq8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-dlq",
                "type": "\u0007",
                "title": "DLQ target",
                "filters": {
                  "items": {
                    "t3xbgkDA4XI=": {
                      "mql": "aws.lambda.function.dlqTargetArn != \"\"",
                      "code_id": "t3xbgkDA4XI=",
                      "checksum": "8LwFEV2m668=",
                      "mrn": "//policy.api.mondoo.app/filter/t3xbgkDA4XI=",
                      "type": "\u0004"
                    }
                  }
                }
              }
            ],
            "uid": "asset-overview-platform-overview-group-lambda-function",
            "filters": {
              "items": {
                "8iGUBh79IzA=": {
                  "mql": "asset.platform == \"aws-lambda-function\"",
                  "code_id": "8iGUBh79IzA=",
                  "checksum": "0EGmNVwo144=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/8iGUBh79IzA=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "aRSd7vfjN/s=",
                "checksum": "/h6RxWAAzNM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-hostname",
                "type": "\u0007"
              },
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "MMPvbEnxkzM=",
                "checksum": "nARQ1JrIdj0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
                "type": "\u0007"
              },
              {
                "mql": "switch( command('sysctl -n hw.model').stdout.trim ) {\ncase _ == \"MacPro7,1\":\n  return \"Mac Pro (2019)\"\ncase _ == \"Mac14,8\":\n  return \"Mac Pro (2023)\"\ncase _ == \"MacPro2,1\":\n  return \"Mac Pro (Early 2007)\"\ncase _ == \"MacPro3,1\":\n  return \"Mac Pro (Early 2008)\"\ncase _ == \"MacPro4,1\":\n  return \"Mac Pro (Early 2009)\"\ncase _ == \"MacPro6,1\":\n  return \"Mac Pro (Late 2013)\"\ncase _ == \"MacPro1,1\":\n  return \"Mac Pro (Mid 2006)\"\ncase _ == \"Mac13,1\":\n  return \"Mac Studio (M1 Max)\"\ncase _ == \"Mac13,2\":\n  return \"Mac Studio (M1 Ultra)\"\ncase _ == \"Mac14,13\":\n  return \"Mac Studio (M2 Max, 2023)\"\ncase _ == \"Mac14,14\":\n  return \"Mac Studio (M2 Ultra, 2023)\"\ncase _ == \"Mac15,14\":\n  return \"Mac Studio (M3 Ultra, 2025)\"\ncase _ == \"Mac16,9\":\n  return \"Mac Studio (M4 Max, 2025)\"\ncase _ == \"Macmini6,1\":\n  return \"Mac mini (Late 2012, Core i5)\"\ncase _ == \"Macmini6,2\":\n  return \"Mac mini (Late 2012, Core i7)\"\ncase _ == \"Macmini7,1\":\n  return \"Mac mini (Late 2014)\"\ncase _ == \"Macmini8,1\":\n  return \"Mac mini (Late 2018)\"\ncase _ == \"Macmini9,1\":\n  return \"Mac mini (M1, Late 2020)\"\ncase _ == \"Mac14,12\":\n  return \"Mac mini (M2 Pro, 2023)\"\ncase _ == \"Mac14,3\":\n  return \"Mac mini (M2, 2023)\"\ncase _ == \"Mac16,11\":\n  return \"Mac mini (M4 Pro, 2024)\"\ncase _ == \"Mac16,10\":\n  return \"Mac mini (M4, 2024)\"\ncase _ == \"Macmini2,1\":\n  return \"Mac mini (Mid 2007)\"\ncase _ == \"Macmini4,1\":\n  return \"Mac mini (Mid 2010)\"\ncase _ == \"Macmini5,2\":\n  return \"Mac mini (Mid 2011, Dedicated graphics)\"\ncase _ == \"Macmini5,1\":\n  return \"Mac mini (Mid 2011, Integrated graphics)\"\ncase _ == \"Macmini5,3\":\n  return \"Mac mini (Mid 2011, Server)\"\ncase _ == \"MacBook4,1\":\n  return \"MacBook (13-inch, Early 2008)\"\ncase _ == \"MacBook3,1\":\n  return \"MacBook (13-inch, Late 2007)\"\ncase _ == \"MacBook5,1\":\n  return \"MacBook (13-inch, Late 2008)\"\ncase _ == \"MacBook6,1\":\n  return \"MacBook (13-inch, Late 2009)\"\ncase _ == \"MacBook1,1\":\n  return \"MacBook (13-inch, Mid 2006)\"\ncase _ == \"MacBook7,1\":\n  return \"MacBook (13-inch, Mid 2010)\"\ncase _ == \"MacBook10,1\":\n  return \"MacBook (Retina, 12-inch, 2017)\"\ncase _ == \"MacBook8,1\":\n  return \"MacBook (Retina, 12-inch, Early 2015)\"\ncase _ == \"MacBook9,1\":\n  return \"MacBook (Retina, 12-inch, Early 2016)\"\ncase _ == \"MacBookAir7,1\":\n  return \"MacBook Air (11-inch, Early 2015)\"\ncase _ == \"MacBookAir3,1\":\n  return \"MacBook Air (11-inch, Late 2010)\"\ncase _ == \"MacBookAir4,1\":\n  return \"MacBook Air (11-inch, Mid 2011)\"\ncase _ == \"MacBookAir5,1\":\n  return \"MacBook Air (11-inch, Mid 2012)\"\ncase _ == \"MacBookAir3,2\":\n  return \"MacBook Air (13-inch, Late 2010)\"\ncase _ == \"Mac15,12\":\n  return \"MacBook Air (13-inch, M3, 2024)\"\ncase _ == \"Mac16,12\":\n  return \"MacBook Air (13-inch, M4, 2025)\"\ncase _ == \"MacBookAir4,2\":\n  return \"MacBook Air (13-inch, Mid 2011)\"\ncase _ == \"MacBookAir5,2\":\n  return \"MacBook Air (13-inch, Mid 2012)\"\ncase _ == \"Mac14,15\":\n  return \"MacBook Air (15-inch, M2, 2023)\"\ncase _ == \"Mac15,13\":\n  return \"MacBook Air (15-inch, M3, 2024)\"\ncase _ == \"Mac16,13\":\n  return \"MacBook Air (15-inch, M4, 2025)\"\ncase _ == \"MacBookAir1,1\":\n  return \"MacBook Air (Early 2008)\"\ncase _ == \"MacBookAir10,1\":\n  return \"MacBook Air (M1, 2020)\"\ncase _ == \"Mac14,2\":\n  return \"MacBook Air (M2, 2022)\"\ncase _ == \"MacBookAir8,1\":\n  return \"MacBook Air (Retina, 13-inch, 2018)\"\ncase _ == \"MacBookAir8,2\":\n  return \"MacBook Air (Retina, 13-inch, 2019)\"\ncase _ == \"MacBookAir9,1\":\n  return \"MacBook Air (Retina, 13-inch, 2020)\"\ncase _ == \"MacBookPro13,2\":\n  return \"MacBook Pro (13-inch, 2016, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro13,1\":\n  return \"MacBook Pro (13-inch, 2016, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro14,2\":\n  return \"MacBook Pro (13-inch, 2017, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro14,1\":\n  return \"MacBook Pro (13-inch, 2017, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro15,4\":\n  return \"MacBook Pro (13-inch, 2019, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro16,2\":\n  return \"MacBook Pro (13-inch, 2020, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro16,3\":\n  return \"MacBook Pro (13-inch, 2020, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro17,1\":\n  return \"MacBook Pro (13-inch, M1, 2020)\"\ncase _ == \"Mac14,7\":\n  return \"MacBook Pro (13-inch, M2, 2022)\"\ncase _ == \"MacBookPro5,5\":\n  return \"MacBook Pro (13-inch, Mid 2009)\"\ncase _ == \"MacBookPro7,1\":\n  return \"MacBook Pro (13-inch, Mid 2010)\"\ncase _ == \"MacBookPro9,2\":\n  return \"MacBook Pro (13-inch, Mid 2012)\"\ncase _ == \"Mac15,10\":\n  return \"MacBook Pro (14-inch, 14-core M3 Max, Nov 2023)\"\ncase _ == \"Mac15,8\":\n  return \"MacBook Pro (14-inch, 16-core M3 Max, Nov 2023)\"\ncase _ == \"MacBookPro18,4\":\n  return \"MacBook Pro (14-inch, M1 Max, 2021)\"\ncase _ == \"MacBookPro18,3\":\n  return \"MacBook Pro (14-inch, M1 Pro, 2021)\"\ncase _ == \"Mac14,5\":\n  return \"MacBook Pro (14-inch, M2 Max 2023)\"\ncase _ == \"Mac14,9\":\n  return \"MacBook Pro (14-inch, M2 Pro, 2023)\"\ncase _ == \"Mac15,6\":\n  return \"MacBook Pro (14-inch, M3 Pro, Nov 2023)\"\ncase _ == \"Mac15,3\":\n  return \"MacBook Pro (14-inch, M3, Nov 2023)\"\ncase _ == \"Mac16,6\":\n  return \"MacBook Pro (14-inch, M4 Max, Nov 2024)\"\ncase _ == \"Mac16,8\":\n  return \"MacBook Pro (14-inch, M4 Pro, Nov 2024)\"\ncase _ == \"Mac16,1\":\n  return \"MacBook Pro (14-inch, M4, Nov 2024)\"\ncase _ == \"MacBookPro13,3\":\n  return \"MacBook Pro (15-inch, 2016)\"\ncase _ == \"MacBookPro14,3\":\n  return \"MacBook Pro (15-inch, 2017)\"\ncase _ == \"MacBookPro1,1\":\n  return \"MacBook Pro (15-inch, Early 2006)\"\ncase _ == \"MacBookPro2,2\":\n  return \"MacBook Pro (15-inch, Late 2006)\"\ncase _ == \"MacBookPro5,3\":\n  return \"MacBook Pro (15-inch, Mid 2009, Dedicated Graphics)\"\ncase _ == \"MacBookPro5,4\":\n  return \"MacBook Pro (15-inch, Mid 2009, Integrated Graphics)\"\ncase _ == \"MacBookPro6,2\":\n  return \"MacBook Pro (15-inch, Mid 2010)\"\ncase _ == \"MacBookPro9,1\":\n  return \"MacBook Pro (15-inch, Mid 2012)\"\ncase _ == \"Mac15,11\":\n  return \"MacBook Pro (16-inch, 14-core M3 Max, Nov 2023)\"\ncase _ == \"Mac15,9\":\n  return \"MacBook Pro (16-inch, 16-core M3 Max, Nov 2023)\"\ncase _ == \"MacBookPro16,4\":\n  return \"MacBook Pro (16-inch, 2019, Dedicated graphics)\"\ncase _ == \"MacBookPro16,1\":\n  return \"MacBook Pro (16-inch, 2019, Integrated graphics)\"\ncase _ == \"MacBookPro18,2\":\n  return \"MacBook Pro (16-inch, M1 Max, 2021)\"\ncase _ == \"MacBookPro18,1\":\n  return \"MacBook Pro (16-inch, M1 Pro, 2021)\"\ncase _ == \"Mac14,6\":\n  return \"MacBook Pro (16-inch, M2 Max, 2023)\"\ncase _ == \"Mac14,10\":\n  return \"MacBook Pro (16-inch, M2 Pro, 2023)\"\ncase _ == \"Mac15,7\":\n  return \"MacBook Pro (16-inch, M3 Pro, Nov 2023)\"\ncase _ == \"Mac16,5\":\n  return \"MacBook Pro (16-inch, M4 Max, Nov 2024)\"\ncase _ == \"Mac16,7\":\n  return \"MacBook Pro (16-inch, M4 Pro, Nov 2024)\"\ncase _ == \"MacBookPro1,2\":\n  return \"MacBook Pro (17-inch, Early 2006)\"\ncase _ == \"MacBookPro2,1\":\n  return \"MacBook Pro (17-inch, Late 2006)\"\ncase _ == \"MacBookPro6,1\":\n  return \"MacBook Pro (17-inch, Mid 2010)\"\ncase _ == \"MacBookPro12,1\":\n  return \"MacBook Pro (Retina, 13-inch, Early 2015)\"\ncase _ == \"MacBookPro11,5\":\n  return \"MacBook Pro (Retina, 15-inch, Mid 2015, Dedicated graphics)\"\ncase _ == \"MacBookPro11,4\":\n  return \"MacBook Pro (Retina, 15-inch, Mid 2015, Integrated graphics)\"\ncase _ == \"Macmini8,2\":\n  return \"Unreleased Mac mini\"\ncase _ == \"Macmini10,1\":\n  return \"Unreleased Mac mini (M1 Pro)\"\ncase _ == \"iMac5,2\":\n  return \"iMac (17-inch, Late 2006, Integrated Graphics)\"\ncase _ == \"iMac4,2\":\n  return \"iMac (17-inch, Mid 2006)\"\ncase _ == \"iMac18,1\":\n  return \"iMac (21.5-inch, 2017)\"\ncase _ == \"iMac13,3\":\n  return \"iMac (21.5-inch, Early 2013)\"\ncase _ == \"iMac13,1\":\n  return \"iMac (21.5-inch, Late 2012)\"\ncase _ == \"iMac14,3\":\n  return \"iMac (21.5-inch, Late 2013, Dedicated Graphics)\"\ncase _ == \"iMac14,1\":\n  return \"iMac (21.5-inch, Late 2013, Integrated Graphics)\"\ncase _ == \"iMac16,2\":\n  return \"iMac (21.5-inch, Late 2015)\"\ncase _ == \"iMac11,2\":\n  return \"iMac (21.5-inch, Mid 2010)\"\ncase _ == \"iMac14,4\":\n  return \"iMac (21.5-inch, Mid 2014)\"\ncase _ == \"iMac6,1\":\n  return \"iMac (24-inch, Late 2006)\"\ncase _ == \"iMac21,1\":\n  return \"iMac (24-inch, M1, 2021, Four Ports)\"\ncase _ == \"iMac21,2\":\n  return \"iMac (24-inch, M1, 2021, Two Ports)\"\ncase _ == \"Mac15,5\":\n  return \"iMac (24-inch, M3, 2023, Four Ports)\"\ncase _ == \"Mac15,4\":\n  return \"iMac (24-inch, M3, 2023, Two Ports)\"\ncase _ == \"Mac16,3\":\n  return \"iMac (24-inch, M4, 2024, Four Ports)\"\ncase _ == \"Mac16,2\":\n  return \"iMac (24-inch, M4, 2024, Two Ports)\"\ncase _ == \"iMac11,1\":\n  return \"iMac (27-inch, Late 2009, Core i5/i7)\"\ncase _ == \"iMac13,2\":\n  return \"iMac (27-inch, Late 2012)\"\ncase _ == \"iMac14,2\":\n  return \"iMac (27-inch, Late 2013)\"\ncase _ == \"iMac11,3\":\n  return \"iMac (27-inch, Mid 2010)\"\ncase _ == \"iMac12,2\":\n  return \"iMac (27-inch, Mid 2011)\"\ncase _ == \"iMac18,2\":\n  return \"iMac (Retina 4K, 21.5-inch, 2017)\"\ncase _ == \"iMac19,2\":\n  return \"iMac (Retina 4K, 21.5-inch, 2019)\"\ncase _ == \"iMac18,3\":\n  return \"iMac (Retina 5K, 27-inch, 2017)\"\ncase _ == \"iMac19,1\":\n  return \"iMac (Retina 5K, 27-inch, 2019)\"\ncase _ == \"iMac20,1\":\n  return \"iMac (Retina 5K, 27-inch, 2020)\"\ncase _ == \"iMac20,2\":\n  return \"iMac (Retina 5K, 27-inch, 2020, RX 5700/XT)\"\ncase _ == \"iMac17,1\":\n  return \"iMac (Retina 5K, 27-inch, Late 2015)\"\ncase _ == \"iMacPro1,1\":\n  return \"iMac Pro (Retina 5K, 27-inch, Late 2017)\"\ndefault:\n  return _\n}\n",
                "code_id": "VOaxixtxBQs=",
                "checksum": "oNRlY3iXb3Y=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-model-name",
                "type": "\u0007",
                "title": "Model name",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "machine.system.product",
                "code_id": "iXIVTYLtcJk=",
                "checksum": "iO0tCVMkN1A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-model-part-number",
                "type": "\u0007",
                "title": "Model part number"
              },
              {
                "mql": "machine.system.serial",
                "code_id": "83YcBnukW7o=",
                "checksum": "rFtGEB+Pvys=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-serial-number",
                "type": "\u0007",
                "title": "System serial number"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['chip_type']",
                "code_id": "ljXrlbjJUsM=",
                "checksum": "E4fwh5rpYB0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-cpu-type",
                "type": "\n",
                "title": "CPU type",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['physical_memory']",
                "code_id": "UaIu/LgmuxA=",
                "checksum": "MsRuL5Tve/0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-memory",
                "type": "\n",
                "title": "Memory",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"diskutil info disk0\").stdout.find(/Disk Size:\\s*(\\S* \\S*)/).first.split(\"  \").last.trim",
                "code_id": "RWFGDQwbamM=",
                "checksum": "/0lKDVaEgdU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-disk",
                "type": "\u0007",
                "title": "Disk size",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "code_id": "JwBey59Il44=",
                "checksum": "cRoZA0h/MoI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-installed-packages",
                "type": "\u0005"
              }
            ],
            "uid": "asset-overview-platform-overview-group-macos",
            "filters": {
              "items": {
                "X8q+Gj2b/fY=": {
                  "mql": "asset.platform == \"macos\"",
                  "code_id": "X8q+Gj2b/fY=",
                  "checksum": "HRPaGVmAAkg=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/X8q+Gj2b/fY=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "aRSd7vfjN/s=",
                "checksum": "/h6RxWAAzNM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-hostname",
                "type": "\u0007"
              },
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "MMPvbEnxkzM=",
                "checksum": "nARQ1JrIdj0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
                "type": "\u0007"
              },
              {
                "code_id": "Yw5maGeSxtI=",
                "checksum": "leh/ACVSTKI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetkind",
                "type": "\u0007"
              },
              {
                "checksum": "8TOW5URNh3A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider"
              },
              {
                "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"System Model:\"))[0].split(\":\")[1].trim\n",
                "code_id": "t/+xTPNbPy4=",
                "checksum": "82G4gaZ/BHA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-model-name",
                "type": "\u0007",
                "title": "Model name",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"Machine Serial Number:\"))[0].split(\":\")[1].trim\n",
                "code_id": "mN2WVMmPI7w=",
                "checksum": "/cTZfJ6Cqm4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-serial-number",
                "type": "\u0007",
                "title": "Serial number",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"prtconf -c\").stdout.split(\": \")[1].trim\n",
                "code_id": "gk1eE66Pzvc=",
                "checksum": "Fpxol3yLTyA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-cpu-type",
                "type": "\u0007",
                "title": "CPU type",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"Processor Type:\"))[0].split(\":\")[1].trim\n",
                "code_id": "b2jqsH5Ew7I=",
                "checksum": "Z5qVCP5wbUM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-cpu-platform",
                "type": "\u0007",
                "title": "CPU platform",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"prtconf -m\").stdout.trim.split(\": \")[1]\n",
                "code_id": "IsJEcoqOmtw=",
                "checksum": "uArl3PoijGU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-memory",
                "type": "\u0007",
                "title": "Memory",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"oslevel -s\").stdout.trim\n",
                "code_id": "7dUnP+5hQhk=",
                "checksum": "nEjBkDtbcko=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-kernel-version",
                "type": "\u0007",
                "title": "Kernel version",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"IP Address:\"))[0].split(\":\")[1].trim\n",
                "code_id": "2d+/YHbamjU=",
                "checksum": "lyYV4AeSzDk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-ip-address",
                "type": "\u0007",
                "title": "IP address",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              }
            ],
            "uid": "asset-overview-platform-overview-group-aix",
            "filters": {
              "items": {
                "a3Uu1Qp7bpw=": {
                  "mql": "asset.platform == \"aix\"",
                  "code_id": "a3Uu1Qp7bpw=",
                  "checksum": "8q0qPoTMK+s=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/a3Uu1Qp7bpw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "aRSd7vfjN/s=",
                "checksum": "/h6RxWAAzNM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-hostname",
                "type": "\u0007"
              },
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "MMPvbEnxkzM=",
                "checksum": "nARQ1JrIdj0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
                "type": "\u0007"
              },
              {
                "code_id": "Yw5maGeSxtI=",
                "checksum": "leh/ACVSTKI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetkind",
                "type": "\u0007"
              },
              {
                "checksum": "8TOW5URNh3A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider"
              },
              {
                "code_id": "GQJ1bYKYROk=",
                "checksum": "x7Ar/5LhJoU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-hypervisor",
                "type": "\u0007"
              },
              {
                "code_id": "NoX4fW7M8EI=",
                "checksum": "liiHZIxGPfQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-public-hostname",
                "type": "\u0007"
              },
              {
                "code_id": "UP/Tq0Kjk58=",
                "checksum": "ZtGxguqnQ8I=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-public-ipaddress",
                "type": "\u0007"
              },
              {
                "code_id": "pygzAur/vUE=",
                "checksum": "YqiZbCFToNk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-private-ipaddress",
                "type": "\u0007"
              },
              {
                "mql": "machine.baseboard.manufacturer",
                "code_id": "kv1OUBUCnBA=",
                "checksum": "JBlkpuH5cXo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-manufacturer",
                "type": "\u0007",
                "title": "Manufacturer",
                "filters": {
                  "items": {
                    "nmfXjdG/9PA=": {
                      "mql": "asset.kind == 'baremetal'\nmachine.baseboard.manufacturer != \"\"\n",
                      "code_id": "nmfXjdG/9PA=",
                      "checksum": "rCDDrPpdvi8=",
                      "mrn": "//policy.api.mondoo.app/filter/nmfXjdG/9PA=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "machine.baseboard.product",
                "code_id": "F7bdJ3U4G0g=",
                "checksum": "8Kh9gyYkRWU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-product",
                "type": "\u0007",
                "title": "Product",
                "filters": {
                  "items": {
                    "7vmuyqQ5FgA=": {
                      "mql": "asset.kind == 'baremetal'\nmachine.baseboard.product != \"\"\n",
                      "code_id": "7vmuyqQ5FgA=",
                      "checksum": "gt3LNyC8sxM=",
                      "mrn": "//policy.api.mondoo.app/filter/7vmuyqQ5FgA=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "switch( machine.chassis.serial ) {\ncase _ == \"\":\n  return \"Unknown\"\ncase _ == \"To Be Filled By O.E.M.\":\n  return \"Unknown\"\ndefault:\n  return machine.chassis.serial\n}\n",
                "code_id": "Rx0VK5B8tZ8=",
                "checksum": "o64du1WlILs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-serial",
                "type": "\u0007",
                "title": "Serial / Service Tag",
                "filters": {
                  "items": {
                    "MrxXb13XuN4=": {
                      "mql": "asset.kind == 'baremetal'\n",
                      "code_id": "MrxXb13XuN4=",
                      "checksum": "OPwe5LQG5IE=",
                      "mrn": "//policy.api.mondoo.app/filter/MrxXb13XuN4=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "code_id": "12kX/uYrBPU=",
                "checksum": "r22QAdN6Xzs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetarch",
                "type": "\u0007"
              },
              {
                "mql": "kernel.info[\"version\"]",
                "code_id": "GT/Qrfnx7Pw=",
                "checksum": "Ufkv238zj/Y=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-kernel-version",
                "type": "\n",
                "title": "Kernel version",
                "filters": {
                  "items": {
                    "eTqruXhu7T4=": {
                      "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
                      "code_id": "eTqruXhu7T4=",
                      "checksum": "IVEHesmRA4M=",
                      "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "command('cat /proc/cpuinfo | grep \"model name\" | sort -u | cut -d : -f 2-').stdout.trim\n",
                "code_id": "4pKB3H8YLCs=",
                "checksum": "jtwWt65pO2E=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-cpu",
                "type": "\u0007",
                "title": "CPU type",
                "filters": {
                  "items": {
                    "eTqruXhu7T4=": {
                      "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
                      "code_id": "eTqruXhu7T4=",
                      "checksum": "IVEHesmRA4M=",
                      "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "command(\"free --mega | grep Mem | awk '{ print $2}'\").stdout.trim + \"M\"\n",
                "code_id": "aKgwnf8IBbM=",
                "checksum": "yJdoCQ6Cdtw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-memory",
                "type": "\u0007",
                "title": "Memory",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains('run-command')",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "2ruoQzJhTnI=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"df -TH / | grep '/dev' | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
                "code_id": "RF3JNuVsjjQ=",
                "checksum": "6pzElaAdzPc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-root-volume",
                "type": "\u0007",
                "title": "Root volume",
                "filters": {
                  "items": {
                    "eTqruXhu7T4=": {
                      "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
                      "code_id": "eTqruXhu7T4=",
                      "checksum": "IVEHesmRA4M=",
                      "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
                      "type": "\u0001"
                    }
                  }
                }
              }
            ],
            "uid": "asset-overview-platform-overview-group-linux",
            "filters": {
              "items": {
                "2/RKPdovsIM=": {
                  "mql": "asset.family.contains(_ == 'linux')",
                  "code_id": "2/RKPdovsIM=",
                  "checksum": "ztMG4Y4LX2k=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/2/RKPdovsIM=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "aRSd7vfjN/s=",
                "checksum": "/h6RxWAAzNM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-hostname",
                "type": "\u0007"
              },
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "mql": "asset.labels[\"windows.mondoo.com/display-version\"]",
                "code_id": "Jr3STf3zoac=",
                "checksum": "FaqbCfO3DPM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-version",
                "type": "\u0007",
                "title": "Version"
              },
              {
                "code_id": "63wFQeEMSuY=",
                "checksum": "mxx/fleQJa0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetbuild",
                "type": "\u0007"
              },
              {
                "code_id": "Yw5maGeSxtI=",
                "checksum": "leh/ACVSTKI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetkind",
                "type": "\u0007"
              },
              {
                "mql": "switch( asset.labels['windows.mondoo.com/product-type'] ) {\ncase _ == \"1\":\n  return \"Workstation\"\ncase _ == \"2\":\n  return \"Domain controller\"\ncase _ == \"3\":\n  return \"Server\"\ndefault:\n  return _\n}\n",
                "code_id": "EB2SMRAA4iM=",
                "checksum": "heA99q9keac=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-install-type",
                "type": "\u0007",
                "title": "Install type",
                "filters": {
                  "items": {
                    "HkeKGQEOnC8=": {
                      "mql": "asset.labels[\"windows.mondoo.com/product-type\"] != \"0\"",
                      "code_id": "HkeKGQEOnC8=",
                      "checksum": "WVx7kpQUhfY=",
                      "mrn": "//policy.api.mondoo.app/filter/HkeKGQEOnC8=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "checksum": "8TOW5URNh3A=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider"
              },
              {
                "code_id": "GQJ1bYKYROk=",
                "checksum": "x7Ar/5LhJoU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-hypervisor",
                "type": "\u0007"
              },
              {
                "code_id": "NoX4fW7M8EI=",
                "checksum": "liiHZIxGPfQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-public-hostname",
                "type": "\u0007"
              },
              {
                "code_id": "UP/Tq0Kjk58=",
                "checksum": "ZtGxguqnQ8I=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-public-ipaddress",
                "type": "\u0007"
              },
              {
                "code_id": "pygzAur/vUE=",
                "checksum": "YqiZbCFToNk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-private-ipaddress",
                "type": "\u0007"
              },
              {
                "mql": "windows.computerInfo['CsManufacturer']",
                "code_id": "FlP96firdvY=",
                "checksum": "eaYKUB/xjUs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-manufacturer",
                "type": "\n",
                "title": "Manufacturer",
                "filters": {
                  "items": {
                    "N4jy8Xn7NvY=": {
                      "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsManufacturer'] != \"\"\n",
                      "code_id": "N4jy8Xn7NvY=",
                      "checksum": "ZkpRpiIZdIw=",
                      "mrn": "//policy.api.mondoo.app/filter/N4jy8Xn7NvY=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "windows.computerInfo['CsModel']",
                "code_id": "VGJ7JDM3OME=",
                "checksum": "PrVO9Mw+e0c=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-model",
                "type": "\n",
                "title": "Model",
                "filters": {
                  "items": {
                    "Gd7SIsIOQlc=": {
                      "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsModel'] != \"\"\n",
                      "code_id": "Gd7SIsIOQlc=",
                      "checksum": "+pjdv9oTIgg=",
                      "mrn": "//policy.api.mondoo.app/filter/Gd7SIsIOQlc=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "machine.chassis.serial",
                "code_id": "QnM7EEbCKow=",
                "checksum": "SvjydqLHgS8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-serial",
                "type": "\u0007",
                "title": "Serial / Service Tag",
                "filters": {
                  "items": {
                    "BcOyXN5MJ9w=": {
                      "mql": "asset.kind == 'baremetal'\nmachine.chassis.serial != \"\"\n",
                      "code_id": "BcOyXN5MJ9w=",
                      "checksum": "eMKs1XhdGrY=",
                      "mrn": "//policy.api.mondoo.app/filter/BcOyXN5MJ9w=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "windows.computerInfo['CsProcessors'].first['Name']",
                "code_id": "I9JL8JG/ytU=",
                "checksum": "8UIR3YBorfg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-cpu",
                "type": "\n",
                "title": "CPU"
              },
              {
                "mql": "windows.computerInfo['CsPhyicallyInstalledMemory'] / 1024",
                "code_id": "bqzz8KVNmDo=",
                "checksum": "d3jn9pCtMeA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-memory",
                "type": "\n",
                "title": "Memory in MB"
              }
            ],
            "uid": "asset-overview-platform-overview-group-windows",
            "filters": {
              "items": {
                "b/T7K7dsnXs=": {
                  "mql": "asset.family.contains(_ == 'windows')",
                  "code_id": "b/T7K7dsnXs=",
                  "checksum": "4cxsY/aSvmE=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/b/T7K7dsnXs=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "MMPvbEnxkzM=",
                "checksum": "nARQ1JrIdj0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
                "type": "\u0007"
              },
              {
                "mql": "k8s.nodes.length",
                "code_id": "bCLAwniw8Pw=",
                "checksum": "sigZy89QuBk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-k8s-cluster-node-count",
                "type": "\u0005",
                "title": "Node count"
              },
              {
                "mql": "k8s.serverVersion[\"platform\"]",
                "code_id": "C8I91AZyAYs=",
                "checksum": "OM/vOuw8DP4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-k8s-cluster-host-platform",
                "type": "\n",
                "title": "Control plane platform"
              }
            ],
            "uid": "asset-overview-platform-overview-group-k8s-cluster",
            "filters": {
              "items": {
                "hJQQ2aVQDgw=": {
                  "mql": "asset.platform == \"k8s-cluster\"",
                  "code_id": "hJQQ2aVQDgw=",
                  "checksum": "UYM8LOPJS7U=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/hJQQ2aVQDgw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "checksum": "wsXkhZ/2JaQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-k8s-name"
              },
              {
                "checksum": "mPCS6mDcOrg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace"
              },
              {
                "checksum": "B8A6Gez7/Vg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-kind"
              },
              {
                "checksum": "sQdgB0hVgZo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-apiversion"
              },
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "MMPvbEnxkzM=",
                "checksum": "nARQ1JrIdj0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
                "type": "\u0007"
              }
            ],
            "uid": "asset-overview-platform-overview-group-k8s-obj",
            "filters": {
              "items": {
                "N1flM1XSV/Y=": {
                  "mql": "[\n  \"k8s-pod\",\n  \"k8s-job\",\n  \"k8s-cronjob\",\n  \"k8s-replicaset\",\n  \"k8s-deployment\",\n  \"k8s-statefulset\",\n  \"k8s-daemonset\",\n  \"k8s-ingress\",\n  \"k8s-namespace\",\n  \"k8s-service\"\n].contains(asset.platform)\n",
                  "code_id": "N1flM1XSV/Y=",
                  "checksum": "K2i5iOl3oK4=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/N1flM1XSV/Y=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "github.user.login",
                "code_id": "ZbSYPn6VT0Y=",
                "checksum": "5vCchZZ6MKk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-username",
                "type": "\u0007",
                "title": "Username"
              }
            ],
            "uid": "asset-overview-platform-overview-group-github-user",
            "filters": {
              "items": {
                "2Uf6RgDeLgE=": {
                  "mql": "asset.platform == \"github-user\"",
                  "code_id": "2Uf6RgDeLgE=",
                  "checksum": "4SFYceWGB1Y=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/2Uf6RgDeLgE=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "github.repository.fullName",
                "code_id": "PygWajuszAE=",
                "checksum": "VIPdbMWYyyg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "github.repository.owner.name",
                "code_id": "8ftPHuvXqrg=",
                "checksum": "p4NXhmhtJNQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-owner",
                "type": "\u0007",
                "title": "Owner"
              },
              {
                "mql": "github.repository.description",
                "code_id": "YQcjycDD+8U=",
                "checksum": "bzO4zJZMYB8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "github.repository.createdAt",
                "code_id": "/SxVIEuxv2A=",
                "checksum": "bHwN1vWr/g0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-createdate",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "github.repository.private",
                "code_id": "FQIpyrKhrfA=",
                "checksum": "aBuYblWvQnQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-private",
                "type": "\u0004",
                "title": "Private?"
              },
              {
                "mql": "github.repository.isFork",
                "code_id": "LehTQNTmc6M=",
                "checksum": "H86tNBIJ5LU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-fork",
                "type": "\u0004",
                "title": "Fork?"
              },
              {
                "mql": "github.repository.archived",
                "code_id": "+QMwD9r4hdQ=",
                "checksum": "OEGonwTU3JY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-archived",
                "type": "\u0004",
                "title": "Archived?"
              }
            ],
            "uid": "asset-overview-platform-overview-group-github-repo",
            "filters": {
              "items": {
                "6L4Mx8/QL0Q=": {
                  "mql": "asset.platform == \"github-repo\"",
                  "code_id": "6L4Mx8/QL0Q=",
                  "checksum": "yjzej3b/ugM=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/6L4Mx8/QL0Q=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "github.organization.name",
                "code_id": "PlsiQZGf2UQ=",
                "checksum": "OHMI71yKdto=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "github.organization.description",
                "code_id": "noKEVvP5U/0=",
                "checksum": "Q4SPaAA6Bug=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "github.organization.email",
                "code_id": "tO4hRRIFLLI=",
                "checksum": "wNeYYyrQiCY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-email",
                "type": "\u0007",
                "title": "Email"
              },
              {
                "mql": "github.organization.company",
                "code_id": "ikbj0REQfVk=",
                "checksum": "9Tx8hpL4740=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-company",
                "type": "\u0007",
                "title": "Company"
              },
              {
                "mql": "github.organization.createdAt",
                "code_id": "YKZRlktDQY8=",
                "checksum": "iGGm66HMErc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-createdate",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "github.organization.twoFactorRequirementEnabled",
                "code_id": "LhS+YQb7yLM=",
                "checksum": "i/37vF7tDvQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-2fa",
                "type": "\u0004",
                "title": "Requires 2FA?"
              },
              {
                "mql": "github.organization.ownedPrivateRepos",
                "code_id": "DeKk6FN603c=",
                "checksum": "/S5KOgpjLFU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-private-repo-count",
                "type": "\u0005",
                "title": "Private repo count"
              },
              {
                "mql": "github.organization.repositories.length",
                "code_id": "/2yEsd9qf8U=",
                "checksum": "xCfRgWZDqLQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-total-repo-count",
                "type": "\u0005",
                "title": "Total repo count"
              },
              {
                "mql": "github.organization.plan.name",
                "code_id": "83ZVQtFhwAw=",
                "checksum": "2QlVDmwyn3c=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-plan",
                "type": "\n",
                "title": "Plan"
              }
            ],
            "uid": "asset-overview-platform-overview-group-github-org",
            "filters": {
              "items": {
                "XsuES+BmSSo=": {
                  "mql": "asset.platform == \"github-org\"",
                  "code_id": "XsuES+BmSSo=",
                  "checksum": "8kPojTbpSAA=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/XsuES+BmSSo=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "gitlab.group.name",
                "code_id": "Vb9cZhN0ba4=",
                "checksum": "4rkpQb1nihk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "gitlab.group.id",
                "code_id": "SQZ5l2iaV7Q=",
                "checksum": "EP4eENFxfFM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-id",
                "type": "\u0005",
                "title": "ID"
              },
              {
                "mql": "gitlab.group.path",
                "code_id": "kmGDChyTT08=",
                "checksum": "3sqOkGZPNvA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-path",
                "type": "\u0007",
                "title": "Path"
              },
              {
                "mql": "gitlab.group.description",
                "code_id": "honkze+l1NE=",
                "checksum": "/s1thh5dPfE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gitlab.group.visibility",
                "code_id": "F81h5K2nUcU=",
                "checksum": "rA/5GL+HkHo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-visibility",
                "type": "\u0007",
                "title": "Visibility"
              },
              {
                "mql": "gitlab.group.projects.length",
                "code_id": "s6PtWEG0RT8=",
                "checksum": "R/y4qzSDzig=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-count",
                "type": "\u0005",
                "title": "Total project count"
              },
              {
                "mql": "gitlab.group.webURL",
                "code_id": "GAJFpkBKM38=",
                "checksum": "44rRgNUpzjI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-weburl-gitlab-group",
                "type": "\u0007",
                "title": "Web URL"
              }
            ],
            "uid": "asset-overview-platform-overview-group-gitlab",
            "filters": {
              "items": {
                "IcMdff/OuqI=": {
                  "mql": "asset.platform == \"gitlab\" || asset.platform == \"gitlab-group\"",
                  "code_id": "IcMdff/OuqI=",
                  "checksum": "SZ+H492hBoY=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/IcMdff/OuqI=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "gitlab.project.name",
                "code_id": "7NK9MyPT87Y=",
                "checksum": "is45Nz6c5nM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "gitlab.project.id",
                "code_id": "Ld0WB+guOpc=",
                "checksum": "BchwCo3cLmQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-id",
                "type": "\u0005",
                "title": "ID"
              },
              {
                "mql": "gitlab.project.path",
                "code_id": "LJB15RQF7a4=",
                "checksum": "TiEno9MfOzc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-path",
                "type": "\u0007",
                "title": "Path"
              },
              {
                "mql": "gitlab.project.description",
                "code_id": "4SzCRXy+VIA=",
                "checksum": "zl6A+DcybR0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gitlab.project.visibility",
                "code_id": "9oQLHGXyZGw=",
                "checksum": "xUj8+OQlMsk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-visibility",
                "type": "\u0007",
                "title": "Visibility"
              },
              {
                "mql": "gitlab.project.webURL",
                "code_id": "YlA+vqtqKjM=",
                "checksum": "GAOGiAkRgbQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-weburl-gitlab-project",
                "type": "\u0007",
                "title": "Web URL"
              }
            ],
            "uid": "asset-overview-platform-overview-group-gitlab-project",
            "filters": {
              "items": {
                "RjGN9A0+dro=": {
                  "mql": "asset.platform == \"gitlab-project\"",
                  "code_id": "RjGN9A0+dro=",
                  "checksum": "v4RRn6l7nWQ=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/RjGN9A0+dro=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "slack.team.name",
                "code_id": "v0c6zj9dfzg=",
                "checksum": "go0DsscB8Us=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "slack.team.domain",
                "code_id": "xEKuclYUMLg=",
                "checksum": "glYLy15UzlQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-domain",
                "type": "\u0007",
                "title": "Domain"
              },
              {
                "mql": "slack.team.id",
                "code_id": "8F3/bE7pgJM=",
                "checksum": "6fuqyuuJVZs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "slack.users.owners.length",
                "code_id": "6E8KLSMDSL0=",
                "checksum": "FXFx7qRCMLI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-owner-count",
                "type": "\u0005",
                "title": "Owner count"
              },
              {
                "mql": "slack.users.length",
                "code_id": "zjyaVmXDFec=",
                "checksum": "96OgdnwskMs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-user-count",
                "type": "\u0005",
                "title": "User count"
              }
            ],
            "uid": "asset-overview-platform-overview-group-slack-team",
            "filters": {
              "items": {
                "eWA7Hn/4BL8=": {
                  "mql": "asset.platform == \"slack-team\"",
                  "code_id": "eWA7Hn/4BL8=",
                  "checksum": "dHug2yHi1fI=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/eWA7Hn/4BL8=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "tls.domainName",
                "code_id": "Rmk01TWEUq0=",
                "checksum": "eDGUuS+OJiA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-name",
                "type": "\u0007",
                "title": "Domain name"
              },
              {
                "mql": "tls.versions",
                "code_id": "SoRYzAa31Rc=",
                "checksum": "8VfbZRK49jo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-tls-versions",
                "type": "\u0019\u0007",
                "title": "TLS Versions"
              },
              {
                "mql": "tls.ciphers",
                "code_id": "3srnBlD/E70=",
                "checksum": "ren9nLCCh4U=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-ciphers",
                "type": "\u0019\u0007",
                "title": "TLS ciphers"
              },
              {
                "mql": "tls.certificates.first.notAfter",
                "code_id": "LDXCjpvJ8RM=",
                "checksum": "FWbXEgsVGOc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-expiration-date",
                "type": "\t",
                "title": "Certificate expiration date"
              }
            ],
            "uid": "asset-overview-platform-overview-group-domain",
            "filters": {
              "items": {
                "9eYaJPNxJRc=": {
                  "mql": "asset.platform == \"host\"",
                  "code_id": "9eYaJPNxJRc=",
                  "checksum": "yKrwpjAS8sA=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/9eYaJPNxJRc=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "microsoft.organizations.first.name",
                "code_id": "bOW82vemTqA=",
                "checksum": "jsxiiyp4KXY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "microsoft.organizations.first.id",
                "code_id": "5g+693o4T7k=",
                "checksum": "SGMQsYHn0jw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "microsoft.organizations.first.createdAt",
                "code_id": "hcv9xzGK158=",
                "checksum": "Uk4XIAPY5y8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-create-date",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "microsoft.tenantDomainName",
                "code_id": "5Lx8mGQWtMs=",
                "checksum": "C+xgogloaE4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-domain",
                "type": "\u0007",
                "title": "Domain"
              },
              {
                "mql": "microsoft.organizations.first.subscriptions.length",
                "code_id": "he4wCuu/FNk=",
                "checksum": "vzJgljiuC0I=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-subscription-count",
                "type": "\u0005",
                "title": "Subscription count"
              }
            ],
            "uid": "asset-overview-platform-overview-group-ms365",
            "filters": {
              "items": {
                "Bb9EpincTEM=": {
                  "mql": "asset.platform == \"microsoft365\"",
                  "code_id": "Bb9EpincTEM=",
                  "checksum": "0A46xwGkIJo=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Bb9EpincTEM=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "gcp.project.name",
                "code_id": "djpzP1DPCHI=",
                "checksum": "MFEJwVJD+Uo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-name",
                "type": "\u0007",
                "title": "Name"
              },
              {
                "mql": "gcp.project.id",
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007",
                "title": "Project ID"
              },
              {
                "mql": "gcp.project.number",
                "code_id": "ygTE5hJOOjo=",
                "checksum": "d9qTBofkKro=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-number",
                "type": "\u0007",
                "title": "Project number"
              },
              {
                "mql": "gcp.organization.name",
                "code_id": "S4uaf+pRihg=",
                "checksum": "YkKrQ/TtVso=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-parent-org-name",
                "type": "\u0007",
                "title": "Parent organization name"
              },
              {
                "mql": "gcp.organization.id.trim('organizations/')",
                "code_id": "9pt5I45zG5A=",
                "checksum": "GQHHZNgiKco=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-parent-org-id",
                "type": "\u0007",
                "title": "Parent organization ID"
              },
              {
                "mql": "gcp.project.parentId.trim('folders/')",
                "code_id": "/AEgAic1TCI=",
                "checksum": "8IxS2W5n9IA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-parent-folder-id",
                "type": "\u0007",
                "title": "Parent folder ID"
              },
              {
                "mql": "gcp.project.state",
                "code_id": "p9G+OHmbHt4=",
                "checksum": "TmB811tyfOo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-state",
                "type": "\u0007",
                "title": "State"
              },
              {
                "mql": "gcp.project.createTime",
                "code_id": "i8twwMT+01c=",
                "checksum": "aGKD8KL1EZI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-create-date",
                "type": "\t",
                "title": "Creation date"
              }
            ],
            "uid": "asset-overview-platform-overview-group-gcp-project",
            "filters": {
              "items": {
                "turd8YONuKg=": {
                  "mql": "asset.platform == \"gcp-project\"",
                  "code_id": "turd8YONuKg=",
                  "checksum": "8u3HOrYJTdg=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/turd8YONuKg=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.name",
                "code_id": "PSVzC3osOtY=",
                "checksum": "ZGkHSKdjMEc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-name",
                "type": "\u0007",
                "title": "Name",
                "docs": {
                  "desc": "The Azure subscription name"
                }
              },
              {
                "mql": "azure.subscription.id",
                "code_id": "g9B28j4i3YU=",
                "checksum": "jQndlDEAlqk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-id",
                "type": "\u0007",
                "title": "ID",
                "docs": {
                  "desc": "The Azure subscription ID"
                }
              },
              {
                "mql": "azure.subscription.tenantId",
                "code_id": "hKJxBEeUmoA=",
                "checksum": "BGrCuipxGkg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-tenant-id",
                "type": "\u0007",
                "title": "Tenant ID",
                "docs": {
                  "desc": "The Entra ID (Azure AD) tenant ID for the subscription"
                }
              },
              {
                "mql": "azure.subscription.tags[\"Creator\"]",
                "code_id": "HeJ7kPE638M=",
                "checksum": "i73n7yfpYcQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-creator",
                "type": "\u0007",
                "title": "Creator",
                "filters": {
                  "items": {
                    "NKWGRVMUiaU=": {
                      "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Creator\"] != null",
                      "code_id": "NKWGRVMUiaU=",
                      "checksum": "WxQOmGyHQr8=",
                      "mrn": "//policy.api.mondoo.app/filter/NKWGRVMUiaU=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "azure.subscription.tags[\"Owner\"]",
                "code_id": "Il9aWghqAUI=",
                "checksum": "8J4FVSixrMI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-owner",
                "type": "\u0007",
                "title": "Owner",
                "filters": {
                  "items": {
                    "7SMsbTMk21g=": {
                      "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Owner\"] != null",
                      "code_id": "7SMsbTMk21g=",
                      "checksum": "iJ2OOuDsDtc=",
                      "mrn": "//policy.api.mondoo.app/filter/7SMsbTMk21g=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.state",
                "code_id": "SGQ+sp8u6yY=",
                "checksum": "AkxzC/+oVas=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-state",
                "type": "\u0004",
                "title": "State",
                "docs": {
                  "desc": "The Azure subscription state (For a complete list of states, read Microsoft's [Azure subscription states documentation](https://learn.microsoft.com/en-us/azure/cost-management-billing/manage/subscription-states).)"
                }
              }
            ],
            "uid": "asset-overview-platform-overview-group-azure",
            "filters": {
              "items": {
                "I1rf3pkmKQw=": {
                  "mql": "asset.platform == \"azure\"",
                  "code_id": "I1rf3pkmKQw=",
                  "checksum": "ae1ihSeAsEY=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/I1rf3pkmKQw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "okta.organization.companyName",
                "code_id": "TS/esJ2P99U=",
                "checksum": "TovTdkEgC3w=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-company-name",
                "type": "\u0007",
                "title": "Company name"
              },
              {
                "mql": "okta.organization.id",
                "code_id": "4lHSC2vYrq0=",
                "checksum": "33aQ4KXjufw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "okta.organization.subdomain",
                "code_id": "GJ+hfh/RbkA=",
                "checksum": "acl1Lx49HjY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-subdomain",
                "type": "\u0007",
                "title": "Subdomain"
              },
              {
                "mql": "okta.organization.created",
                "code_id": "weNVSw/07bQ=",
                "checksum": "B4y7FxLauXc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-created",
                "type": "\t",
                "title": "Created"
              },
              {
                "mql": "okta.users.length",
                "code_id": "EneG2TxnGP8=",
                "checksum": "wMn+TprOxKI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-users-count",
                "type": "\u0005",
                "title": "Users count"
              },
              {
                "mql": "okta.applications.length",
                "code_id": "fFDThT0ZN/s=",
                "checksum": "8VAEZN6bGkM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-app-count",
                "type": "\u0005",
                "title": "Applications count"
              }
            ],
            "uid": "asset-overview-platform-overview-group-okta",
            "filters": {
              "items": {
                "+vAK1AM4mvk=": {
                  "mql": "asset.platform == \"okta-org\"",
                  "code_id": "+vAK1AM4mvk=",
                  "checksum": "yqb0yQAERmc=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/+vAK1AM4mvk=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "googleworkspace.users.length",
                "code_id": "RR/9XHr0SdQ=",
                "checksum": "Gbdl4IWYPso=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-google-workspace-user-count",
                "type": "\u0005",
                "title": "User count"
              },
              {
                "mql": "googleworkspace.report.users.where( security[\"isSuperAdmin\"] == true).length",
                "code_id": "70J2jbJEUsI=",
                "checksum": "e15w77Ru0B4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-google-workspace-super-admin-count",
                "type": "\u0005",
                "title": "Super admin count"
              }
            ],
            "uid": "asset-overview-platform-overview-group-google-workspace",
            "filters": {
              "items": {
                "lWdat0IAAMw=": {
                  "mql": "asset.platform == \"google-workspace\"",
                  "code_id": "lWdat0IAAMw=",
                  "checksum": "g/tO0gmxdSg=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lWdat0IAAMw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "mql": "gcp.organization.id",
                "code_id": "ongEddrXYkk=",
                "checksum": "wLaTNQ/wfxc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-org-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "gcp.organization.folders.length",
                "code_id": "YtCtMJjCcw4=",
                "checksum": "5ArScKKvnxI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-folders-count",
                "type": "\u0005",
                "title": "Folders count"
              },
              {
                "mql": "gcp.organization.projects.length",
                "code_id": "VIFak4VjZyc=",
                "checksum": "IseFSO4WR9c=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-projects-count",
                "type": "\u0005",
                "title": "Projects count"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-org",
            "filters": {
              "items": {
                "Li/m/Mk3eh0=": {
                  "mql": "asset.platform == \"gcp-org\"",
                  "code_id": "Li/m/Mk3eh0=",
                  "checksum": "b2+kdWFF/vA=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Li/m/Mk3eh0=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.project.gke.cluster.created",
                "code_id": "XgFAPL3JARw=",
                "checksum": "ZflBWYLJVy0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.project.gke.cluster.description",
                "code_id": "rA61+v56efI=",
                "checksum": "+L8eyngHgpM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-desc",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gcp.project.gke.cluster.location",
                "code_id": "rEdlsauTxQs=",
                "checksum": "zL18PQJq8ec=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "gcp.project.gke.cluster.currentMasterVersion",
                "code_id": "x85HsSuSB1k=",
                "checksum": "g59ZxDhjGeU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-version",
                "type": "\u0007",
                "title": "Cluster version"
              },
              {
                "mql": "gcp.project.gke.cluster.autopilotEnabled",
                "code_id": "mpdcZ5pDJks=",
                "checksum": "UD9IFTTk4Sc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-autopilot-enabled",
                "type": "\u0004",
                "title": "Autopilot enabled"
              },
              {
                "mql": "gcp.project.gke.cluster.network",
                "code_id": "ae7ffzTCNdg=",
                "checksum": "rMwtfmU2Xf4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-network",
                "type": "\u0007",
                "title": "Network"
              },
              {
                "mql": "gcp.project.gke.cluster.subnetwork",
                "code_id": "qUR/J6OURkc=",
                "checksum": "Gqwsfo7gmh8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-subnet",
                "type": "\u0007",
                "title": "Subnet"
              },
              {
                "mql": "gcp.project.gke.cluster.databaseEncryption['state']",
                "code_id": "KCcYXoRKLaI=",
                "checksum": "AhMMP5/E984=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-internal-endpoint",
                "type": "\n",
                "title": "Internal endpoint"
              },
              {
                "mql": "gcp.project.gke.cluster.endpoint",
                "code_id": "bu2Xdiy1aTk=",
                "checksum": "xUS40IHQHVk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-external-endpoint",
                "type": "\u0007",
                "title": "External endpoint"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-gke-cluster",
            "filters": {
              "items": {
                "wEKjALBSsDA=": {
                  "mql": "asset.platform == \"gcp-gke-cluster\"",
                  "code_id": "wEKjALBSsDA=",
                  "checksum": "4XOoipws+aU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wEKjALBSsDA=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.compute.vm.state",
                "code_id": "HK51Jfv1aZg=",
                "checksum": "CYg4ze3pARs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-state",
                "type": "\u0007",
                "title": "State"
              },
              {
                "mql": "azure.subscription.compute.vm.location",
                "code_id": "Vb/D4Lm7NZI=",
                "checksum": "7fUv2V43vd4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "azure.subscription.compute.vm.id",
                "code_id": "7ARhTY7t5c4=",
                "checksum": "msyvu/58/jk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-id",
                "type": "\u0007",
                "title": "VM ID"
              },
              {
                "mql": "azure.subscription.compute.vm.properties.hardwareProfile.vmSize",
                "code_id": "QhGVnBg4st8=",
                "checksum": "kpxklGk96vc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-size",
                "type": "\n",
                "title": "VM size"
              },
              {
                "mql": "azure.subscription.compute.vm.osDisk.properties.diskSizeGB",
                "code_id": "lEJf/sYv6hA=",
                "checksum": "mjudZM0DqV0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-disk-size-gb",
                "type": "\n",
                "title": "Disk size (GB)"
              },
              {
                "mql": "azure.subscription.compute.vm.properties.timeCreated",
                "code_id": "62sITMLzwjY=",
                "checksum": "IwKCEuN1Wu0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-created-time",
                "type": "\n",
                "title": "Created time"
              },
              {
                "mql": "azure.subscription.compute.vm.osDisk.properties.osType",
                "code_id": "izzZcf2HskU=",
                "checksum": "Yz3wLUpV+yg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-os-type",
                "type": "\n",
                "title": "OS type"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-compute-instance",
            "filters": {
              "items": {
                "VPkRSzmEtn8=": {
                  "mql": "asset.platform == \"azure-compute-vm-api\"",
                  "code_id": "VPkRSzmEtn8=",
                  "checksum": "chVclM/oEmM=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/VPkRSzmEtn8=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.sql.server.properties.state",
                "code_id": "Zj4e997SAUc=",
                "checksum": "fWdpcQ9mIHE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-state",
                "type": "\n",
                "title": "State"
              },
              {
                "mql": "azure.subscription.sql.server.location",
                "code_id": "qHOZ93anOck=",
                "checksum": "YwiVr7ta+Ko=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "azure.subscription.sql.server.properties.version",
                "code_id": "OyFu778d7po=",
                "checksum": "ea6S91jzbfs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-version",
                "type": "\n",
                "title": "Version"
              },
              {
                "mql": "azure.subscription.sql.server.properties.fullyQualifiedDomainName",
                "code_id": "Z1awjvBYtho=",
                "checksum": "Ql1hnc2rrM8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-fqdn",
                "type": "\n",
                "title": "FQDN"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-sql-server",
            "filters": {
              "items": {
                "aBpo44SiOyc=": {
                  "mql": "asset.platform == \"azure-sql-server\"",
                  "code_id": "aBpo44SiOyc=",
                  "checksum": "oFwhraJ7eV8=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/aBpo44SiOyc=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.postgreSql.flexibleServer.properties.state",
                "code_id": "jRQBVRezOhQ=",
                "checksum": "RKgWcQBOiew=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-state",
                "type": "\n",
                "title": "State"
              },
              {
                "mql": "azure.subscription.postgreSql.flexibleServer.location",
                "code_id": "iS69QOLgS8o=",
                "checksum": "qIAlYNhr96s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "azure.subscription.postgreSql.flexibleServer.properties.version",
                "code_id": "Ay/gY3vqCjc=",
                "checksum": "6Z9lXWZSOlM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-major-version",
                "type": "\n",
                "title": "Major version"
              },
              {
                "mql": "azure.subscription.postgreSqlService.flexibleServer.properties.storage.storageSizeGB",
                "code_id": "ZrY93yg7E/I=",
                "checksum": "eIyXsmm3zXU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-storage-size",
                "type": "\n",
                "title": "Storage size (GB)"
              },
              {
                "mql": "azure.subscription.postgreSqlService.flexibleServer.properties.fullyQualifiedDomainName",
                "code_id": "R3/O2I+PddY=",
                "checksum": "sxDz+MPgdyo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-fqdn",
                "type": "\n",
                "title": "FQDN"
              },
              {
                "mql": "azure.subscription.postgreSqlService.flexibleServer.properties.highAvailability.mode",
                "code_id": "novnzeXHdWE=",
                "checksum": "H6FR40jmd98=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-high-availability",
                "type": "\n",
                "title": "High Availability"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-postgresql-flexible-server",
            "filters": {
              "items": {
                "MUAwfx81KHc=": {
                  "mql": "asset.platform == \"azure-postgresql-flexible-server\"",
                  "code_id": "MUAwfx81KHc=",
                  "checksum": "Tq525V2Gz9Q=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/MUAwfx81KHc=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.mySql.flexibleServer.properties.state",
                "code_id": "yo0h6I8EbFk=",
                "checksum": "/RZ1nHBsmhQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-state",
                "type": "\n",
                "title": "State"
              },
              {
                "mql": "azure.subscription.mySql.flexibleServer.location",
                "code_id": "9d0iKvbmSFc=",
                "checksum": "wKU4Vz4ChZA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "azure.subscription.mySql.flexibleServer.properties.version",
                "code_id": "z+cgBHMjEwE=",
                "checksum": "3ZJrQ0TF1UE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-major-version",
                "type": "\n",
                "title": "Major version"
              },
              {
                "mql": "azure.subscription.mySql.flexibleServer.properties.storage.storageSizeGB",
                "code_id": "uVpgUgAm4gQ=",
                "checksum": "PAHUHDPxEzI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-storage-size",
                "type": "\n",
                "title": "Storage size (GB)"
              },
              {
                "mql": "azure.subscription.mySql.flexibleServer.properties.fullyQualifiedDomainName",
                "code_id": "HAq7G3n23SY=",
                "checksum": "XE+tcAhl/Ms=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-fqdn",
                "type": "\n",
                "title": "FQDN"
              },
              {
                "mql": "azure.subscription.mySql.flexibleServer.properties.highAvailability.mode",
                "code_id": "kzbPbdbe6xg=",
                "checksum": "R+1D4xlScYM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-high-availability",
                "type": "\n",
                "title": "High Availability"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-mysql-flexible-server",
            "filters": {
              "items": {
                "y+DcS8y50ac=": {
                  "mql": "asset.platform == \"azure-mysql-flexible-server\"",
                  "code_id": "y+DcS8y50ac=",
                  "checksum": "/CH0XSsTb0Y=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/y+DcS8y50ac=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.storage.account.properties.StatusOfPrimary",
                "code_id": "Zfn9UrDOgII=",
                "checksum": "c7ga8G+K6gU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account",
                "type": "\n",
                "title": "State"
              },
              {
                "mql": "azure.subscription.storage.account.location",
                "code_id": "ErN+Jxpas9s=",
                "checksum": "j/HH9UMmKWk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "azure.subscription.storage.account.properties.CreationTime",
                "code_id": "8Iu4/QE3/1s=",
                "checksum": "EfgD3WkFTQ4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-creationtime",
                "type": "\n",
                "title": "Creation time"
              },
              {
                "mql": "azure.subscription.storage.account.properties.PrimaryEndpoints.blob",
                "code_id": "WXChw2aJy2w=",
                "checksum": "35hqswzo+jw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-primaryblobendpoint",
                "type": "\n",
                "title": "Primary blob endpoint"
              },
              {
                "mql": "azure.subscription.storage.account.properties.AccessTier",
                "code_id": "YPku4EZVMZM=",
                "checksum": "dqveOuelVrA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-accesstier",
                "type": "\n",
                "title": "Access tier"
              },
              {
                "mql": "azure.subscription.storage.account.properties.AllowBlobPublicAccess",
                "code_id": "dBDELbUEZVA=",
                "checksum": "XXXSz8nc2x8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-public",
                "type": "\n",
                "title": "Public"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-storage-account",
            "filters": {
              "items": {
                "BmvmwwxN7CI=": {
                  "mql": "asset.platform == \"azure-storage-account\"",
                  "code_id": "BmvmwwxN7CI=",
                  "checksum": "rT4JnqEX++o=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/BmvmwwxN7CI=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.storage.account.container.properties.StatusOfPrimary",
                "code_id": "HBm6e/pUGK4=",
                "checksum": "YsvF94XE3yU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-state",
                "type": "\n",
                "title": "State"
              },
              {
                "mql": "azure.subscription.storage.account.container.properties.PrimaryLocation",
                "code_id": "kUsqD/K5Rz8=",
                "checksum": "IweEfObmgsw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-location",
                "type": "\n",
                "title": "Location"
              },
              {
                "mql": "azure.subscription.storage.account.container.properties.CreationTime",
                "code_id": "mzBFyya4Pw8=",
                "checksum": "goMEY9hY73s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-creationtime",
                "type": "\n",
                "title": "Creation time"
              },
              {
                "mql": "azure.subscription.storage.account.container.properties.PrimaryEndpoints.blob",
                "code_id": "gjJMu9gAHm0=",
                "checksum": "q8ePREr2eLU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-primaryblobendpoint",
                "type": "\n",
                "title": "Primary blob endpoint"
              },
              {
                "mql": "azure.subscription.storage.account.container.properties.AccessTier",
                "code_id": "Kj1RoHRF9SU=",
                "checksum": "cQs+nTgabZk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-accesstier",
                "type": "\n",
                "title": "Access tier"
              },
              {
                "mql": "azure.subscription.storage.account.container.properties.AllowBlobPublicAccess",
                "code_id": "uLh6tNYCWm4=",
                "checksum": "F5ipDvBXZYw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-public",
                "type": "\n",
                "title": "Public"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-storage-container",
            "filters": {
              "items": {
                "0n1ch8Jsk8w=": {
                  "mql": "asset.platform == \"azure-storage-container\"",
                  "code_id": "0n1ch8Jsk8w=",
                  "checksum": "2WBk1FSJotc=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0n1ch8Jsk8w=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.keyVault.vault.location",
                "code_id": "eEvVKujKjs8=",
                "checksum": "yRSuvvy93dc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-keyvault-vault-location",
                "type": "\u0007",
                "title": "Location"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-keyvault-vault",
            "filters": {
              "items": {
                "7gmQt2xyyek=": {
                  "mql": "asset.platform == \"azure-keyvault-vault\"",
                  "code_id": "7gmQt2xyyek=",
                  "checksum": "OjiVXxoBUww=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/7gmQt2xyyek=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "PSVzC3osOtY=",
                "checksum": "7f5CiMEcvJk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
                "type": "\u0007"
              },
              {
                "mql": "azure.subscription.network.securityGroup.location",
                "code_id": "q07Q+WoYHzQ=",
                "checksum": "BizBwX4GJlg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-network-secgroup-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "azure.subscription.network.securityGroup.securityRules.length",
                "code_id": "3GZ+WEilj80=",
                "checksum": "F4uRAs0dMkw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-network-secgroup-rules-count",
                "type": "\u0005",
                "title": "Security rules count"
              },
              {
                "mql": "azure.subscription.network.securityGroup.id",
                "code_id": "oazgoMECr0Q=",
                "checksum": "p1l5XM/RaZk=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-network-secgroup-id",
                "type": "\u0007",
                "title": "Security Group ID"
              }
            ],
            "uid": "asset-overview-platform-overview-azure-network-secgroup",
            "filters": {
              "items": {
                "XhGWd/sNmOc=": {
                  "mql": "asset.platform == \"azure-network-security-group\"",
                  "code_id": "XhGWd/sNmOc=",
                  "checksum": "r9O5rPQ6hvc=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/XhGWd/sNmOc=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "uid": "asset-overview-gcp-project-id",
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-storage-bucket",
            "filters": {
              "items": {
                "wDTgvEMsna0=": {
                  "mql": "asset.platform == \"gcp-storage-bucket\"",
                  "code_id": "wDTgvEMsna0=",
                  "checksum": "uZi2ZsBgc88=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wDTgvEMsna0=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-gkecluster",
            "filters": {
              "items": {
                "wEKjALBSsDA=": {
                  "mql": "asset.platform == \"gcp-gke-cluster\"",
                  "code_id": "wEKjALBSsDA=",
                  "checksum": "4XOoipws+aU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wEKjALBSsDA=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-computeinstance",
            "filters": {
              "items": {
                "wPJsO/U89DU=": {
                  "mql": "asset.platform == \"gcp-compute-instance\"",
                  "code_id": "wPJsO/U89DU=",
                  "checksum": "WG6mbjZUJ74=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wPJsO/U89DU=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-image",
            "filters": {
              "items": {
                "7NvxkDWMVQQ=": {
                  "mql": "asset.platform == \"gcp-compute-image\"",
                  "code_id": "7NvxkDWMVQQ=",
                  "checksum": "xjf1yBXvmDU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/7NvxkDWMVQQ=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-computenetwork",
            "filters": {
              "items": {
                "0xGx5RDAF4o=": {
                  "mql": "asset.platform == \"gcp-compute-network\"",
                  "code_id": "0xGx5RDAF4o=",
                  "checksum": "F0EwRKbvGs4=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0xGx5RDAF4o=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-computesubnetwork",
            "filters": {
              "items": {
                "/4iD720uH3E=": {
                  "mql": "asset.platform == \"gcp-compute-subnetwork\"",
                  "code_id": "/4iD720uH3E=",
                  "checksum": "C4oKCvgeBdM=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter//4iD720uH3E=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-firewall",
            "filters": {
              "items": {
                "Uo1APC/g5Ss=": {
                  "mql": "asset.platform == \"gcp-compute-firewall\"",
                  "code_id": "Uo1APC/g5Ss=",
                  "checksum": "A/D/xG7cp9w=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Uo1APC/g5Ss=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "uid": "asset-overview-gcp-project-id-bqdataset-table",
            "filters": {
              "items": {
                "pclrCp0Hy+c=": {
                  "mql": "asset.platform == \"gcp-bigquery-dataset\"",
                  "code_id": "pclrCp0Hy+c=",
                  "checksum": "GIfQIUrCm2g=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/pclrCp0Hy+c=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Project ID"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.project.compute.instance.created",
                "code_id": "Hqb3R3aCFtQ=",
                "checksum": "mT7TCDywXzA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.project.compute.instance.hostname",
                "code_id": "GXrZSbTTgio=",
                "checksum": "1F3jBFiTmnY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-hostname",
                "type": "\u0007",
                "title": "Hostname"
              },
              {
                "mql": "gcp.project.compute.instance.networkInterfaces.first.networkIP",
                "code_id": "GSeMjHEqBXk=",
                "checksum": "PcGA4NYbXdE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-privateIp",
                "type": "\n",
                "title": "Private IP"
              },
              {
                "mql": "gcp.project.compute.instance.networkInterfaces.first.accessConfigs.first.natIP",
                "code_id": "dRrxGKEuOJM=",
                "checksum": "arlXrJ++BEw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-publicIp",
                "type": "\n",
                "title": "Public IP"
              },
              {
                "mql": "gcp.project.compute.instance.id",
                "code_id": "x06YJViyCGU=",
                "checksum": "lPZJqccm/KQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-id",
                "type": "\u0007",
                "title": "Instance ID"
              },
              {
                "mql": "gcp.project.compute.instance.projectId",
                "code_id": "1/qmDMtkVyY=",
                "checksum": "wyyk2KmlNeg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-project-id",
                "type": "\u0007",
                "title": "Project ID"
              },
              {
                "mql": "gcp.project.compute.instance.description",
                "code_id": "K5KkW08raxo=",
                "checksum": "bW8NUmOEv94=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gcp.project.compute.instance.zone.name",
                "code_id": "pu0Fcc58/Vg=",
                "checksum": "b7qCjesLgJU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-zone",
                "type": "\u0007",
                "title": "Zone"
              },
              {
                "mql": "gcp.project.compute.instance.status",
                "code_id": "BLrgaQZWDqE=",
                "checksum": "8gToLRuCHcY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-status",
                "type": "\u0007",
                "title": "Status"
              },
              {
                "mql": "gcp.project.compute.instance.cpuPlatform",
                "code_id": "2006rdJvBPE=",
                "checksum": "Xd4pCJaPBeE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-cpu-platform",
                "type": "\u0007",
                "title": "CPU platform"
              },
              {
                "mql": "gcp.project.compute.instance.enableDisplay",
                "code_id": "DzA5Z5g3qgU=",
                "checksum": "VYIJAgxG2GQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-display-enabled",
                "type": "\u0004",
                "title": "Display Enabled"
              },
              {
                "mql": "gcp.project.compute.instance.machineType.name",
                "code_id": "24qeyN52Mnc=",
                "checksum": "iBciqz2qeHc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-machinetype",
                "type": "\u0007",
                "title": "Machine Type"
              },
              {
                "mql": "gcp.project.compute.instance.deletionProtection",
                "code_id": "jd4Jr5DjnOQ=",
                "checksum": "IOwbs11ZrQs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-deletion-protection",
                "type": "\u0004",
                "title": "Deletion Protection"
              },
              {
                "mql": "gcp.project.compute.instance.enableVtpm",
                "code_id": "sFxJHKjmdOY=",
                "checksum": "bz/OUvWM9bA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-vtpm",
                "type": "\u0004",
                "title": "Shielded Instance vTPM"
              },
              {
                "mql": "gcp.project.compute.instance.enableSecureBoot",
                "code_id": "okdt4PK71G0=",
                "checksum": "rTSn2e7xCms=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-secure-boot",
                "type": "\u0004",
                "title": "Shielded Instance secure boot"
              },
              {
                "mql": "gcp.project.compute.instance.enableIntegrityMonitoring",
                "code_id": "QXPiToJiNBQ=",
                "checksum": "oDIGonMmFrU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-integrity-monitoring",
                "type": "\u0004",
                "title": "Shielded Instance integrity monitoring"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-compute-instance",
            "filters": {
              "items": {
                "wPJsO/U89DU=": {
                  "mql": "asset.platform == \"gcp-compute-instance\"",
                  "code_id": "wPJsO/U89DU=",
                  "checksum": "WG6mbjZUJ74=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wPJsO/U89DU=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.project.compute.image.created",
                "code_id": "x7yg+kKwzaQ=",
                "checksum": "BidfPp7dPSI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.project.compute.image.id",
                "code_id": "rfxZobckaUE=",
                "checksum": "Jaq3CP+zkcE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-id",
                "type": "\u0007",
                "title": "ID"
              },
              {
                "mql": "gcp.project.compute.image.description",
                "code_id": "RkR9Jh8mjYY=",
                "checksum": "+yWJeAeS3XM=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gcp.project.compute.image.architecture",
                "code_id": "yZqn367yKKQ=",
                "checksum": "0vnRNVP+jMw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-arch",
                "type": "\u0007",
                "title": "Architecture"
              },
              {
                "mql": "gcp.project.compute.image.family",
                "code_id": "PEIZpOFHamY=",
                "checksum": "pMxo0pOEv4o=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-family",
                "type": "\u0007",
                "title": "Family"
              },
              {
                "mql": "gcp.project.compute.image.diskSizeGb",
                "code_id": "Q8cstWucOnI=",
                "checksum": "Uu7uwPTm/4U=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-disk-size",
                "type": "\u0005",
                "title": "Disk size (GB)"
              },
              {
                "mql": "gcp.project.compute.image.status",
                "code_id": "uoSUvb4IZCs=",
                "checksum": "MWab2ffNcg0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-status",
                "type": "\u0007",
                "title": "Status"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-compute-image",
            "filters": {
              "items": {
                "7NvxkDWMVQQ=": {
                  "mql": "asset.platform == \"gcp-compute-image\"",
                  "code_id": "7NvxkDWMVQQ=",
                  "checksum": "xjf1yBXvmDU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/7NvxkDWMVQQ=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.project.compute.network.created",
                "code_id": "4Ri+8LnLvLQ=",
                "checksum": "u7F10qhhQ/0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.compute.network.description",
                "code_id": "9iPWHdXNXh4=",
                "checksum": "yx+rrSTYaww=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-description",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gcp.compute.network.id",
                "code_id": "dBySsP39IxE=",
                "checksum": "M1T8ZNEOH6I=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-network-id",
                "type": "\u0007",
                "title": "Network ID"
              },
              {
                "mql": "gcp.compute.network.gatewayIPv4",
                "code_id": "zAbT2bUYLAM=",
                "checksum": "oyUgpnMYXXY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-ipv4-gateway",
                "type": "\u0007",
                "title": "IPv4 gateway"
              },
              {
                "mql": "gcp.compute.network.routingMode",
                "code_id": "wi7OTH7Q59M=",
                "checksum": "j1u7VutQbag=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-routing-mode",
                "type": "\u0007",
                "title": "Routing mode"
              },
              {
                "mql": "gcp.compute.network.enableUlaInternalIpv6",
                "code_id": "7tt0UVDfxOk=",
                "checksum": "Oauroi6H55o=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-ula-insternal-ipv6",
                "type": "\u0004",
                "title": "ULA internal IPv6"
              },
              {
                "mql": "gcp.compute.network.autoCreateSubnetworks",
                "code_id": "tQtxWquQe7A=",
                "checksum": "hA1+UBeMLms=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-auto-create-subnets",
                "type": "\u0004",
                "title": "Auto create subnetworks"
              },
              {
                "mql": "gcp.compute.network.subnetworks.length",
                "code_id": "pF0R8rpKvAY=",
                "checksum": "3ZOVK3GS1iQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-subnetwork-count",
                "type": "\u0005",
                "title": "Subnetwork count"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-compute-network",
            "filters": {
              "items": {
                "0xGx5RDAF4o=": {
                  "mql": "asset.platform == \"gcp-compute-network\"",
                  "code_id": "0xGx5RDAF4o=",
                  "checksum": "F0EwRKbvGs4=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0xGx5RDAF4o=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.project.compute.subnetwork.created",
                "code_id": "hVzpjHIoAsg=",
                "checksum": "jCAUsgDtq4U=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.project.compute.subnetwork.region.name",
                "code_id": "K5d91FOUPgE=",
                "checksum": "LyZLWwIeZHo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-region",
                "type": "\u0007",
                "title": "Region"
              },
              {
                "mql": "gcp.project.compute.subnetwork.description",
                "code_id": "xPoP3iOyqgQ=",
                "checksum": "+SP+Zo3iXlI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-desc",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gcp.project.compute.subnetwork.gatewayAddress",
                "code_id": "UfTuTw+mMUQ=",
                "checksum": "YPEAb/acneU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-gateway-addr",
                "type": "\u0007",
                "title": "Gateway address"
              },
              {
                "mql": "gcp.project.compute.subnetwork.ipCidrRange",
                "code_id": "yED1certCYI=",
                "checksum": "ltWiNZOuyFo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-ipv4-cidr",
                "type": "\u0007",
                "title": "IPv4 CIDR range"
              },
              {
                "mql": "gcp.project.compute.subnetwork.ipv6CidrRange",
                "code_id": "klGcb9Nvo4w=",
                "checksum": "9OKm8HOIdAY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-ipv6-cidr",
                "type": "\u0007",
                "title": "IPv6 CIDR range"
              },
              {
                "mql": "gcp.project.compute.subnetwork.internalIpv6Prefix",
                "code_id": "o9ZbugIlriQ=",
                "checksum": "Bq+lQnoFGKo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-internal-ipv6",
                "type": "\u0007",
                "title": "Internal IPv6 prefix"
              },
              {
                "mql": "gcp.project.compute.subnetwork.internalIpv6Prefix",
                "code_id": "o9ZbugIlriQ=",
                "checksum": "MtDLpduunJU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-ipv6-accesstype",
                "type": "\u0007",
                "title": "IPv6 access type"
              },
              {
                "mql": "gcp.project.compute.subnetwork.enableFlowLogs",
                "code_id": "UMZPBJ65POs=",
                "checksum": "ZLZn/MiK5ok=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-flowlogs",
                "type": "\u0004",
                "title": "Flow Logs"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-compute-subnetwork",
            "filters": {
              "items": {
                "/4iD720uH3E=": {
                  "mql": "asset.platform == \"gcp-compute-subnetwork\"",
                  "code_id": "/4iD720uH3E=",
                  "checksum": "C4oKCvgeBdM=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter//4iD720uH3E=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.project.compute.firewall.created",
                "code_id": "wJTFkT/mE1Q=",
                "checksum": "LuimbDQrvJ8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.compute.firewall.description",
                "code_id": "jggA1JCTDHY=",
                "checksum": "ZNk6/CI4ztA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-desc",
                "type": "\u0007",
                "title": "Description"
              },
              {
                "mql": "gcp.project.compute.firewall.disabled != false",
                "code_id": "xDdfQfEODZk=",
                "checksum": "4h0/1x3HAn4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-enabled",
                "type": "\u0004",
                "title": "Enabled"
              },
              {
                "mql": "gcp.project.compute.firewall.direction",
                "code_id": "A24Ehmy+evc=",
                "checksum": "LNiZQBuovnE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-direction",
                "type": "\u0007",
                "title": "Direction"
              },
              {
                "mql": "gcp.project.compute.firewall.priority",
                "code_id": "isoZdlKqKvo=",
                "checksum": "fYASKZ3vYTA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-priority",
                "type": "\u0005",
                "title": "Priority"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-compute-firewall",
            "filters": {
              "items": {
                "Uo1APC/g5Ss=": {
                  "mql": "asset.platform == \"gcp-compute-firewall\"",
                  "code_id": "Uo1APC/g5Ss=",
                  "checksum": "A/D/xG7cp9w=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Uo1APC/g5Ss=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.storage.bucket.created",
                "code_id": "7p+Op2PlHJ8=",
                "checksum": "mxE9i+2Toso=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.storage.bucket.location",
                "code_id": "Q1pn7hP8urc=",
                "checksum": "YSbJ+Re5icE=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "gcp.storage.bucket.locationType",
                "code_id": "DSK63ZZ+JuM=",
                "checksum": "mkfxEVYXTZ8=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-loc-type",
                "type": "\u0007",
                "title": "Location type"
              },
              {
                "mql": "gcp.storage.bucket.storageClass",
                "code_id": "l134iaJPkGI=",
                "checksum": "nZCGDBcRR9s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-storageclass",
                "type": "\u0007",
                "title": "Storage class"
              },
              {
                "mql": "gcp.storage.bucket.iamConfiguration['publicAccessPrevention']",
                "code_id": "YsXW2SIsTdc=",
                "checksum": "b7Vjh4Mauzw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-public-acc",
                "type": "\n",
                "title": "Public access prevention"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-storage-bucket",
            "filters": {
              "items": {
                "wDTgvEMsna0=": {
                  "mql": "asset.platform == \"gcp-storage-bucket\"",
                  "code_id": "wDTgvEMsna0=",
                  "checksum": "uZi2ZsBgc88=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wDTgvEMsna0=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "code_id": "ra7hARXep/A=",
                "checksum": "urd/TjeESyI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
                "type": "\u0007"
              },
              {
                "mql": "gcp.project.bigqueryService.dataset.created",
                "code_id": "G6A8QrL4Bqo=",
                "checksum": "lEbZ+CWwc1s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-table-created",
                "type": "\t",
                "title": "Creation date"
              },
              {
                "mql": "gcp.project.bigqueryService.dataset.location",
                "code_id": "y2bPgu+jkJw=",
                "checksum": "hjl3fqWxSEQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-location",
                "type": "\u0007",
                "title": "Location"
              },
              {
                "mql": "gcp.project.bigqueryService.dataset.models.length",
                "code_id": "ad1sq1l96Rg=",
                "checksum": "gdS7HViWjj4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-model-count",
                "type": "\u0005",
                "title": "Model count"
              },
              {
                "mql": "gcp.project.bigqueryService.dataset.routines.length",
                "code_id": "Wk066sdQ4QA=",
                "checksum": "jfcjQQ8pFkQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-routine-count",
                "type": "\u0005",
                "title": "Routine count"
              }
            ],
            "uid": "asset-overview-platform-overview-gcp-bigquery-dataset",
            "filters": {
              "items": {
                "pclrCp0Hy+c=": {
                  "mql": "asset.platform == \"gcp-bigquery-dataset\"",
                  "code_id": "pclrCp0Hy+c=",
                  "checksum": "GIfQIUrCm2g=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/pclrCp0Hy+c=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "mql": "oci.tenancy.name",
                "code_id": "p2ETBa5O8JM=",
                "checksum": "+FtvmwlQzgI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-name",
                "type": "\u0007",
                "title": "Tenancy name"
              },
              {
                "mql": "oci.tenancy.id",
                "code_id": "FFbaYZ1AKj0=",
                "checksum": "SuqRLSEAXvw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-id",
                "type": "\u0007",
                "title": "Tenancy ID"
              },
              {
                "mql": "oci.tenancy.description",
                "code_id": "J8De17JQOCo=",
                "checksum": "TRkBhHFvwTg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-description",
                "type": "\u0007",
                "title": "Tenancy description"
              },
              {
                "mql": "oci.tenancy.retentionPeriod",
                "code_id": "3qBFyQwFa/I=",
                "checksum": "mHf9MrbsT3I=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-retention",
                "type": "\t",
                "title": "Retention period"
              },
              {
                "mql": "oci.regions.where(isHomeRegion == true).first.name",
                "code_id": "ieMaFxo6nsY=",
                "checksum": "Lj8eC/nGEoY=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-homeregion",
                "type": "\u0007",
                "title": "Home region"
              }
            ],
            "uid": "asset-overview-platform-overview-oci",
            "filters": {
              "items": {
                "wgy370oVn+k=": {
                  "mql": "asset.platform == \"oci\"",
                  "code_id": "wgy370oVn+k=",
                  "checksum": "xxx/+oVqmEw=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wgy370oVn+k=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "mql": "terraform.settings.requiredProviders.values.map(_['source'])",
                "code_id": "wdnAJaq4uUQ=",
                "checksum": "GaUAHNsc/xA=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-hcl-version",
                "type": "\u0019\n",
                "title": "Terraform providers"
              },
              {
                "mql": "if ( terraform.resources.length == 0 ) {\n  return []\n} else {\n  return terraform.resources.map(nameLabel).unique\n}\n",
                "code_id": "c7iDSdBtGmc=",
                "checksum": "bfH+YnrhqUs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-hcl-resources",
                "type": "\u0019\u0007",
                "title": "Terraform resources"
              },
              {
                "mql": "terraform.modules.map(_.source + \"@\" + _.version)",
                "code_id": "MCEaVdhNkYE=",
                "checksum": "bKn1ae2FZWo=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-hcl-modules",
                "type": "\u0019\u0007",
                "title": "Terraform Modules"
              }
            ],
            "uid": "asset-overview-platform-overview-terraform-hcl",
            "filters": {
              "items": {
                "GY9f1oFntuQ=": {
                  "mql": "asset.platform == \"terraform-hcl\"",
                  "code_id": "GY9f1oFntuQ=",
                  "checksum": "9BcBEvUxUT4=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/GY9f1oFntuQ=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "mql": "terraform.plan.terraformVersion",
                "code_id": "YovkbZ4777o=",
                "checksum": "NKJRO9AjpLI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-plan-terraform-version",
                "type": "\u0007",
                "title": "Terraform version"
              },
              {
                "mql": "terraform.plan.resourceChanges.map(providerName).unique",
                "code_id": "j1k4AP9Ltq4=",
                "checksum": "dXxqbGeTSrc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-plan-providers-called",
                "type": "\u0019\u0007",
                "title": "Terraform providers"
              },
              {
                "mql": "terraform.plan.resourceChanges.map(type).unique",
                "code_id": "o4b2UDY0/uM=",
                "checksum": "/6V8X934nIc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-plan-terraform-resources",
                "type": "\u0019\u0007",
                "title": "Terraform resources"
              }
            ],
            "uid": "asset-overview-platform-overview-terraform-plan",
            "filters": {
              "items": {
                "wrdzoVwkGEs=": {
                  "mql": "asset.platform == \"terraform-plan\"",
                  "code_id": "wrdzoVwkGEs=",
                  "checksum": "RpK5ZbH7uNU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wrdzoVwkGEs=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "mql": "shodan.host.isp",
                "code_id": "dlp7PkeG7ps=",
                "checksum": "iKkk20e+rh0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-isp",
                "type": "\u0007",
                "title": "ISP"
              },
              {
                "mql": "shodan.host.asn",
                "code_id": "9tHqctMJK4s=",
                "checksum": "3PfPSvZQDBQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-asn",
                "type": "\u0007",
                "title": "ASN"
              },
              {
                "mql": "shodan.host.ports.length",
                "code_id": "rFD/eT3pRIM=",
                "checksum": "AJUY1622bCg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-port-count",
                "type": "\u0005",
                "title": "Open port count"
              },
              {
                "mql": "shodan.host.vulnerabilities.length",
                "code_id": "eB7vXmcSDqY=",
                "checksum": "cSVDnyyTYE4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-vuln-count",
                "type": "\u0005",
                "title": "Vulnerability count"
              }
            ],
            "uid": "asset-overview-platform-overview-shodans-host",
            "filters": {
              "items": {
                "a6sWxVAvpsc=": {
                  "mql": "asset.platform == \"shodan-host\"",
                  "code_id": "a6sWxVAvpsc=",
                  "checksum": "bJO2RpkKqH8=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/a6sWxVAvpsc=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "PHQtQ+7tw64=",
                "checksum": "6yHHXln1zoc=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
                "type": "\u0007"
              },
              {
                "mql": "shodan.domain.subdomains.length",
                "code_id": "9UZ0vXH1ADE=",
                "checksum": "vmDQykJ27MI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-subdomain-count",
                "type": "\u0005",
                "title": "Subdomain count"
              }
            ],
            "uid": "asset-overview-platform-overview-shodans-domain",
            "filters": {
              "items": {
                "ZR1xnfg3H2I=": {
                  "mql": "asset.platform == \"shodan-domain\"",
                  "code_id": "ZR1xnfg3H2I=",
                  "checksum": "ikrAh1O4Y8A=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/ZR1xnfg3H2I=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "code_id": "pIimpRGhyBc=",
                "checksum": "mp6J1CYO2Gs=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
                "type": "\u0007"
              },
              {
                "code_id": "MMPvbEnxkzM=",
                "checksum": "nARQ1JrIdj0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
                "type": "\u0007"
              },
              {
                "checksum": "g7Q/d4J7nUU=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-hostname",
                "title": "Hostname",
                "variants": [
                  {
                    "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-hostname"
                  },
                  {
                    "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-hostname"
                  },
                  {
                    "mrn": "//policy.api.mondoo.app/queries/mondoo-platform-overview-arista-hostname"
                  },
                  {
                    "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-private-hostname"
                  }
                ]
              },
              {
                "mql": "vsphere.about[\"osType\"]",
                "code_id": "JMkPEikiY8s=",
                "checksum": "6wdGX74/S6s=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-vsphere-architecture",
                "type": "\n",
                "title": "vSphere architecture",
                "filters": {
                  "items": {
                    "dNrOPq6iZ3Y=": {
                      "mql": "asset.platform == \"vmware-vsphere\"",
                      "code_id": "dNrOPq6iZ3Y=",
                      "checksum": "ICn3D7kQtOI=",
                      "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "vsphere.about[\"fullName\"]",
                "code_id": "0SHISIgNiQw=",
                "checksum": "OEKgYSwvl8k=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-vsphere-product-name",
                "type": "\n",
                "title": "vSphere product name",
                "filters": {
                  "items": {
                    "dNrOPq6iZ3Y=": {
                      "mql": "asset.platform == \"vmware-vsphere\"",
                      "code_id": "dNrOPq6iZ3Y=",
                      "checksum": "ICn3D7kQtOI=",
                      "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "vsphere.about[\"instanceUuid\"]",
                "code_id": "WYEV6M6hpZs=",
                "checksum": "2uvyaRXLa/E=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-vsphere-uuid",
                "type": "\n",
                "title": "vSphere UUID",
                "filters": {
                  "items": {
                    "dNrOPq6iZ3Y=": {
                      "mql": "asset.platform == \"vmware-vsphere\"",
                      "code_id": "dNrOPq6iZ3Y=",
                      "checksum": "ICn3D7kQtOI=",
                      "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "esxi.host.properties[\"summary\"][\"config\"][\"product\"][\"osType\"]",
                "code_id": "+X2vKTNckXg=",
                "checksum": "Re9f8gK+Hys=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-architecture",
                "type": "\n",
                "title": "ESXi architecture",
                "filters": {
                  "items": {
                    "UiVKwjsOOos=": {
                      "mql": "asset.platform == \"vmware-esxi\"",
                      "code_id": "UiVKwjsOOos=",
                      "checksum": "qoChczLbaHI=",
                      "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "esxi.host.properties[\"hardware\"][\"biosInfo\"][\"biosVersion\"]",
                "code_id": "uequlntj9B0=",
                "checksum": "23cMLXPEAEI=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-bios-version",
                "type": "\n",
                "title": "ESXi BIOS version",
                "filters": {
                  "items": {
                    "UiVKwjsOOos=": {
                      "mql": "asset.platform == \"vmware-esxi\"",
                      "code_id": "UiVKwjsOOos=",
                      "checksum": "qoChczLbaHI=",
                      "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "esxi.host.properties[\"summary\"][\"config\"][\"product\"][\"fullName\"]",
                "code_id": "fbNA895S2jQ=",
                "checksum": "1g4oRU7j8yg=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-product-name",
                "type": "\n",
                "title": "ESXi product name",
                "filters": {
                  "items": {
                    "UiVKwjsOOos=": {
                      "mql": "asset.platform == \"vmware-esxi\"",
                      "code_id": "UiVKwjsOOos=",
                      "checksum": "qoChczLbaHI=",
                      "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "esxi.host.properties[\"hardware\"][\"systemInfo\"][\"uuid\"]",
                "code_id": "DDY9s3dZGgM=",
                "checksum": "DlCrwnPoIcw=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-uuid",
                "type": "\n",
                "title": "ESXi UUID",
                "filters": {
                  "items": {
                    "UiVKwjsOOos=": {
                      "mql": "asset.platform == \"vmware-esxi\"",
                      "code_id": "UiVKwjsOOos=",
                      "checksum": "qoChczLbaHI=",
                      "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "arista.eos.version.modelName",
                "code_id": "3jvc38Qzs4Q=",
                "checksum": "/PaEpQWvGb4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-arista-model",
                "type": "\n",
                "title": "Arista model",
                "filters": {
                  "items": {
                    "EaABSliBEFU=": {
                      "mql": "asset.platform == \"arista-eos\"",
                      "code_id": "EaABSliBEFU=",
                      "checksum": "bl4d4XL5WoQ=",
                      "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "arista.eos.fqdn",
                "code_id": "R7C7yp7QnwU=",
                "checksum": "/JePvSJo+RQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-arista-fqdn",
                "type": "\u0007",
                "title": "FQDN",
                "filters": {
                  "items": {
                    "EaABSliBEFU=": {
                      "mql": "asset.platform == \"arista-eos\"",
                      "code_id": "EaABSliBEFU=",
                      "checksum": "bl4d4XL5WoQ=",
                      "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "arista.eos.version.serialNumber",
                "code_id": "t2ZKgf17SO8=",
                "checksum": "aeb0FTKwg4w=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-arista-serial",
                "type": "\n",
                "title": "Serial",
                "filters": {
                  "items": {
                    "EaABSliBEFU=": {
                      "mql": "asset.platform == \"arista-eos\"",
                      "code_id": "EaABSliBEFU=",
                      "checksum": "bl4d4XL5WoQ=",
                      "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
                      "type": "\u0004"
                    }
                  }
                }
              }
            ],
            "uid": "asset-overview-platform-overview-group",
            "filters": {
              "items": {
                "KFFGCoaNXEA=": {
                  "mql": "[\n  \"aws-cloudtrail-trail\",\n  \"aws-cloudwatch-loggroup\",\n  \"aws-dynamodb-table\",\n  \"aws-ebs-snapshot\",\n  \"aws-ebs-volume\",\n  \"aws-ec2-instance\",\n  \"aws-ec2-snapshot\",\n  \"aws-ec2-volume\",\n  \"aws-ecr-image\",\n  \"aws-ecs-container\",\n  \"aws-efs-filesystem\",\n  \"aws-elb-loadbalancer\",\n  \"aws-es-domain\",\n  \"aws-gateway-restapi\",\n  \"aws-iam-group\",\n  \"aws-iam-user\",\n  \"aws-kms-key\",\n  \"aws-lambda-function\",\n  \"aws-rds-dbinstance\",\n  \"aws-redshift-cluster\",\n  \"aws-s3-bucket\",\n  \"aws-sagemaker-notebookinstance\",\n  \"aws-security-group\",\n  \"aws-vpc\",\n  \"aws\",\n  \"azure\",\n  \"google-workspace\",\n  \"k8s-cluster\",\n  \"k8s-cronjob\",\n  \"k8s-daemonset\",\n  \"k8s-deployment\",\n  \"k8s-ingress\",\n  \"k8s-job\",\n  \"k8s-namespace\",\n  \"k8s-pod\",\n  \"k8s-replicaset\",\n  \"k8s-statefulset\",\n  \"macos\",\n  \"oci\",\n  \"okta-org\",\n  \"aix\"\n].none(asset.platform)\nasset.family.none('linux')\nasset.family.none('windows')\n",
                  "code_id": "KFFGCoaNXEA=",
                  "checksum": "qfX+vaUQINI=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/KFFGCoaNXEA=",
                  "type": "\u0001"
                }
              }
            },
            "title": "Platform overview"
          },
          {
            "queries": [
              {
                "mql": "mondoo.version",
                "code_id": "8PjpfkfABtA=",
                "checksum": "r1dx86o8rf0=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-clientversion",
                "type": "\u0007",
                "title": "Mondoo client version",
                "docs": {
                  "desc": "This version of cnspec that was used to scan this asset"
                }
              }
            ],
            "uid": "asset-overview-scan-overview-group",
            "filters": {
              "items": {
                "lcBOE/v/1Mw=": {
                  "mql": "true",
                  "code_id": "lcBOE/v/1Mw=",
                  "checksum": "6/RDovsMLEU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lcBOE/v/1Mw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Scan overview"
          },
          {
            "queries": [
              {
                "checksum": "kozCrV+f4p4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-labels-k8s"
              }
            ],
            "uid": "asset-overview-labels-k8s-group",
            "filters": {
              "items": {
                "lcBOE/v/1Mw=": {
                  "mql": "true",
                  "code_id": "lcBOE/v/1Mw=",
                  "checksum": "6/RDovsMLEU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lcBOE/v/1Mw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "K8S labels"
          },
          {
            "queries": [
              {
                "checksum": "l0p2BMf0BxQ=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-labels-gcp"
              }
            ],
            "uid": "asset-overview-labels-gcp-group",
            "filters": {
              "items": {
                "lcBOE/v/1Mw=": {
                  "mql": "true",
                  "code_id": "lcBOE/v/1Mw=",
                  "checksum": "6/RDovsMLEU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lcBOE/v/1Mw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "GCP labels"
          },
          {
            "queries": [
              {
                "checksum": "2YwWaa+pPc4=",
                "mrn": "//policy.api.mondoo.app/queries/asset-overview-tags"
              }
            ],
            "uid": "asset-overview-tags-group",
            "filters": {
              "items": {
                "lcBOE/v/1Mw=": {
                  "mql": "true",
                  "code_id": "lcBOE/v/1Mw=",
                  "checksum": "6/RDovsMLEU=",
                  "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lcBOE/v/1Mw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "AWS tags"
          }
        ],
        "scoring_system": "data only",
        "local_content_checksum": "iix2zz4AuEM=",
        "graph_content_checksum": "6hq89hXzyRs=",
        "local_execution_checksum": "8pEX8X/lcP4=",
        "graph_execution_checksum": "u2wY+SDuHRw=",
        "computed_filters": {
          "items": {
            "+JnRYnF2Eq4=": {
              "mql": "asset.platform == \"aws-gateway-restapi\"",
              "code_id": "+JnRYnF2Eq4=",
              "checksum": "10D4LUkKqjs=",
              "mrn": "//policy.api.mondoo.app/filter/+JnRYnF2Eq4=",
              "type": "\u0004"
            },
            "+dxosqhWfaA=": {
              "mql": "asset.platform == \"aws-efs-filesystem\"",
              "code_id": "+dxosqhWfaA=",
              "checksum": "lg1z+X19ABE=",
              "mrn": "//policy.api.mondoo.app/filter/+dxosqhWfaA=",
              "type": "\u0004"
            },
            "+vAK1AM4mvk=": {
              "mql": "asset.platform == \"okta-org\"",
              "code_id": "+vAK1AM4mvk=",
              "checksum": "yqb0yQAERmc=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/+vAK1AM4mvk=",
              "type": "\u0004"
            },
            "/4iD720uH3E=": {
              "mql": "asset.platform == \"gcp-compute-subnetwork\"",
              "code_id": "/4iD720uH3E=",
              "checksum": "C4oKCvgeBdM=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter//4iD720uH3E=",
              "type": "\u0004"
            },
            "0n1ch8Jsk8w=": {
              "mql": "asset.platform == \"azure-storage-container\"",
              "code_id": "0n1ch8Jsk8w=",
              "checksum": "2WBk1FSJotc=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0n1ch8Jsk8w=",
              "type": "\u0004"
            },
            "0nucc9YlORU=": {
              "mql": "asset.platform == \"aws-sagemaker-notebookinstance\"",
              "code_id": "0nucc9YlORU=",
              "checksum": "RVjedaKfbIQ=",
              "mrn": "//policy.api.mondoo.app/filter/0nucc9YlORU=",
              "type": "\u0004"
            },
            "0nvpSmfgEbc=": {
              "mql": "asset.name != \"\"",
              "code_id": "0nvpSmfgEbc=",
              "checksum": "ki87ZqnyZzg=",
              "mrn": "//policy.api.mondoo.app/filter/0nvpSmfgEbc=",
              "type": "\u0004"
            },
            "0temxiiOySw=": {
              "mql": "asset.platform == \"aws-ecr-image\"",
              "code_id": "0temxiiOySw=",
              "checksum": "ymMLEMk0JT0=",
              "mrn": "//policy.api.mondoo.app/filter/0temxiiOySw=",
              "type": "\u0004"
            },
            "0xGx5RDAF4o=": {
              "mql": "asset.platform == \"gcp-compute-network\"",
              "code_id": "0xGx5RDAF4o=",
              "checksum": "F0EwRKbvGs4=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/0xGx5RDAF4o=",
              "type": "\u0004"
            },
            "2/RKPdovsIM=": {
              "mql": "asset.family.contains(_ == 'linux')",
              "code_id": "2/RKPdovsIM=",
              "checksum": "ztMG4Y4LX2k=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/2/RKPdovsIM=",
              "type": "\u0004"
            },
            "2Uf6RgDeLgE=": {
              "mql": "asset.platform == \"github-user\"",
              "code_id": "2Uf6RgDeLgE=",
              "checksum": "4SFYceWGB1Y=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/2Uf6RgDeLgE=",
              "type": "\u0004"
            },
            "3DfQtXum8PI=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.publicHostname.length != 0\n",
              "code_id": "3DfQtXum8PI=",
              "checksum": "/0irabM9Tdg=",
              "mrn": "//policy.api.mondoo.app/filter/3DfQtXum8PI=",
              "type": "\u0001"
            },
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "zkwNCLYgBxs=",
              "mrn": "//policy.api.mondoo.app/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            },
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"",
              "code_id": "3z170zdo7Ac=",
              "checksum": "bxUrAUBGM1g=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            },
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "Hac4KTGb+60=",
              "mrn": "//policy.api.mondoo.app/filter/5qRCZazhsy4=",
              "type": "\u0004"
            },
            "6L4Mx8/QL0Q=": {
              "mql": "asset.platform == \"github-repo\"",
              "code_id": "6L4Mx8/QL0Q=",
              "checksum": "yjzej3b/ugM=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/6L4Mx8/QL0Q=",
              "type": "\u0004"
            },
            "7NvxkDWMVQQ=": {
              "mql": "asset.platform == \"gcp-compute-image\"",
              "code_id": "7NvxkDWMVQQ=",
              "checksum": "ZvhqKzCqo8I=",
              "mrn": "//policy.api.mondoo.app/filter/7NvxkDWMVQQ=",
              "type": "\u0004"
            },
            "7SMsbTMk21g=": {
              "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Owner\"] != null",
              "code_id": "7SMsbTMk21g=",
              "checksum": "iJ2OOuDsDtc=",
              "mrn": "//policy.api.mondoo.app/filter/7SMsbTMk21g=",
              "type": "\u0004"
            },
            "7gmQt2xyyek=": {
              "mql": "asset.platform == \"azure-keyvault-vault\"",
              "code_id": "7gmQt2xyyek=",
              "checksum": "OjiVXxoBUww=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/7gmQt2xyyek=",
              "type": "\u0004"
            },
            "7vmuyqQ5FgA=": {
              "mql": "asset.kind == 'baremetal'\nmachine.baseboard.product != \"\"\n",
              "code_id": "7vmuyqQ5FgA=",
              "checksum": "gt3LNyC8sxM=",
              "mrn": "//policy.api.mondoo.app/filter/7vmuyqQ5FgA=",
              "type": "\u0001"
            },
            "8iGUBh79IzA=": {
              "mql": "asset.platform == \"aws-lambda-function\"",
              "code_id": "8iGUBh79IzA=",
              "checksum": "MEtPdsd2CEg=",
              "mrn": "//policy.api.mondoo.app/filter/8iGUBh79IzA=",
              "type": "\u0004"
            },
            "9eYaJPNxJRc=": {
              "mql": "asset.platform == \"host\"",
              "code_id": "9eYaJPNxJRc=",
              "checksum": "yKrwpjAS8sA=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/9eYaJPNxJRc=",
              "type": "\u0004"
            },
            "Bb9EpincTEM=": {
              "mql": "asset.platform == \"microsoft365\"",
              "code_id": "Bb9EpincTEM=",
              "checksum": "0A46xwGkIJo=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Bb9EpincTEM=",
              "type": "\u0004"
            },
            "BcOyXN5MJ9w=": {
              "mql": "asset.kind == 'baremetal'\nmachine.chassis.serial != \"\"\n",
              "code_id": "BcOyXN5MJ9w=",
              "checksum": "eMKs1XhdGrY=",
              "mrn": "//policy.api.mondoo.app/filter/BcOyXN5MJ9w=",
              "type": "\u0001"
            },
            "BmvmwwxN7CI=": {
              "mql": "asset.platform == \"azure-storage-account\"",
              "code_id": "BmvmwwxN7CI=",
              "checksum": "rT4JnqEX++o=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/BmvmwwxN7CI=",
              "type": "\u0004"
            },
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "EB8f04Z3nJk=",
              "mrn": "//policy.api.mondoo.app/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            },
            "CNIfmlvOXUg=": {
              "mql": "asset.platform == \"aws-rds-dbcluster\"",
              "code_id": "CNIfmlvOXUg=",
              "checksum": "dlFMx6QAVvw=",
              "mrn": "//policy.api.mondoo.app/filter/CNIfmlvOXUg=",
              "type": "\u0004"
            },
            "CmBsKqBM1Vs=": {
              "mql": "asset.platform == \"aws-ec2-snapshot\" || asset.platform == \"aws-ebs-snapshot\"",
              "code_id": "CmBsKqBM1Vs=",
              "checksum": "rb+p4NTgf5c=",
              "mrn": "//policy.api.mondoo.app/filter/CmBsKqBM1Vs=",
              "type": "\u0004"
            },
            "EaABSliBEFU=": {
              "mql": "asset.platform == \"arista-eos\"",
              "code_id": "EaABSliBEFU=",
              "checksum": "bl4d4XL5WoQ=",
              "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
              "type": "\u0004"
            },
            "EcZ+12oxrPM=": {
              "mql": "aws.account.aliases.first != null",
              "code_id": "EcZ+12oxrPM=",
              "checksum": "DFUkgNXX3KQ=",
              "mrn": "//policy.api.mondoo.app/filter/EcZ+12oxrPM=",
              "type": "\u0004"
            },
            "GGmsRv0eF+o=": {
              "mql": "asset.platform == \"aws-iam-group\"",
              "code_id": "GGmsRv0eF+o=",
              "checksum": "X9DV+pmPNaM=",
              "mrn": "//policy.api.mondoo.app/filter/GGmsRv0eF+o=",
              "type": "\u0004"
            },
            "GIKTqfvfI7E=": {
              "mql": "cloud.provider.upcase == \"UNKNOWN\"\nasset.kind == \"virtualmachine\"\nos.hypervisor\n",
              "code_id": "GIKTqfvfI7E=",
              "checksum": "/IAeUPqRn8A=",
              "mrn": "//policy.api.mondoo.app/filter/GIKTqfvfI7E=",
              "type": "\u0001"
            },
            "GY9f1oFntuQ=": {
              "mql": "asset.platform == \"terraform-hcl\"",
              "code_id": "GY9f1oFntuQ=",
              "checksum": "9BcBEvUxUT4=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/GY9f1oFntuQ=",
              "type": "\u0004"
            },
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "KOK0JR7SAsE=",
              "mrn": "//policy.api.mondoo.app/filter/Gahk63XA/8A=",
              "type": "\u0004"
            },
            "Gd7SIsIOQlc=": {
              "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsModel'] != \"\"\n",
              "code_id": "Gd7SIsIOQlc=",
              "checksum": "+pjdv9oTIgg=",
              "mrn": "//policy.api.mondoo.app/filter/Gd7SIsIOQlc=",
              "type": "\u0001"
            },
            "HkeKGQEOnC8=": {
              "mql": "asset.labels[\"windows.mondoo.com/product-type\"] != \"0\"",
              "code_id": "HkeKGQEOnC8=",
              "checksum": "WVx7kpQUhfY=",
              "mrn": "//policy.api.mondoo.app/filter/HkeKGQEOnC8=",
              "type": "\u0004"
            },
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "ae1ihSeAsEY=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            },
            "IcMdff/OuqI=": {
              "mql": "asset.platform == \"gitlab\" || asset.platform == \"gitlab-group\"",
              "code_id": "IcMdff/OuqI=",
              "checksum": "SZ+H492hBoY=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/IcMdff/OuqI=",
              "type": "\u0004"
            },
            "ItMukH2UOZA=": {
              "mql": "asset.platform == \"aws-cloudwatch-loggroup\"",
              "code_id": "ItMukH2UOZA=",
              "checksum": "vFidmal67RM=",
              "mrn": "//policy.api.mondoo.app/filter/ItMukH2UOZA=",
              "type": "\u0004"
            },
            "J9lH/zmjDcQ=": {
              "mql": "aws.cloudtrail.trail.snsTopicARN != \"\"",
              "code_id": "J9lH/zmjDcQ=",
              "checksum": "ZXFtZxOdIpg=",
              "mrn": "//policy.api.mondoo.app/filter/J9lH/zmjDcQ=",
              "type": "\u0004"
            },
            "KFFGCoaNXEA=": {
              "mql": "[\n  \"aws-cloudtrail-trail\",\n  \"aws-cloudwatch-loggroup\",\n  \"aws-dynamodb-table\",\n  \"aws-ebs-snapshot\",\n  \"aws-ebs-volume\",\n  \"aws-ec2-instance\",\n  \"aws-ec2-snapshot\",\n  \"aws-ec2-volume\",\n  \"aws-ecr-image\",\n  \"aws-ecs-container\",\n  \"aws-efs-filesystem\",\n  \"aws-elb-loadbalancer\",\n  \"aws-es-domain\",\n  \"aws-gateway-restapi\",\n  \"aws-iam-group\",\n  \"aws-iam-user\",\n  \"aws-kms-key\",\n  \"aws-lambda-function\",\n  \"aws-rds-dbinstance\",\n  \"aws-redshift-cluster\",\n  \"aws-s3-bucket\",\n  \"aws-sagemaker-notebookinstance\",\n  \"aws-security-group\",\n  \"aws-vpc\",\n  \"aws\",\n  \"azure\",\n  \"google-workspace\",\n  \"k8s-cluster\",\n  \"k8s-cronjob\",\n  \"k8s-daemonset\",\n  \"k8s-deployment\",\n  \"k8s-ingress\",\n  \"k8s-job\",\n  \"k8s-namespace\",\n  \"k8s-pod\",\n  \"k8s-replicaset\",\n  \"k8s-statefulset\",\n  \"macos\",\n  \"oci\",\n  \"okta-org\",\n  \"aix\"\n].none(asset.platform)\nasset.family.none('linux')\nasset.family.none('windows')\n",
              "code_id": "KFFGCoaNXEA=",
              "checksum": "qfX+vaUQINI=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/KFFGCoaNXEA=",
              "type": "\u0001"
            },
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "Ek1SiCIjFuw=",
              "mrn": "//policy.api.mondoo.app/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            },
            "Li/m/Mk3eh0=": {
              "mql": "asset.platform == \"gcp-org\"",
              "code_id": "Li/m/Mk3eh0=",
              "checksum": "b2+kdWFF/vA=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Li/m/Mk3eh0=",
              "type": "\u0004"
            },
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "wtVP5/7gT3A=",
              "mrn": "//policy.api.mondoo.app/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            },
            "M4FgTdRaB8A=": {
              "mql": "asset.platform == \"aws-ecs-container\"",
              "code_id": "M4FgTdRaB8A=",
              "checksum": "TbIX8JR8Wjk=",
              "mrn": "//policy.api.mondoo.app/filter/M4FgTdRaB8A=",
              "type": "\u0004"
            },
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            },
            "MUAwfx81KHc=": {
              "mql": "asset.platform == \"azure-postgresql-flexible-server\"",
              "code_id": "MUAwfx81KHc=",
              "checksum": "Tq525V2Gz9Q=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/MUAwfx81KHc=",
              "type": "\u0004"
            },
            "MrxXb13XuN4=": {
              "mql": "asset.kind == 'baremetal'\n",
              "code_id": "MrxXb13XuN4=",
              "checksum": "OPwe5LQG5IE=",
              "mrn": "//policy.api.mondoo.app/filter/MrxXb13XuN4=",
              "type": "\u0004"
            },
            "N1flM1XSV/Y=": {
              "mql": "[\n  \"k8s-pod\",\n  \"k8s-job\",\n  \"k8s-cronjob\",\n  \"k8s-replicaset\",\n  \"k8s-deployment\",\n  \"k8s-statefulset\",\n  \"k8s-daemonset\",\n  \"k8s-ingress\",\n  \"k8s-namespace\",\n  \"k8s-service\"\n].contains(asset.platform)\n",
              "code_id": "N1flM1XSV/Y=",
              "checksum": "K2i5iOl3oK4=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/N1flM1XSV/Y=",
              "type": "\u0004"
            },
            "N4jy8Xn7NvY=": {
              "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsManufacturer'] != \"\"\n",
              "code_id": "N4jy8Xn7NvY=",
              "checksum": "ZkpRpiIZdIw=",
              "mrn": "//policy.api.mondoo.app/filter/N4jy8Xn7NvY=",
              "type": "\u0001"
            },
            "NKWGRVMUiaU=": {
              "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Creator\"] != null",
              "code_id": "NKWGRVMUiaU=",
              "checksum": "WxQOmGyHQr8=",
              "mrn": "//policy.api.mondoo.app/filter/NKWGRVMUiaU=",
              "type": "\u0004"
            },
            "OITnYRAA4Lw=": {
              "mql": "asset.kind != \"\"",
              "code_id": "OITnYRAA4Lw=",
              "checksum": "nTtGCysRmXw=",
              "mrn": "//policy.api.mondoo.app/filter/OITnYRAA4Lw=",
              "type": "\u0004"
            },
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "H9U/uiOPQcs=",
              "mrn": "//policy.api.mondoo.app/filter/QFF/R18/81w=",
              "type": "\u0004"
            },
            "RjGN9A0+dro=": {
              "mql": "asset.platform == \"gitlab-project\"",
              "code_id": "RjGN9A0+dro=",
              "checksum": "v4RRn6l7nWQ=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/RjGN9A0+dro=",
              "type": "\u0004"
            },
            "RsbXPPme1wg=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"",
              "code_id": "RsbXPPme1wg=",
              "checksum": "/tyZDG+JmEY=",
              "mrn": "//policy.api.mondoo.app/filter/RsbXPPme1wg=",
              "type": "\u0004"
            },
            "SDwUhCi/rQQ=": {
              "mql": "asset.platform == \"aws-es-domain\"",
              "code_id": "SDwUhCi/rQQ=",
              "checksum": "kcqTZZ8RFYo=",
              "mrn": "//policy.api.mondoo.app/filter/SDwUhCi/rQQ=",
              "type": "\u0004"
            },
            "UiVKwjsOOos=": {
              "mql": "asset.platform == \"vmware-esxi\"",
              "code_id": "UiVKwjsOOos=",
              "checksum": "qoChczLbaHI=",
              "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
              "type": "\u0004"
            },
            "Uo1APC/g5Ss=": {
              "mql": "asset.platform == \"gcp-compute-firewall\"",
              "code_id": "Uo1APC/g5Ss=",
              "checksum": "A/D/xG7cp9w=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/Uo1APC/g5Ss=",
              "type": "\u0004"
            },
            "VPkRSzmEtn8=": {
              "mql": "asset.platform == \"azure-compute-vm-api\"",
              "code_id": "VPkRSzmEtn8=",
              "checksum": "chVclM/oEmM=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/VPkRSzmEtn8=",
              "type": "\u0004"
            },
            "VQwFP0mL4gc=": {
              "mql": "aws.lambda.function.vpcConfig.length \u003e 0",
              "code_id": "VQwFP0mL4gc=",
              "checksum": "pDGml3JaCu0=",
              "mrn": "//policy.api.mondoo.app/filter/VQwFP0mL4gc=",
              "type": "\u0004"
            },
            "X8q+Gj2b/fY=": {
              "mql": "asset.platform == \"macos\"",
              "code_id": "X8q+Gj2b/fY=",
              "checksum": "HRPaGVmAAkg=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/X8q+Gj2b/fY=",
              "type": "\u0004"
            },
            "XWZLRzDTtCI=": {
              "mql": "aws.cloudwatch.loggroup.kmsKey != null",
              "code_id": "XWZLRzDTtCI=",
              "checksum": "rGYQGe35+Vg=",
              "mrn": "//policy.api.mondoo.app/filter/XWZLRzDTtCI=",
              "type": "\u0004"
            },
            "XhGWd/sNmOc=": {
              "mql": "asset.platform == \"azure-network-security-group\"",
              "code_id": "XhGWd/sNmOc=",
              "checksum": "r9O5rPQ6hvc=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/XhGWd/sNmOc=",
              "type": "\u0004"
            },
            "XsuES+BmSSo=": {
              "mql": "asset.platform == \"github-org\"",
              "code_id": "XsuES+BmSSo=",
              "checksum": "8kPojTbpSAA=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/XsuES+BmSSo=",
              "type": "\u0004"
            },
            "YhGWafznrIo=": {
              "mql": "asset.platform == \"aws-elb-loadbalancer\"",
              "code_id": "YhGWafznrIo=",
              "checksum": "Grg6RQGhQ8o=",
              "mrn": "//policy.api.mondoo.app/filter/YhGWafznrIo=",
              "type": "\u0004"
            },
            "ZR1xnfg3H2I=": {
              "mql": "asset.platform == \"shodan-domain\"",
              "code_id": "ZR1xnfg3H2I=",
              "checksum": "ikrAh1O4Y8A=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/ZR1xnfg3H2I=",
              "type": "\u0004"
            },
            "a3Uu1Qp7bpw=": {
              "mql": "asset.platform == \"aix\"",
              "code_id": "a3Uu1Qp7bpw=",
              "checksum": "8q0qPoTMK+s=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/a3Uu1Qp7bpw=",
              "type": "\u0004"
            },
            "a6sWxVAvpsc=": {
              "mql": "asset.platform == \"shodan-host\"",
              "code_id": "a6sWxVAvpsc=",
              "checksum": "bJO2RpkKqH8=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/a6sWxVAvpsc=",
              "type": "\u0004"
            },
            "aBpo44SiOyc=": {
              "mql": "asset.platform == \"azure-sql-server\"",
              "code_id": "aBpo44SiOyc=",
              "checksum": "oFwhraJ7eV8=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/aBpo44SiOyc=",
              "type": "\u0004"
            },
            "aoQq5hIlrdc=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.publicIpv4.any()\n",
              "code_id": "aoQq5hIlrdc=",
              "checksum": "6DaQ/SmdWds=",
              "mrn": "//policy.api.mondoo.app/filter/aoQq5hIlrdc=",
              "type": "\u0001"
            },
            "b/T7K7dsnXs=": {
              "mql": "asset.family.contains(_ == 'windows')",
              "code_id": "b/T7K7dsnXs=",
              "checksum": "4cxsY/aSvmE=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/b/T7K7dsnXs=",
              "type": "\u0004"
            },
            "cHDjRc20JOo=": {
              "mql": "asset.build != \"\"",
              "code_id": "cHDjRc20JOo=",
              "checksum": "Fe+HxLL7Udo=",
              "mrn": "//policy.api.mondoo.app/filter/cHDjRc20JOo=",
              "type": "\u0004"
            },
            "cPC5mN127Kg=": {
              "mql": "asset.platform == \"aws-ec2-instance\"",
              "code_id": "cPC5mN127Kg=",
              "checksum": "ypDkzqrbvNQ=",
              "mrn": "//policy.api.mondoo.app/filter/cPC5mN127Kg=",
              "type": "\u0004"
            },
            "cjMP/TXpW3s=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.privateIpv4.any()\n",
              "code_id": "cjMP/TXpW3s=",
              "checksum": "bH0klFPe2KY=",
              "mrn": "//policy.api.mondoo.app/filter/cjMP/TXpW3s=",
              "type": "\u0001"
            },
            "dNrOPq6iZ3Y=": {
              "mql": "asset.platform == \"vmware-vsphere\"",
              "code_id": "dNrOPq6iZ3Y=",
              "checksum": "ICn3D7kQtOI=",
              "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
              "type": "\u0004"
            },
            "eTqruXhu7T4=": {
              "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "eTqruXhu7T4=",
              "checksum": "IVEHesmRA4M=",
              "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
              "type": "\u0001"
            },
            "eWA7Hn/4BL8=": {
              "mql": "asset.platform == \"slack-team\"",
              "code_id": "eWA7Hn/4BL8=",
              "checksum": "dHug2yHi1fI=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/eWA7Hn/4BL8=",
              "type": "\u0004"
            },
            "ep4o4JpLn/g=": {
              "mql": "asset.platform == \"aws-vpc\"",
              "code_id": "ep4o4JpLn/g=",
              "checksum": "ATIDRUmB40M=",
              "mrn": "//policy.api.mondoo.app/filter/ep4o4JpLn/g=",
              "type": "\u0004"
            },
            "ewMgcOZrkmI=": {
              "mql": "asset.family.contains(_ == 'unix')\nasset.kind != 'container-image'\n",
              "code_id": "ewMgcOZrkmI=",
              "checksum": "yhFbqhwno1M=",
              "mrn": "//policy.api.mondoo.app/filter/ewMgcOZrkmI=",
              "type": "\u0001"
            },
            "fkjI6ZKFDMU=": {
              "mql": "asset.platform == \"aws-dynamodb-table\"",
              "code_id": "fkjI6ZKFDMU=",
              "checksum": "rZBWcPvkzhk=",
              "mrn": "//policy.api.mondoo.app/filter/fkjI6ZKFDMU=",
              "type": "\u0004"
            },
            "hJQQ2aVQDgw=": {
              "mql": "asset.platform == \"k8s-cluster\"",
              "code_id": "hJQQ2aVQDgw=",
              "checksum": "UYM8LOPJS7U=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/hJQQ2aVQDgw=",
              "type": "\u0004"
            },
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "9f/IRS839vc=",
              "mrn": "//policy.api.mondoo.app/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            },
            "jzQMFuDxQus=": {
              "mql": "asset.arch != \"\"",
              "code_id": "jzQMFuDxQus=",
              "checksum": "W9cM8/XfmGg=",
              "mrn": "//policy.api.mondoo.app/filter/jzQMFuDxQus=",
              "type": "\u0004"
            },
            "lQAFhFMIHTo=": {
              "mql": "asset.platform == \"aws-iam-user\"",
              "code_id": "lQAFhFMIHTo=",
              "checksum": "/38ZQesWjSU=",
              "mrn": "//policy.api.mondoo.app/filter/lQAFhFMIHTo=",
              "type": "\u0004"
            },
            "lWdat0IAAMw=": {
              "mql": "asset.platform == \"google-workspace\"",
              "code_id": "lWdat0IAAMw=",
              "checksum": "g/tO0gmxdSg=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lWdat0IAAMw=",
              "type": "\u0004"
            },
            "lcBOE/v/1Mw=": {
              "mql": "true",
              "code_id": "lcBOE/v/1Mw=",
              "checksum": "6/RDovsMLEU=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/lcBOE/v/1Mw=",
              "type": "\u0004"
            },
            "nmfXjdG/9PA=": {
              "mql": "asset.kind == 'baremetal'\nmachine.baseboard.manufacturer != \"\"\n",
              "code_id": "nmfXjdG/9PA=",
              "checksum": "rCDDrPpdvi8=",
              "mrn": "//policy.api.mondoo.app/filter/nmfXjdG/9PA=",
              "type": "\u0001"
            },
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"",
              "code_id": "obFZpPtvU1c=",
              "checksum": "2z9ykiIq8hg=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/obFZpPtvU1c=",
              "type": "\u0004"
            },
            "pclrCp0Hy+c=": {
              "mql": "asset.platform == \"gcp-bigquery-dataset\"",
              "code_id": "pclrCp0Hy+c=",
              "checksum": "WGwu1ncZKTo=",
              "mrn": "//policy.api.mondoo.app/filter/pclrCp0Hy+c=",
              "type": "\u0004"
            },
            "q0blueS0Elw=": {
              "mql": "mondoo.capabilities.containsNone(['run-command'])\nasset.kind != 'baremetal'\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "q0blueS0Elw=",
              "checksum": "EsEkX0m0kCw=",
              "mrn": "//policy.api.mondoo.app/filter/q0blueS0Elw=",
              "type": "\u0001"
            },
            "qcjTHhgiY8I=": {
              "mql": "asset.platform == \"aws-cloudtrail-trail\"",
              "code_id": "qcjTHhgiY8I=",
              "checksum": "ipnU6CV9DsI=",
              "mrn": "//policy.api.mondoo.app/filter/qcjTHhgiY8I=",
              "type": "\u0004"
            },
            "sGKyqpiAJwo=": {
              "mql": "asset.version != \"\"",
              "code_id": "sGKyqpiAJwo=",
              "checksum": "uzMnYVk/m+8=",
              "mrn": "//policy.api.mondoo.app/filter/sGKyqpiAJwo=",
              "type": "\u0004"
            },
            "sVUqp81M5BQ=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.privateHostname.length != 0\n",
              "code_id": "sVUqp81M5BQ=",
              "checksum": "FWhC+tbxNrY=",
              "mrn": "//policy.api.mondoo.app/filter/sVUqp81M5BQ=",
              "type": "\u0001"
            },
            "so47OTA+9gQ=": {
              "mql": "asset.platform == \"k8s-namespace\"",
              "code_id": "so47OTA+9gQ=",
              "checksum": "yB20l3KRvtM=",
              "mrn": "//policy.api.mondoo.app/filter/so47OTA+9gQ=",
              "type": "\u0004"
            },
            "t2QzcgpdIbI=": {
              "mql": "asset.platform == \"aws-redshift-cluster\"",
              "code_id": "t2QzcgpdIbI=",
              "checksum": "IAfexHb6TOI=",
              "mrn": "//policy.api.mondoo.app/filter/t2QzcgpdIbI=",
              "type": "\u0004"
            },
            "t3xbgkDA4XI=": {
              "mql": "aws.lambda.function.dlqTargetArn != \"\"",
              "code_id": "t3xbgkDA4XI=",
              "checksum": "8LwFEV2m668=",
              "mrn": "//policy.api.mondoo.app/filter/t3xbgkDA4XI=",
              "type": "\u0004"
            },
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            },
            "vLnOtXTQbss=": {
              "mql": "asset.platform == \"aws-eks-cluster\"",
              "code_id": "vLnOtXTQbss=",
              "checksum": "tvP1yZmC8aE=",
              "mrn": "//policy.api.mondoo.app/filter/vLnOtXTQbss=",
              "type": "\u0004"
            },
            "vn9Qq1qu38c=": {
              "mql": "asset.platform == \"aws-kms-key\"",
              "code_id": "vn9Qq1qu38c=",
              "checksum": "oW0og/ZIF8w=",
              "mrn": "//policy.api.mondoo.app/filter/vn9Qq1qu38c=",
              "type": "\u0004"
            },
            "wDTgvEMsna0=": {
              "mql": "asset.platform == \"gcp-storage-bucket\"",
              "code_id": "wDTgvEMsna0=",
              "checksum": "uVwk47SfQc4=",
              "mrn": "//policy.api.mondoo.app/filter/wDTgvEMsna0=",
              "type": "\u0004"
            },
            "wEKjALBSsDA=": {
              "mql": "asset.platform == \"gcp-gke-cluster\"",
              "code_id": "wEKjALBSsDA=",
              "checksum": "4XOoipws+aU=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wEKjALBSsDA=",
              "type": "\u0004"
            },
            "wPJsO/U89DU=": {
              "mql": "asset.platform == \"gcp-compute-instance\"",
              "code_id": "wPJsO/U89DU=",
              "checksum": "SM6uu4BJ32E=",
              "mrn": "//policy.api.mondoo.app/filter/wPJsO/U89DU=",
              "type": "\u0004"
            },
            "wgLoyB/qbks=": {
              "mql": "asset.platform == \"aws-ec2-volume\" || asset.platform == \"aws-ebs-volume\"",
              "code_id": "wgLoyB/qbks=",
              "checksum": "DWffPewLqQw=",
              "mrn": "//policy.api.mondoo.app/filter/wgLoyB/qbks=",
              "type": "\u0004"
            },
            "wgy370oVn+k=": {
              "mql": "asset.platform == \"oci\"",
              "code_id": "wgy370oVn+k=",
              "checksum": "xxx/+oVqmEw=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wgy370oVn+k=",
              "type": "\u0004"
            },
            "wrdzoVwkGEs=": {
              "mql": "asset.platform == \"terraform-plan\"",
              "code_id": "wrdzoVwkGEs=",
              "checksum": "RpK5ZbH7uNU=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/wrdzoVwkGEs=",
              "type": "\u0004"
            },
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "74un3Jja6uY=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            },
            "y+DcS8y50ac=": {
              "mql": "asset.platform == \"azure-mysql-flexible-server\"",
              "code_id": "y+DcS8y50ac=",
              "checksum": "/CH0XSsTb0Y=",
              "mrn": "//policy.api.mondoo.app/policies/asset-overview/filter/y+DcS8y50ac=",
              "type": "\u0004"
            },
            "yPkFUe7jchw=": {
              "mql": "aws.cloudtrail.trail.kmsKey != null",
              "code_id": "yPkFUe7jchw=",
              "checksum": "eil5eGsvieE=",
              "mrn": "//policy.api.mondoo.app/filter/yPkFUe7jchw=",
              "type": "\u0004"
            },
            "yfA15ol5mmc=": {
              "mql": "asset.platform == \"aws-security-group\"",
              "code_id": "yfA15ol5mmc=",
              "checksum": "Zk7DBjmFo+4=",
              "mrn": "//policy.api.mondoo.app/filter/yfA15ol5mmc=",
              "type": "\u0004"
            },
            "z/U7UiKzbXM=": {
              "mql": "asset.platform == \"k8s-service\"",
              "code_id": "z/U7UiKzbXM=",
              "checksum": "HKShLnIjAJU=",
              "mrn": "//policy.api.mondoo.app/filter/z/U7UiKzbXM=",
              "type": "\u0004"
            },
            "zT7M2Ge1gZo=": {
              "mql": "asset.platform == \"aws-ebs-snapshot\" || asset.platform == \"aws-ec2-snapshot\"",
              "code_id": "zT7M2Ge1gZo=",
              "checksum": "5wLYnpTxIv8=",
              "mrn": "//policy.api.mondoo.app/filter/zT7M2Ge1gZo=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 545,
          "total_count": 545
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-aws",
        "name": "AWS Asset Inventory Pack",
        "version": "1.1.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "code_id": "NqsOI2adG+Q=",
                "checksum": "WetJDJu8JhE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-account-id",
                "type": "\u0007"
              },
              {
                "code_id": "AuOCa4FxRA0=",
                "checksum": "9Ft1jhepz08=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-enabled-regions",
                "type": "\f"
              },
              {
                "checksum": "n6P4SRaHAFE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-vpcs"
              },
              {
                "checksum": "xf7+59LeUiY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-users"
              },
              {
                "checksum": "wpiN4Z+9fpg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-groups"
              },
              {
                "checksum": "ygpxd68DqYE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-roles"
              },
              {
                "code_id": "i10GdTNzieI=",
                "checksum": "GaH1xNkkpwE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-policies",
                "type": "\u0019\f"
              },
              {
                "checksum": "E9TtR8UJj5U=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-security-groups"
              },
              {
                "checksum": "GVbJhVmoO70=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-volumes"
              },
              {
                "checksum": "PCLswznUKq4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-retrieve-all-data"
              },
              {
                "checksum": "AOUUdEBAddo=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbclusters-all-data"
              },
              {
                "checksum": "KMdip0eDok4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbinstances-all-data"
              },
              {
                "checksum": "9TCNQziW6W4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-s3-retrieve-all-data"
              },
              {
                "checksum": "vC0dC3SEvKY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-eks-clusters"
              },
              {
                "checksum": "i6nq78dp8hA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-lambda"
              },
              {
                "checksum": "ejLhSp/0944=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-access-analyzer"
              },
              {
                "checksum": "nDh2nPFPbf4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-acm-certificates"
              },
              {
                "checksum": "ei6Du3k1Mz4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-cloudtrail-trails"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "YfgyzI5DUbA=": {
                  "mql": "asset.runtime == \"aws\"\n",
                  "code_id": "YfgyzI5DUbA=",
                  "checksum": "6IhqM5x33KU=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-aws/filter/YfgyzI5DUbA=",
                  "type": "\u0004"
                }
              }
            },
            "title": "AWS Asset Inventory Pack Group"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The AWS Asset Inventory Pack retrieves information about AWS accounts for asset inventory.\n"
        },
        "scoring_system": "data only",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "best-practices",
          "mondoo.com/platform": "aws,cloud"
        },
        "local_content_checksum": "PB58iMQaDCM=",
        "graph_content_checksum": "hYw6v7UV7eo=",
        "local_execution_checksum": "SCeWG3D8pvQ=",
        "graph_execution_checksum": "KeeNh+UWszQ=",
        "computed_filters": {
          "items": {
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"\n",
              "code_id": "3z170zdo7Ac=",
              "checksum": "J6HuCKzrBlI=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            },
            "8iGUBh79IzA=": {
              "mql": "asset.platform == \"aws-lambda-function\"\n",
              "code_id": "8iGUBh79IzA=",
              "checksum": "eihuwkpzA1w=",
              "mrn": "//policy.api.mondoo.app/filter/8iGUBh79IzA=",
              "type": "\u0004"
            },
            "AXL6b/SMqY4=": {
              "mql": "asset.platform == \"aws-ebs-volume\"\n",
              "code_id": "AXL6b/SMqY4=",
              "checksum": "m0eqSKvfDhI=",
              "mrn": "//policy.api.mondoo.app/filter/AXL6b/SMqY4=",
              "type": "\u0004"
            },
            "GGmsRv0eF+o=": {
              "mql": "asset.platform == \"aws-iam-group\"\n",
              "code_id": "GGmsRv0eF+o=",
              "checksum": "D7wZ+V9I9U0=",
              "mrn": "//policy.api.mondoo.app/filter/GGmsRv0eF+o=",
              "type": "\u0004"
            },
            "YfgyzI5DUbA=": {
              "mql": "asset.runtime == \"aws\"\n",
              "code_id": "YfgyzI5DUbA=",
              "checksum": "6IhqM5x33KU=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-aws/filter/YfgyzI5DUbA=",
              "type": "\u0004"
            },
            "ep4o4JpLn/g=": {
              "mql": "asset.platform == \"aws-vpc\"\n",
              "code_id": "ep4o4JpLn/g=",
              "checksum": "kQ4KBC6eRgk=",
              "mrn": "//policy.api.mondoo.app/filter/ep4o4JpLn/g=",
              "type": "\u0004"
            },
            "lQAFhFMIHTo=": {
              "mql": "asset.platform == \"aws-iam-user\"\n",
              "code_id": "lQAFhFMIHTo=",
              "checksum": "jyoGZJn1wD8=",
              "mrn": "//policy.api.mondoo.app/filter/lQAFhFMIHTo=",
              "type": "\u0004"
            },
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            },
            "qcjTHhgiY8I=": {
              "mql": "asset.platform == \"aws-cloudtrail-trail\"\n",
              "code_id": "qcjTHhgiY8I=",
              "checksum": "fMrzZd0ZBjY=",
              "mrn": "//policy.api.mondoo.app/filter/qcjTHhgiY8I=",
              "type": "\u0004"
            },
            "up38wkcLwsk=": {
              "mql": "asset.platform == \"aws-ec2-instance\"\naws.ec2.instance.state != \"terminated\"\n",
              "code_id": "up38wkcLwsk=",
              "checksum": "Cbm/P25n45c=",
              "mrn": "//policy.api.mondoo.app/filter/up38wkcLwsk=",
              "type": "\u0001"
            },
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"\n",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "nyPw5yQqLxM=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            },
            "yfA15ol5mmc=": {
              "mql": "asset.platform == \"aws-security-group\"\n",
              "code_id": "yfA15ol5mmc=",
              "checksum": "MI1MHQ664Q0=",
              "mrn": "//policy.api.mondoo.app/filter/yfA15ol5mmc=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 18,
          "total_count": 18
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-azure",
        "name": "Azure Asset Inventory Pack",
        "version": "1.2.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "code_id": "tfWDx3obDeA=",
                "checksum": "oSsmjlXTNZc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-roleDefinitions",
                "type": "\u0019\f"
              },
              {
                "code_id": "JtyZZKP8wAk=",
                "checksum": "dA1D5YvLRKQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-cloudDefender",
                "type": "\f"
              },
              {
                "checksum": "L9AWua1nNNs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts"
              },
              {
                "checksum": "pbJlTNzNUdw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-containers"
              },
              {
                "checksum": "k70PAP88yzU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-blobs"
              },
              {
                "checksum": "mv2oMGJ5IMk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-tables"
              },
              {
                "checksum": "v3HusDawEk0=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers"
              },
              {
                "checksum": "/UCRT7hUe4E=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-firewallrules"
              },
              {
                "checksum": "0t99o6J43TQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-databases"
              },
              {
                "checksum": "EKiHTTKwMGU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql"
              },
              {
                "checksum": "7B9jStDB/m0=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules"
              },
              {
                "checksum": "SF/5iij4T8c=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql"
              },
              {
                "checksum": "vy+uz3hNxj4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules"
              },
              {
                "checksum": "N/LQPaVsCSU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mariaDb"
              },
              {
                "checksum": "NSDCqpEshlc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults"
              },
              {
                "checksum": "TSDG3lv0s14=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-keys"
              },
              {
                "checksum": "HKwOuslw8gI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-secrets"
              },
              {
                "checksum": "lTDzjqC6p6c=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-certificates"
              },
              {
                "code_id": "gHjZIX3CpO8=",
                "checksum": "n6ModWMHTKA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-activitylogs",
                "type": "\f"
              },
              {
                "checksum": "KIYfLTgRPZU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkSecurityGroups"
              },
              {
                "code_id": "dDQphASm/uI=",
                "checksum": "gWOZN+0xTvc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-publicip",
                "type": "\u0019\f"
              },
              {
                "checksum": "PTrztW8rxd8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines"
              },
              {
                "checksum": "nFZ5PHHOMgY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-managedDisk"
              },
              {
                "code_id": "QWBbVmgAdyk=",
                "checksum": "fHijMJBnYJE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-webapp",
                "type": "\u0019\f"
              },
              {
                "code_id": "lPD+4debVog=",
                "checksum": "MLJqfDG9808=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-cosmosDb",
                "type": "\u0019\f"
              },
              {
                "code_id": "l2sxbZSCAUE=",
                "checksum": "oaLcxQwxL1Y=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-applicationInsight",
                "type": "\u0019\f"
              },
              {
                "code_id": "5DTdlxB5hh4=",
                "checksum": "G9r8SA+SqyA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkWatcher",
                "type": "\u0019\f"
              },
              {
                "code_id": "slw76VmXnjQ=",
                "checksum": "UcEkPcnVzjA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-bastionHosts",
                "type": "\u0019\f"
              },
              {
                "code_id": "LK8+YNPMX3c=",
                "checksum": "rHI3ntqOT+U=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-compute-disks",
                "type": "\u0019\f"
              },
              {
                "code_id": "gDmTBPAjEJ4=",
                "checksum": "7hu7mAn56zs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-network-interfaces",
                "type": "\u0019\f"
              },
              {
                "code_id": "aCxkCGCHnew=",
                "checksum": "RzMM3uTSbt4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-resourcegroups",
                "type": "\u0019\f"
              },
              {
                "code_id": "/fGgrlW3MMY=",
                "checksum": "yU/a4O2wwLE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-resources",
                "type": "\u0019\f"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "0oY2st+ixMg=": {
                  "mql": "asset.runtime == \"azure\"",
                  "code_id": "0oY2st+ixMg=",
                  "checksum": "HhIPy3MYJvs=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-azure/filter/0oY2st+ixMg=",
                  "type": "\u0004"
                }
              }
            },
            "title": "AWS Asset Inventory Pack Group"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The Azure Asset Inventory by Mondoo query pack retrieves information about Azure subscriptions and resources for asset inventory.\n"
        },
        "scoring_system": "data only",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "best-practices",
          "mondoo.com/platform": "azure,cloud"
        },
        "local_content_checksum": "ZM4rIrYGfmo=",
        "graph_content_checksum": "1KqHt05Qln0=",
        "local_execution_checksum": "0Qeka81o+30=",
        "graph_execution_checksum": "QqHGZ7kHyI8=",
        "computed_filters": {
          "items": {
            "+zrPv0BAYRs=": {
              "mql": "asset.platform == \"azure-storage-account\" \u0026\u0026 azure.subscription.storage.account.containers != empty",
              "code_id": "+zrPv0BAYRs=",
              "checksum": "Bj/NBueyV54=",
              "mrn": "//policy.api.mondoo.app/filter/+zrPv0BAYRs=",
              "type": "\u0004"
            },
            "0oY2st+ixMg=": {
              "mql": "asset.runtime == \"azure\"",
              "code_id": "0oY2st+ixMg=",
              "checksum": "HhIPy3MYJvs=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-azure/filter/0oY2st+ixMg=",
              "type": "\u0004"
            },
            "7gmQt2xyyek=": {
              "mql": "asset.platform == \"azure-keyvault-vault\"",
              "code_id": "7gmQt2xyyek=",
              "checksum": "+rzWnYFLv90=",
              "mrn": "//policy.api.mondoo.app/filter/7gmQt2xyyek=",
              "type": "\u0004"
            },
            "BmvmwwxN7CI=": {
              "mql": "asset.platform == \"azure-storage-account\"",
              "code_id": "BmvmwwxN7CI=",
              "checksum": "9WqtBAdYE38=",
              "mrn": "//policy.api.mondoo.app/filter/BmvmwwxN7CI=",
              "type": "\u0004"
            },
            "HrRMIvHMfB4=": {
              "mql": "asset.platform == \"azure-mysql-server\"",
              "code_id": "HrRMIvHMfB4=",
              "checksum": "2jQKXx27fzQ=",
              "mrn": "//policy.api.mondoo.app/filter/HrRMIvHMfB4=",
              "type": "\u0004"
            },
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            },
            "MUAwfx81KHc=": {
              "mql": "asset.platform == \"azure-postgresql-flexible-server\"",
              "code_id": "MUAwfx81KHc=",
              "checksum": "PiNv2xK+xX4=",
              "mrn": "//policy.api.mondoo.app/filter/MUAwfx81KHc=",
              "type": "\u0004"
            },
            "Mqc04GMFFRg=": {
              "mql": "asset.platform == \"azure-mariadb-server\"",
              "code_id": "Mqc04GMFFRg=",
              "checksum": "vnxKs7ziI40=",
              "mrn": "//policy.api.mondoo.app/filter/Mqc04GMFFRg=",
              "type": "\u0004"
            },
            "VPkRSzmEtn8=": {
              "mql": "asset.platform == \"azure-compute-vm-api\"",
              "code_id": "VPkRSzmEtn8=",
              "checksum": "CpRtqzMR4cY=",
              "mrn": "//policy.api.mondoo.app/filter/VPkRSzmEtn8=",
              "type": "\u0004"
            },
            "XhGWd/sNmOc=": {
              "mql": "asset.platform == \"azure-network-security-group\"",
              "code_id": "XhGWd/sNmOc=",
              "checksum": "h9y/0zM44Pk=",
              "mrn": "//policy.api.mondoo.app/filter/XhGWd/sNmOc=",
              "type": "\u0004"
            },
            "aBpo44SiOyc=": {
              "mql": "asset.platform == \"azure-sql-server\"",
              "code_id": "aBpo44SiOyc=",
              "checksum": "AD8YCkcfVv0=",
              "mrn": "//policy.api.mondoo.app/filter/aBpo44SiOyc=",
              "type": "\u0004"
            },
            "kOdP+bt2IPs=": {
              "mql": "asset.platform == \"azure-postgresql-server\"",
              "code_id": "kOdP+bt2IPs=",
              "checksum": "PiFsnCUsx6k=",
              "mrn": "//policy.api.mondoo.app/filter/kOdP+bt2IPs=",
              "type": "\u0004"
            },
            "vEV90lIvykA=": {
              "mql": "asset.platform == \"azure-compute-vm-api\" \u0026\u0026 azure.subscription.compute.vm.properties[\"storageProfile\"][\"osDisk\"][\"managedDisk\"] != empty",
              "code_id": "vEV90lIvykA=",
              "checksum": "0Rathx4+iNM=",
              "mrn": "//policy.api.mondoo.app/filter/vEV90lIvykA=",
              "type": "\u0004"
            },
            "y+DcS8y50ac=": {
              "mql": "asset.platform == \"azure-mysql-flexible-server\"",
              "code_id": "y+DcS8y50ac=",
              "checksum": "xPRk+ewicag=",
              "mrn": "//policy.api.mondoo.app/filter/y+DcS8y50ac=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 32,
          "total_count": 32
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-gcp",
        "name": "GCP Asset Inventory Pack",
        "version": "1.1.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "code_id": "8ZTLRdgMdfc=",
                "checksum": "YPdT0ozr+Y8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-project-info",
                "type": "\f"
              },
              {
                "code_id": "SijcqY8aEC8=",
                "checksum": "26BCZxMbf4o=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-project-owners",
                "type": "\u0019\f"
              },
              {
                "code_id": "esjpb5+uUTI=",
                "checksum": "EycEzMnTI10=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-project-editors",
                "type": "\u0019\f"
              },
              {
                "code_id": "jo4S5Efns10=",
                "checksum": "97g+FtyCuuU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-iam-roles",
                "type": "\u0019\f"
              },
              {
                "code_id": "Hp91zOVvnWI=",
                "checksum": "doM61q10mS4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-enabled-services",
                "type": "\u0019\f"
              },
              {
                "code_id": "GXnMy0KdC5s=",
                "checksum": "mew0NiaMph8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-count",
                "type": "\u0005"
              },
              {
                "checksum": "FUQWdOunjzU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-data"
              },
              {
                "code_id": "UcQ4RrUJYfc=",
                "checksum": "9oFLQnISQ2I=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-count",
                "type": "\u0005"
              },
              {
                "checksum": "hF8uM4/Z5Tw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-data"
              },
              {
                "checksum": "XMdD5SvRgKw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-public"
              },
              {
                "code_id": "V3Z2KOdUHV0=",
                "checksum": "Vsh+V1Nd1Ng=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-count",
                "type": "\u0005"
              },
              {
                "checksum": "MTAMfFq2FH4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "XnuDSoJhNYQ=": {
                  "mql": "asset.runtime == \"gcp\"\n",
                  "code_id": "XnuDSoJhNYQ=",
                  "checksum": "8uqwQ/NvI10=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-gcp/filter/XnuDSoJhNYQ=",
                  "type": "\u0004"
                }
              }
            },
            "title": "GCP Asset Inventory Pack Group"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The GCP Asset Inventory by Mondoo query pack retrieves information about GCP projects for asset inventory.\n"
        },
        "scoring_system": "data only",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "best-practices",
          "mondoo.com/platform": "gcp,gcp-project,cloud"
        },
        "local_content_checksum": "o96IPVsndE4=",
        "graph_content_checksum": "xym796YRLN4=",
        "local_execution_checksum": "PeJpS/GQ2eE=",
        "graph_execution_checksum": "nYESwtmBPT8=",
        "computed_filters": {
          "items": {
            "/4iD720uH3E=": {
              "mql": "asset.platform == \"gcp-compute-subnetwork\"\n",
              "code_id": "/4iD720uH3E=",
              "checksum": "Cw9i6qMs5j0=",
              "mrn": "//policy.api.mondoo.app/filter//4iD720uH3E=",
              "type": "\u0004"
            },
            "0xGx5RDAF4o=": {
              "mql": "asset.platform == \"gcp-compute-network\"\n",
              "code_id": "0xGx5RDAF4o=",
              "checksum": "V/sWJm67UTU=",
              "mrn": "//policy.api.mondoo.app/filter/0xGx5RDAF4o=",
              "type": "\u0004"
            },
            "Kgi28nuBpag=": {
              "mql": "asset.platform == \"gcp-compute-instance\"\ngcp.compute.instance.networkInterfaces.any(_['accessConfigs'].where(_['name'] == \"External NAT\"))\n",
              "code_id": "Kgi28nuBpag=",
              "checksum": "GKzrTqk61Rc=",
              "mrn": "//policy.api.mondoo.app/filter/Kgi28nuBpag=",
              "type": "\u0001"
            },
            "XnuDSoJhNYQ=": {
              "mql": "asset.runtime == \"gcp\"\n",
              "code_id": "XnuDSoJhNYQ=",
              "checksum": "8uqwQ/NvI10=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-asset-inventory-gcp/filter/XnuDSoJhNYQ=",
              "type": "\u0004"
            },
            "n7KC7R5JBPo=": {
              "mql": "asset.platform == \"gcp-compute-instance\"\ngcp.compute.instance.status == \"RUNNING\"\n",
              "code_id": "n7KC7R5JBPo=",
              "checksum": "loJqxh4bIWY=",
              "mrn": "//policy.api.mondoo.app/filter/n7KC7R5JBPo=",
              "type": "\u0001"
            },
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"\n",
              "code_id": "turd8YONuKg=",
              "checksum": "rNfFIKM1qSs=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            },
            "wEKjALBSsDA=": {
              "mql": "asset.platform == \"gcp-gke-cluster\"",
              "code_id": "wEKjALBSsDA=",
              "checksum": "wSXMw47IQAY=",
              "mrn": "//policy.api.mondoo.app/filter/wEKjALBSsDA=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 12,
          "total_count": 12
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory",
        "name": "Kubernetes Inventory Pack",
        "version": "1.1.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "mql": "k8s.serverVersion\n",
                "code_id": "DruaZGDPTNI=",
                "checksum": "e6KQ6U4sF7M=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-version",
                "type": "\n",
                "title": "Kubernetes cluster version"
              },
              {
                "mql": "k8s.namespaces\n",
                "code_id": "wtO8xWny/Hg=",
                "checksum": "af8znksaLcg=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-namespaces",
                "type": "\u0019\f",
                "title": "Kubernetes cluster namespaces"
              },
              {
                "mql": "k8s.nodes\n",
                "code_id": "eZMA6C+kK0g=",
                "checksum": "eZU7r0vzUtI=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-nodes",
                "type": "\u0019\f",
                "title": "Cluster modes"
              },
              {
                "mql": "k8s.clusterroles\n",
                "code_id": "A3jgKT/QUos=",
                "checksum": "ieo2GLDfDI8=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-clusterroles",
                "type": "\u0019\f",
                "title": "Cluster RBAC ClusterRoles"
              },
              {
                "mql": "k8s.roles\n",
                "code_id": "YvSHkB//dOw=",
                "checksum": "0TncLPHP9Xs=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-roles",
                "type": "\u0019\f",
                "title": "RBAC Roles"
              },
              {
                "mql": "k8s.clusterrolebindings\n",
                "code_id": "yyj5NwAixnM=",
                "checksum": "9coSakdPCLs=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-clusterrolebindings",
                "type": "\u0019\f",
                "title": "RBAC cluster-rolebindings"
              },
              {
                "mql": "k8s.rolebindings\n",
                "code_id": "ULICLcGYH00=",
                "checksum": "NQQVSt8bBw4=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-rolebindings",
                "type": "\u0019\f",
                "title": "RBAC rolebindings"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "OMDwxipTleI=": {
                  "mql": "asset.platform == \"kubernetes\" || asset.platform == \"k8s-cluster\"",
                  "code_id": "OMDwxipTleI=",
                  "checksum": "eu8jrqulKTU=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/OMDwxipTleI=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Cluster inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.pod\n",
                "code_id": "gBoE76Jrf7E=",
                "checksum": "TqA1zBixZyc=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-pod",
                "type": "\f",
                "title": "Pod information"
              },
              {
                "mql": "k8s.pod.containers\n",
                "code_id": "TlxPuS82lCM=",
                "checksum": "4VpglmkKAs8=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-pod-container",
                "type": "\u0019\f",
                "title": "Container information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "3E1KRjJQDZw=": {
                  "mql": "asset.platform == \"k8s-pod\"",
                  "code_id": "3E1KRjJQDZw=",
                  "checksum": "bG0iGM1CtyQ=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/3E1KRjJQDZw=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Pods inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.deployments\n",
                "code_id": "BgnOXaHF7Y0=",
                "checksum": "N2+3NdThb3M=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-deployment",
                "type": "\u0019\f",
                "title": "Deployment information"
              },
              {
                "mql": "k8s.deployment.containers { * }\n",
                "code_id": "yz4+KEwBCo0=",
                "checksum": "8GO2Q+GrXW8=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-deployment-container",
                "type": "\u0019\f",
                "title": "Container information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "KcQiaGsE+IA=": {
                  "mql": "asset.platform == \"k8s-deployment\"",
                  "code_id": "KcQiaGsE+IA=",
                  "checksum": "NqCzl75iTlY=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/KcQiaGsE+IA=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Deployments inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.cronjob { * }\n",
                "code_id": "9+XIGM5xWl0=",
                "checksum": "xznH69pzUEY=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cronjob",
                "type": "\f",
                "title": "CronJob information"
              },
              {
                "mql": "k8s.cronjob.containers { * }\n",
                "code_id": "hasYrXqmH8I=",
                "checksum": "yQw0hGaUlFo=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-cronjob-container",
                "type": "\u0019\f",
                "title": "Container information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "Lo+InTRHu9g=": {
                  "mql": "asset.platform == \"k8s-cronjob\"",
                  "code_id": "Lo+InTRHu9g=",
                  "checksum": "8Bh9aB41NyU=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/Lo+InTRHu9g=",
                  "type": "\u0004"
                }
              }
            },
            "title": "CronJobs inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.job { * }\n",
                "code_id": "ZNRv7izG3II=",
                "checksum": "Hmbe+UXvg+U=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-job",
                "type": "\f",
                "title": "Job information"
              },
              {
                "mql": "k8s.job.containers { * }\n",
                "code_id": "Pg23paBJUIQ=",
                "checksum": "oWnIFhHMhZI=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-job-container",
                "type": "\u0019\f",
                "title": "Container information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "Gahk63XA/8A=": {
                  "mql": "asset.platform == \"k8s-job\"",
                  "code_id": "Gahk63XA/8A=",
                  "checksum": "ZEIQJuHxUnQ=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/Gahk63XA/8A=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Jobs inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.daemonset { * }\n",
                "code_id": "j3JI5TGRKZI=",
                "checksum": "tX9g9U3oDjQ=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-daemonset",
                "type": "\f",
                "title": "DaemonSet information"
              },
              {
                "mql": "k8s.daemonset.containers { * }\n",
                "code_id": "MQLYdcUOay8=",
                "checksum": "p3oBT/qREOQ=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-daemonset-container",
                "type": "\u0019\f",
                "title": "Container information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "QFF/R18/81w=": {
                  "mql": "asset.platform == \"k8s-daemonset\"",
                  "code_id": "QFF/R18/81w=",
                  "checksum": "2yL4oNxql8g=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/QFF/R18/81w=",
                  "type": "\u0004"
                }
              }
            },
            "title": "DaemonSets inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.statefulset { * }\n",
                "code_id": "99YW06IQMFE=",
                "checksum": "D6cI6DE84kM=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-statefulset",
                "type": "\f",
                "title": "StatefulSet information"
              },
              {
                "mql": "k8s.statefulset.containers { * }\n",
                "code_id": "/XhFPdYOias=",
                "checksum": "sTF8EAlOspc=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-statefulset-container",
                "type": "\u0019\f",
                "title": "Container information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "jFFg0qb0Ecc=": {
                  "mql": "asset.platform == \"k8s-statefulset\"",
                  "code_id": "jFFg0qb0Ecc=",
                  "checksum": "myCiW/aKxAQ=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/jFFg0qb0Ecc=",
                  "type": "\u0004"
                }
              }
            },
            "title": "StatefulSets inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.replicaset { * }\n",
                "code_id": "jslgGpPs1r0=",
                "checksum": "bIvlrORW6Hk=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-replicaset",
                "type": "\f",
                "title": "ReplicaSet information"
              },
              {
                "mql": "k8s.replicaset.containers { * }\n",
                "code_id": "B1E8RCGg2gk=",
                "checksum": "VDcOOriPoQE=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-replicaset-container",
                "type": "\u0019\f",
                "title": "Container information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "5qRCZazhsy4=": {
                  "mql": "asset.platform == \"k8s-replicaset\"",
                  "code_id": "5qRCZazhsy4=",
                  "checksum": "8di3Utbwcrg=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/5qRCZazhsy4=",
                  "type": "\u0004"
                }
              }
            },
            "title": "ReplicaSets inventory"
          },
          {
            "queries": [
              {
                "mql": "k8s.ingress { * }\n",
                "code_id": "9Sm0R0xJfUs=",
                "checksum": "cSOYUDKvhGE=",
                "mrn": "//policy.api.mondoo.app/queries/k8s-ingress",
                "type": "\f",
                "title": "Ingress information"
              }
            ],
            "type": 1,
            "filters": {
              "items": {
                "C6zVI/ll8wE=": {
                  "mql": "asset.platform == \"k8s-ingress\"",
                  "code_id": "C6zVI/ll8wE=",
                  "checksum": "7LRkiiC8zGo=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/C6zVI/ll8wE=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Ingresses inventory"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The Kubernetes Inventory Pack by Mondoo pack retrieves data about a Kubernetes Cluster for asset inventory.\n\nTo run this pack for a Kubernetes Cluster:\n\n```bash\ncnquery scan k8s -f mondoo-kubernetes-inventory.mql.yaml\n```\n\n## Join the community!\nOur goal is to build query packs that are simple to deploy and provide accurate and useful data.\n\nIf you have any suggestions for improving this query pack, or if you need support, [join the Mondoo community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions.\n"
        },
        "scoring_system": "data only",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "best-practices",
          "mondoo.com/platform": "kubernetes"
        },
        "local_content_checksum": "JxcMy8YwgUA=",
        "graph_content_checksum": "KBGGoQcoh/U=",
        "local_execution_checksum": "XbXP+ZumZ+4=",
        "graph_execution_checksum": "fBKvnkk7J70=",
        "computed_filters": {
          "items": {
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "bG0iGM1CtyQ=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            },
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "8di3Utbwcrg=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/5qRCZazhsy4=",
              "type": "\u0004"
            },
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "7LRkiiC8zGo=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            },
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "ZEIQJuHxUnQ=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/Gahk63XA/8A=",
              "type": "\u0004"
            },
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "NqCzl75iTlY=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            },
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "8Bh9aB41NyU=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            },
            "OMDwxipTleI=": {
              "mql": "asset.platform == \"kubernetes\" || asset.platform == \"k8s-cluster\"",
              "code_id": "OMDwxipTleI=",
              "checksum": "eu8jrqulKTU=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/OMDwxipTleI=",
              "type": "\u0004"
            },
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "2yL4oNxql8g=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/QFF/R18/81w=",
              "type": "\u0004"
            },
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "myCiW/aKxAQ=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-kubernetes-inventory/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 22,
          "total_count": 22
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-inventory",
        "name": "Linux Inventory Pack",
        "version": "1.7.2",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "mql": "asset { kind title platform name arch runtime version }",
                "code_id": "Hl4/DeiN8wc=",
                "checksum": "7FdH3PxFAQ8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-asset-info",
                "type": "\f",
                "title": "Asset information"
              },
              {
                "mql": "os.hostname",
                "code_id": "aRSd7vfjN/s=",
                "checksum": "zQv8QVG6Lzs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-hostname",
                "type": "\u0007",
                "title": "Hostname"
              },
              {
                "mql": "asset.platform",
                "code_id": "qXLiKKJcpv8=",
                "checksum": "Gx1Ew5IEouk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-platform",
                "type": "\u0007",
                "title": "Platform"
              },
              {
                "mql": "users.where(shell != \"/sbin/nologin\" \u0026\u0026 uid \u003e= 1000 \u0026\u0026 name != \"root\") { name sid uid gid shell authorizedkeys.list sshkeys home group }",
                "code_id": "NsQ1E+4hzxs=",
                "checksum": "lhu0sm8adHo=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-users",
                "type": "\u0019\f",
                "title": "Regular users with shell access"
              },
              {
                "mql": "groups.where(name == \"wheel\") { members }",
                "code_id": "HnD55hbNskM=",
                "checksum": "kA6mhmA/wYw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-groups-wheel",
                "type": "\u0019\f",
                "title": "Members of the wheel group"
              },
              {
                "mql": "kernel.installed",
                "code_id": "oyTxcyFFxp0=",
                "checksum": "dUjTBomDajg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-installed-kernel",
                "type": "\u0019\n",
                "title": "Installed kernels",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "kernel.info",
                "code_id": "phM/AwY3gBg=",
                "checksum": "G7cE5DYGmeI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-kernel-info",
                "type": "\n",
                "title": "Running kernel versions",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "kernel.modules { name loaded }",
                "code_id": "onEYxXTUj2k=",
                "checksum": "ij9DvcMf22Y=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-kernel-modules",
                "type": "\u0019\f",
                "title": "Kernel modules",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "kernel.parameters",
                "code_id": "VLSfq6hDahY=",
                "checksum": "jYyRCg21Mxg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-kernel-parameters",
                "type": "\u001a\u0007\u0007",
                "title": "Kernel parameters",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "processes { pid command flags }",
                "code_id": "pB9cpZY/Uy0=",
                "checksum": "tYsYRBR2Br8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-processes",
                "type": "\u0019\f",
                "title": "Running processes",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "mount.list { path fstype device options }",
                "code_id": "5pm2mmNGelY=",
                "checksum": "uvAZSAiEYXM=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-mounts",
                "type": "\u0019\f",
                "title": "Mounted devices"
              },
              {
                "mql": "ports.listening { user state port address protocol process remoteAddress remotePort }",
                "code_id": "Ms4tg4zNmLg=",
                "checksum": "oCs+XMLPkJQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-listening-ports",
                "type": "\u0019\f",
                "title": "Listening ports",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
                "code_id": "GHihoQG+Q/Y=",
                "checksum": "BhkpNYcpNrk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-active-connections",
                "type": "\u0019\f",
                "title": "Active network connections",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "os.uptime",
                "code_id": "dTMk4H4V270=",
                "checksum": "s+svULXTgz4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-uptime",
                "type": "\t",
                "title": "Operating system uptime",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "packages { name version arch installed epoch origin purl }",
                "code_id": "XAoGqylTzOA=",
                "checksum": "DRfbaXefvEU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-installed-packages",
                "type": "\u0019\f",
                "title": "Installed packages"
              },
              {
                "mql": "services.where(running == true) { name running enabled masked type }",
                "code_id": "qWE8ALBsqTE=",
                "checksum": "FWwAcR4ay0E=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-running-services",
                "type": "\u0019\f",
                "title": "Running services",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "parse.json(content: command('ip -j a').stdout).params\n",
                "code_id": "FXIrgChC3pg=",
                "checksum": "SUtSFzT3yao=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-interface-configuration",
                "type": "\n",
                "title": "Network interface configuration",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "sshd.config.params",
                "code_id": "eteO7RzprLM=",
                "checksum": "8MtL0GyhQVo=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-sshd-interface-configuration",
                "type": "\u001a\u0007\u0007",
                "title": "sshd configuration",
                "filters": {
                  "items": {
                    "/+KCjve1urM=": {
                      "mql": "package('openssh-server').installed || package('openssh').installed",
                      "code_id": "/+KCjve1urM=",
                      "checksum": "C/dDiSF0fQo=",
                      "mrn": "//policy.api.mondoo.app/filter//+KCjve1urM=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "machine.baseboard.manufacturer",
                "code_id": "kv1OUBUCnBA=",
                "checksum": "tM7zxjqGNac=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-system-manufacturer",
                "type": "\u0007",
                "title": "System manufacturer"
              },
              {
                "mql": "machine.baseboard.product",
                "code_id": "F7bdJ3U4G0g=",
                "checksum": "hxYF384Xty8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-system-product-name",
                "type": "\u0007",
                "title": "System product name"
              },
              {
                "mql": "file(\"/proc/cpuinfo\").content.lines.where(_.contains(\"model name\")).first().split(\":\").last().trim()\n",
                "code_id": "/tUd3Rzfo5c=",
                "checksum": "CKQ/26OFjEk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-cpu-type",
                "type": "\u0007",
                "title": "CPU type"
              },
              {
                "mql": "command(\"df -TH / | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
                "code_id": "WmxWYi4ILtg=",
                "checksum": "zgkk/ifOns4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-root-volume",
                "type": "\u0007",
                "title": "Root volume size and filesystem type"
              },
              {
                "mql": "file(\"/proc/meminfo\").content.lines.where(_.contains(\"MemTotal\")).first().split(\":\").last().trim()\n",
                "code_id": "g7SQRtln0e0=",
                "checksum": "WHyE186nIHg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-physical-memory",
                "type": "\u0007",
                "title": "Physical memory size"
              },
              {
                "mql": "machine.baseboard { manufacturer version serial assetTag product }",
                "code_id": "mpBx19SqXqo=",
                "checksum": "POqQwLcjCkU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-baseboard",
                "type": "\f",
                "title": "SMBIOS baseboard (or module) information"
              },
              {
                "mql": "machine.bios { vendor version releaseDate }",
                "code_id": "n2Oxd+mY57E=",
                "checksum": "r1O3sxA1pjY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-bios",
                "type": "\f",
                "title": "SMBIOS BIOS information"
              },
              {
                "mql": "machine.system { sku serial family version product uuid manufacturer }",
                "code_id": "l8G0PTcuvmM=",
                "checksum": "HuVeRRHsG7s=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-system",
                "type": "\f",
                "title": "SMBIOS System information"
              },
              {
                "mql": "machine.chassis { manufacturer serial version assetTag }",
                "code_id": "3d75ZaJW3Vw=",
                "checksum": "LLA1Nuhd3Nc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-chassis",
                "type": "\f",
                "title": "SMBIOS Chassis information"
              },
              {
                "mql": "if (file(\"/boot/grub/grub.cfg\").exists) {file(\"/boot/grub/grub.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub2/grub.cfg\").exists) {file(\"/boot/grub2/grub.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub/user.cfg\").exists) {file(\"/boot/grub/user.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub2/user.cfg\").exists) {file(\"/boot/grub2/user.cfg\") {dirname basename permissions}}\n",
                "code_id": "6BMRuwX+QBQ=",
                "checksum": "nyLqhmPnLXc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-permissions-on-bootloader-config-metadata",
                "type": "\u0001",
                "title": "Bootloader configuration metadata",
                "filters": {
                  "items": {
                    "tgbnxVI1e9A=": {
                      "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
                      "code_id": "tgbnxVI1e9A=",
                      "checksum": "GblDUSvztL8=",
                      "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "command('mokutil --sb-state').stdout\n",
                "code_id": "q6yfmKHh8oQ=",
                "checksum": "FURciorJamU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-secure-boot-is-enabled-metadata",
                "type": "\u0007",
                "title": "Secure Boot status",
                "filters": {
                  "items": {
                    "tgbnxVI1e9A=": {
                      "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
                      "code_id": "tgbnxVI1e9A=",
                      "checksum": "GblDUSvztL8=",
                      "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "lsblk.list.where(fstype == /crypt/) {parse.json(content: command('cryptsetup --dump-json-metadata luksDump /dev/' + name).stdout).params}\n",
                "code_id": "187y4zuwxTs=",
                "checksum": "xTM+99p2eIg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-aes-encryption-algo-metadata",
                "type": "\u0019\f",
                "title": "Disk encryption cipher suite",
                "filters": {
                  "items": {
                    "tgbnxVI1e9A=": {
                      "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
                      "code_id": "tgbnxVI1e9A=",
                      "checksum": "GblDUSvztL8=",
                      "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "lsblk { name label uuid fstype mountpoints }\n",
                "code_id": "W1bK7WVyuvg=",
                "checksum": "dZFXlF9rqwk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-disk-encryption-metadata",
                "type": "\u0019\f",
                "title": "Disk encryption metadata",
                "filters": {
                  "items": {
                    "tgbnxVI1e9A=": {
                      "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
                      "code_id": "tgbnxVI1e9A=",
                      "checksum": "GblDUSvztL8=",
                      "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
                      "type": "\u0001"
                    }
                  }
                }
              },
              {
                "mql": "command('w -h').stdout",
                "code_id": "VDW0zuKNTNA=",
                "checksum": "0/2JecOBwZg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-logged-in-users",
                "type": "\u0007",
                "title": "Logged-in users"
              }
            ],
            "type": 1,
            "uid": "default-queries",
            "filters": {
              "items": {
                "qZ0RZfIjQ18=": {
                  "mql": "asset.family.contains(\"linux\")",
                  "code_id": "qZ0RZfIjQ18=",
                  "checksum": "h3aUIc7tc+Q=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-inventory/filter/qZ0RZfIjQ18=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Default Queries"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The Linux Inventory Pack by Mondoo retrieves data about Linux hosts for asset inventory.\n\n## Local scan\nTo run this pack locally on a Linux host:\n\n```bash\ncnquery scan local -f mondoo-linux-inventory.mql.yaml\n```\n\n## Remote scan\nTo run this pack against a remote Linux host using SSH:\n\n```bash\ncnquery scan ssh \u003cuser\u003e@\u003cip_address\u003e -i \u003cidentity_file\u003e -f mondoo-linux-inventory.mql.yaml\n```\n\n## Join the community!\nOur goal is to build query packs that are simple to deploy and provide accurate and useful data.\n\nIf you have any suggestions for improving this query pack, or if you need support, [join the Mondoo community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions.\n"
        },
        "scoring_system": "data only",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "best-practices",
          "mondoo.com/platform": "linux"
        },
        "local_content_checksum": "yO2b0Kdhf0E=",
        "graph_content_checksum": "SGxJeLdlh8g=",
        "local_execution_checksum": "xI6O4ekAzhY=",
        "graph_execution_checksum": "WnVXwA/bF/w=",
        "computed_filters": {
          "items": {
            "/+KCjve1urM=": {
              "mql": "package('openssh-server').installed || package('openssh').installed",
              "code_id": "/+KCjve1urM=",
              "checksum": "C/dDiSF0fQo=",
              "mrn": "//policy.api.mondoo.app/filter//+KCjve1urM=",
              "type": "\u0004"
            },
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            },
            "qZ0RZfIjQ18=": {
              "mql": "asset.family.contains(\"linux\")",
              "code_id": "qZ0RZfIjQ18=",
              "checksum": "h3aUIc7tc+Q=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-inventory/filter/qZ0RZfIjQ18=",
              "type": "\u0004"
            },
            "tgbnxVI1e9A=": {
              "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
              "code_id": "tgbnxVI1e9A=",
              "checksum": "GblDUSvztL8=",
              "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
              "type": "\u0001"
            }
          }
        },
        "query_counts": {
          "data_count": 32,
          "total_count": 32
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security",
        "name": "Mondoo Linux Security",
        "version": "2.5.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "checks": [
              {
                "code_id": "ceocEcP6Hmo=",
                "checksum": "4V3W1xVrhZg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-window-system-is-not-installed",
                "type": "\u0004"
              },
              {
                "code_id": "dVk74tk32xs=",
                "checksum": "3wFjsBxykaA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-address-space-layout-randomization-aslr-is-enabled",
                "type": "\u0004"
              },
              {
                "code_id": "vVtLCflAlII=",
                "checksum": "W63Lj+kEGEA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-aide-is-installed",
                "type": "\u0004"
              },
              {
                "code_id": "Gjj6ZTcWK1M=",
                "checksum": "uREhXgbEgsE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-core-dumps-are-restricted",
                "type": "\u0001"
              },
              {
                "code_id": "W3jQosUKoIk=",
                "checksum": "pfObrX/v9zs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-filesystem-integrity-is-regularly-checked",
                "type": "\u0004"
              },
              {
                "code_id": "xCFcWbP9qQo=",
                "checksum": "AtylwFHBDsE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-mail-transfer-agent-is-configured-for-local-only-mode",
                "type": "\u0001"
              },
              {
                "code_id": "aS95c8UVV00=",
                "checksum": "A7LLvwvUjGY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-prelink-is-disabled",
                "type": "\u0004"
              }
            ],
            "filters": {
              "items": {
                "qZ0RZfIjQ18=": {
                  "mql": "asset.family.contains('linux')\n",
                  "code_id": "qZ0RZfIjQ18=",
                  "checksum": "t7a1zIeg9mI=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/qZ0RZfIjQ18=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Core"
          },
          {
            "checks": [
              {
                "code_id": "/O0ScIZCkeE=",
                "checksum": "SjUxoJWo4J8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-packet-redirect-sending-is-disabled",
                "type": "\u0001"
              },
              {
                "code_id": "THw+yxDZOpw=",
                "checksum": "KICrP//Pm6I=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-reverse-path-filtering-is-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "h1TBH+oroos=",
                "checksum": "JVHBZHo6C6U=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-secure-icmp-redirects-are-not-accepted",
                "type": "\u0001"
              },
              {
                "code_id": "XTNPK6iBxpE=",
                "checksum": "uwbqvZX9m1I=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-source-routed-packets-are-not-accepted",
                "type": "\u0001"
              },
              {
                "code_id": "Hwqs1IZPO4c=",
                "checksum": "OuyA9VH1AGk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-suspicious-packets-are-logged",
                "type": "\u0001"
              },
              {
                "code_id": "w44ayUe5r2M=",
                "checksum": "bEuLLKLLb2o=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-tcp-syn-cookies-is-enabled",
                "type": "\u0004"
              },
              {
                "code_id": "Zx8F8dGkU44=",
                "checksum": "YlX7mC7bRXU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-icmp-redirects-are-not-accepted",
                "type": "\u0001"
              },
              {
                "code_id": "8LouP9HP/NY=",
                "checksum": "3wSN8tQKlQo=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ip-forwarding-is-disabled",
                "type": "\u0001"
              },
              {
                "code_id": "bTRvw0zFOGI=",
                "checksum": "BbutHgAvjAk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ipv6-router-advertisements-are-not-accepted",
                "type": "\u0001"
              },
              {
                "code_id": "H2ZH2J+F/yo=",
                "checksum": "mGIzIHT72mg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-bogus-icmp-responses-are-ignored",
                "type": "\u0004"
              },
              {
                "code_id": "7wuHGnsUApE=",
                "checksum": "3yzFlqxnwT8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-broadcast-icmp-requests-are-ignored",
                "type": "\u0004"
              }
            ],
            "filters": {
              "items": {
                "qZ0RZfIjQ18=": {
                  "mql": "asset.family.contains('linux')\n",
                  "code_id": "qZ0RZfIjQ18=",
                  "checksum": "t7a1zIeg9mI=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/qZ0RZfIjQ18=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Network Stack"
          },
          {
            "checks": [
              {
                "code_id": "Kd0nC0U7dfs=",
                "checksum": "2TZJCRa9v0o=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup--are-configured",
                "type": "\f"
              },
              {
                "code_id": "m7DAOFbL9Qg=",
                "checksum": "m7Ateb1hgmA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup-are-configured",
                "type": "\f"
              },
              {
                "code_id": "vdDFAY9Qxko=",
                "checksum": "0AE5fdbzkgA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow--are-configured",
                "type": "\f"
              },
              {
                "code_id": "FrdMe+1q6Bc=",
                "checksum": "CIErHmCRVcE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow-are-configured",
                "type": "\f"
              },
              {
                "code_id": "Gjm+13rDf3o=",
                "checksum": "qEDAEhGkPHY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd--are-configured",
                "type": "\f"
              },
              {
                "code_id": "OFWIXTzBv00=",
                "checksum": "wDCwyiaJOSM=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd-are-configured",
                "type": "\f"
              },
              {
                "code_id": "Xs984txmLXk=",
                "checksum": "q3hib2dKoRg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow--are-configured",
                "type": "\f"
              },
              {
                "code_id": "htUqKZYa860=",
                "checksum": "zOzow6mMpHs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow-are-configured",
                "type": "\f"
              }
            ],
            "filters": {
              "items": {
                "qZ0RZfIjQ18=": {
                  "mql": "asset.family.contains('linux')\n",
                  "code_id": "qZ0RZfIjQ18=",
                  "checksum": "t7a1zIeg9mI=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/qZ0RZfIjQ18=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Sensitive Files"
          },
          {
            "checks": [
              {
                "code_id": "3QL3VcmScCM=",
                "checksum": "OaohuXtH0W8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-avahi-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "pG8C4AikOeo=",
                "checksum": "rTRQ+Gl2cWE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-dhcp-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "Pw2IPak7soE=",
                "checksum": "ivLI5Jo0XRw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-dns-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "+h+9W63fwWE=",
                "checksum": "R/+1lv878d8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ftp-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "f5q/EiRn95Q=",
                "checksum": "AcBEwQ7Nj+U=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-http-proxy-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "gxsrJvn0Hag=",
                "checksum": "7e7Q8/Mx3w8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-http-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "nVZfumjyNkA=",
                "checksum": "EV6TkVYQqvI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-imap-and-pop3-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "QTN+NYX439o=",
                "checksum": "kfIzhmNx62E=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ldap-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "HKo0vfMZsRE=",
                "checksum": "IuQpd9WSy4c=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-nfs-and-rpc-are-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "rJzKiYz1fys=",
                "checksum": "w8etPo1o3II=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-nis-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "lSnkpvWD+i0=",
                "checksum": "AOyeZ93SyN4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsh-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "NoJQoV63siE=",
                "checksum": "JYqYpufxtDw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsync-service-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "jb3wqU5HpR8=",
                "checksum": "bTwjHGs9DUA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-samba-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "+u6doYoYG5E=",
                "checksum": "MigrkoqKUGY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-snmp-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "6jLyEM69g6Y=",
                "checksum": "eNn4w4mbJSI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-talk-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "727yzVm9jYQ=",
                "checksum": "W/JE5R4RBFs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-telnet-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "AjsJ60JDOuU=",
                "checksum": "NTJS4WaPCvQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-tftp-server-is-not-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "MCCspWdD2Vk=",
                "checksum": "nLzRmxc1U4Q=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-cups-is-not-enabled",
                "type": "\u0001"
              }
            ],
            "filters": {
              "items": {
                "qZ0RZfIjQ18=": {
                  "mql": "asset.family.contains('linux')\n",
                  "code_id": "qZ0RZfIjQ18=",
                  "checksum": "t7a1zIeg9mI=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/qZ0RZfIjQ18=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Sensitive Services"
          },
          {
            "checks": [
              {
                "code_id": "oF0BVouZexA=",
                "checksum": "VEj4QtHD93Y=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-only-strong-ciphers-are-used",
                "type": "\u0001"
              },
              {
                "code_id": "oeEK/apU+Nk=",
                "checksum": "Cq7jso5Pjv8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-only-strong-kex-algorithms-are-used",
                "type": "\u0001"
              },
              {
                "code_id": "hqBfqXYMp9M=",
                "checksum": "axRogBmil0I=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-only-strong-mac-algorithms-are-used",
                "type": "\u0001"
              },
              {
                "code_id": "Yost34GlKyE=",
                "checksum": "gbbQSXXp5WE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcsshsshd-config-are-configured",
                "type": "\f"
              },
              {
                "code_id": "x7jUqDgSbuM=",
                "checksum": "hOs4AO8Zfv8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-ssh-private-host-key-files-are-configured",
                "type": "\u0019\f"
              },
              {
                "code_id": "mQG2kdC1CYg=",
                "checksum": "TdloD5SGq2c=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-ssh-public-host-key-files-are-configured",
                "type": "\u0019\f"
              },
              {
                "code_id": "XOMm7Xl0yi0=",
                "checksum": "0ztwUGLeFYE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-access-is-limited",
                "type": "\u0001"
              },
              {
                "code_id": "YiaSSdvN0BM=",
                "checksum": "Ky3PU09bYoQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-hostbasedauthentication-is-disabled",
                "type": "\u0004"
              },
              {
                "code_id": "leBbraAjdkQ=",
                "checksum": "MFVmTAuvayo=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-idle-timeout-interval-is-configured",
                "type": "\u0001"
              },
              {
                "code_id": "Daaqa///pts=",
                "checksum": "FMNF/Zh+gQ8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-ignorerhosts-is-enabled",
                "type": "\u0004"
              },
              {
                "code_id": "IxUOpWGEf8g=",
                "checksum": "+0Sq5L37MO0=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-logingracetime-is-set-to-one-minute-or-less",
                "type": "\u0001"
              },
              {
                "code_id": "lzX+6GYw7S0=",
                "checksum": "hcWX1MEyHNg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-loglevel-is-appropriate",
                "type": "\u0004"
              },
              {
                "code_id": "/Su2a1bp8TA=",
                "checksum": "hOlJto266Zs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-maxauthtries-is-set-to-4-or-less",
                "type": "\u0004"
              },
              {
                "code_id": "ubafkKyRPyY=",
                "checksum": "TJwPBPEmSR4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-permitemptypasswords-is-disabled",
                "type": "\u0004"
              },
              {
                "code_id": "tLcO8I/iXyk=",
                "checksum": "Ovu/w7HS0AQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-permituserenvironment-is-disabled",
                "type": "\u0004"
              },
              {
                "code_id": "wM8ZVC/LDTg=",
                "checksum": "7HGMnskIEZ0=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-protocol-is-set-to-2",
                "type": "\u0004"
              },
              {
                "code_id": "gmsQpeNjdsE=",
                "checksum": "VZNSddZAcDg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-root-login-is-disabled",
                "type": "\u0004"
              },
              {
                "code_id": "vk6ysFUKJtI=",
                "checksum": "pM+Dj8zowhk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-warning-banner-is-configured",
                "type": "\u0004"
              },
              {
                "code_id": "VAMnKimEy50=",
                "checksum": "fFopv3ohrhw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-x11-forwarding-is-disabled",
                "type": "\u0004"
              }
            ],
            "filters": {
              "items": {
                "VhY7HgiGzeI=": {
                  "mql": "asset.family.contains('linux')\npackage('openssh-server').installed\n",
                  "code_id": "VhY7HgiGzeI=",
                  "checksum": "PWR2i3qVoOA=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/VhY7HgiGzeI=",
                  "type": "\u0001"
                }
              }
            },
            "title": "SSH Server Configuration"
          },
          {
            "checks": [
              {
                "code_id": "lKmcBkurkyM=",
                "checksum": "Yeq9r8QUUmA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-audit-log-storage-size-is-configured",
                "type": "\u0001"
              },
              {
                "code_id": "SVOkJRXlADk=",
                "checksum": "luds1jDgIfg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-audit-logs-are-not-automatically-deleted",
                "type": "\u0001"
              },
              {
                "code_id": "RrFyOiEFiIM=",
                "checksum": "6dA4PVM94ys=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-auditd-is-installed-and-running",
                "type": "\u0001"
              },
              {
                "code_id": "58MqTpuplNk=",
                "checksum": "XgdjaaaU/fg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-auditing-for-processes-that-start-prior-to-auditd-is-enabled",
                "type": "\u0004"
              },
              {
                "code_id": "hLT/RMRLRTs=",
                "checksum": "pDusIaN7qac=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-changes-to-system-administration-scope-sudoers-is-collected",
                "type": "\u0001"
              },
              {
                "code_id": "NxpRrPxljBI=",
                "checksum": "Hidhjk0aNYU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-discretionary-access-control-permission-modification-events-are-collected",
                "type": "\u0001"
              },
              {
                "code_id": "+Z7BKJAHubo=",
                "checksum": "c/zRK64wRmI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-date-and-time-information-are-collected",
                "type": "\u0001"
              },
              {
                "code_id": "9oZVlCiYffA=",
                "checksum": "MCAsSMMPCJQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-mandatory-access-controls-are-collected",
                "type": "\u0004"
              },
              {
                "checksum": "sBRRcihlRhI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-network-environment-are-collected"
              },
              {
                "code_id": "I7rY3OB+Qus=",
                "checksum": "O9v4XdSIxeA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-usergroup-information-are-collected",
                "type": "\u0001"
              },
              {
                "code_id": "qKSWN1woC6U=",
                "checksum": "MUce6vKkTe4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-file-deletion-events-by-users-are-collected",
                "type": "\u0001"
              },
              {
                "code_id": "ZvXlb6v6KyE=",
                "checksum": "ndSN/ktjShI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-journald-is-configured-to-compress-large-log-files",
                "type": "\u0019\f"
              },
              {
                "code_id": "WQeoXe+JcK4=",
                "checksum": "pEo4ouZv0ow=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-journald-is-configured-to-send-logs-to-rsyslog",
                "type": "\u0019\f"
              },
              {
                "code_id": "e9xjBam83U8=",
                "checksum": "9l5CzAGZmP8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-journald-is-configured-to-write-logfiles-to-persistent-disk",
                "type": "\u0019\f"
              },
              {
                "code_id": "pIG2P/rTk2s=",
                "checksum": "sJnByZ0awtI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-kernel-module-loading-and-unloading-is-collected",
                "type": "\u0001"
              },
              {
                "checksum": "CepIHGYVVdk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected"
              },
              {
                "code_id": "FbII7up+bkQ=",
                "checksum": "oS4YrNRa4JY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-all-logfiles-are-configured",
                "type": "\u0019\f"
              },
              {
                "code_id": "nxVlUWzBV1c=",
                "checksum": "Uo+OxfXhcGM=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsyslog-default-file-permissions-configured",
                "type": "\u0004"
              },
              {
                "code_id": "z57ahl5vzoY=",
                "checksum": "K75AyatNNE0=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsyslog-is-installed-and-enabled",
                "type": "\u0001"
              },
              {
                "code_id": "ZK5uz6bt/dc=",
                "checksum": "Njp+QXbnc/A=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-session-initiation-information-is-collected",
                "type": "\u0001"
              },
              {
                "code_id": "YOOINWQ8Fwg=",
                "checksum": "Q+qVX6zmQ7Q=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-successful-file-system-mounts-are-collected",
                "type": "\u0004"
              },
              {
                "code_id": "ddRE8tg0OgY=",
                "checksum": "fyA3YbdJZGY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-sudo-logging-is-enabled",
                "type": "\u0004"
              },
              {
                "code_id": "f8x+lNDx0ao=",
                "checksum": "1WjUW5aMH/Y=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-administrator-actions-sudolog-are-collected",
                "type": "\u0004"
              },
              {
                "code_id": "QXi9pqUHCaI=",
                "checksum": "1cJuyg8bv5Y=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-is-disabled-when-audit-logs-are-full",
                "type": "\u0001"
              },
              {
                "code_id": "HLLc52kZRQg=",
                "checksum": "CvOCogK4xG8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-the-audit-configuration-is-immutable",
                "type": "\u0004"
              },
              {
                "code_id": "RrDA90/HV9w=",
                "checksum": "udVAsWqNPNk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-unsuccessful-unauthorized-file-access-attempts-are-collected",
                "type": "\u0001"
              }
            ],
            "filters": {
              "items": {
                "gyfREa1gL4A=": {
                  "mql": "asset.family.contains('linux')\nasset.kind != \"container-image\"\n",
                  "code_id": "gyfREa1gL4A=",
                  "checksum": "JZkb64iAcdI=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/gyfREa1gL4A=",
                  "type": "\u0001"
                }
              }
            },
            "title": "Logging"
          },
          {
            "checks": [
              {
                "code_id": "XrcAaXYX6aA=",
                "checksum": "1kpP9fiPmAQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-access-to-the-su-command-is-restricted",
                "type": "\u0001"
              },
              {
                "code_id": "nTE51L+DiAo=",
                "checksum": "x8zu7TJIZto=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-default-group-for-the-root-account-is-gid-0",
                "type": "\u0004"
              },
              {
                "code_id": "wE8/X4w6/GQ=",
                "checksum": "2yZqWk88Hmk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-each-user-member-of-a-group",
                "type": "\u0004"
              },
              {
                "code_id": "/Kj/I7IqKvY=",
                "checksum": "uiYrGnyP1kI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-gid-in-passwd-exists-in-group",
                "type": "\u0004"
              },
              {
                "code_id": "vf3LKN6rpLg=",
                "checksum": "fo6DvYCz3NQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-gids-exist",
                "type": "\u0004"
              },
              {
                "code_id": "YNN6XbHEMSg=",
                "checksum": "IKHfNacnwzs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-group-names-exist",
                "type": "\u0004"
              },
              {
                "code_id": "/xtAflG+77k=",
                "checksum": "CPlaJleY3Z8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-uids-exist",
                "type": "\u0004"
              },
              {
                "code_id": "003uGoeCJx8=",
                "checksum": "/sAAGm5+Z5s=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-user-names-exist",
                "type": "\u0004"
              },
              {
                "code_id": "Weu8LLZyY6g=",
                "checksum": "caP1T/EfYKA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-root-group-is-empty",
                "type": "\u0004"
              },
              {
                "code_id": "8KD9vCPQy4E=",
                "checksum": "0bNhDoub+B4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-shadow-group-is-empty",
                "type": "\u0004"
              },
              {
                "code_id": "usnsqpdfgm4=",
                "checksum": "MQ7xZ8n2G30=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-accounts-are-non-login",
                "type": "\u0019\f"
              },
              {
                "code_id": "ZydIs1lDnr8=",
                "checksum": "5wH8qVah3vw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-uid-min-is-set-to-1000",
                "type": "\f"
              }
            ],
            "filters": {
              "items": {
                "qZ0RZfIjQ18=": {
                  "mql": "asset.family.contains('linux')\n",
                  "code_id": "qZ0RZfIjQ18=",
                  "checksum": "t7a1zIeg9mI=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/qZ0RZfIjQ18=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Users and groups"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The Mondoo Linux Security policy provides guidance for establishing a secure baseline configuration for Linux systems running on x64 platforms.\n\nThis policy includes queries to help harden Linux systems by:\n  - Identifying problematic services that may be running\n  - Identifying loose permissions on sensitive system configuration files\n  - Ensuring logging and auditing services are properly configured and running\n  - Hardening SSH configurations\n  - Ensure users and groups are securely configured\n  - Identifying misconfigured Kernel networking configurations\n\nThis policy has been developed for Red Hat (RHEL), Debian, Ubuntu, and SUSE (SLES) derivative distributions running on x64 architectures.\nSome queries may be skipped depending on your particular distribution, installation type, or underlying infrastructure.\nThe overall guidance within this policy broadly assumes that operations are being performed as the root user.\nOperations performed using sudo instead of the root user may produce unexpected results or fail to make the intended changes to the system.\nNon-root users may not be able to access certain areas of the system, especially after remediation has been performed. It is advisable to verify\nroot users path integrity and the integrity of any programs being run prior to execution of commands and scripts included in this benchmark.\n\n## Local scan\n\nLocal scan refer to scans of files and operating systems where cnspec is installed.\n\nTo scan the `localhost` against this policy:\n\n```bash\ncnspec scan local\n```\n\n## Remote scan\n\nRemote scans use cnspec providers to retrieve on-demand scan results without having to install any agents.\n\n### Prerequisites\n\nRemote scans of Linux hosts requires authentication such as SSH keys.\n\n### Scan a remote Linux host (SSH authentication)\n\n```bash\ncnspec scan ssh \u003cuser\u003e@\u003cIP_ADDRESS\u003e -i /path/to/ssh_key\n```\n\n## Join the community!\n\nOur goal is to build policies that are simple to deploy, accurate, and actionable.\n\nIf you have any suggestions for how to improve this policy, or if you need support, [join the community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions."
        },
        "scoring_system": "highest impact",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "security",
          "mondoo.com/platform": "linux"
        },
        "props": [
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/checkDefaultMatchBlock",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/checkDefaultMatchBlock"
              }
            ]
          },
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/excludedMatchBlocks",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/excludedMatchBlocks"
              }
            ]
          },
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecurityAuditFiles",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              },
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
              }
            ]
          },
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecurityKexAlgos",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityKexAlgos"
              }
            ]
          },
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecurityMacAlgos",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityMacAlgos"
              }
            ]
          },
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecuritySshdCiphers",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySshdCiphers"
              }
            ]
          },
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecuritySudoGroup",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySudoGroup"
              }
            ]
          },
          {
            "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecuritySudoersFiles",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySudoersFiles"
              }
            ]
          }
        ],
        "local_content_checksum": "e//WibA2O0g=",
        "graph_content_checksum": "QNUYaeyYe/Y=",
        "local_execution_checksum": "DuklL1a5QII=",
        "graph_execution_checksum": "MJcoEfs95tM=",
        "computed_filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            },
            "+hNUsU8LJQU=": {
              "mql": "asset.family.contains(/redhat|debian/) == false \u0026\u0026 asset.platform != \"amazonlinux\"",
              "code_id": "+hNUsU8LJQU=",
              "checksum": "4lOb8IKR03g=",
              "mrn": "//policy.api.mondoo.app/filter/+hNUsU8LJQU=",
              "type": "\u0004"
            },
            "6JjwtW5h8yk=": {
              "mql": "package('openssh-server').installed",
              "code_id": "6JjwtW5h8yk=",
              "checksum": "hFWTa/waBVM=",
              "mrn": "//policy.api.mondoo.app/filter/6JjwtW5h8yk=",
              "type": "\u0004"
            },
            "Hgs86AORbWw=": {
              "mql": "asset.family.contains(/redhat|debian/) == true",
              "code_id": "Hgs86AORbWw=",
              "checksum": "fM/w3a2/VkM=",
              "mrn": "//policy.api.mondoo.app/filter/Hgs86AORbWw=",
              "type": "\u0004"
            },
            "SjETaXBC4Zs=": {
              "mql": "package('openssh-server').version  \u003e= semver(\"6\") \u0026\u0026 package('openssh-server').version \u003c semver(\"7.6\")",
              "code_id": "SjETaXBC4Zs=",
              "checksum": "FXs6HkAIVmQ=",
              "mrn": "//policy.api.mondoo.app/filter/SjETaXBC4Zs=",
              "type": "\u0004"
            },
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            },
            "VhY7HgiGzeI=": {
              "mql": "asset.family.contains('linux')\npackage('openssh-server').installed\n",
              "code_id": "VhY7HgiGzeI=",
              "checksum": "PWR2i3qVoOA=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/VhY7HgiGzeI=",
              "type": "\u0001"
            },
            "Z50YyJG54ZE=": {
              "mql": "asset.family.contains(\"debian\")",
              "code_id": "Z50YyJG54ZE=",
              "checksum": "0jShjMEsdwc=",
              "mrn": "//policy.api.mondoo.app/filter/Z50YyJG54ZE=",
              "type": "\u0004"
            },
            "gyfREa1gL4A=": {
              "mql": "asset.family.contains('linux')\nasset.kind != \"container-image\"\n",
              "code_id": "gyfREa1gL4A=",
              "checksum": "JZkb64iAcdI=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/gyfREa1gL4A=",
              "type": "\u0001"
            },
            "iC0Z61Ug6yw=": {
              "mql": "asset.family.contains(/redhat|debian/) == false",
              "code_id": "iC0Z61Ug6yw=",
              "checksum": "JRBbea8s8qs=",
              "mrn": "//policy.api.mondoo.app/filter/iC0Z61Ug6yw=",
              "type": "\u0004"
            },
            "qZ0RZfIjQ18=": {
              "mql": "asset.family.contains('linux')\n",
              "code_id": "qZ0RZfIjQ18=",
              "checksum": "t7a1zIeg9mI=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/filter/qZ0RZfIjQ18=",
              "type": "\u0004"
            },
            "xJDq/JxOoLM=": {
              "mql": "asset.family.contains(\"redhat\") || asset.platform == \"amazonlinux\"",
              "code_id": "xJDq/JxOoLM=",
              "checksum": "fJWxbo76iRM=",
              "mrn": "//policy.api.mondoo.app/filter/xJDq/JxOoLM=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "scoring_count": 101,
          "total_count": 101
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-macos-inventory",
        "name": "macOS Inventory Pack",
        "version": "1.6.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['machine_model']\n",
                "code_id": "32dA9oG/ra4=",
                "checksum": "ccacguDYbTk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-machine-model-identifier",
                "type": "\n",
                "title": "Machine model identifier"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['machine_name']\n",
                "code_id": "T5lCA0ST7Gg=",
                "checksum": "yZD447MhdmE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-machine-model-name",
                "type": "\n",
                "title": "Machine model name"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['model_number']\n",
                "code_id": "UaI2L7fcgBc=",
                "checksum": "7xKIFP9rClg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-model-part-number",
                "type": "\n",
                "title": "Model part number"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['serial_number']\n",
                "code_id": "X+ZPyamdd48=",
                "checksum": "CTUkBGUFaXo=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-serial-number",
                "type": "\n",
                "title": "System serial number"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['chip_type']\n",
                "code_id": "ljXrlbjJUsM=",
                "checksum": "uF4RTJV/qsM=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-cpu-type",
                "type": "\n",
                "title": "CPU type"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['physical_memory']\n",
                "code_id": "UaIu/LgmuxA=",
                "checksum": "U9Endc1udM4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-physical-memory",
                "type": "\n",
                "title": "Physical memory size"
              },
              {
                "mql": "asset { kind title platform name arch runtime version }",
                "code_id": "Hl4/DeiN8wc=",
                "checksum": "baa+rlkuVFg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-info",
                "type": "\f",
                "title": "Asset information"
              },
              {
                "mql": "os.hostname",
                "code_id": "aRSd7vfjN/s=",
                "checksum": "6oWj/RhTDBE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-hostname",
                "type": "\u0007",
                "title": "Hostname"
              },
              {
                "mql": "os.uptime",
                "code_id": "dTMk4H4V270=",
                "checksum": "MkEK1ikiW8E=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-uptime",
                "type": "\t",
                "title": "Operating system uptime",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "processes { pid command flags }",
                "code_id": "pB9cpZY/Uy0=",
                "checksum": "tPvUt3AO4jc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-processes",
                "type": "\u0019\f",
                "title": "Running processes",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "kernel.modules { name loaded }",
                "code_id": "onEYxXTUj2k=",
                "checksum": "O8g0goUPv4A=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-kernel-modules",
                "type": "\u0019\f",
                "title": "Kernel modules",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "mount.list { path fstype device options }",
                "code_id": "5pm2mmNGelY=",
                "checksum": "UZOpAK9zJGs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-mounts",
                "type": "\u0019\f",
                "title": "Mounted devices"
              },
              {
                "mql": "users.where( name != /^_/ \u0026\u0026 shell != \"/usr/bin/false\" \u0026\u0026 name != \"root\")",
                "code_id": "icL33n4hZEA=",
                "checksum": "Pkix5MUSSMc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-users",
                "type": "\u0019\f",
                "title": "Regular users"
              },
              {
                "mql": "packages { name version arch installed epoch origin purl }",
                "code_id": "XAoGqylTzOA=",
                "checksum": "rRNPMIy+P20=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-packages",
                "type": "\u0019\f",
                "title": "Installed packages"
              },
              {
                "mql": "services.where(running == true) { name running enabled masked type }",
                "code_id": "qWE8ALBsqTE=",
                "checksum": "LJvd9Uz4dUw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-running-services",
                "type": "\u0019\f",
                "title": "Running services",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
                "code_id": "GHihoQG+Q/Y=",
                "checksum": "y3hc3QRDjcI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-ports-listening",
                "type": "\u0019\f",
                "title": "Listening ports",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
                "code_id": "GHihoQG+Q/Y=",
                "checksum": "c32XHvkp/S4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-active-connections",
                "type": "\u0019\f",
                "title": "Active network connections",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "command(\"ifconfig\").stdout",
                "code_id": "5UMVP+xd+1M=",
                "checksum": "O1K90MQwISs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-interface-configuration",
                "type": "\u0007",
                "title": "Network interface configuration",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "sshd.config.params",
                "code_id": "eteO7RzprLM=",
                "checksum": "lagyLDtJph4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-sshd-interface-configuration",
                "type": "\u001a\u0007\u0007",
                "title": "sshd configuration"
              },
              {
                "mql": "parse.plist('/Library/Preferences/com.apple.SoftwareUpdate.plist').params['RecommendedUpdates']",
                "code_id": "sOkUofgxekk=",
                "checksum": "KhEkBWGjXAA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-recommended-software-updates",
                "type": "\n",
                "title": "Recommended software updates"
              },
              {
                "mql": "machine.system { sku serial family version product uuid manufacturer }",
                "code_id": "l8G0PTcuvmM=",
                "checksum": "sann1vP5Z9w=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-smbios-system",
                "type": "\f",
                "title": "SMBIOS System information"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPStorageDataType -json').stdout).params\n",
                "code_id": "rj05GUYyQn0=",
                "checksum": "7deID3uJDLk=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-storage",
                "type": "\n",
                "title": "Storage Data"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPPowerDataType -json').stdout).params\n",
                "code_id": "3DLKelOTlKU=",
                "checksum": "Q3BOLgyepSQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-power",
                "type": "\n",
                "title": "Power Data"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPNetworkDataType -json').stdout).params\n",
                "code_id": "xAoHldFuZko=",
                "checksum": "tXaaxIVg0XI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-network",
                "type": "\n",
                "title": "Network Data"
              },
              {
                "mql": "parse.json(content: command('system_profiler SPConfigurationProfileDataType -json').stdout).params\n",
                "code_id": "y98LMJWBisU=",
                "checksum": "sr0akxGadCw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-profile",
                "type": "\n",
                "title": "Configuration Profile Data"
              },
              {
                "mql": "command('w -h').stdout",
                "code_id": "VDW0zuKNTNA=",
                "checksum": "fNtXgRQepmg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-logged-in-users",
                "type": "\u0007",
                "title": "Logged-in users"
              },
              {
                "mql": "macos.systemExtensions { active enabled identifier state version }",
                "code_id": "dtebBdjPOXE=",
                "checksum": "sHHHqOJ6spw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-system-extensions",
                "type": "\u0019\f",
                "title": "macOS System Extensions"
              }
            ],
            "type": 1,
            "uid": "default-queries",
            "filters": {
              "items": {
                "X8q+Gj2b/fY=": {
                  "mql": "asset.platform == \"macos\"",
                  "code_id": "X8q+Gj2b/fY=",
                  "checksum": "mqmaCQi8210=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-macos-inventory/filter/X8q+Gj2b/fY=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Default Queries"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The macOS Inventory Pack by Mondoo retrieves data about macOS hosts for asset inventory.\n\n## Local scan\nTo run this pack locally on a macOS host:\n\n```bash\ncnquery scan local -f mondoo-macos-inventory.mql.yaml\n```\n\n## Remote scan\nTo run this pack against a remote macOS host using SSH (requires Remote Management is activated in System Preferences):\n\n```bash\ncnquery scan ssh \u003cuser\u003e@\u003cip_address\u003e -i \u003cidentity_file\u003e -f mondoo-macos-inventory.mql.yaml\n```\n\n## Join the community!\nOur goal is to build query packs that are simple to deploy and provide accurate and useful data.\n\nIf you have any suggestions for improving this query pack, or if you need support, [join the Mondoo community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions.\n"
        },
        "scoring_system": "data only",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "best-practices",
          "mondoo.com/platform": "macos"
        },
        "local_content_checksum": "saVexoMR59A=",
        "graph_content_checksum": "iv+dfm7tbtY=",
        "local_execution_checksum": "GugOXQ36fRw=",
        "graph_execution_checksum": "ke58t6IM83Q=",
        "computed_filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            },
            "X8q+Gj2b/fY=": {
              "mql": "asset.platform == \"macos\"",
              "code_id": "X8q+Gj2b/fY=",
              "checksum": "mqmaCQi8210=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-macos-inventory/filter/X8q+Gj2b/fY=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 27,
          "total_count": 27
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom",
        "name": "Mondoo SBOM",
        "version": "1.0.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "mql": "asset { platform version build family title platformMetadata }",
                "code_id": "jx6ZnSyFr0o=",
                "checksum": "GROHYgrWRd4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-asset",
                "type": "\f",
                "title": "Asset summary information"
              }
            ],
            "filters": {
              "items": {
                "F+ghXkR5x/0=": {
                  "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"vmware-esxi\" || asset.platform == \"vmware-vsphere\" || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
                  "code_id": "F+ghXkR5x/0=",
                  "checksum": "jXbxvc4E76I=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/F+ghXkR5x/0=",
                  "type": "\u0004"
                }
              }
            }
          },
          {
            "queries": [
              {
                "mql": "kernel.installed",
                "code_id": "oyTxcyFFxp0=",
                "checksum": "ouXtVoL8tMs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-kernel-installed",
                "type": "\u0019\n",
                "title": "Installed kernel"
              }
            ],
            "filters": {
              "items": {
                "0U0ANw7sPc4=": {
                  "mql": "asset.family.contains('linux')\nasset.runtime != 'container' \u0026\u0026 asset.kind != 'container' \u0026\u0026 asset.kind != 'container-image'\n",
                  "code_id": "0U0ANw7sPc4=",
                  "checksum": "FSNvZExBvY0=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/0U0ANw7sPc4=",
                  "type": "\u0001"
                }
              }
            }
          },
          {
            "queries": [
              {
                "mql": "packages { name version origin format arch purl status }",
                "code_id": "NX7Fhn2QkMk=",
                "checksum": "CQlMbf+aZ9g=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-packages",
                "type": "\u0019\f",
                "title": "Installed packages"
              },
              {
                "mql": "python.packages { name version purl }",
                "code_id": "WIu9j8nCbRo=",
                "checksum": "qmVbyCdHzAw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-python-packages",
                "type": "\u0019\f",
                "title": "Python Packages"
              },
              {
                "mql": "npm.packages { name version purl }",
                "code_id": "TtjnwMN2RWY=",
                "checksum": "qzqkpu4KZCE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-npm-packages",
                "type": "\u0019\f",
                "title": "NodeJS Packages"
              }
            ],
            "filters": {
              "items": {
                "0YsqcS4odYM=": {
                  "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
                  "code_id": "0YsqcS4odYM=",
                  "checksum": "geFsJFdVbAo=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/0YsqcS4odYM=",
                  "type": "\u0004"
                }
              }
            }
          }
        ],
        "scoring_system": "data only",
        "local_content_checksum": "JYKIIp1vbII=",
        "graph_content_checksum": "FY7nlcabRJ8=",
        "local_execution_checksum": "/Sra8qFzwkQ=",
        "graph_execution_checksum": "MaRxtdl9GiY=",
        "computed_filters": {
          "items": {
            "0U0ANw7sPc4=": {
              "mql": "asset.family.contains('linux')\nasset.runtime != 'container' \u0026\u0026 asset.kind != 'container' \u0026\u0026 asset.kind != 'container-image'\n",
              "code_id": "0U0ANw7sPc4=",
              "checksum": "FSNvZExBvY0=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/0U0ANw7sPc4=",
              "type": "\u0001"
            },
            "0YsqcS4odYM=": {
              "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
              "code_id": "0YsqcS4odYM=",
              "checksum": "geFsJFdVbAo=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/0YsqcS4odYM=",
              "type": "\u0004"
            },
            "F+ghXkR5x/0=": {
              "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"vmware-esxi\" || asset.platform == \"vmware-vsphere\" || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
              "code_id": "F+ghXkR5x/0=",
              "checksum": "jXbxvc4E76I=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-sbom/filter/F+ghXkR5x/0=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 5,
          "total_count": 5
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-vex",
        "name": "Mondoo Vulnerability Exchange",
        "version": "1.0.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "mql": "shodan.host.vulnerabilities {\n  vulnerability.exchange(id: _, source: 'shodan')\n}\n",
                "code_id": "l1UaM2ZSnQY=",
                "checksum": "4ZAtMfr90ng=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-vex-shodan-vulnerabilities",
                "type": "\u0019\f",
                "title": "Shodan host vulnerabilities"
              }
            ],
            "filters": {
              "items": {
                "a6sWxVAvpsc=": {
                  "mql": "asset.platform == \"shodan-host\"\n",
                  "code_id": "a6sWxVAvpsc=",
                  "checksum": "BGSqi39YP7M=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-vex/filter/a6sWxVAvpsc=",
                  "type": "\u0004"
                }
              }
            }
          }
        ],
        "scoring_system": "data only",
        "local_content_checksum": "WW+1cwi9nnA=",
        "graph_content_checksum": "ffqDlrbDQ08=",
        "local_execution_checksum": "C4dqaR298YE=",
        "graph_execution_checksum": "Ug1F8r5sB1c=",
        "computed_filters": {
          "items": {
            "a6sWxVAvpsc=": {
              "mql": "asset.platform == \"shodan-host\"\n",
              "code_id": "a6sWxVAvpsc=",
              "checksum": "BGSqi39YP7M=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-vex/filter/a6sWxVAvpsc=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 1,
          "total_count": 1
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-windows-asset-inventory",
        "name": "Windows Asset Inventory Pack",
        "version": "1.6.1",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "queries": [
              {
                "mql": "asset { kind title platform name arch runtime version }",
                "code_id": "Hl4/DeiN8wc=",
                "checksum": "8X0cCKIqjP8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-asset-info",
                "type": "\f",
                "title": "Asset information"
              },
              {
                "mql": "os.hostname",
                "code_id": "aRSd7vfjN/s=",
                "checksum": "vkuc2RswhTg=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-hostname",
                "type": "\u0007",
                "title": "Hostname"
              },
              {
                "mql": "os.uptime",
                "code_id": "dTMk4H4V270=",
                "checksum": "2ttDeD79Rjc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-uptime",
                "type": "\t",
                "title": "Operating system uptime",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "processes { pid executable }",
                "code_id": "sV59XCBfEzc=",
                "checksum": "Cjnv87BqhVM=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-processes",
                "type": "\u0019\f",
                "title": "Running processes",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "users",
                "code_id": "+WO1rPLNsI0=",
                "checksum": "KEEeYNfgJSM=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-users",
                "type": "\u0019\f",
                "title": "Regular users"
              },
              {
                "mql": "packages { name version arch installed epoch origin purl }",
                "code_id": "XAoGqylTzOA=",
                "checksum": "TWijpRAqeqY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-packages",
                "type": "\u0019\f",
                "title": "Installed packages"
              },
              {
                "mql": "windows.hotfixes { hotfixId installedOn }",
                "code_id": "C/7BpXIi2O8=",
                "checksum": "vaXP3Fg7aXs=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-hotfixes",
                "type": "\u0019\f",
                "title": "All installed Windows hotfixes"
              },
              {
                "mql": "windows.features.where(installed == true) { path name displayName }",
                "code_id": "Uu1m3R02EU0=",
                "checksum": "q0sxmHSmia0=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-features",
                "type": "\u0019\f",
                "title": "Installed Windows features"
              },
              {
                "mql": "services.where(running == true) { name running enabled masked type }",
                "code_id": "qWE8ALBsqTE=",
                "checksum": "HNwxGezk/D8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-running-services",
                "type": "\u0019\f",
                "title": "Running services",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "ports.listening { user state port address protocol process remoteAddress remotePort }",
                "code_id": "Ms4tg4zNmLg=",
                "checksum": "qRSvZUmQU+c=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-ports-listening",
                "type": "\u0019\f",
                "title": "Listening ports",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
                "code_id": "GHihoQG+Q/Y=",
                "checksum": "fqPhafr3Y/Y=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-active-connections",
                "type": "\u0019\f",
                "title": "Active connections of the system",
                "filters": {
                  "items": {
                    "MJjSS+TKC/k=": {
                      "mql": "mondoo.capabilities.contains(\"run-command\")",
                      "code_id": "MJjSS+TKC/k=",
                      "checksum": "EtcRmREp5K8=",
                      "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "windows.computerInfo['CsNetworkAdapters']",
                "code_id": "1rAfRASPrBE=",
                "checksum": "DjDsWU65fUo=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-interface-configuration",
                "type": "\n",
                "title": "Network interfaces"
              },
              {
                "mql": "windows.computerInfo",
                "code_id": "xGgH/3MNnBw=",
                "checksum": "x2hRN4dhHww=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-computer-info",
                "type": "\n",
                "title": "Windows Computer/ System information"
              },
              {
                "mql": "windows.security.products { guid state type name productState signatureState timestamp }",
                "code_id": "/KP0iojJn88=",
                "checksum": "8ZEsFp87vCU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-security-products",
                "type": "\u0019\f",
                "title": "Installed Security Products",
                "filters": {
                  "items": {
                    "rSl2EbAIW7E=": {
                      "mql": "windows.computerInfo['OsProductType'] == 1\n",
                      "code_id": "rSl2EbAIW7E=",
                      "checksum": "tTjIZqf9Suw=",
                      "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "windows.bitlocker.volumes { deviceID driveLetter encryptionMethod version persistentVolumeID protectionStatus lockStatus conversionStatus }",
                "code_id": "xDQ2x2TGnsw=",
                "checksum": "NAWthUvMQl8=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-bitlocker-volumes",
                "type": "\u0019\f",
                "title": "BitLocker Volumes",
                "filters": {
                  "items": {
                    "rSl2EbAIW7E=": {
                      "mql": "windows.computerInfo['OsProductType'] == 1\n",
                      "code_id": "rSl2EbAIW7E=",
                      "checksum": "tTjIZqf9Suw=",
                      "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "windows.security.health { autoUpdate internetSettings securityCenterService firewall uac antiVirus antiSpyware }",
                "code_id": "tK1z98HP6uo=",
                "checksum": "1Sfp7YhKJTQ=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-security-center-health",
                "type": "\f",
                "title": "Windows Security Health Information",
                "filters": {
                  "items": {
                    "rSl2EbAIW7E=": {
                      "mql": "windows.computerInfo['OsProductType'] == 1\n",
                      "code_id": "rSl2EbAIW7E=",
                      "checksum": "tTjIZqf9Suw=",
                      "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "windows.firewall { settings profiles { allowUnicastResponseToMulticast logIgnored enabled allowLocalFirewallRules allowLocalIPsecRules logAllowed logBlocked allowUserApps instanceID allowUserPorts name notifyOnListen logFileName enableStealthModeForIPsec defaultInboundAction logMaxSizeKilobytes defaultOutboundAction allowInboundRules } }",
                "code_id": "MxQKtX+F8Ac=",
                "checksum": "Zg2qVYvZktE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-firewall-settings",
                "type": "\f",
                "title": "Windows Firewall settings"
              },
              {
                "mql": "windows.firewall.rules { edgeTraversalPolicy status instanceID enabled looseSourceMapping displayGroup policyStoreSource name enforcementStatus description direction displayName policyStoreSourceType primaryStatus localOnlyMapping action }",
                "code_id": "jiMv4+1LJ8M=",
                "checksum": "Vz5F477WGRY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-firewall-rules",
                "type": "\u0019\f",
                "title": "Windows Firewall rules"
              },
              {
                "mql": "auditpol { exclusionsetting machinename policytarget subcategory inclusionsetting subcategoryguid }",
                "code_id": "jHaLgKkdxR4=",
                "checksum": "Al+6dnjM/ZI=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-audit-policies",
                "type": "\u0019\f",
                "title": "Windows audit policies"
              },
              {
                "mql": "secpol.systemaccess",
                "code_id": "HLWKIpHiOI0=",
                "checksum": "5p/6eHAmL3Q=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-system-access-policy",
                "type": "\u001a\u0007\u0007",
                "title": "Windows local System Access security policy"
              },
              {
                "mql": "secpol.eventaudit",
                "code_id": "PoCxzrBMxFc=",
                "checksum": "ZvEINplpv7Q=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-event-audit-policy",
                "type": "\u001a\u0007\u0007",
                "title": "Windows local Event Audit security policy"
              },
              {
                "mql": "secpol.registryvalues",
                "code_id": "fCWZPM8wuZA=",
                "checksum": "piroXYHsWrU=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-registry-values-policy",
                "type": "\u001a\u0007\u0007",
                "title": "Windows local Registry Values security policy"
              },
              {
                "mql": "secpol.privilegerights",
                "code_id": "xScHfmcLDFA=",
                "checksum": "11/3NadgObA=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-privilege-rights-policy",
                "type": "\u001a\u0007\u0019\u0007",
                "title": "Windows local Privilege Rights security policy"
              },
              {
                "mql": "machine.baseboard { manufacturer version serial assetTag product }",
                "code_id": "mpBx19SqXqo=",
                "checksum": "c19suYwIpgc=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-baseboard",
                "type": "\f",
                "title": "SMBIOS baseboard (or module) information"
              },
              {
                "mql": "machine.bios { vendor version releaseDate }",
                "code_id": "n2Oxd+mY57E=",
                "checksum": "ILYtYu5itbw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-bios",
                "type": "\f",
                "title": "SMBIOS BIOS information"
              },
              {
                "mql": "machine.system { sku serial family version product uuid manufacturer }",
                "code_id": "l8G0PTcuvmM=",
                "checksum": "QTEB6SDFUbY=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-system",
                "type": "\f",
                "title": "SMBIOS System information"
              },
              {
                "mql": "machine.chassis { manufacturer serial version assetTag }",
                "code_id": "3d75ZaJW3Vw=",
                "checksum": "SxzvNX+zYKw=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-chassis",
                "type": "\f",
                "title": "SMBIOS Chassis information"
              },
              {
                "mql": "parse.json(content: powershell(\"Get-ScheduledTask | ConvertTo-Json\").stdout).params\n",
                "code_id": "GkAL92FuER0=",
                "checksum": "VmLKQrUzeE4=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-scheduled-tasks",
                "type": "\n",
                "title": "Scheduled tasks"
              },
              {
                "mql": "parse.json(content: powershell(\"Get-Process -IncludeUserName explorer | Select-Object Username | ConvertTo-Json\").stdout).params\n",
                "code_id": "9+BkxBGdRVY=",
                "checksum": "ukkO9wTyrTE=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-logged-in-users",
                "type": "\n",
                "title": "Logged-in users"
              },
              {
                "mql": "powershell('(Get-Command ExSetup.exe | ForEach-Object { $_.FileVersionInfo } | Select-Object -First 1).FileVersion').stdout\n",
                "code_id": "Ju1swmQcxfA=",
                "checksum": "KL4LlmH8o2c=",
                "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-exchange-server-version",
                "type": "\u0007",
                "title": "Exchange Server Version",
                "filters": {
                  "items": {
                    "ejKNUyEFvfU=": {
                      "mql": "package('Microsoft Exchange Server').installed\n",
                      "code_id": "ejKNUyEFvfU=",
                      "checksum": "cpMyYTF9fXY=",
                      "mrn": "//policy.api.mondoo.app/filter/ejKNUyEFvfU=",
                      "type": "\u0004"
                    }
                  }
                }
              }
            ],
            "type": 1,
            "uid": "default-queries",
            "filters": {
              "items": {
                "FuF3eusA7QQ=": {
                  "mql": "asset.platform == \"windows\"",
                  "code_id": "FuF3eusA7QQ=",
                  "checksum": "la7L6DCUL98=",
                  "mrn": "//policy.api.mondoo.app/policies/mondoo-windows-asset-inventory/filter/FuF3eusA7QQ=",
                  "type": "\u0004"
                }
              }
            },
            "title": "Default Queries"
          }
        ],
        "license": "BUSL-1.1",
        "docs": {
          "desc": "The Windows Asset Inventory Pack by Mondoo retrieves data about Windows hosts for asset inventory.\n\n## Local scan\nTo run this pack locally on a Windows host:\n\n```bash\ncnquery scan local -f mondoo-windows-inventory.mql.yaml\n```\n\n## Remote scan\nTo run this pack against a remote macOS host using SSH (requires Remote Management is activated in System Preferences):\n\n```bash\ncnquery scan winrm \u003cuser\u003e@\u003cip_address\u003e -f mondoo-windows-inventory.mql.yaml\n```\n\n## Join the community!\nOur goal is to build query packs that are simple to deploy and provide accurate and useful data.\n\nIf you have any suggestions for improving this query pack, or if you need support, [join the Mondoo community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions.\n"
        },
        "scoring_system": "data only",
        "authors": [
          {
            "name": "Mondoo, Inc",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "best-practices",
          "mondoo.com/platform": "windows"
        },
        "local_content_checksum": "iRJ2G+9Up4k=",
        "graph_content_checksum": "Vp45tkXhMtE=",
        "local_execution_checksum": "4jWAr4RZCOE=",
        "graph_execution_checksum": "tRkRzZGPn/o=",
        "computed_filters": {
          "items": {
            "FuF3eusA7QQ=": {
              "mql": "asset.platform == \"windows\"",
              "code_id": "FuF3eusA7QQ=",
              "checksum": "la7L6DCUL98=",
              "mrn": "//policy.api.mondoo.app/policies/mondoo-windows-asset-inventory/filter/FuF3eusA7QQ=",
              "type": "\u0004"
            },
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            },
            "ejKNUyEFvfU=": {
              "mql": "package('Microsoft Exchange Server').installed\n",
              "code_id": "ejKNUyEFvfU=",
              "checksum": "cpMyYTF9fXY=",
              "mrn": "//policy.api.mondoo.app/filter/ejKNUyEFvfU=",
              "type": "\u0004"
            },
            "rSl2EbAIW7E=": {
              "mql": "windows.computerInfo['OsProductType'] == 1\n",
              "code_id": "rSl2EbAIW7E=",
              "checksum": "tTjIZqf9Suw=",
              "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "data_count": 30,
          "total_count": 30
        }
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/risk-factors",
        "name": "Mondoo Risk Factors analysis",
        "version": "1.0.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "scoring_system": "average",
        "authors": [
          {
            "name": "Mondoo",
            "email": "hello@mondoo.com"
          }
        ],
        "risk_factors": [
          {
            "mrn": "//policy.api.mondoo.app/risks/system-is-eol",
            "checksum": "O66bTSKUyGk=",
            "title": "End of life (EOL)",
            "docs": {
              "active": "The system is end of life (EOL) and no longer gets security updates.",
              "inactive": "The system is not end of life (EOL) and still gets security updates."
            },
            "filters": {
              "items": {
                "6MyoXYw7VKE=": {
                  "mql": "asset.family.contains('os')",
                  "code_id": "6MyoXYw7VKE=",
                  "checksum": "61SN1I5iWz0=",
                  "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
                  "type": "\u0004"
                }
              }
            },
            "scope": 2,
            "deprecated_v11_magnitude": 1,
            "deprecated_v11_is_absolute": true,
            "magnitude": {
              "value": 1,
              "is_toxic": true
            },
            "indicator": "eol"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/vuln-remote-exploitable",
            "checksum": "zV+4ygBEyp8=",
            "title": "Remotely exploitable vulnerability",
            "docs": {
              "active": "The vulnerability can be remotely exploited by an attacker.",
              "inactive": "The vulnerability cannot be remotely exploited by an attacker."
            },
            "filters": {
              "items": {
                "6MyoXYw7VKE=": {
                  "mql": "asset.family.contains('os')",
                  "code_id": "6MyoXYw7VKE=",
                  "checksum": "61SN1I5iWz0=",
                  "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
                  "type": "\u0004"
                }
              }
            },
            "scope": 5,
            "deprecated_v11_magnitude": 0.4,
            "deprecated_v11_is_absolute": true,
            "magnitude": {
              "value": 0.4,
              "is_toxic": true
            },
            "indicator": "code-execution"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/vuln-known-exploited",
            "checksum": "4uiusxyAKco=",
            "title": "Known exploited vulnerability",
            "docs": {
              "active": "The vulnerability is known to be exploited.",
              "inactive": "The vulnerability is not known to be exploited."
            },
            "filters": {
              "items": {
                "6MyoXYw7VKE=": {
                  "mql": "asset.family.contains('os')",
                  "code_id": "6MyoXYw7VKE=",
                  "checksum": "61SN1I5iWz0=",
                  "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
                  "type": "\u0004"
                }
              }
            },
            "scope": 5,
            "deprecated_v11_magnitude": 0.6,
            "deprecated_v11_is_absolute": true,
            "magnitude": {
              "value": 0.6,
              "is_toxic": true
            },
            "indicator": "exploitable"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/sshd-service",
            "checksum": "j6jDbN0ttUE=",
            "title": "CVE in SSHd service",
            "docs": {
              "active": "A vulnerable SSHd service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the SSHd service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "n3qCzBJJGo8=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('sshd').installed\n",
                  "code_id": "n3qCzBJJGo8=",
                  "checksum": "IfP4dG7jyc0=",
                  "mrn": "//policy.api.mondoo.app/filter/n3qCzBJJGo8=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('sshd').running",
                "code_id": "QJastAOHr60=",
                "checksum": "PtnXsHshjZg=",
                "mrn": "//policy.api.mondoo.app/queries/sshd-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 6,
            "deprecated_v11_magnitude": 0.7,
            "deprecated_v11_is_absolute": true,
            "magnitude": {
              "value": 0.7,
              "is_toxic": true
            },
            "software": [
              {
                "name": "openssh-server"
              },
              {
                "type": "alpm",
                "name": "openssh"
              }
            ],
            "resources": [
              {
                "name": "sshd"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/chrony-service",
            "checksum": "9emaEBRDDrI=",
            "title": "CVE in chrony service",
            "docs": {
              "active": "A vulnerable chrony service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the chrony service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "mWzpm+ibQcY=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('chrony').installed\n",
                  "code_id": "mWzpm+ibQcY=",
                  "checksum": "hkKJ9vq5yKk=",
                  "mrn": "//policy.api.mondoo.app/filter/mWzpm+ibQcY=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('chrony').running",
                "code_id": "a6hM1P2Mskw=",
                "checksum": "aNcX6y1NDcM=",
                "mrn": "//policy.api.mondoo.app/queries/chrony-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "chrony"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/docker-service",
            "checksum": "LgMv3Ti5tWo=",
            "title": "CVE in Docker service",
            "docs": {
              "active": "A vulnerable Docker service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the Docker service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "guIqzfk3AXQ=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('docker').installed\n",
                  "code_id": "guIqzfk3AXQ=",
                  "checksum": "RQ2jUAubdE4=",
                  "mrn": "//policy.api.mondoo.app/filter/guIqzfk3AXQ=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('docker').running",
                "code_id": "2ktD+aGYswQ=",
                "checksum": "W2K1vYeq7y0=",
                "mrn": "//policy.api.mondoo.app/queries/docker-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "docker-ce"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/nfs-server-service",
            "checksum": "UMo6oMIWYck=",
            "title": "CVE in NFS server",
            "docs": {
              "active": "A vulnerable NFS server is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the NFS server service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "YrTYqlyYshU=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('nfs-server').installed\n",
                  "code_id": "YrTYqlyYshU=",
                  "checksum": "dpqSsu+pGQc=",
                  "mrn": "//policy.api.mondoo.app/filter/YrTYqlyYshU=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('nfs-server').running",
                "code_id": "p9TiwJeUWHM=",
                "checksum": "zJMnX/4uibg=",
                "mrn": "//policy.api.mondoo.app/queries/nfs-server-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "nfs-kernel-server"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/collectd-service",
            "checksum": "YQWKpHE4bSM=",
            "title": "CVE in collectd service",
            "docs": {
              "active": "A vulnerable collectd service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the collectd service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "rBd0ET2aRVI=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('collectd').installed\n",
                  "code_id": "rBd0ET2aRVI=",
                  "checksum": "2Z+1m7jD63g=",
                  "mrn": "//policy.api.mondoo.app/filter/rBd0ET2aRVI=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('collectd').running",
                "code_id": "5x8Sto2BFeo=",
                "checksum": "ym1xKBqhTOw=",
                "mrn": "//policy.api.mondoo.app/queries/collectd-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "collectd-core"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/cups-service",
            "checksum": "diiWCIcKCfU=",
            "title": "CVE in CUPS service",
            "docs": {
              "active": "A vulnerable CUPS service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the CUPS service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "48ACBWoEuIs=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('cups').installed\n",
                  "code_id": "48ACBWoEuIs=",
                  "checksum": "XvgKlPhryqU=",
                  "mrn": "//policy.api.mondoo.app/filter/48ACBWoEuIs=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('cups').running",
                "code_id": "tkNaR4gW290=",
                "checksum": "UFgkCZWOSTA=",
                "mrn": "//policy.api.mondoo.app/queries/cups-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "cups"
              },
              {
                "name": "cups-daemon"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/samba-service",
            "checksum": "Jihs1YDMMwQ=",
            "title": "CVE in Samba service",
            "docs": {
              "active": "A vulnerable Samba service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the Samba service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "TaH+Scvk82A=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 services.where( name.in([\"smb\", \"smbd\"]) ).any(installed)\n",
                  "code_id": "TaH+Scvk82A=",
                  "checksum": "vwWfqtBrXG8=",
                  "mrn": "//policy.api.mondoo.app/filter/TaH+Scvk82A=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "services.where( name.in([\"smb\", \"smbd\"]) ).any(running)",
                "code_id": "CWLalzfOfEI=",
                "checksum": "3Qh5TYpDxz0=",
                "mrn": "//policy.api.mondoo.app/queries/samba-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "samba"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/vsftpd-service",
            "checksum": "2/HMFPRag2M=",
            "title": "CVE in vsftpd service",
            "docs": {
              "active": "A vulnerable vsftpd service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the vsftpd service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "y9gjx9Fn8MY=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('vsftpd').installed\n",
                  "code_id": "y9gjx9Fn8MY=",
                  "checksum": "GpDsuI80B00=",
                  "mrn": "//policy.api.mondoo.app/filter/y9gjx9Fn8MY=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('vsftpd').running",
                "code_id": "FEpO8sdLcpI=",
                "checksum": "ws0wNtERh5k=",
                "mrn": "//policy.api.mondoo.app/queries/vsftpd-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "vsftpd"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/proftpd-service",
            "checksum": "LC0awTUG6fk=",
            "title": "CVE in ProFTPD service",
            "docs": {
              "active": "A vulnerable ProFTPD service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the ProFTPD service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "ul8bHSwQHHs=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('proftpd').installed\n",
                  "code_id": "ul8bHSwQHHs=",
                  "checksum": "InG2RR3IxFw=",
                  "mrn": "//policy.api.mondoo.app/filter/ul8bHSwQHHs=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('proftpd').running",
                "code_id": "wlojC3ruG18=",
                "checksum": "AjmYoCdHc1A=",
                "mrn": "//policy.api.mondoo.app/queries/proftpd-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "proftpd"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/pure-ftpd-service",
            "checksum": "B+PRR/EZnUw=",
            "title": "CVE in Pure-FTPd service",
            "docs": {
              "active": "A vulnerable Pure-FTPd service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the Pure-FTPd service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "zIR8ngn1t8s=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('pure-ftpd').installed\n",
                  "code_id": "zIR8ngn1t8s=",
                  "checksum": "LjRkwuxWf80=",
                  "mrn": "//policy.api.mondoo.app/filter/zIR8ngn1t8s=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('pure-ftpd').running",
                "code_id": "EoXxvaXCjNw=",
                "checksum": "2CXPcw0ZTCU=",
                "mrn": "//policy.api.mondoo.app/queries/pure-ftpd-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "pure-ftpd"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/openldap-service",
            "checksum": "7rxOO11aeWg=",
            "title": "CVE in OpenLDAP service",
            "docs": {
              "active": "A vulnerable OpenLDAP service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the OpenLDAP service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "1z0zLJqMOPc=": {
                  "mql": "asset.family.contains('unix')\n\u0026\u0026 service('slapd').installed\n",
                  "code_id": "1z0zLJqMOPc=",
                  "checksum": "Y41mhL0S1Yk=",
                  "mrn": "//policy.api.mondoo.app/filter/1z0zLJqMOPc=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('slapd').running",
                "code_id": "KuBjjieISR0=",
                "checksum": "7mtGA9eFeJI=",
                "mrn": "//policy.api.mondoo.app/queries/openldap-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "openldap"
              },
              {
                "name": "slapd"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/nginx-service",
            "checksum": "3wkKfoCfTVg=",
            "title": "CVE in Nginx service",
            "docs": {
              "active": "A vulnerable Nginx service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the Nginx service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "E3/ecMmSE9Y=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('nginx').installed\n",
                  "code_id": "E3/ecMmSE9Y=",
                  "checksum": "MbKns5lX5gU=",
                  "mrn": "//policy.api.mondoo.app/filter/E3/ecMmSE9Y=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('nginx').running",
                "code_id": "6vdq78DdA9s=",
                "checksum": "vEJBcT7ybok=",
                "mrn": "//policy.api.mondoo.app/queries/nginx-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "nginx"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/apache-http-service",
            "checksum": "M0o2tHepWOs=",
            "title": "CVE in Apache HTTP Server",
            "docs": {
              "active": "A vulnerable Apache HTTP Server is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the Apache HTTP Server, but the server is currently not running."
            },
            "filters": {
              "items": {
                "VcHiU7ao70I=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 services.where( name.in([\"apache2\", \"httpd\"]) ).any(installed)\n",
                  "code_id": "VcHiU7ao70I=",
                  "checksum": "GSYGRJ3JvGQ=",
                  "mrn": "//policy.api.mondoo.app/filter/VcHiU7ao70I=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "services.where( name.in([\"apache2\", \"httpd\"]) ).any(running)",
                "code_id": "krVzFPonhfM=",
                "checksum": "IOun6jAJNSk=",
                "mrn": "//policy.api.mondoo.app/queries/apache2-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.5,
            "magnitude": {
              "value": 0.5
            },
            "software": [
              {
                "name": "apache2"
              },
              {
                "name": "httpd"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
            "checksum": "hHiXpS+w3H0=",
            "title": "Private SSH keys present",
            "docs": {
              "active": "A set of private SSH keys has been found on the system.",
              "inactive": "No private SSH keys were found in common paths on the system."
            },
            "filters": {
              "items": {
                "6MyoXYw7VKE=": {
                  "mql": "asset.family.contains('os')\n",
                  "code_id": "6MyoXYw7VKE=",
                  "checksum": "E5NrAhfjvd0=",
                  "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "users.contains(sshkeys != empty)",
                "code_id": "QS1431IjXdM=",
                "checksum": "AueQXnq2gZs=",
                "mrn": "//policy.api.mondoo.app/queries/private-ssh-keys-detected",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "credentials"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/open-ports",
            "checksum": "KaudZjv8lUU=",
            "title": "Process listening on open ports",
            "docs": {
              "active": "The system has processes listening on open host ports.",
              "inactive": "No processes were detected listening on open host ports."
            },
            "filters": {
              "items": {
                "6MyoXYw7VKE=": {
                  "mql": "asset.family.contains('os')\n",
                  "code_id": "6MyoXYw7VKE=",
                  "checksum": "E5NrAhfjvd0=",
                  "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.contains(\n  address != \"127.0.0.1\" \u0026\u0026\n  address != \"[::1]\" \u0026\u0026\n  address != \"[::ffff:127.0.0.1]\"\n)\n",
                "code_id": "SHeBTCW066c=",
                "checksum": "BEdOwU3h16g=",
                "mrn": "//policy.api.mondoo.app/queries/open-listening-ports",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/postgresql-running",
            "checksum": "F0XpUA4jRxo=",
            "title": "CVE in PostgreSQL service",
            "docs": {
              "active": "A vulnerable PostgreSQL service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the PostgreSQL service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "FFO3jGt7Ya8=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('postgresql').installed\n",
                  "code_id": "FFO3jGt7Ya8=",
                  "checksum": "+ympF/ydDBs=",
                  "mrn": "//policy.api.mondoo.app/filter/FFO3jGt7Ya8=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "processes.contains(executable == \"postgres\")",
                "code_id": "jzVwIjYTrdc=",
                "checksum": "KjYjPtXDpwI=",
                "mrn": "//policy.api.mondoo.app/queries/postgresql-process-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "postgresql"
              },
              {
                "name": "postgresql-11"
              },
              {
                "name": "postgresql-13"
              },
              {
                "name": "postgresql-15"
              },
              {
                "name": "postgresql-16"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/postgresql-listening",
            "checksum": "CkGgjzb8BpA=",
            "title": "PostgreSQL listening on public port",
            "docs": {
              "active": "PostgreSQL service is listening on a public port.",
              "inactive": "PostgreSQL service is not listening on a public port."
            },
            "filters": {
              "items": {
                "FFO3jGt7Ya8=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('postgresql').installed\n",
                  "code_id": "FFO3jGt7Ya8=",
                  "checksum": "+ympF/ydDBs=",
                  "mrn": "//policy.api.mondoo.app/filter/FFO3jGt7Ya8=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where(port == 5432).contains(address != \"127.0.0.1\")",
                "code_id": "HYtZichHo+A=",
                "checksum": "V3BVq8Fme/g=",
                "mrn": "//policy.api.mondoo.app/queries/postgresql-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "postgresql"
              },
              {
                "name": "postgresql-11"
              },
              {
                "name": "postgresql-13"
              },
              {
                "name": "postgresql-15"
              },
              {
                "name": "postgresql-16"
              }
            ],
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mysql-running",
            "checksum": "/MSVxNx8dwc=",
            "title": "CVE in MySQL service",
            "docs": {
              "active": "A vulnerable MySQL service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the MySQL service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "vyVn2CyNLr8=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 services.where( name.in([\"mysql\", \"mysqld\"]) ).any(installed)\n",
                  "code_id": "vyVn2CyNLr8=",
                  "checksum": "CQEDhShIC28=",
                  "mrn": "//policy.api.mondoo.app/filter/vyVn2CyNLr8=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "processes.contains(executable == \"mysqld\")",
                "code_id": "MT9gD3Juv1o=",
                "checksum": "st4Puo5iuNM=",
                "mrn": "//policy.api.mondoo.app/queries/mysql-process-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "mysql-server"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mysql-listening",
            "checksum": "9uk84BuX1IY=",
            "title": "MySQL listening on public port",
            "docs": {
              "active": "MySQL server is listening on a public port.",
              "inactive": "MySQL server is not listening on a public port."
            },
            "filters": {
              "items": {
                "vyVn2CyNLr8=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 services.where( name.in([\"mysql\", \"mysqld\"]) ).any(installed)\n",
                  "code_id": "vyVn2CyNLr8=",
                  "checksum": "CQEDhShIC28=",
                  "mrn": "//policy.api.mondoo.app/filter/vyVn2CyNLr8=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where(port == 3306).contains(address != \"127.0.0.1\")",
                "code_id": "+cnYcP8yreA=",
                "checksum": "ACfg/6UjN8c=",
                "mrn": "//policy.api.mondoo.app/queries/mysql-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "mysql-server"
              }
            ],
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mariadb-running",
            "checksum": "wiwm5/96KBA=",
            "title": "CVE in MariaDB Server",
            "docs": {
              "active": "A vulnerable MariaDB Server is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the MariaDB Server, but the server is currently not running."
            },
            "filters": {
              "items": {
                "Pr4TVIqw398=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('mariadb').installed\n",
                  "code_id": "Pr4TVIqw398=",
                  "checksum": "0eoLI7Zkf1w=",
                  "mrn": "//policy.api.mondoo.app/filter/Pr4TVIqw398=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "processes.contains(executable == \"mariadbd\")",
                "code_id": "lHCXK363Rqo=",
                "checksum": "YSuEzjzcEDA=",
                "mrn": "//policy.api.mondoo.app/queries/mariadb-process-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "mariadb-server"
              },
              {
                "name": "mariadb"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mariadb-listening",
            "checksum": "JO2Ru4R6GRg=",
            "title": "MariaDB Server listening on public port",
            "docs": {
              "active": "MariaDB Server is listening on a public port.",
              "inactive": "MariaDB Server is not listening on a public port."
            },
            "filters": {
              "items": {
                "Pr4TVIqw398=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('mariadb').installed\n",
                  "code_id": "Pr4TVIqw398=",
                  "checksum": "0eoLI7Zkf1w=",
                  "mrn": "//policy.api.mondoo.app/filter/Pr4TVIqw398=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where(port == 3306).contains(address != \"127.0.0.1\")",
                "code_id": "+cnYcP8yreA=",
                "checksum": "KjxNg+4Rx2A=",
                "mrn": "//policy.api.mondoo.app/queries/mariadb-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "mariadb-server"
              },
              {
                "name": "mariadb"
              }
            ],
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/opensearch-running",
            "checksum": "Q/hKJQn1rK0=",
            "title": "CVE in OpenSearch service",
            "docs": {
              "active": "A vulnerable OpenSearch service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the OpenSearch service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "GFM9hQszwPQ=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('opensearch').installed\n",
                  "code_id": "GFM9hQszwPQ=",
                  "checksum": "1+4TSNCLRDI=",
                  "mrn": "//policy.api.mondoo.app/filter/GFM9hQszwPQ=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "processes.where(executable == \"java\").any(command == /opensearch/)",
                "code_id": "tdDHF7SgFZo=",
                "checksum": "xVgfKzSFxGE=",
                "mrn": "//policy.api.mondoo.app/queries/opensearch-process-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "opensearch"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/opensearch-listening",
            "checksum": "/TMXmT1QsRg=",
            "title": "OpenSearch listening on public port",
            "docs": {
              "active": "OpenSearch is listening on a public port.",
              "inactive": "OpenSearch is not listening on a public port."
            },
            "filters": {
              "items": {
                "GFM9hQszwPQ=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('opensearch').installed\n",
                  "code_id": "GFM9hQszwPQ=",
                  "checksum": "1+4TSNCLRDI=",
                  "mrn": "//policy.api.mondoo.app/filter/GFM9hQszwPQ=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where(port == 9200).contains(address != \"127.0.0.1\")",
                "code_id": "oar3IbUCozw=",
                "checksum": "XoqE3kfCLx0=",
                "mrn": "//policy.api.mondoo.app/queries/opensearch-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "opensearch"
              }
            ],
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/elasticsearch-running",
            "checksum": "TU3UL4A1Tf8=",
            "title": "CVE in Elasticsearch service",
            "docs": {
              "active": "A vulnerable Elasticsearch service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the Elasticsearch service, but it the service is currently not running."
            },
            "filters": {
              "items": {
                "qw9ZLQfJvD4=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('elasticsearch').installed\n",
                  "code_id": "qw9ZLQfJvD4=",
                  "checksum": "Tu2lNmo8Nws=",
                  "mrn": "//policy.api.mondoo.app/filter/qw9ZLQfJvD4=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "processes.where(executable == \"java\").any(command == /elasticsearch/)",
                "code_id": "Ah6vkrJDIkY=",
                "checksum": "5n6HaOchCPQ=",
                "mrn": "//policy.api.mondoo.app/queries/elasticsearch-process-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "elasticsearch"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/elasticsearch-listening",
            "checksum": "snic5IA+M0g=",
            "title": "Elasticsearch listening on public port",
            "docs": {
              "active": "Elasticsearch is listening on a public port.",
              "inactive": "Elasticsearch is not listening on a public port."
            },
            "filters": {
              "items": {
                "qw9ZLQfJvD4=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('elasticsearch').installed\n",
                  "code_id": "qw9ZLQfJvD4=",
                  "checksum": "Tu2lNmo8Nws=",
                  "mrn": "//policy.api.mondoo.app/filter/qw9ZLQfJvD4=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where(port == 9200).contains(address != \"127.0.0.1\")",
                "code_id": "oar3IbUCozw=",
                "checksum": "w6cm9CJC2sY=",
                "mrn": "//policy.api.mondoo.app/queries/elasticsearch-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "elasticsearch"
              }
            ],
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/cassandra-running",
            "checksum": "WVdH+28Myag=",
            "title": "CVE in Cassandra service",
            "docs": {
              "active": "A vulnerable Cassandra service is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the Cassandra service, but the service is currently not running."
            },
            "filters": {
              "items": {
                "N3MzRxByezc=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('cassandra').installed\n",
                  "code_id": "N3MzRxByezc=",
                  "checksum": "13cD3JF/sSk=",
                  "mrn": "//policy.api.mondoo.app/filter/N3MzRxByezc=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "processes.where(executable == \"java\").any(command == /cassandra/)",
                "code_id": "LuyHom05QQk=",
                "checksum": "R8aHLZjTTjo=",
                "mrn": "//policy.api.mondoo.app/queries/cassandra-process-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "cassandra"
              }
            ],
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/cassandra-listening",
            "checksum": "/CrIfRHLOcw=",
            "title": "Cassandra listening on public port",
            "docs": {
              "active": "Cassandra server is listening on a public port.",
              "inactive": "Cassandra is not listening on a public port."
            },
            "filters": {
              "items": {
                "N3MzRxByezc=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('cassandra').installed\n",
                  "code_id": "N3MzRxByezc=",
                  "checksum": "13cD3JF/sSk=",
                  "mrn": "//policy.api.mondoo.app/filter/N3MzRxByezc=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where(port == 9042).contains(address != \"127.0.0.1\")",
                "code_id": "gMCwlf4rAm4=",
                "checksum": "cDd9BUu2kBU=",
                "mrn": "//policy.api.mondoo.app/queries/cassandra-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "cassandra"
              }
            ],
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mongodb-running",
            "checksum": "nGpL24iD3Hw=",
            "title": "CVE in MongoDB Server",
            "docs": {
              "active": "A vulnerable MongoDB Server is running and can be exploited by attackers.",
              "inactive": "A vulnerability was found in the MongoDB Server, but the server is currently not running."
            },
            "filters": {
              "items": {
                "3w7JZEbs7D0=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('mongodb').installed\n",
                  "code_id": "3w7JZEbs7D0=",
                  "checksum": "GVvJQMyvsDA=",
                  "mrn": "//policy.api.mondoo.app/filter/3w7JZEbs7D0=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "processes.contains(executable == \"mongod\")",
                "code_id": "QmA+hGt+5Ps=",
                "checksum": "hz5q/LQwsLg=",
                "mrn": "//policy.api.mondoo.app/queries/mongodb-process-running",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "mongodb-org"
              },
              {
                "name": "mongodb-enterprise"
              }
            ],
            "indicator": "db-access"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mongodb-listening",
            "checksum": "u9pe5TYKq64=",
            "title": "MongoDB Server listening on public port",
            "docs": {
              "active": "MongoDB Server is listening on a public port.",
              "inactive": "MongoDB Server is not listening on a public port."
            },
            "filters": {
              "items": {
                "3w7JZEbs7D0=": {
                  "mql": "asset.family.contains('os')\n\u0026\u0026 service('mongodb').installed\n",
                  "code_id": "3w7JZEbs7D0=",
                  "checksum": "GVvJQMyvsDA=",
                  "mrn": "//policy.api.mondoo.app/filter/3w7JZEbs7D0=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where(port == 27017).contains(address != \"127.0.0.1\")",
                "code_id": "HO82Gz7Av7Y=",
                "checksum": "GikkyZAvXzo=",
                "mrn": "//policy.api.mondoo.app/queries/mongodb-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 5,
            "deprecated_v11_magnitude": 0.2,
            "magnitude": {
              "value": 0.2
            },
            "software": [
              {
                "name": "mongodb-org"
              },
              {
                "name": "mongodb-enterprise"
              }
            ],
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/selinux-active",
            "checksum": "Zwpbl2acJ9I=",
            "title": "SELinux is active",
            "docs": {
              "active": "SELinux is active on the system.",
              "inactive": "SELinux has not been installed or activated on the system."
            },
            "filters": {
              "items": {
                "gyfREa1gL4A=": {
                  "mql": "asset.family.contains('linux')\nasset.kind != \"container-image\"\n",
                  "code_id": "gyfREa1gL4A=",
                  "checksum": "axY4hrU9x24=",
                  "mrn": "//policy.api.mondoo.app/filter/gyfREa1gL4A=",
                  "type": "\u0001"
                }
              }
            },
            "checks": [
              {
                "mql": "kernel.parameters[\"lsm\"] == /selinux/",
                "code_id": "NhJ7S96PHts=",
                "checksum": "DJeQH18WDGU=",
                "mrn": "//policy.api.mondoo.app/queries/selinux-kernel-active",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": -0.05,
            "magnitude": {
              "value": -0.05
            },
            "indicator": "defensive"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/apparmor-active",
            "checksum": "BFr97sbqgsA=",
            "title": "AppArmor is active",
            "docs": {
              "active": "AppArmor is active on the system.",
              "inactive": "AppArmor has not been installed or activated on the system."
            },
            "filters": {
              "items": {
                "gyfREa1gL4A=": {
                  "mql": "asset.family.contains('linux')\nasset.kind != \"container-image\"\n",
                  "code_id": "gyfREa1gL4A=",
                  "checksum": "axY4hrU9x24=",
                  "mrn": "//policy.api.mondoo.app/filter/gyfREa1gL4A=",
                  "type": "\u0001"
                }
              }
            },
            "checks": [
              {
                "mql": "kernel.parameters[\"lsm\"] == /apparmor/",
                "code_id": "BP5NURsd9Pw=",
                "checksum": "t4Nchfh1n3o=",
                "mrn": "//policy.api.mondoo.app/queries/apparmor-kernel-active",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": -0.05,
            "magnitude": {
              "value": -0.05
            },
            "indicator": "defensive"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/exchange-running",
            "checksum": "p/EhLP5ZXms=",
            "title": "Microsoft Exchange Server",
            "docs": {
              "active": "The Microsoft Exchange Server is running on the system.",
              "inactive": "No running Microsoft Exchange Server was detected on the system."
            },
            "filters": {
              "items": {
                "toa5dnWxMVU=": {
                  "mql": "asset.platform.contains('windows')\n\u0026\u0026 package('Microsoft Exchange Server').installed\n",
                  "code_id": "toa5dnWxMVU=",
                  "checksum": "jiPjPND2kSM=",
                  "mrn": "//policy.api.mondoo.app/filter/toa5dnWxMVU=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('MSExchangeADTopology').running",
                "code_id": "apmiRyKfONU=",
                "checksum": "2oWhus45j5k=",
                "mrn": "//policy.api.mondoo.app/queries/exchange-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/dc-running",
            "checksum": "gWgh8oiavz4=",
            "title": "Domain controller",
            "docs": {
              "active": "The Active Directory Domain Service is running on the system.",
              "inactive": "No running Active Directory Domain Service was detected on the system."
            },
            "filters": {
              "items": {
                "w68l5ygei1w=": {
                  "mql": "asset.platform.contains('windows')\n\u0026\u0026 windows.features.where(name == 'AD-Domain-Services').one(installed == true)\n",
                  "code_id": "w68l5ygei1w=",
                  "checksum": "TOSv6PGtfWc=",
                  "mrn": "//policy.api.mondoo.app/filter/w68l5ygei1w=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('NTDS').running",
                "code_id": "UTM2hYkLKJs=",
                "checksum": "fQ1mbncdQ30=",
                "mrn": "//policy.api.mondoo.app/queries/ad-service-running",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mssql-running",
            "checksum": "v3Yhni3j/3c=",
            "title": "Microsoft SQL Server",
            "docs": {
              "active": "Microsoft SQL Server is running on the system.",
              "inactive": "No running Microsoft SQL Server was detected on the system."
            },
            "filters": {
              "items": {
                "EME+o5rRCGY=": {
                  "mql": "asset.family.contains('windows')\n\u0026\u0026 packages.contains(name == 'Microsoft SQL Server')\n",
                  "code_id": "EME+o5rRCGY=",
                  "checksum": "M8sTatN4YWU=",
                  "mrn": "//policy.api.mondoo.app/filter/EME+o5rRCGY=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('MSSQLSERVER').running",
                "code_id": "skegDerR8Fo=",
                "checksum": "PLzSWQHvaxA=",
                "mrn": "//policy.api.mondoo.app/queries/mssql-running",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "db-access"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/mssql-listening",
            "checksum": "8p2YYXxksl8=",
            "title": "Microsoft SQL Server listening on public port",
            "docs": {
              "active": "Microsoft SQL Server is listening on a public port.",
              "inactive": "Microsoft SQL Server is not listening on a public port."
            },
            "filters": {
              "items": {
                "EME+o5rRCGY=": {
                  "mql": "asset.family.contains('windows')\n\u0026\u0026 packages.contains(name == 'Microsoft SQL Server')\n",
                  "code_id": "EME+o5rRCGY=",
                  "checksum": "M8sTatN4YWU=",
                  "mrn": "//policy.api.mondoo.app/filter/EME+o5rRCGY=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "ports.listening.where( port == '1433' ).contains(address != \"127.0.0.1\")",
                "code_id": "6QwTpl8lSqg=",
                "checksum": "0Xv/LGhB/ZQ=",
                "mrn": "//policy.api.mondoo.app/queries/mssql-port-listening",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "port"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/iis-running",
            "checksum": "ru26A4RJlu8=",
            "title": "Microsoft IIS",
            "docs": {
              "active": "Microsoft IIS is running on the system.",
              "inactive": "No running Microsoft IIS was detected on the system."
            },
            "filters": {
              "items": {
                "uZoJQUInA4Y=": {
                  "mql": "asset.family.contains('windows')\n\u0026\u0026 windows.features.where( name == /Web-Server/i ).any( installed )\n",
                  "code_id": "uZoJQUInA4Y=",
                  "checksum": "YR63Ox/nlKY=",
                  "mrn": "//policy.api.mondoo.app/filter/uZoJQUInA4Y=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "service('W3SVC').running",
                "code_id": "X3zbRhG4n1A=",
                "checksum": "/glga4C3pp8=",
                "mrn": "//policy.api.mondoo.app/queries/iis-running",
                "type": "\u0004"
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "asset-in-use"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/internet-exposed",
            "checksum": "pASdk+1DMK0=",
            "title": "Internet Exposed",
            "docs": {
              "active": "Cloud asset is exposed to the internet.",
              "inactive": "Cloud asset is not exposed to the internet."
            },
            "checks": [
              {
                "mql": "cloud.instance.publicIpv4.any()",
                "code_id": "c2/t0t2eGFs=",
                "checksum": "x9K3ICijZjI=",
                "mrn": "//policy.api.mondoo.app/queries/cloud-asset-with-public-ipaddress",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "RsbXPPme1wg=": {
                      "mql": "cloud.provider.upcase != \"UNKNOWN\"",
                      "code_id": "RsbXPPme1wg=",
                      "checksum": "/tyZDG+JmEY=",
                      "mrn": "//policy.api.mondoo.app/filter/RsbXPPme1wg=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.s3.bucket.public",
                "code_id": "AhVKJra07Jk=",
                "checksum": "2ZnzRaO3Vkc=",
                "mrn": "//policy.api.mondoo.app/queries/aws-s3-public",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "3z170zdo7Ac=": {
                      "mql": "asset.platform == \"aws-s3-bucket\"",
                      "code_id": "3z170zdo7Ac=",
                      "checksum": "bxUrAUBGM1g=",
                      "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.rds.dbinstance.publiclyAccessible",
                "code_id": "CjP/lr9/BzU=",
                "checksum": "PJerZvNZPTc=",
                "mrn": "//policy.api.mondoo.app/queries/aws-rds-instance-public",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "xXp4iNDx1BU=": {
                      "mql": "asset.platform == \"aws-rds-dbinstance\"",
                      "code_id": "xXp4iNDx1BU=",
                      "checksum": "74un3Jja6uY=",
                      "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.rds.dbcluster.publiclyAccessible",
                "code_id": "MsDmyncdK0k=",
                "checksum": "lttolphQbD8=",
                "mrn": "//policy.api.mondoo.app/queries/aws-rds-cluster-public",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "CNIfmlvOXUg=": {
                      "mql": "asset.platform == \"aws-rds-dbcluster\"",
                      "code_id": "CNIfmlvOXUg=",
                      "checksum": "dlFMx6QAVvw=",
                      "mrn": "//policy.api.mondoo.app/filter/CNIfmlvOXUg=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.redshift.cluster.publiclyAccessible",
                "code_id": "LcOZdcHoIvI=",
                "checksum": "G3AfmY5o52g=",
                "mrn": "//policy.api.mondoo.app/queries/aws-redshift-public",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "t2QzcgpdIbI=": {
                      "mql": "asset.platform == \"aws-redshift-cluster\"",
                      "code_id": "t2QzcgpdIbI=",
                      "checksum": "IAfexHb6TOI=",
                      "mrn": "//policy.api.mondoo.app/filter/t2QzcgpdIbI=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "aws.eks.cluster.resourcesVpcConfig.endpointPublicAccess == true",
                "code_id": "+tpqlj2faaY=",
                "checksum": "nuwgnv8MVOc=",
                "mrn": "//policy.api.mondoo.app/queries/aws-eks-cluster-public",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "vLnOtXTQbss=": {
                      "mql": "asset.platform == \"aws-eks-cluster\"",
                      "code_id": "vLnOtXTQbss=",
                      "checksum": "tvP1yZmC8aE=",
                      "mrn": "//policy.api.mondoo.app/filter/vLnOtXTQbss=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "gcloud.compute.instance.networkInterfaces.contains(accessConfigs.any(type == \"ONE_TO_ONE_NAT\"))",
                "code_id": "1uYKMGLfhpQ=",
                "checksum": "xw3VH4kcUnE=",
                "mrn": "//policy.api.mondoo.app/queries/gcp-instance-public",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "wPJsO/U89DU=": {
                      "mql": "asset.platform == \"gcp-compute-instance\"",
                      "code_id": "wPJsO/U89DU=",
                      "checksum": "SM6uu4BJ32E=",
                      "mrn": "//policy.api.mondoo.app/filter/wPJsO/U89DU=",
                      "type": "\u0004"
                    }
                  }
                }
              },
              {
                "mql": "asset.annotations.contains(key == \"mondoo.com/internet-exposed\" \u0026\u0026 value.downcase == \"true\")",
                "code_id": "WnI1+sqogwI=",
                "checksum": "zqGhwdxfe6M=",
                "mrn": "//policy.api.mondoo.app/queries/internet-exposed-annotation",
                "type": "\u0004",
                "filters": {
                  "items": {
                    "sdjDHd7al6U=": {
                      "mql": "asset.annotations.contains(key == \"mondoo.com/internet-exposed\")\n",
                      "code_id": "sdjDHd7al6U=",
                      "checksum": "IOOZZQPosHE=",
                      "mrn": "//policy.api.mondoo.app/filter/sdjDHd7al6U=",
                      "type": "\u0004"
                    }
                  }
                }
              }
            ],
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            },
            "indicator": "internet-exposed"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/dpkg-pkgs-status-rc",
            "checksum": "B3+B74SfJwg=",
            "title": "Incompletely removed packages",
            "docs": {
              "active": "The system has incompletely removed packages, which may still contain configuration data.\n",
              "inactive": "No incompletely removed packages were detected on the system."
            },
            "filters": {
              "items": {
                "TIuic08sBuk=": {
                  "mql": "false\n",
                  "code_id": "TIuic08sBuk=",
                  "checksum": "pgQrdp0WvgM=",
                  "mrn": "//policy.api.mondoo.app/filter/TIuic08sBuk=",
                  "type": "\u0004"
                }
              }
            },
            "checks": [
              {
                "mql": "false\n",
                "code_id": "TIuic08sBuk=",
                "checksum": "i3Sgvn/WyOs=",
                "mrn": "//policy.api.mondoo.app/queries/dpkg-pkgs-status-rc",
                "type": "\u0004"
              }
            ],
            "scope": 2,
            "deprecated_v11_magnitude": -0.3,
            "magnitude": {
              "value": -0.3
            },
            "resources": [
              {
                "name": "packages"
              }
            ],
            "indicator": "package"
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/high-epss-percentile",
            "checksum": "L7ibT68ZzYQ=",
            "title": "High EPSS Percentile",
            "docs": {
              "active": "The vulnerability has a high likelihood of exploitation according to EPSS data (percentile \u003e 95%).",
              "inactive": "The vulnerability does not have a high likelihood of exploitation according to EPSS data."
            },
            "filters": {
              "items": {
                "6MyoXYw7VKE=": {
                  "mql": "asset.family.contains('os')",
                  "code_id": "6MyoXYw7VKE=",
                  "checksum": "61SN1I5iWz0=",
                  "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
                  "type": "\u0004"
                }
              }
            },
            "scope": 5,
            "deprecated_v11_magnitude": 0.6,
            "deprecated_v11_is_absolute": true,
            "magnitude": {
              "value": 0.6,
              "is_toxic": true
            },
            "indicator": "exploitable"
          }
        ],
        "local_content_checksum": "vj6p6UaZcUQ=",
        "graph_content_checksum": "R7Ppf2lP8sw=",
        "local_execution_checksum": "M/aBgfY5ajc=",
        "graph_execution_checksum": "3s9NOvwB910=",
        "computed_filters": {
          "items": {
            "1z0zLJqMOPc=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('slapd').installed\n",
              "code_id": "1z0zLJqMOPc=",
              "checksum": "Y41mhL0S1Yk=",
              "mrn": "//policy.api.mondoo.app/filter/1z0zLJqMOPc=",
              "type": "\u0004"
            },
            "3w7JZEbs7D0=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('mongodb').installed\n",
              "code_id": "3w7JZEbs7D0=",
              "checksum": "GVvJQMyvsDA=",
              "mrn": "//policy.api.mondoo.app/filter/3w7JZEbs7D0=",
              "type": "\u0004"
            },
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"",
              "code_id": "3z170zdo7Ac=",
              "checksum": "bxUrAUBGM1g=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            },
            "48ACBWoEuIs=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('cups').installed\n",
              "code_id": "48ACBWoEuIs=",
              "checksum": "XvgKlPhryqU=",
              "mrn": "//policy.api.mondoo.app/filter/48ACBWoEuIs=",
              "type": "\u0004"
            },
            "6MyoXYw7VKE=": {
              "mql": "asset.family.contains('os')",
              "code_id": "6MyoXYw7VKE=",
              "checksum": "61SN1I5iWz0=",
              "mrn": "//policy.api.mondoo.app/filter/6MyoXYw7VKE=",
              "type": "\u0004"
            },
            "CNIfmlvOXUg=": {
              "mql": "asset.platform == \"aws-rds-dbcluster\"",
              "code_id": "CNIfmlvOXUg=",
              "checksum": "dlFMx6QAVvw=",
              "mrn": "//policy.api.mondoo.app/filter/CNIfmlvOXUg=",
              "type": "\u0004"
            },
            "E3/ecMmSE9Y=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('nginx').installed\n",
              "code_id": "E3/ecMmSE9Y=",
              "checksum": "MbKns5lX5gU=",
              "mrn": "//policy.api.mondoo.app/filter/E3/ecMmSE9Y=",
              "type": "\u0004"
            },
            "EME+o5rRCGY=": {
              "mql": "asset.family.contains('windows')\n\u0026\u0026 packages.contains(name == 'Microsoft SQL Server')\n",
              "code_id": "EME+o5rRCGY=",
              "checksum": "M8sTatN4YWU=",
              "mrn": "//policy.api.mondoo.app/filter/EME+o5rRCGY=",
              "type": "\u0004"
            },
            "FFO3jGt7Ya8=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('postgresql').installed\n",
              "code_id": "FFO3jGt7Ya8=",
              "checksum": "+ympF/ydDBs=",
              "mrn": "//policy.api.mondoo.app/filter/FFO3jGt7Ya8=",
              "type": "\u0004"
            },
            "GFM9hQszwPQ=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('opensearch').installed\n",
              "code_id": "GFM9hQszwPQ=",
              "checksum": "1+4TSNCLRDI=",
              "mrn": "//policy.api.mondoo.app/filter/GFM9hQszwPQ=",
              "type": "\u0004"
            },
            "N3MzRxByezc=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('cassandra').installed\n",
              "code_id": "N3MzRxByezc=",
              "checksum": "13cD3JF/sSk=",
              "mrn": "//policy.api.mondoo.app/filter/N3MzRxByezc=",
              "type": "\u0004"
            },
            "Pr4TVIqw398=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('mariadb').installed\n",
              "code_id": "Pr4TVIqw398=",
              "checksum": "0eoLI7Zkf1w=",
              "mrn": "//policy.api.mondoo.app/filter/Pr4TVIqw398=",
              "type": "\u0004"
            },
            "RsbXPPme1wg=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"",
              "code_id": "RsbXPPme1wg=",
              "checksum": "/tyZDG+JmEY=",
              "mrn": "//policy.api.mondoo.app/filter/RsbXPPme1wg=",
              "type": "\u0004"
            },
            "TIuic08sBuk=": {
              "mql": "false\n",
              "code_id": "TIuic08sBuk=",
              "checksum": "pgQrdp0WvgM=",
              "mrn": "//policy.api.mondoo.app/filter/TIuic08sBuk=",
              "type": "\u0004"
            },
            "TaH+Scvk82A=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 services.where( name.in([\"smb\", \"smbd\"]) ).any(installed)\n",
              "code_id": "TaH+Scvk82A=",
              "checksum": "vwWfqtBrXG8=",
              "mrn": "//policy.api.mondoo.app/filter/TaH+Scvk82A=",
              "type": "\u0004"
            },
            "VcHiU7ao70I=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 services.where( name.in([\"apache2\", \"httpd\"]) ).any(installed)\n",
              "code_id": "VcHiU7ao70I=",
              "checksum": "GSYGRJ3JvGQ=",
              "mrn": "//policy.api.mondoo.app/filter/VcHiU7ao70I=",
              "type": "\u0004"
            },
            "YrTYqlyYshU=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('nfs-server').installed\n",
              "code_id": "YrTYqlyYshU=",
              "checksum": "dpqSsu+pGQc=",
              "mrn": "//policy.api.mondoo.app/filter/YrTYqlyYshU=",
              "type": "\u0004"
            },
            "guIqzfk3AXQ=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('docker').installed\n",
              "code_id": "guIqzfk3AXQ=",
              "checksum": "RQ2jUAubdE4=",
              "mrn": "//policy.api.mondoo.app/filter/guIqzfk3AXQ=",
              "type": "\u0004"
            },
            "gyfREa1gL4A=": {
              "mql": "asset.family.contains('linux')\nasset.kind != \"container-image\"\n",
              "code_id": "gyfREa1gL4A=",
              "checksum": "axY4hrU9x24=",
              "mrn": "//policy.api.mondoo.app/filter/gyfREa1gL4A=",
              "type": "\u0001"
            },
            "mWzpm+ibQcY=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('chrony').installed\n",
              "code_id": "mWzpm+ibQcY=",
              "checksum": "hkKJ9vq5yKk=",
              "mrn": "//policy.api.mondoo.app/filter/mWzpm+ibQcY=",
              "type": "\u0004"
            },
            "n3qCzBJJGo8=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('sshd').installed\n",
              "code_id": "n3qCzBJJGo8=",
              "checksum": "IfP4dG7jyc0=",
              "mrn": "//policy.api.mondoo.app/filter/n3qCzBJJGo8=",
              "type": "\u0004"
            },
            "qw9ZLQfJvD4=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 service('elasticsearch').installed\n",
              "code_id": "qw9ZLQfJvD4=",
              "checksum": "Tu2lNmo8Nws=",
              "mrn": "//policy.api.mondoo.app/filter/qw9ZLQfJvD4=",
              "type": "\u0004"
            },
            "rBd0ET2aRVI=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('collectd').installed\n",
              "code_id": "rBd0ET2aRVI=",
              "checksum": "2Z+1m7jD63g=",
              "mrn": "//policy.api.mondoo.app/filter/rBd0ET2aRVI=",
              "type": "\u0004"
            },
            "sdjDHd7al6U=": {
              "mql": "asset.annotations.contains(key == \"mondoo.com/internet-exposed\")\n",
              "code_id": "sdjDHd7al6U=",
              "checksum": "IOOZZQPosHE=",
              "mrn": "//policy.api.mondoo.app/filter/sdjDHd7al6U=",
              "type": "\u0004"
            },
            "t2QzcgpdIbI=": {
              "mql": "asset.platform == \"aws-redshift-cluster\"",
              "code_id": "t2QzcgpdIbI=",
              "checksum": "IAfexHb6TOI=",
              "mrn": "//policy.api.mondoo.app/filter/t2QzcgpdIbI=",
              "type": "\u0004"
            },
            "toa5dnWxMVU=": {
              "mql": "asset.platform.contains('windows')\n\u0026\u0026 package('Microsoft Exchange Server').installed\n",
              "code_id": "toa5dnWxMVU=",
              "checksum": "jiPjPND2kSM=",
              "mrn": "//policy.api.mondoo.app/filter/toa5dnWxMVU=",
              "type": "\u0004"
            },
            "uZoJQUInA4Y=": {
              "mql": "asset.family.contains('windows')\n\u0026\u0026 windows.features.where( name == /Web-Server/i ).any( installed )\n",
              "code_id": "uZoJQUInA4Y=",
              "checksum": "YR63Ox/nlKY=",
              "mrn": "//policy.api.mondoo.app/filter/uZoJQUInA4Y=",
              "type": "\u0004"
            },
            "ul8bHSwQHHs=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('proftpd').installed\n",
              "code_id": "ul8bHSwQHHs=",
              "checksum": "InG2RR3IxFw=",
              "mrn": "//policy.api.mondoo.app/filter/ul8bHSwQHHs=",
              "type": "\u0004"
            },
            "vLnOtXTQbss=": {
              "mql": "asset.platform == \"aws-eks-cluster\"",
              "code_id": "vLnOtXTQbss=",
              "checksum": "tvP1yZmC8aE=",
              "mrn": "//policy.api.mondoo.app/filter/vLnOtXTQbss=",
              "type": "\u0004"
            },
            "vyVn2CyNLr8=": {
              "mql": "asset.family.contains('os')\n\u0026\u0026 services.where( name.in([\"mysql\", \"mysqld\"]) ).any(installed)\n",
              "code_id": "vyVn2CyNLr8=",
              "checksum": "CQEDhShIC28=",
              "mrn": "//policy.api.mondoo.app/filter/vyVn2CyNLr8=",
              "type": "\u0004"
            },
            "w68l5ygei1w=": {
              "mql": "asset.platform.contains('windows')\n\u0026\u0026 windows.features.where(name == 'AD-Domain-Services').one(installed == true)\n",
              "code_id": "w68l5ygei1w=",
              "checksum": "TOSv6PGtfWc=",
              "mrn": "//policy.api.mondoo.app/filter/w68l5ygei1w=",
              "type": "\u0004"
            },
            "wPJsO/U89DU=": {
              "mql": "asset.platform == \"gcp-compute-instance\"",
              "code_id": "wPJsO/U89DU=",
              "checksum": "SM6uu4BJ32E=",
              "mrn": "//policy.api.mondoo.app/filter/wPJsO/U89DU=",
              "type": "\u0004"
            },
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "74un3Jja6uY=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            },
            "y9gjx9Fn8MY=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('vsftpd').installed\n",
              "code_id": "y9gjx9Fn8MY=",
              "checksum": "GpDsuI80B00=",
              "mrn": "//policy.api.mondoo.app/filter/y9gjx9Fn8MY=",
              "type": "\u0004"
            },
            "zIR8ngn1t8s=": {
              "mql": "asset.family.contains('unix')\n\u0026\u0026 service('pure-ftpd').installed\n",
              "code_id": "zIR8ngn1t8s=",
              "checksum": "LjRkwuxWf80=",
              "mrn": "//policy.api.mondoo.app/filter/zIR8ngn1t8s=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {}
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/sshd-policy",
        "name": "Mondoo SSH Server Security",
        "version": "1.0.0",
        "owner_mrn": "//policy.api.mondoo.app",
        "groups": [
          {
            "checks": [
              {
                "code_id": "Jd+Gypq2iUU=",
                "checksum": "w2yl16DGxNs=",
                "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-01",
                "type": "\u0004"
              },
              {
                "code_id": "3/6XnKp0RJM=",
                "checksum": "j6pxufbwrZo=",
                "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-07",
                "type": "\u0004"
              },
              {
                "code_id": "wM8ZVC/LDTg=",
                "checksum": "5AZ45nRiz7c=",
                "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-10",
                "type": "\u0004"
              },
              {
                "code_id": "tLW4zUJij+I=",
                "checksum": "jlTW0TqXRFk=",
                "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-11",
                "type": "\u0004"
              }
            ],
            "queries": [
              {
                "code_id": "eteO7RzprLM=",
                "checksum": "eHCuOaU5RjA=",
                "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-d-1",
                "type": "\u001a\u0007\u0007"
              },
              {
                "code_id": "RYuR9x9ICNA=",
                "checksum": "na80eKa1ChM=",
                "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-d-3",
                "type": "\u0007"
              }
            ],
            "filters": {
              "items": {
                "u6qtHYJqMdA=": {
                  "mql": "asset.family.contains('unix')",
                  "code_id": "u6qtHYJqMdA=",
                  "checksum": "+LCgaw6UOdQ=",
                  "mrn": "//policy.api.mondoo.app/policies/sshd-policy/filter/u6qtHYJqMdA=",
                  "type": "\u0004"
                }
              }
            }
          }
        ],
        "license": "proprietary",
        "scoring_system": "average",
        "authors": [
          {
            "name": "Mondoo, Inc.",
            "email": "hello@mondoo.com"
          }
        ],
        "tags": {
          "mondoo.com/category": "security",
          "mondoo.com/platform": "linux"
        },
        "props": [
          {
            "mrn": "//policy.api.mondoo.app/policies/sshd-policy/properties/sshdTestCiphers",
            "for": [
              {
                "mrn": "//policy.api.mondoo.app/queries/sshdTestCiphers"
              }
            ]
          }
        ],
        "local_content_checksum": "RDkAbTR9aJA=",
        "graph_content_checksum": "/WjmCx2/qwE=",
        "local_execution_checksum": "xKwaNEJFrsc=",
        "graph_execution_checksum": "Prd5AU2uCu8=",
        "computed_filters": {
          "items": {
            "u6qtHYJqMdA=": {
              "mql": "asset.family.contains('unix')",
              "code_id": "u6qtHYJqMdA=",
              "checksum": "+LCgaw6UOdQ=",
              "mrn": "//policy.api.mondoo.app/policies/sshd-policy/filter/u6qtHYJqMdA=",
              "type": "\u0004"
            }
          }
        },
        "query_counts": {
          "scoring_count": 4,
          "data_count": 2,
          "total_count": 6
        }
      }
    ],
    "props": [
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/checkDefaultMatchBlock",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/checkDefaultMatchBlock"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/excludedMatchBlocks",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/excludedMatchBlocks"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecurityAuditFiles",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecurityKexAlgos",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityKexAlgos"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecurityMacAlgos",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityMacAlgos"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecuritySshdCiphers",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySshdCiphers"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecuritySudoGroup",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySudoGroup"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/mondoo-linux-security/properties/mondooLinuxSecuritySudoersFiles",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySudoersFiles"
          }
        ]
      },
      {
        "mrn": "//policy.api.mondoo.app/policies/sshd-policy/properties/sshdTestCiphers",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/queries/sshdTestCiphers"
          }
        ]
      },
      {
        "mql": "return ['aes256-ctr', 'aes192-ctr', 'aes128-ctr']\n\n",
        "code_id": "cC61mur3af4=",
        "checksum": "ZHzSffScrRs=",
        "mrn": "//policy.api.mondoo.app/spaces/test-infallible-taussig-796596/properties/be0a7faf0354186b03ff1f8415824bdd487f12d731d056a5",
        "type": "\u0019\u0007",
        "for": [
          {
            "mrn": "//policy.api.mondoo.app/policies/sshd-policy/properties/sshdTestCiphers"
          }
        ]
      }
    ],
    "queries": [
      {
        "query": "command(\"prtconf\").stdout.lines.where(_.contains(\"Processor Type:\"))[0].split(\":\")[1].trim\n",
        "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"Processor Type:\"))[0].split(\":\")[1].trim\n",
        "code_id": "b2jqsH5Ew7I=",
        "checksum": "Z5qVCP5wbUM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-cpu-platform",
        "type": "\u0007",
        "title": "CPU platform",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"prtconf -c\").stdout.split(\": \")[1].trim\n",
        "mql": "command(\"prtconf -c\").stdout.split(\": \")[1].trim\n",
        "code_id": "gk1eE66Pzvc=",
        "checksum": "Fpxol3yLTyA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-cpu-type",
        "type": "\u0007",
        "title": "CPU type",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"prtconf\").stdout.lines.where(_.contains(\"IP Address:\"))[0].split(\":\")[1].trim\n",
        "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"IP Address:\"))[0].split(\":\")[1].trim\n",
        "code_id": "2d+/YHbamjU=",
        "checksum": "lyYV4AeSzDk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-ip-address",
        "type": "\u0007",
        "title": "IP address",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"oslevel -s\").stdout.trim\n",
        "mql": "command(\"oslevel -s\").stdout.trim\n",
        "code_id": "7dUnP+5hQhk=",
        "checksum": "nEjBkDtbcko=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-kernel-version",
        "type": "\u0007",
        "title": "Kernel version",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"prtconf -m\").stdout.trim.split(\": \")[1]\n",
        "mql": "command(\"prtconf -m\").stdout.trim.split(\": \")[1]\n",
        "code_id": "IsJEcoqOmtw=",
        "checksum": "uArl3PoijGU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-memory",
        "type": "\u0007",
        "title": "Memory",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"prtconf\").stdout.lines.where(_.contains(\"System Model:\"))[0].split(\":\")[1].trim\n",
        "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"System Model:\"))[0].split(\":\")[1].trim\n",
        "code_id": "t/+xTPNbPy4=",
        "checksum": "82G4gaZ/BHA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-model-name",
        "type": "\u0007",
        "title": "Model name",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"prtconf\").stdout.lines.where(_.contains(\"Machine Serial Number:\"))[0].split(\":\")[1].trim\n",
        "mql": "command(\"prtconf\").stdout.lines.where(_.contains(\"Machine Serial Number:\"))[0].split(\":\")[1].trim\n",
        "code_id": "mN2WVMmPI7w=",
        "checksum": "/cTZfJ6Cqm4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aix-serial-number",
        "type": "\u0007",
        "title": "Serial number",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "sQdgB0hVgZo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-apiversion",
        "title": "API version",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace-apiversion"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-apiversion"
          }
        ]
      },
      {
        "query": "arista.eos.fqdn",
        "mql": "arista.eos.fqdn",
        "code_id": "R7C7yp7QnwU=",
        "checksum": "/JePvSJo+RQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-arista-fqdn",
        "type": "\u0007",
        "title": "FQDN",
        "filters": {
          "items": {
            "EaABSliBEFU=": {
              "mql": "asset.platform == \"arista-eos\"",
              "code_id": "EaABSliBEFU=",
              "checksum": "bl4d4XL5WoQ=",
              "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "arista.eos.version.modelName",
        "mql": "arista.eos.version.modelName",
        "code_id": "3jvc38Qzs4Q=",
        "checksum": "/PaEpQWvGb4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-arista-model",
        "type": "\n",
        "title": "Arista model",
        "filters": {
          "items": {
            "EaABSliBEFU=": {
              "mql": "asset.platform == \"arista-eos\"",
              "code_id": "EaABSliBEFU=",
              "checksum": "bl4d4XL5WoQ=",
              "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "arista.eos.version.serialNumber",
        "mql": "arista.eos.version.serialNumber",
        "code_id": "t2ZKgf17SO8=",
        "checksum": "aeb0FTKwg4w=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-arista-serial",
        "type": "\n",
        "title": "Serial",
        "filters": {
          "items": {
            "EaABSliBEFU=": {
              "mql": "asset.platform == \"arista-eos\"",
              "code_id": "EaABSliBEFU=",
              "checksum": "bl4d4XL5WoQ=",
              "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "asset.arch",
        "mql": "asset.arch",
        "code_id": "12kX/uYrBPU=",
        "checksum": "r22QAdN6Xzs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetarch",
        "type": "\u0007",
        "title": "Platform architecture",
        "filters": {
          "items": {
            "jzQMFuDxQus=": {
              "mql": "asset.arch != \"\"",
              "code_id": "jzQMFuDxQus=",
              "checksum": "W9cM8/XfmGg=",
              "mrn": "//policy.api.mondoo.app/filter/jzQMFuDxQus=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "asset.build",
        "mql": "asset.build",
        "code_id": "63wFQeEMSuY=",
        "checksum": "mxx/fleQJa0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetbuild",
        "type": "\u0007",
        "title": "Build",
        "filters": {
          "items": {
            "cHDjRc20JOo=": {
              "mql": "asset.build != \"\"",
              "code_id": "cHDjRc20JOo=",
              "checksum": "Fe+HxLL7Udo=",
              "mrn": "//policy.api.mondoo.app/filter/cHDjRc20JOo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "switch(asset.kind) {\ncase _ == \"baremetal\":\n  return \"Bare metal system\"\ncase _ == \"virtualmachine\":\n  return \"Virtual machine\"\ncase _ == \"container-image\":\n  return \"Container image\"\ncase _ == \"container\":\n  return \"Container\"\ndefault:\n  return _\n}\n",
        "mql": "switch(asset.kind) {\ncase _ == \"baremetal\":\n  return \"Bare metal system\"\ncase _ == \"virtualmachine\":\n  return \"Virtual machine\"\ncase _ == \"container-image\":\n  return \"Container image\"\ncase _ == \"container\":\n  return \"Container\"\ndefault:\n  return _\n}\n",
        "code_id": "Yw5maGeSxtI=",
        "checksum": "leh/ACVSTKI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetkind",
        "type": "\u0007",
        "title": "Type",
        "filters": {
          "items": {
            "OITnYRAA4Lw=": {
              "mql": "asset.kind != \"\"",
              "code_id": "OITnYRAA4Lw=",
              "checksum": "nTtGCysRmXw=",
              "mrn": "//policy.api.mondoo.app/filter/OITnYRAA4Lw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "asset.name",
        "mql": "asset.name",
        "code_id": "PHQtQ+7tw64=",
        "checksum": "6yHHXln1zoc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetname",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "0nvpSmfgEbc=": {
              "mql": "asset.name != \"\"",
              "code_id": "0nvpSmfgEbc=",
              "checksum": "ki87ZqnyZzg=",
              "mrn": "//policy.api.mondoo.app/filter/0nvpSmfgEbc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "asset.title",
        "mql": "asset.title",
        "code_id": "pIimpRGhyBc=",
        "checksum": "mp6J1CYO2Gs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
        "type": "\u0007",
        "title": "Platform name",
        "filters": {}
      },
      {
        "query": "asset.version",
        "mql": "asset.version",
        "code_id": "MMPvbEnxkzM=",
        "checksum": "nARQ1JrIdj0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
        "type": "\u0007",
        "title": "Platform version",
        "filters": {
          "items": {
            "sGKyqpiAJwo=": {
              "mql": "asset.version != \"\"",
              "code_id": "sGKyqpiAJwo=",
              "checksum": "uzMnYVk/m+8=",
              "mrn": "//policy.api.mondoo.app/filter/sGKyqpiAJwo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.account.id",
        "mql": "aws.account.id",
        "code_id": "NqsOI2adG+Q=",
        "checksum": "qmMTfbJz49A=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-id",
        "type": "\u0007",
        "title": "Account ID",
        "filters": {}
      },
      {
        "query": "aws.account.aliases.first",
        "mql": "aws.account.aliases.first",
        "code_id": "7UqdtUQBjao=",
        "checksum": "sr2ZsWsxWlk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-account-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "EcZ+12oxrPM=": {
              "mql": "aws.account.aliases.first != null",
              "code_id": "EcZ+12oxrPM=",
              "checksum": "DFUkgNXX3KQ=",
              "mrn": "//policy.api.mondoo.app/filter/EcZ+12oxrPM=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "XymaJUWoFSM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-arn",
        "title": "ARN",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudtrail-trail-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-group-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-lambda-function-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instance-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-arn"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-arn"
          }
        ]
      },
      {
        "query": "aws.lambda.function.concurrency",
        "mql": "aws.lambda.function.concurrency",
        "code_id": "5UF8BzdejqE=",
        "checksum": "emH8LYZ/Uws=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-concurrency",
        "type": "\u0005",
        "title": "Concurrency limit",
        "filters": {}
      },
      {
        "query": "aws.lambda.function.dlqTargetArn",
        "mql": "aws.lambda.function.dlqTargetArn",
        "code_id": "GqMBe8PF5Ts=",
        "checksum": "O8X5V12daq8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-dlq",
        "type": "\u0007",
        "title": "DLQ target",
        "filters": {
          "items": {
            "t3xbgkDA4XI=": {
              "mql": "aws.lambda.function.dlqTargetArn != \"\"",
              "code_id": "t3xbgkDA4XI=",
              "checksum": "8LwFEV2m668=",
              "mrn": "//policy.api.mondoo.app/filter/t3xbgkDA4XI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudtrail.trail.kmsKey.id",
        "mql": "aws.cloudtrail.trail.kmsKey.id",
        "code_id": "ouhrxuVXU1k=",
        "checksum": "6lSno6K7D0k=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-kms-key-id",
        "type": "\u0007",
        "title": "KMS key ID",
        "filters": {
          "items": {
            "yPkFUe7jchw=": {
              "mql": "aws.cloudtrail.trail.kmsKey != null",
              "code_id": "yPkFUe7jchw=",
              "checksum": "eil5eGsvieE=",
              "mrn": "//policy.api.mondoo.app/filter/yPkFUe7jchw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudtrail.trail.name",
        "mql": "aws.cloudtrail.trail.name",
        "code_id": "q4tWDDUdGdY=",
        "checksum": "gVqHAlv2GbE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "aws.cloudtrail.trail.s3bucket.name",
        "mql": "aws.cloudtrail.trail.s3bucket.name",
        "code_id": "m31vNL+22mA=",
        "checksum": "6U9gxO6ZOm4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-s3-bucket",
        "type": "\u0007",
        "title": "S3 bucket",
        "filters": {}
      },
      {
        "query": "aws.cloudtrail.trail.snsTopicARN",
        "mql": "aws.cloudtrail.trail.snsTopicARN",
        "code_id": "pGP8U3F26cU=",
        "checksum": "yWP7fzUH6sU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-sns-topic",
        "type": "\u0007",
        "title": "SNS topic",
        "filters": {
          "items": {
            "J9lH/zmjDcQ=": {
              "mql": "aws.cloudtrail.trail.snsTopicARN != \"\"",
              "code_id": "J9lH/zmjDcQ=",
              "checksum": "ZXFtZxOdIpg=",
              "mrn": "//policy.api.mondoo.app/filter/J9lH/zmjDcQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.lambda.function.vpcConfig[\"VpcId\"]",
        "mql": "aws.lambda.function.vpcConfig[\"VpcId\"]",
        "code_id": "KuT0maKg2Yw=",
        "checksum": "TOXnf9lhwn0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-aws-cloudtrail-trail-vpc",
        "type": "\n",
        "title": "VPC",
        "filters": {
          "items": {
            "VQwFP0mL4gc=": {
              "mql": "aws.lambda.function.vpcConfig.length \u003e 0",
              "code_id": "VQwFP0mL4gc=",
              "checksum": "pDGml3JaCu0=",
              "mrn": "//policy.api.mondoo.app/filter/VQwFP0mL4gc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudtrail.trail.arn",
        "mql": "aws.cloudtrail.trail.arn",
        "code_id": "Ky+BgYAFI6I=",
        "checksum": "kZtVry0xFiI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudtrail-trail-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "qcjTHhgiY8I=": {
              "mql": "asset.platform == \"aws-cloudtrail-trail\"",
              "code_id": "qcjTHhgiY8I=",
              "checksum": "ipnU6CV9DsI=",
              "mrn": "//policy.api.mondoo.app/filter/qcjTHhgiY8I=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudtrail.trail.region",
        "mql": "aws.cloudtrail.trail.region",
        "code_id": "N3H74y+akmo=",
        "checksum": "hi873L29yQc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudtrail-trail-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "qcjTHhgiY8I=": {
              "mql": "asset.platform == \"aws-cloudtrail-trail\"",
              "code_id": "qcjTHhgiY8I=",
              "checksum": "ipnU6CV9DsI=",
              "mrn": "//policy.api.mondoo.app/filter/qcjTHhgiY8I=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudwatch.loggroup.arn",
        "mql": "aws.cloudwatch.loggroup.arn",
        "code_id": "qJrEqJQxPaw=",
        "checksum": "AuEDGekfAbQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "ItMukH2UOZA=": {
              "mql": "asset.platform == \"aws-cloudwatch-loggroup\"",
              "code_id": "ItMukH2UOZA=",
              "checksum": "vFidmal67RM=",
              "mrn": "//policy.api.mondoo.app/filter/ItMukH2UOZA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudwatch.loggroup.kmsKey.id",
        "mql": "aws.cloudwatch.loggroup.kmsKey.id",
        "code_id": "2he2/YdbrMc=",
        "checksum": "lb+yJy0dW8E=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-kms-key-id",
        "type": "\u0007",
        "title": "KMS key ID",
        "filters": {
          "items": {
            "XWZLRzDTtCI=": {
              "mql": "aws.cloudwatch.loggroup.kmsKey != null",
              "code_id": "XWZLRzDTtCI=",
              "checksum": "rGYQGe35+Vg=",
              "mrn": "//policy.api.mondoo.app/filter/XWZLRzDTtCI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudwatch.loggroup.name",
        "mql": "aws.cloudwatch.loggroup.name",
        "code_id": "W5Esq/IkwL0=",
        "checksum": "7WguXp/ua9s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "aws.cloudwatch.loggroup.region",
        "mql": "aws.cloudwatch.loggroup.region",
        "code_id": "3LbgmQq6ALk=",
        "checksum": "gtSmq/9JMZc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "ItMukH2UOZA=": {
              "mql": "asset.platform == \"aws-cloudwatch-loggroup\"",
              "code_id": "ItMukH2UOZA=",
              "checksum": "vFidmal67RM=",
              "mrn": "//policy.api.mondoo.app/filter/ItMukH2UOZA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudwatch.loggroup.retentionInDays",
        "mql": "aws.cloudwatch.loggroup.retentionInDays",
        "code_id": "JiFvv/FO2UM=",
        "checksum": "8IKrflwAB9E=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-retention",
        "type": "\u0005",
        "title": "Retention in days",
        "filters": {}
      },
      {
        "checksum": "YrcIux4a1e0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-create-date",
        "title": "Creation date",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-group-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-create-date"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-create-date"
          }
        ]
      },
      {
        "query": "aws.dynamodb.table.arn",
        "mql": "aws.dynamodb.table.arn",
        "code_id": "g2GJblthiCQ=",
        "checksum": "Ql0MP1UCJ9g=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "fkjI6ZKFDMU=": {
              "mql": "asset.platform == \"aws-dynamodb-table\"",
              "code_id": "fkjI6ZKFDMU=",
              "checksum": "rZBWcPvkzhk=",
              "mrn": "//policy.api.mondoo.app/filter/fkjI6ZKFDMU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.dynamodb.table.backups.length",
        "mql": "aws.dynamodb.table.backups.length",
        "code_id": "NScRsvVZvr4=",
        "checksum": "EbsuldjGfKE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-backups",
        "type": "\u0005",
        "title": "Backups",
        "filters": {}
      },
      {
        "query": "aws.dynamodb.table.createdTime",
        "mql": "aws.dynamodb.table.createdTime",
        "code_id": "2l5IOBkWC4c=",
        "checksum": "Dp8SjkUvFQo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "fkjI6ZKFDMU=": {
              "mql": "asset.platform == \"aws-dynamodb-table\"",
              "code_id": "fkjI6ZKFDMU=",
              "checksum": "rZBWcPvkzhk=",
              "mrn": "//policy.api.mondoo.app/filter/fkjI6ZKFDMU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.dynamodb.table.region",
        "mql": "aws.dynamodb.table.region",
        "code_id": "cRpXaZHgU4g=",
        "checksum": "C8PPKIOumFM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "fkjI6ZKFDMU=": {
              "mql": "asset.platform == \"aws-dynamodb-table\"",
              "code_id": "fkjI6ZKFDMU=",
              "checksum": "rZBWcPvkzhk=",
              "mrn": "//policy.api.mondoo.app/filter/fkjI6ZKFDMU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.dynamodb.table.sizeBytes",
        "mql": "aws.dynamodb.table.sizeBytes",
        "code_id": "k8Yk5/hpYQ0=",
        "checksum": "cIeh2Mbs/Vs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-size",
        "type": "\u0005",
        "title": "Size in bytes",
        "filters": {}
      },
      {
        "query": "aws.dynamodb.table.tags",
        "mql": "aws.dynamodb.table.tags",
        "code_id": "GL0QAV/iWVI=",
        "checksum": "ltdKoUEZ9Rw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "fkjI6ZKFDMU=": {
              "mql": "asset.platform == \"aws-dynamodb-table\"",
              "code_id": "fkjI6ZKFDMU=",
              "checksum": "rZBWcPvkzhk=",
              "mrn": "//policy.api.mondoo.app/filter/fkjI6ZKFDMU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.snapshot.arn",
        "mql": "aws.ec2.snapshot.arn",
        "code_id": "BeCJ0vcS33c=",
        "checksum": "cD708QWOQGM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "zT7M2Ge1gZo=": {
              "mql": "asset.platform == \"aws-ebs-snapshot\" || asset.platform == \"aws-ec2-snapshot\"",
              "code_id": "zT7M2Ge1gZo=",
              "checksum": "5wLYnpTxIv8=",
              "mrn": "//policy.api.mondoo.app/filter/zT7M2Ge1gZo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.snapshot.startTime",
        "mql": "aws.ec2.snapshot.startTime",
        "code_id": "QeH/LJDJBMk=",
        "checksum": "BOjEkyhvpEw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "CmBsKqBM1Vs=": {
              "mql": "asset.platform == \"aws-ec2-snapshot\" || asset.platform == \"aws-ebs-snapshot\"",
              "code_id": "CmBsKqBM1Vs=",
              "checksum": "rb+p4NTgf5c=",
              "mrn": "//policy.api.mondoo.app/filter/CmBsKqBM1Vs=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.snapshot.encrypted",
        "mql": "aws.ec2.snapshot.encrypted",
        "code_id": "A8vpxneqd2c=",
        "checksum": "Sv9gbMspF8I=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-encrypted",
        "type": "\u0004",
        "title": "Encrypted",
        "filters": {}
      },
      {
        "query": "aws.ec2.snapshot.id",
        "mql": "aws.ec2.snapshot.id",
        "code_id": "xp3fh3tclkU=",
        "checksum": "x/bWzXVccqw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.ec2.snapshot.region",
        "mql": "aws.ec2.snapshot.region",
        "code_id": "M+G3WPxNx6Y=",
        "checksum": "UL10GRZjm0c=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "CmBsKqBM1Vs=": {
              "mql": "asset.platform == \"aws-ec2-snapshot\" || asset.platform == \"aws-ebs-snapshot\"",
              "code_id": "CmBsKqBM1Vs=",
              "checksum": "rb+p4NTgf5c=",
              "mrn": "//policy.api.mondoo.app/filter/CmBsKqBM1Vs=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.snapshot.volumeSize",
        "mql": "aws.ec2.snapshot.volumeSize",
        "code_id": "tUHLJzRqiLo=",
        "checksum": "73Kj3EFfWmw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-size",
        "type": "\u0005",
        "title": "Volume size (GiB)",
        "filters": {}
      },
      {
        "query": "aws.ec2.snapshot.storageTier",
        "mql": "aws.ec2.snapshot.storageTier",
        "code_id": "DDT80ZNKQ9k=",
        "checksum": "2UD2lI8eIeg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-storage-tier",
        "type": "\u0007",
        "title": "Storage tier",
        "filters": {}
      },
      {
        "query": "aws.ec2.snapshot.tags",
        "mql": "aws.ec2.snapshot.tags",
        "code_id": "lA7w7zm87Sc=",
        "checksum": "iwanvw2mIWk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "CmBsKqBM1Vs=": {
              "mql": "asset.platform == \"aws-ec2-snapshot\" || asset.platform == \"aws-ebs-snapshot\"",
              "code_id": "CmBsKqBM1Vs=",
              "checksum": "rb+p4NTgf5c=",
              "mrn": "//policy.api.mondoo.app/filter/CmBsKqBM1Vs=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.snapshot.volumeId",
        "mql": "aws.ec2.snapshot.volumeId",
        "code_id": "gs1v9Z9trVs=",
        "checksum": "jm3RB2375no=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-volumeid",
        "type": "\u0007",
        "title": "Volume ID",
        "filters": {}
      },
      {
        "query": "aws.ec2.volume.arn",
        "mql": "aws.ec2.volume.arn",
        "code_id": "JnCjg5Y2nQ8=",
        "checksum": "NAVSTOEUZOw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "wgLoyB/qbks=": {
              "mql": "asset.platform == \"aws-ec2-volume\" || asset.platform == \"aws-ebs-volume\"",
              "code_id": "wgLoyB/qbks=",
              "checksum": "DWffPewLqQw=",
              "mrn": "//policy.api.mondoo.app/filter/wgLoyB/qbks=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.volume.createTime",
        "mql": "aws.ec2.volume.createTime",
        "code_id": "zkITbTPhDi0=",
        "checksum": "7FeVLa+DIso=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "wgLoyB/qbks=": {
              "mql": "asset.platform == \"aws-ec2-volume\" || asset.platform == \"aws-ebs-volume\"",
              "code_id": "wgLoyB/qbks=",
              "checksum": "DWffPewLqQw=",
              "mrn": "//policy.api.mondoo.app/filter/wgLoyB/qbks=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.volume.encrypted",
        "mql": "aws.ec2.volume.encrypted",
        "code_id": "eVMevAkX02s=",
        "checksum": "eg4SAzcJzS8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-encrypted",
        "type": "\u0004",
        "title": "Encrypted",
        "filters": {}
      },
      {
        "query": "aws.ec2.volume.id",
        "mql": "aws.ec2.volume.id",
        "code_id": "MthkgQso+Hg=",
        "checksum": "Zu/gdmTVF2A=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.ec2.volume.region",
        "mql": "aws.ec2.volume.region",
        "code_id": "wTy41xEbWNc=",
        "checksum": "tJLa3iPZ0RM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "wgLoyB/qbks=": {
              "mql": "asset.platform == \"aws-ec2-volume\" || asset.platform == \"aws-ebs-volume\"",
              "code_id": "wgLoyB/qbks=",
              "checksum": "DWffPewLqQw=",
              "mrn": "//policy.api.mondoo.app/filter/wgLoyB/qbks=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.volume.size",
        "mql": "aws.ec2.volume.size",
        "code_id": "xSBzSyq0r7A=",
        "checksum": "GyiWsoWgpko=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-size",
        "type": "\u0005",
        "title": "Volume size (GiB)",
        "filters": {}
      },
      {
        "query": "aws.ec2.volume.state",
        "mql": "aws.ec2.volume.state",
        "code_id": "irfUJoIrVAM=",
        "checksum": "KIdNPjj+nqQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-state",
        "type": "\u0007",
        "title": "State",
        "filters": {}
      },
      {
        "query": "aws.ec2.volume.tags",
        "mql": "aws.ec2.volume.tags",
        "code_id": "tHCSunDePoI=",
        "checksum": "r1ugFyS2Stw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "wgLoyB/qbks=": {
              "mql": "asset.platform == \"aws-ec2-volume\" || asset.platform == \"aws-ebs-volume\"",
              "code_id": "wgLoyB/qbks=",
              "checksum": "DWffPewLqQw=",
              "mrn": "//policy.api.mondoo.app/filter/wgLoyB/qbks=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.volume.volumeType",
        "mql": "aws.ec2.volume.volumeType",
        "code_id": "MqNVvzx0ENk=",
        "checksum": "IbMtMT9BG0s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-type",
        "type": "\u0007",
        "title": "Type",
        "filters": {}
      },
      {
        "query": "aws.ec2.instance.arn",
        "mql": "aws.ec2.instance.arn",
        "code_id": "fP0lTBVOrsA=",
        "checksum": "kvY5k4xEAOo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "cPC5mN127Kg=": {
              "mql": "asset.platform == \"aws-ec2-instance\"",
              "code_id": "cPC5mN127Kg=",
              "checksum": "ypDkzqrbvNQ=",
              "mrn": "//policy.api.mondoo.app/filter/cPC5mN127Kg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.instance.launchTime",
        "mql": "aws.ec2.instance.launchTime",
        "code_id": "zVMqptIwHio=",
        "checksum": "INev2fkRCmQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "cPC5mN127Kg=": {
              "mql": "asset.platform == \"aws-ec2-instance\"",
              "code_id": "cPC5mN127Kg=",
              "checksum": "ypDkzqrbvNQ=",
              "mrn": "//policy.api.mondoo.app/filter/cPC5mN127Kg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.instance.privateDnsName",
        "mql": "aws.ec2.instance.privateDnsName",
        "code_id": "VsysbRTPSXA=",
        "checksum": "QHsZGA6VyEU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-private-dns",
        "type": "\u0007",
        "title": "Private DNS",
        "filters": {}
      },
      {
        "query": "aws.ec2.instance.privateIp",
        "mql": "aws.ec2.instance.privateIp",
        "code_id": "pdXDZtUwAJI=",
        "checksum": "MCxcbKiWcvg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-private-ip",
        "type": "\u0007",
        "title": "Private IPv4",
        "filters": {}
      },
      {
        "query": "aws.ec2.instance.publicDnsName",
        "mql": "aws.ec2.instance.publicDnsName",
        "code_id": "FoCbtqGInSo=",
        "checksum": "0Ibp+8yjHFY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-public-dns",
        "type": "\u0007",
        "title": "Public DNS",
        "filters": {}
      },
      {
        "query": "aws.ec2.instance.publicIp",
        "mql": "aws.ec2.instance.publicIp",
        "code_id": "bCoY6g4/m1Q=",
        "checksum": "3nxSgZGrc+M=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-public-ip",
        "type": "\u0007",
        "title": "Public IPv4",
        "filters": {}
      },
      {
        "query": "aws.ec2.instance.region",
        "mql": "aws.ec2.instance.region",
        "code_id": "Nce9ZY0RZJI=",
        "checksum": "sRNJtMXHCiE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "cPC5mN127Kg=": {
              "mql": "asset.platform == \"aws-ec2-instance\"",
              "code_id": "cPC5mN127Kg=",
              "checksum": "ypDkzqrbvNQ=",
              "mrn": "//policy.api.mondoo.app/filter/cPC5mN127Kg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.instance.state",
        "mql": "aws.ec2.instance.state",
        "code_id": "p1HYVljpzf4=",
        "checksum": "8Er8efR5WL0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-state",
        "type": "\u0007",
        "title": "State",
        "filters": {}
      },
      {
        "query": "aws.ec2.instance.tags",
        "mql": "aws.ec2.instance.tags",
        "code_id": "1cN4TfveBjs=",
        "checksum": "JURZdug1N68=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "cPC5mN127Kg=": {
              "mql": "asset.platform == \"aws-ec2-instance\"",
              "code_id": "cPC5mN127Kg=",
              "checksum": "ypDkzqrbvNQ=",
              "mrn": "//policy.api.mondoo.app/filter/cPC5mN127Kg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.instance.instanceType",
        "mql": "aws.ec2.instance.instanceType",
        "code_id": "QzcEmOkKCoY=",
        "checksum": "HPfbVH62pXM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-type",
        "type": "\u0007",
        "title": "Type",
        "filters": {}
      },
      {
        "query": "aws.ec2.instance.vpc.id",
        "mql": "aws.ec2.instance.vpc.id",
        "code_id": "NZBlQ+jvrcg=",
        "checksum": "4O3dimXXYAU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-vpc",
        "type": "\u0007",
        "title": "VPC ID",
        "filters": {}
      },
      {
        "query": "aws.ecr.image.arn",
        "mql": "aws.ecr.image.arn",
        "code_id": "Nz12c5P6cuo=",
        "checksum": "y39ST90JCwQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "0temxiiOySw=": {
              "mql": "asset.platform == \"aws-ecr-image\"",
              "code_id": "0temxiiOySw=",
              "checksum": "ymMLEMk0JT0=",
              "mrn": "//policy.api.mondoo.app/filter/0temxiiOySw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ecr.image.digest",
        "mql": "aws.ecr.image.digest",
        "code_id": "JxoBfZCDGVE=",
        "checksum": "Gbg5c8CznCs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-digest",
        "type": "\u0007",
        "title": "Digest",
        "filters": {}
      },
      {
        "query": "aws.ecr.image.region",
        "mql": "aws.ecr.image.region",
        "code_id": "BAXVRw91N3s=",
        "checksum": "dDRRX56VJwA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "0temxiiOySw=": {
              "mql": "asset.platform == \"aws-ecr-image\"",
              "code_id": "0temxiiOySw=",
              "checksum": "ymMLEMk0JT0=",
              "mrn": "//policy.api.mondoo.app/filter/0temxiiOySw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ecr.image.repoName",
        "mql": "aws.ecr.image.repoName",
        "code_id": "n8MYEXpZZS0=",
        "checksum": "7qd6+TC19X0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-repo",
        "type": "\u0007",
        "title": "Repository",
        "filters": {}
      },
      {
        "query": "aws.ecr.image.tags",
        "mql": "aws.ecr.image.tags",
        "code_id": "giIfmFdJmfY=",
        "checksum": "vTRus/VlJKA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-tags",
        "type": "\u0019\u0007",
        "title": "Tags",
        "filters": {}
      },
      {
        "query": "aws.ecr.image.uri",
        "mql": "aws.ecr.image.uri",
        "code_id": "ynGoQdzizjw=",
        "checksum": "ZZ4QTZ8gjyU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-uri",
        "type": "\u0007",
        "title": "URI",
        "filters": {}
      },
      {
        "query": "aws.ecs.container.arn",
        "mql": "aws.ecs.container.arn",
        "code_id": "eCJCJWluBLs=",
        "checksum": "9kJ/0h1EYqs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "M4FgTdRaB8A=": {
              "mql": "asset.platform == \"aws-ecs-container\"",
              "code_id": "M4FgTdRaB8A=",
              "checksum": "TbIX8JR8Wjk=",
              "mrn": "//policy.api.mondoo.app/filter/M4FgTdRaB8A=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ecs.container.clusterName",
        "mql": "aws.ecs.container.clusterName",
        "code_id": "AKX3XkcMLEs=",
        "checksum": "sA+Rh3Y9MOY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-cluster",
        "type": "\u0007",
        "title": "Cluster",
        "filters": {}
      },
      {
        "query": "aws.ecs.container.image",
        "mql": "aws.ecs.container.image",
        "code_id": "XrgZiRH+voM=",
        "checksum": "kx0XSSF1QB0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-image",
        "type": "\u0007",
        "title": "Image",
        "filters": {}
      },
      {
        "query": "if (aws.ecs.container.platformFamily != \"\") {\n  return aws.ecs.container.platformFamily + \" \" +  aws.ecs.container.platformVersion\n}\n",
        "mql": "if (aws.ecs.container.platformFamily != \"\") {\n  return aws.ecs.container.platformFamily + \" \" +  aws.ecs.container.platformVersion\n}\n",
        "code_id": "a9iOMLlEDzc=",
        "checksum": "5MbbQ3Hi9Ts=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-platform",
        "type": "\u0007",
        "title": "Container platform",
        "filters": {}
      },
      {
        "query": "aws.ecs.container.publicIp",
        "mql": "aws.ecs.container.publicIp",
        "code_id": "ZBhBLOWqjac=",
        "checksum": "Rm2rhxCtJiw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-publicip",
        "type": "\u0007",
        "title": "Public IP",
        "filters": {}
      },
      {
        "query": "aws.ecs.container.region",
        "mql": "aws.ecs.container.region",
        "code_id": "gqBwAFb1F+k=",
        "checksum": "3F54QZCZ8v8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "M4FgTdRaB8A=": {
              "mql": "asset.platform == \"aws-ecs-container\"",
              "code_id": "M4FgTdRaB8A=",
              "checksum": "TbIX8JR8Wjk=",
              "mrn": "//policy.api.mondoo.app/filter/M4FgTdRaB8A=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ecs.container.runtimeId",
        "mql": "aws.ecs.container.runtimeId",
        "code_id": "PLV6oyOztrk=",
        "checksum": "jCezNs8/RDM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-runtimeid",
        "type": "\u0007",
        "title": "Runtime ID",
        "filters": {}
      },
      {
        "query": "aws.ecs.container.status",
        "mql": "aws.ecs.container.status",
        "code_id": "4QSzctYu908=",
        "checksum": "m3gCgqRo/sQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-status",
        "type": "\u0007",
        "title": "Status",
        "filters": {}
      },
      {
        "query": "aws.efs.filesystem.arn",
        "mql": "aws.efs.filesystem.arn",
        "code_id": "+F74ezmurbA=",
        "checksum": "tnsAvDb/P7E=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "+dxosqhWfaA=": {
              "mql": "asset.platform == \"aws-efs-filesystem\"",
              "code_id": "+dxosqhWfaA=",
              "checksum": "lg1z+X19ABE=",
              "mrn": "//policy.api.mondoo.app/filter/+dxosqhWfaA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.efs.filesystem.createdAt",
        "mql": "aws.efs.filesystem.createdAt",
        "code_id": "FX8qEKGxjUY=",
        "checksum": "kiWcHHQMHQE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "+dxosqhWfaA=": {
              "mql": "asset.platform == \"aws-efs-filesystem\"",
              "code_id": "+dxosqhWfaA=",
              "checksum": "lg1z+X19ABE=",
              "mrn": "//policy.api.mondoo.app/filter/+dxosqhWfaA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.efs.filesystem.encrypted",
        "mql": "aws.efs.filesystem.encrypted",
        "code_id": "+i0Dm11At+I=",
        "checksum": "zAlW2FWTA7Y=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-encrypted",
        "type": "\u0004",
        "title": "Encrypted",
        "filters": {}
      },
      {
        "query": "aws.efs.filesystem.id",
        "mql": "aws.efs.filesystem.id",
        "code_id": "gCqO0HKaR6k=",
        "checksum": "jcbHBEnHdng=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.efs.filesystem.kmsKey.id",
        "mql": "aws.efs.filesystem.kmsKey.id",
        "code_id": "KQWyi2icDL8=",
        "checksum": "W0Xblno1VMo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-kms-key-id",
        "type": "\u0007",
        "title": "KMS key ID",
        "filters": {}
      },
      {
        "query": "aws.efs.filesystem.region",
        "mql": "aws.efs.filesystem.region",
        "code_id": "q5IAZYS1XuY=",
        "checksum": "TMVBya9fzb4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "+dxosqhWfaA=": {
              "mql": "asset.platform == \"aws-efs-filesystem\"",
              "code_id": "+dxosqhWfaA=",
              "checksum": "lg1z+X19ABE=",
              "mrn": "//policy.api.mondoo.app/filter/+dxosqhWfaA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.efs.filesystem.tags",
        "mql": "aws.efs.filesystem.tags",
        "code_id": "r5SEwag9Ah0=",
        "checksum": "0ru5g1Q2qxE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "+dxosqhWfaA=": {
              "mql": "asset.platform == \"aws-efs-filesystem\"",
              "code_id": "+dxosqhWfaA=",
              "checksum": "lg1z+X19ABE=",
              "mrn": "//policy.api.mondoo.app/filter/+dxosqhWfaA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.eks.cluster.arn",
        "mql": "aws.eks.cluster.arn",
        "code_id": "aaC4r7WFB2s=",
        "checksum": "Zep4uiezk9I=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "vLnOtXTQbss=": {
              "mql": "asset.platform == \"aws-eks-cluster\"",
              "code_id": "vLnOtXTQbss=",
              "checksum": "tvP1yZmC8aE=",
              "mrn": "//policy.api.mondoo.app/filter/vLnOtXTQbss=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.eks.cluster.createdAt",
        "mql": "aws.eks.cluster.createdAt",
        "code_id": "rSs3LGPBKMg=",
        "checksum": "0CJGJvAgTc0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "vLnOtXTQbss=": {
              "mql": "asset.platform == \"aws-eks-cluster\"",
              "code_id": "vLnOtXTQbss=",
              "checksum": "tvP1yZmC8aE=",
              "mrn": "//policy.api.mondoo.app/filter/vLnOtXTQbss=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.eks.cluster.name",
        "mql": "aws.eks.cluster.name",
        "code_id": "l2hQ2RwP+QM=",
        "checksum": "z3Vl2e1oqHs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "aws.eks.cluster.platformVersion",
        "mql": "aws.eks.cluster.platformVersion",
        "code_id": "3gjOFJ5YB8Y=",
        "checksum": "QK0o7ZcapMk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-platform-version",
        "type": "\u0007",
        "title": "Kubernetes Version",
        "filters": {}
      },
      {
        "query": "aws.eks.cluster.region",
        "mql": "aws.eks.cluster.region",
        "code_id": "1J3OHfsCHzw=",
        "checksum": "rh/Kqe4d7OI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "vLnOtXTQbss=": {
              "mql": "asset.platform == \"aws-eks-cluster\"",
              "code_id": "vLnOtXTQbss=",
              "checksum": "tvP1yZmC8aE=",
              "mrn": "//policy.api.mondoo.app/filter/vLnOtXTQbss=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.eks.cluster.status",
        "mql": "aws.eks.cluster.status",
        "code_id": "HXv+cKR/QEM=",
        "checksum": "bq7H5vwwDY0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-status",
        "type": "\u0007",
        "title": "Status",
        "filters": {}
      },
      {
        "query": "aws.eks.cluster.supportType",
        "mql": "aws.eks.cluster.supportType",
        "code_id": "7ms5eQeuC3E=",
        "checksum": "bIytNULuyq8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-support-type",
        "type": "\u0007",
        "title": "Support type",
        "filters": {}
      },
      {
        "query": "aws.eks.cluster.version",
        "mql": "aws.eks.cluster.version",
        "code_id": "62pyla6rCyM=",
        "checksum": "rg2sZzqN3Uo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-version",
        "type": "\u0007",
        "title": "Kubernetes Version",
        "filters": {}
      },
      {
        "query": "aws.elb.loadbalancer.arn",
        "mql": "aws.elb.loadbalancer.arn",
        "code_id": "vYAu9h5JnsY=",
        "checksum": "QD77txLcHzc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "YhGWafznrIo=": {
              "mql": "asset.platform == \"aws-elb-loadbalancer\"",
              "code_id": "YhGWafznrIo=",
              "checksum": "Grg6RQGhQ8o=",
              "mrn": "//policy.api.mondoo.app/filter/YhGWafznrIo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.elb.loadbalancer.dnsName",
        "mql": "aws.elb.loadbalancer.dnsName",
        "code_id": "hyotw5yJ7aE=",
        "checksum": "g8CrAFMxoaw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-dnsname",
        "type": "\u0007",
        "title": "DNS name",
        "filters": {}
      },
      {
        "query": "aws.elb.loadbalancer.listenerDescriptions.first[\"Port\"]",
        "mql": "aws.elb.loadbalancer.listenerDescriptions.first[\"Port\"]",
        "code_id": "B+FJaxs0+QM=",
        "checksum": "rQ9iGezN98g=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-listening-ports",
        "type": "\n",
        "title": "Listening ports",
        "filters": {}
      },
      {
        "query": "aws.elb.loadbalancer.listenerDescriptions.first[\"Protocol\"]",
        "mql": "aws.elb.loadbalancer.listenerDescriptions.first[\"Protocol\"]",
        "code_id": "4pzJKMzZFhE=",
        "checksum": "pYhKugoPNNA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-listening-protocols",
        "type": "\n",
        "title": "Listening protocols",
        "filters": {}
      },
      {
        "query": "aws.elb.loadbalancer.region",
        "mql": "aws.elb.loadbalancer.region",
        "code_id": "68XS2DPOa9s=",
        "checksum": "BznimUBdgmw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "YhGWafznrIo=": {
              "mql": "asset.platform == \"aws-elb-loadbalancer\"",
              "code_id": "YhGWafznrIo=",
              "checksum": "Grg6RQGhQ8o=",
              "mrn": "//policy.api.mondoo.app/filter/YhGWafznrIo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.elb.loadbalancer.scheme",
        "mql": "aws.elb.loadbalancer.scheme",
        "code_id": "snHYPYTauQg=",
        "checksum": "1VtkSZbN8BI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-scheme",
        "type": "\u0007",
        "title": "Scheme",
        "filters": {}
      },
      {
        "query": "aws.elb.loadbalancer.elbType",
        "mql": "aws.elb.loadbalancer.elbType",
        "code_id": "USo86W1U9DE=",
        "checksum": "e2i8lv0LJhQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-type",
        "type": "\u0007",
        "title": "ELB type",
        "filters": {}
      },
      {
        "query": "aws.es.domain.arn",
        "mql": "aws.es.domain.arn",
        "code_id": "36yJpVwjIdw=",
        "checksum": "hwlAUO7pZWE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "SDwUhCi/rQQ=": {
              "mql": "asset.platform == \"aws-es-domain\"",
              "code_id": "SDwUhCi/rQQ=",
              "checksum": "kcqTZZ8RFYo=",
              "mrn": "//policy.api.mondoo.app/filter/SDwUhCi/rQQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.es.domain.encryptionAtRestEnabled",
        "mql": "aws.es.domain.encryptionAtRestEnabled",
        "code_id": "nADZv1jdLRI=",
        "checksum": "HbVYA4w3PLk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-encryption-at-rest",
        "type": "\u0004",
        "title": "Encrypted at rest",
        "filters": {}
      },
      {
        "query": "aws.es.domain.endpoint",
        "mql": "aws.es.domain.endpoint",
        "code_id": "oAU3DZS7zzs=",
        "checksum": "Tcv5zU3APWU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-endpoint",
        "type": "\u0007",
        "title": "Endpoint",
        "filters": {}
      },
      {
        "query": "aws.es.domain.nodeToNodeEncryptionEnabled",
        "mql": "aws.es.domain.nodeToNodeEncryptionEnabled",
        "code_id": "+BIbtqZkl1I=",
        "checksum": "ZTmvIEjs7SA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-node-to-node-encryption",
        "type": "\u0004",
        "title": "Node to node encrypted",
        "filters": {}
      },
      {
        "query": "aws.es.domain.region",
        "mql": "aws.es.domain.region",
        "code_id": "kE7Ae6ooXAo=",
        "checksum": "BDop9yYn7SI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "SDwUhCi/rQQ=": {
              "mql": "asset.platform == \"aws-es-domain\"",
              "code_id": "SDwUhCi/rQQ=",
              "checksum": "kcqTZZ8RFYo=",
              "mrn": "//policy.api.mondoo.app/filter/SDwUhCi/rQQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.es.domain.tags",
        "mql": "aws.es.domain.tags",
        "code_id": "u27q75x3uHw=",
        "checksum": "LBKEwNvzywU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "SDwUhCi/rQQ=": {
              "mql": "asset.platform == \"aws-es-domain\"",
              "code_id": "SDwUhCi/rQQ=",
              "checksum": "kcqTZZ8RFYo=",
              "mrn": "//policy.api.mondoo.app/filter/SDwUhCi/rQQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.apigateway.restapi.arn",
        "mql": "aws.apigateway.restapi.arn",
        "code_id": "TsOjq1sZd9I=",
        "checksum": "5FSQKfwrCEc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "+JnRYnF2Eq4=": {
              "mql": "asset.platform == \"aws-gateway-restapi\"",
              "code_id": "+JnRYnF2Eq4=",
              "checksum": "10D4LUkKqjs=",
              "mrn": "//policy.api.mondoo.app/filter/+JnRYnF2Eq4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.apigateway.restapi.createdDate",
        "mql": "aws.apigateway.restapi.createdDate",
        "code_id": "6cLoj4xCv9Y=",
        "checksum": "mfGy6pwlbuQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "+JnRYnF2Eq4=": {
              "mql": "asset.platform == \"aws-gateway-restapi\"",
              "code_id": "+JnRYnF2Eq4=",
              "checksum": "10D4LUkKqjs=",
              "mrn": "//policy.api.mondoo.app/filter/+JnRYnF2Eq4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.apigateway.restapi.description",
        "mql": "aws.apigateway.restapi.description",
        "code_id": "V5a5Mny5gXw=",
        "checksum": "AbR6YMOQRJ0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "aws.apigateway.restapi.id",
        "mql": "aws.apigateway.restapi.id",
        "code_id": "fP+X1y3opLI=",
        "checksum": "gPP8XLmbJj4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.apigateway.restapi.name",
        "mql": "aws.apigateway.restapi.name",
        "code_id": "Nc4saX/K8/Y=",
        "checksum": "w/fVwFBi+Yg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "aws.apigateway.restapi.region",
        "mql": "aws.apigateway.restapi.region",
        "code_id": "65tW6+YzBtc=",
        "checksum": "ZeCPSwAFOEk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "+JnRYnF2Eq4=": {
              "mql": "asset.platform == \"aws-gateway-restapi\"",
              "code_id": "+JnRYnF2Eq4=",
              "checksum": "10D4LUkKqjs=",
              "mrn": "//policy.api.mondoo.app/filter/+JnRYnF2Eq4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.apigateway.restapi.tags",
        "mql": "aws.apigateway.restapi.tags",
        "code_id": "nexWN9pYKQA=",
        "checksum": "blVpsS+6X28=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "+JnRYnF2Eq4=": {
              "mql": "asset.platform == \"aws-gateway-restapi\"",
              "code_id": "+JnRYnF2Eq4=",
              "checksum": "10D4LUkKqjs=",
              "mrn": "//policy.api.mondoo.app/filter/+JnRYnF2Eq4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.group.arn",
        "mql": "aws.iam.group.arn",
        "code_id": "C6r3rQNGk5E=",
        "checksum": "T6VmIpy8npE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-group-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "GGmsRv0eF+o=": {
              "mql": "asset.platform == \"aws-iam-group\"",
              "code_id": "GGmsRv0eF+o=",
              "checksum": "X9DV+pmPNaM=",
              "mrn": "//policy.api.mondoo.app/filter/GGmsRv0eF+o=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.group.createDate",
        "mql": "aws.iam.group.createDate",
        "code_id": "f93yWOndE7s=",
        "checksum": "cTtpETkP34M=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-group-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "GGmsRv0eF+o=": {
              "mql": "asset.platform == \"aws-iam-group\"",
              "code_id": "GGmsRv0eF+o=",
              "checksum": "X9DV+pmPNaM=",
              "mrn": "//policy.api.mondoo.app/filter/GGmsRv0eF+o=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.group.id",
        "mql": "aws.iam.group.id",
        "code_id": "uchW3MSJOWw=",
        "checksum": "4TaPSQcowpc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-group-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.iam.user.arn",
        "mql": "aws.iam.user.arn",
        "code_id": "At76VtKSP6Q=",
        "checksum": "lDS2KS0L5qw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "lQAFhFMIHTo=": {
              "mql": "asset.platform == \"aws-iam-user\"",
              "code_id": "lQAFhFMIHTo=",
              "checksum": "/38ZQesWjSU=",
              "mrn": "//policy.api.mondoo.app/filter/lQAFhFMIHTo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.user.createDate",
        "mql": "aws.iam.user.createDate",
        "code_id": "Z1OGyM8AgL4=",
        "checksum": "TdH4hupfZWY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "lQAFhFMIHTo=": {
              "mql": "asset.platform == \"aws-iam-user\"",
              "code_id": "lQAFhFMIHTo=",
              "checksum": "/38ZQesWjSU=",
              "mrn": "//policy.api.mondoo.app/filter/lQAFhFMIHTo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.user.groups",
        "mql": "aws.iam.user.groups",
        "code_id": "Lj+TZ7g0S4c=",
        "checksum": "mfwGZeUTJo0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-groups",
        "type": "\u0019\u0007",
        "title": "Groups",
        "filters": {}
      },
      {
        "query": "aws.iam.user.id",
        "mql": "aws.iam.user.id",
        "code_id": "+Zn5NaLemMA=",
        "checksum": "hZ8CmIQ9TvA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "if (aws.iam.user.passwordLastUsed != null) {\n  return aws.iam.user.passwordLastUsed\n} else {\n  return \"never\"\n}\n",
        "mql": "if (aws.iam.user.passwordLastUsed != null) {\n  return aws.iam.user.passwordLastUsed\n} else {\n  return \"never\"\n}\n",
        "code_id": "890bQd9Tv/s=",
        "checksum": "XZ8+VGhA6JM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-pass-last-used",
        "type": "\u0007",
        "title": "Password last used",
        "filters": {}
      },
      {
        "query": "aws.iam.user.tags",
        "mql": "aws.iam.user.tags",
        "code_id": "4zvsJtOg2Fs=",
        "checksum": "Cw5ab0xULzs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "lQAFhFMIHTo=": {
              "mql": "asset.platform == \"aws-iam-user\"",
              "code_id": "lQAFhFMIHTo=",
              "checksum": "/38ZQesWjSU=",
              "mrn": "//policy.api.mondoo.app/filter/lQAFhFMIHTo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.kms.key.arn",
        "mql": "aws.kms.key.arn",
        "code_id": "8W++AZrdAKg=",
        "checksum": "tUpxzh7/BM8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "vn9Qq1qu38c=": {
              "mql": "asset.platform == \"aws-kms-key\"",
              "code_id": "vn9Qq1qu38c=",
              "checksum": "oW0og/ZIF8w=",
              "mrn": "//policy.api.mondoo.app/filter/vn9Qq1qu38c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.kms.key.metadata[\"CreationDate\"]",
        "mql": "aws.kms.key.metadata[\"CreationDate\"]",
        "code_id": "MwrWFbUoLAE=",
        "checksum": "+6A5IFw33FA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-create-date",
        "type": "\n",
        "title": "Creation date",
        "filters": {
          "items": {
            "vn9Qq1qu38c=": {
              "mql": "asset.platform == \"aws-kms-key\"",
              "code_id": "vn9Qq1qu38c=",
              "checksum": "oW0og/ZIF8w=",
              "mrn": "//policy.api.mondoo.app/filter/vn9Qq1qu38c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.kms.key.metadata[\"Description\"]",
        "mql": "aws.kms.key.metadata[\"Description\"]",
        "code_id": "X5OaA35ZKgg=",
        "checksum": "mmzq4FjnO3k=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-description",
        "type": "\n",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "aws.kms.key.id",
        "mql": "aws.kms.key.id",
        "code_id": "CqtRJFlCg5Y=",
        "checksum": "+jR3EQNIHNQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.kms.key.region",
        "mql": "aws.kms.key.region",
        "code_id": "Q2tfzgdlQ30=",
        "checksum": "P+oAEvbtwlo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "vn9Qq1qu38c=": {
              "mql": "asset.platform == \"aws-kms-key\"",
              "code_id": "vn9Qq1qu38c=",
              "checksum": "oW0og/ZIF8w=",
              "mrn": "//policy.api.mondoo.app/filter/vn9Qq1qu38c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.kms.key.keyRotationEnabled",
        "mql": "aws.kms.key.keyRotationEnabled",
        "code_id": "whdSnR8kk3g=",
        "checksum": "9RTz6o2n90s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-rotation",
        "type": "\u0004",
        "title": "Auto rotation",
        "filters": {}
      },
      {
        "query": "aws.kms.key.metadata[\"KeyState\"]",
        "mql": "aws.kms.key.metadata[\"KeyState\"]",
        "code_id": "xwiMbCF5Ujw=",
        "checksum": "eNq5UJ1UMrQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-status",
        "type": "\n",
        "title": "Status",
        "filters": {}
      },
      {
        "query": "aws.kms.key.metadata[\"KeySpec\"]",
        "mql": "aws.kms.key.metadata[\"KeySpec\"]",
        "code_id": "MpGIwAqYDhk=",
        "checksum": "3VngjiSnpYc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-type",
        "type": "\n",
        "title": "Type",
        "filters": {}
      },
      {
        "query": "aws.lambda.function.arn",
        "mql": "aws.lambda.function.arn",
        "code_id": "TAkA21TxbN8=",
        "checksum": "0z0sT6XfXo0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-lambda-function-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "8iGUBh79IzA=": {
              "mql": "asset.platform == \"aws-lambda-function\"",
              "code_id": "8iGUBh79IzA=",
              "checksum": "MEtPdsd2CEg=",
              "mrn": "//policy.api.mondoo.app/filter/8iGUBh79IzA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.lambda.function.region",
        "mql": "aws.lambda.function.region",
        "code_id": "irswhlzDmV4=",
        "checksum": "VoeuJFlbB+I=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-lambda-function-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "8iGUBh79IzA=": {
              "mql": "asset.platform == \"aws-lambda-function\"",
              "code_id": "8iGUBh79IzA=",
              "checksum": "MEtPdsd2CEg=",
              "mrn": "//policy.api.mondoo.app/filter/8iGUBh79IzA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.lambda.function.tags",
        "mql": "aws.lambda.function.tags",
        "code_id": "PpGqG1Pgz4A=",
        "checksum": "tchGhSaFGok=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-lambda-function-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "8iGUBh79IzA=": {
              "mql": "asset.platform == \"aws-lambda-function\"",
              "code_id": "8iGUBh79IzA=",
              "checksum": "MEtPdsd2CEg=",
              "mrn": "//policy.api.mondoo.app/filter/8iGUBh79IzA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.rds.dbcluster.arn",
        "mql": "aws.rds.dbcluster.arn",
        "code_id": "70ssjAG5z3s=",
        "checksum": "ZZhfvPH68B4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "CNIfmlvOXUg=": {
              "mql": "asset.platform == \"aws-rds-dbcluster\"",
              "code_id": "CNIfmlvOXUg=",
              "checksum": "dlFMx6QAVvw=",
              "mrn": "//policy.api.mondoo.app/filter/CNIfmlvOXUg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.rds.dbcluster.backupSettings.first.encrypted",
        "mql": "aws.rds.dbcluster.backupSettings.first.encrypted",
        "code_id": "lvInU6fBK24=",
        "checksum": "y/lcrN/JVLg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-backup-encryption",
        "type": "\u0004",
        "title": "Backups encrypted",
        "filters": {}
      },
      {
        "query": "aws.rds.dbcluster.backupSettings.first.retentionPeriod",
        "mql": "aws.rds.dbcluster.backupSettings.first.retentionPeriod",
        "code_id": "ZsHy/j/g4tw=",
        "checksum": "yM018Ma5qtc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-backup-retention",
        "type": "\u0005",
        "title": "Backup retention (days)",
        "filters": {}
      },
      {
        "query": "aws.rds.dbcluster.deletionProtection",
        "mql": "aws.rds.dbcluster.deletionProtection",
        "code_id": "FTV+Cb3NFGU=",
        "checksum": "94fAwVrE6jg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-deletion-protection",
        "type": "\u0004",
        "title": "Deletion protection",
        "filters": {}
      },
      {
        "query": "if (aws.rds.dbcluster.engine == \"mysql\") {\n  return \"MySQL\"\n} else if (aws.rds.dbcluster.engine == \"mariadb\") {\n  return \"MariaDB\"\n} else if (aws.rds.dbcluster.engine == \"oracle-ee\") {\n  return \"Oracle Enterprise Edition\"\n} else if (aws.rds.dbcluster.engine == \"oracle-se2\") {\n  return \"Oracle Standard Edition Two\"\n} else if (aws.rds.dbcluster.engine == \"oracle-ee-cdb\") {\n  return \"Oracle Enterprise Edition (CDB)\"\n} else if (aws.rds.dbcluster.engine == \"oracle-se2-cdb\") {\n  return \"Oracle Standard Edition Two (CDB)\"\n} else if (aws.rds.dbcluster.engine == \"postgres\") {\n  return \"PostgreSQL\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-ee\") {\n  return \"SQL Server Enterprise Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-web\") {\n  return \"SQL Server Web Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-se\") {\n  return \"SQL Server Standard Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-ex\") {\n  return \"SQL Server Express Edition\"\n} else if (aws.rds.dbcluster.engine == \"db2-ae\") {\n  return \"Db2 Advanced Edition\"\n} else if (aws.rds.dbcluster.engine == \"db2-se\") {\n  return \"Db2 Standard Edition\"\n} else if (aws.rds.dbcluster.engine == \"aurora-mysql\") {\n  return \"Aurora MySQL\"\n} else if (aws.rds.dbcluster.engine == \"aurora-postgresql\") {\n  return \"Aurora PostgreSQL\"\n} else {\n  return aws.rds.dbcluster.engine\n}\n",
        "mql": "if (aws.rds.dbcluster.engine == \"mysql\") {\n  return \"MySQL\"\n} else if (aws.rds.dbcluster.engine == \"mariadb\") {\n  return \"MariaDB\"\n} else if (aws.rds.dbcluster.engine == \"oracle-ee\") {\n  return \"Oracle Enterprise Edition\"\n} else if (aws.rds.dbcluster.engine == \"oracle-se2\") {\n  return \"Oracle Standard Edition Two\"\n} else if (aws.rds.dbcluster.engine == \"oracle-ee-cdb\") {\n  return \"Oracle Enterprise Edition (CDB)\"\n} else if (aws.rds.dbcluster.engine == \"oracle-se2-cdb\") {\n  return \"Oracle Standard Edition Two (CDB)\"\n} else if (aws.rds.dbcluster.engine == \"postgres\") {\n  return \"PostgreSQL\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-ee\") {\n  return \"SQL Server Enterprise Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-web\") {\n  return \"SQL Server Web Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-se\") {\n  return \"SQL Server Standard Edition\"\n} else if (aws.rds.dbcluster.engine == \"sqlserver-ex\") {\n  return \"SQL Server Express Edition\"\n} else if (aws.rds.dbcluster.engine == \"db2-ae\") {\n  return \"Db2 Advanced Edition\"\n} else if (aws.rds.dbcluster.engine == \"db2-se\") {\n  return \"Db2 Standard Edition\"\n} else if (aws.rds.dbcluster.engine == \"aurora-mysql\") {\n  return \"Aurora MySQL\"\n} else if (aws.rds.dbcluster.engine == \"aurora-postgresql\") {\n  return \"Aurora PostgreSQL\"\n} else {\n  return aws.rds.dbcluster.engine\n}\n",
        "code_id": "TN3EFu0qqVo=",
        "checksum": "5V8UAVop2IU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-engine",
        "type": "\u0007",
        "title": "Engine",
        "filters": {}
      },
      {
        "query": "aws.rds.dbcluster.engineVersion",
        "mql": "aws.rds.dbcluster.engineVersion",
        "code_id": "/7MysQxDbHA=",
        "checksum": "D28gTwF+0Tk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-engine-version",
        "type": "\u0007",
        "title": "Engine version",
        "filters": {}
      },
      {
        "query": "aws.rds.dbcluster.id",
        "mql": "aws.rds.dbcluster.id",
        "code_id": "2eQXjbI/0wc=",
        "checksum": "uozmGbDaOfQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.rds.dbcluster.members.length",
        "mql": "aws.rds.dbcluster.members.length",
        "code_id": "wjj1hufFBTA=",
        "checksum": "VYAkQxPitLs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-instance-count",
        "type": "\u0005",
        "title": "Instance count",
        "filters": {}
      },
      {
        "query": "aws.rds.dbcluster.region",
        "mql": "aws.rds.dbcluster.region",
        "code_id": "0lzFth4DIdg=",
        "checksum": "qCE+oB51WDo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "CNIfmlvOXUg=": {
              "mql": "asset.platform == \"aws-rds-dbcluster\"",
              "code_id": "CNIfmlvOXUg=",
              "checksum": "dlFMx6QAVvw=",
              "mrn": "//policy.api.mondoo.app/filter/CNIfmlvOXUg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.rds.dbcluster.storageEncrypted",
        "mql": "aws.rds.dbcluster.storageEncrypted",
        "code_id": "laWbjKLLGWU=",
        "checksum": "fjWBYborUAc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-storage-encrypted",
        "type": "\u0004",
        "title": "Storage encrypted",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.arn",
        "mql": "aws.rds.dbinstance.arn",
        "code_id": "EKsk/TtwPgM=",
        "checksum": "jdYwAOwTMHE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "74un3Jja6uY=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.rds.dbinstance.backupSettings.first.encrypted",
        "mql": "aws.rds.dbinstance.backupSettings.first.encrypted",
        "code_id": "346Ha9czq+0=",
        "checksum": "BtpGlKSwGbU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-backup-encryption",
        "type": "\u0004",
        "title": "Backups encrypted",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.backupSettings.first.retentionPeriod",
        "mql": "aws.rds.dbinstance.backupSettings.first.retentionPeriod",
        "code_id": "wqjOxtgYJok=",
        "checksum": "He/DvdttA7Q=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-backup-retention",
        "type": "\u0005",
        "title": "Backup retention (days)",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.createdAt",
        "mql": "aws.rds.dbinstance.createdAt",
        "code_id": "0nCsDlNomQc=",
        "checksum": "o5Ra58O3eR8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "74un3Jja6uY=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.rds.dbinstance.deletionProtection",
        "mql": "aws.rds.dbinstance.deletionProtection",
        "code_id": "8XsvAT8mlLo=",
        "checksum": "sIXADvO3WvU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-deletion-protection",
        "type": "\u0004",
        "title": "Deletion protection",
        "filters": {}
      },
      {
        "query": "if (aws.rds.dbinstance.engine == \"mysql\") {\n  return \"MySQL\"\n} else if (aws.rds.dbinstance.engine == \"mariadb\") {\n  return \"MariaDB\"\n} else if (aws.rds.dbinstance.engine == \"oracle-ee\") {\n  return \"Oracle Enterprise Edition\"\n} else if (aws.rds.dbinstance.engine == \"oracle-se2\") {\n  return \"Oracle Standard Edition Two\"\n} else if (aws.rds.dbinstance.engine == \"oracle-ee-cdb\") {\n  return \"Oracle Enterprise Edition (CDB)\"\n} else if (aws.rds.dbinstance.engine == \"oracle-se2-cdb\") {\n  return \"Oracle Standard Edition Two (CDB)\"\n} else if (aws.rds.dbinstance.engine == \"postgres\") {\n  return \"PostgreSQL\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-ee\") {\n  return \"SQL Server Enterprise Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-web\") {\n  return \"SQL Server Web Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-se\") {\n  return \"SQL Server Standard Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-ex\") {\n  return \"SQL Server Express Edition\"\n} else if (aws.rds.dbinstance.engine == \"db2-ae\") {\n  return \"Db2 Advanced Edition\"\n} else if (aws.rds.dbinstance.engine == \"db2-se\") {\n  return \"Db2 Standard Edition\"\n} else if (aws.rds.dbinstance.engine == \"aurora-mysql\") {\n  return \"Aurora MySQL\"\n} else if (aws.rds.dbinstance.engine == \"aurora-postgresql\") {\n  return \"Aurora PostgreSQL\"\n} else {\n  return aws.rds.dbinstance.engine\n}\n",
        "mql": "if (aws.rds.dbinstance.engine == \"mysql\") {\n  return \"MySQL\"\n} else if (aws.rds.dbinstance.engine == \"mariadb\") {\n  return \"MariaDB\"\n} else if (aws.rds.dbinstance.engine == \"oracle-ee\") {\n  return \"Oracle Enterprise Edition\"\n} else if (aws.rds.dbinstance.engine == \"oracle-se2\") {\n  return \"Oracle Standard Edition Two\"\n} else if (aws.rds.dbinstance.engine == \"oracle-ee-cdb\") {\n  return \"Oracle Enterprise Edition (CDB)\"\n} else if (aws.rds.dbinstance.engine == \"oracle-se2-cdb\") {\n  return \"Oracle Standard Edition Two (CDB)\"\n} else if (aws.rds.dbinstance.engine == \"postgres\") {\n  return \"PostgreSQL\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-ee\") {\n  return \"SQL Server Enterprise Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-web\") {\n  return \"SQL Server Web Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-se\") {\n  return \"SQL Server Standard Edition\"\n} else if (aws.rds.dbinstance.engine == \"sqlserver-ex\") {\n  return \"SQL Server Express Edition\"\n} else if (aws.rds.dbinstance.engine == \"db2-ae\") {\n  return \"Db2 Advanced Edition\"\n} else if (aws.rds.dbinstance.engine == \"db2-se\") {\n  return \"Db2 Standard Edition\"\n} else if (aws.rds.dbinstance.engine == \"aurora-mysql\") {\n  return \"Aurora MySQL\"\n} else if (aws.rds.dbinstance.engine == \"aurora-postgresql\") {\n  return \"Aurora PostgreSQL\"\n} else {\n  return aws.rds.dbinstance.engine\n}\n",
        "code_id": "+Pj94QWXsLk=",
        "checksum": "MLpoNW9MZLo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-engine",
        "type": "\u0007",
        "title": "Engine",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.engineVersion",
        "mql": "aws.rds.dbinstance.engineVersion",
        "code_id": "LKwMpZGR1Vk=",
        "checksum": "Irat5J5cZos=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-engine-version",
        "type": "\u0007",
        "title": "Engine version",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.id",
        "mql": "aws.rds.dbinstance.id",
        "code_id": "jJbjYt1BjgA=",
        "checksum": "iO/hxPNcZDQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.dbInstanceClass",
        "mql": "aws.rds.dbinstance.dbInstanceClass",
        "code_id": "sNZC2vzc7TE=",
        "checksum": "XDM2eAyq2IE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-instance-class",
        "type": "\u0007",
        "title": "Instance class",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.storageAllocated",
        "mql": "aws.rds.dbinstance.storageAllocated",
        "code_id": "wLQkLMXmDQs=",
        "checksum": "Pb9ZknV4XJU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-instance-storage-size",
        "type": "\u0005",
        "title": "Storage (GiB)",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.storageType",
        "mql": "aws.rds.dbinstance.storageType",
        "code_id": "Wvc0p+L6bqU=",
        "checksum": "ashbzqN3vB4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-instance-storage-type",
        "type": "\u0007",
        "title": "Storage type",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.region",
        "mql": "aws.rds.dbinstance.region",
        "code_id": "5KAaiKG7yO8=",
        "checksum": "uuuLzNThrWw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "74un3Jja6uY=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.rds.dbinstance.storageEncrypted",
        "mql": "aws.rds.dbinstance.storageEncrypted",
        "code_id": "ox9oDoX1ZgQ=",
        "checksum": "FWKT18poBNc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-storage-encrypted",
        "type": "\u0004",
        "title": "Storage encrypted",
        "filters": {}
      },
      {
        "query": "aws.rds.dbinstance.tags",
        "mql": "aws.rds.dbinstance.tags",
        "code_id": "uZpmGrAruRM=",
        "checksum": "ceShLu2bYxo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "74un3Jja6uY=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.redshift.cluster.arn",
        "mql": "aws.redshift.cluster.arn",
        "code_id": "u1HD+KqdKUM=",
        "checksum": "pO6sUDkkEP0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "t2QzcgpdIbI=": {
              "mql": "asset.platform == \"aws-redshift-cluster\"",
              "code_id": "t2QzcgpdIbI=",
              "checksum": "IAfexHb6TOI=",
              "mrn": "//policy.api.mondoo.app/filter/t2QzcgpdIbI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.redshift.cluster.nodeType",
        "mql": "aws.redshift.cluster.nodeType",
        "code_id": "ufBSqn4dBus=",
        "checksum": "U6iKkn+nsPA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-node-type",
        "type": "\u0007",
        "title": "Node type",
        "filters": {}
      },
      {
        "query": "aws.redshift.cluster.publiclyAccessible",
        "mql": "aws.redshift.cluster.publiclyAccessible",
        "code_id": "LcOZdcHoIvI=",
        "checksum": "0Gf8iAvq5dk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-public",
        "type": "\u0004",
        "title": "Public",
        "filters": {}
      },
      {
        "query": "aws.redshift.cluster.region",
        "mql": "aws.redshift.cluster.region",
        "code_id": "arl3FmsDuxM=",
        "checksum": "jdWBnuwRV4U=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "t2QzcgpdIbI=": {
              "mql": "asset.platform == \"aws-redshift-cluster\"",
              "code_id": "t2QzcgpdIbI=",
              "checksum": "IAfexHb6TOI=",
              "mrn": "//policy.api.mondoo.app/filter/t2QzcgpdIbI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.redshift.cluster.tags",
        "mql": "aws.redshift.cluster.tags",
        "code_id": "Jq6+qgZopnA=",
        "checksum": "mFP6SDT1uOk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "t2QzcgpdIbI=": {
              "mql": "asset.platform == \"aws-redshift-cluster\"",
              "code_id": "t2QzcgpdIbI=",
              "checksum": "IAfexHb6TOI=",
              "mrn": "//policy.api.mondoo.app/filter/t2QzcgpdIbI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.redshift.cluster.allowVersionUpgrade",
        "mql": "aws.redshift.cluster.allowVersionUpgrade",
        "code_id": "ygiBdOrzT/8=",
        "checksum": "qZbD/eHmgoA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-upgrades",
        "type": "\u0004",
        "title": "Allow upgrades",
        "filters": {}
      },
      {
        "checksum": "vfFUAxEuHm4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-region",
        "title": "Region",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudtrail-trail-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-cloudwatch-loggroup-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecr-image-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ecs-container-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-eks-cluster-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-elb-loadbalancer-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-kms-key-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-lambda-function-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-cluster-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instance-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-region"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-region"
          }
        ]
      },
      {
        "query": "aws.s3.bucket.arn",
        "mql": "aws.s3.bucket.arn",
        "code_id": "l3reth1rR4Q=",
        "checksum": "qsDnBnLcW5s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"",
              "code_id": "3z170zdo7Ac=",
              "checksum": "bxUrAUBGM1g=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.s3.bucket.createdTime",
        "mql": "aws.s3.bucket.createdTime",
        "code_id": "xC4BZGMzp8U=",
        "checksum": "6F5swiLrfz8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {
          "items": {
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"",
              "code_id": "3z170zdo7Ac=",
              "checksum": "bxUrAUBGM1g=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "if (aws.s3.bucket.logging.length \u003e 0) {\n  return true\n} else {\n  return false\n}\n",
        "mql": "if (aws.s3.bucket.logging.length \u003e 0) {\n  return true\n} else {\n  return false\n}\n",
        "code_id": "VHHEYnOWjyU=",
        "checksum": "LXadXcqpsCo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-logging",
        "type": "\u0004",
        "title": "Logging",
        "filters": {}
      },
      {
        "query": "aws.s3.bucket.owner['name']",
        "mql": "aws.s3.bucket.owner['name']",
        "code_id": "zhx/04ciXEo=",
        "checksum": "rh9pkr1LPBM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-owner",
        "type": "\u0007",
        "title": "Owner",
        "filters": {}
      },
      {
        "query": "aws.s3.bucket.public",
        "mql": "aws.s3.bucket.public",
        "code_id": "AhVKJra07Jk=",
        "checksum": "zp0S7y+R8k0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-public",
        "type": "\u0004",
        "title": "Public",
        "filters": {}
      },
      {
        "query": "aws.s3.bucket.location",
        "mql": "aws.s3.bucket.location",
        "code_id": "DMAbEKrReqA=",
        "checksum": "t4YhBwTfH3s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"",
              "code_id": "3z170zdo7Ac=",
              "checksum": "bxUrAUBGM1g=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "if (aws.s3.bucket.replication != null) {\n  return true\n} else {\n  return false\n}\n",
        "mql": "if (aws.s3.bucket.replication != null) {\n  return true\n} else {\n  return false\n}\n",
        "code_id": "sJtdpGVMCFM=",
        "checksum": "JMQEqdDG0FM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-replication",
        "type": "\u0004",
        "title": "Replication",
        "filters": {}
      },
      {
        "query": "aws.s3.bucket.tags",
        "mql": "aws.s3.bucket.tags",
        "code_id": "HO7pdrkeTas=",
        "checksum": "FrkMaCPzduw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"",
              "code_id": "3z170zdo7Ac=",
              "checksum": "bxUrAUBGM1g=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "if (aws.s3.bucket.versioning[\"Status\"] == \"Enabled\") {\n  return true\n} if (aws.s3.bucket.versioning[\"Status\"] == \"Suspended\") {\n  return \"Suspended\"\n} else {\n  return false\n}\n",
        "mql": "if (aws.s3.bucket.versioning[\"Status\"] == \"Enabled\") {\n  return true\n} if (aws.s3.bucket.versioning[\"Status\"] == \"Suspended\") {\n  return \"Suspended\"\n} else {\n  return false\n}\n",
        "code_id": "WWd50S3e1Mg=",
        "checksum": "9RsnO5r09CI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-versioning",
        "type": "\u0004",
        "title": "Versioning",
        "filters": {}
      },
      {
        "query": "aws.sagemaker.notebookinstance.arn",
        "mql": "aws.sagemaker.notebookinstance.arn",
        "code_id": "Q7jS5/P95YI=",
        "checksum": "EJ8xKRd/POc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instance-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "0nucc9YlORU=": {
              "mql": "asset.platform == \"aws-sagemaker-notebookinstance\"",
              "code_id": "0nucc9YlORU=",
              "checksum": "RVjedaKfbIQ=",
              "mrn": "//policy.api.mondoo.app/filter/0nucc9YlORU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.sagemaker.notebookinstance.region",
        "mql": "aws.sagemaker.notebookinstance.region",
        "code_id": "eeJvtlS3U4I=",
        "checksum": "gn4erfGyraI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instance-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "0nucc9YlORU=": {
              "mql": "asset.platform == \"aws-sagemaker-notebookinstance\"",
              "code_id": "0nucc9YlORU=",
              "checksum": "RVjedaKfbIQ=",
              "mrn": "//policy.api.mondoo.app/filter/0nucc9YlORU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.sagemaker.notebookinstance.tags",
        "mql": "aws.sagemaker.notebookinstance.tags",
        "code_id": "G57d+G1VevA=",
        "checksum": "c38ShIb9mXo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instance-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "0nucc9YlORU=": {
              "mql": "asset.platform == \"aws-sagemaker-notebookinstance\"",
              "code_id": "0nucc9YlORU=",
              "checksum": "RVjedaKfbIQ=",
              "mrn": "//policy.api.mondoo.app/filter/0nucc9YlORU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.sagemaker.notebookinstance.details.directInternetAccess",
        "mql": "aws.sagemaker.notebookinstance.details.directInternetAccess",
        "code_id": "xaDWZp3h7Js=",
        "checksum": "epjCw1O8bQ8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instances-internet-access",
        "type": "\u0007",
        "title": "Direct internet access",
        "filters": {}
      },
      {
        "query": "aws.ec2.securitygroup.arn",
        "mql": "aws.ec2.securitygroup.arn",
        "code_id": "Nu0Y9rRizic=",
        "checksum": "tmuj5eiWngQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "yfA15ol5mmc=": {
              "mql": "asset.platform == \"aws-security-group\"",
              "code_id": "yfA15ol5mmc=",
              "checksum": "Zk7DBjmFo+4=",
              "mrn": "//policy.api.mondoo.app/filter/yfA15ol5mmc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.securitygroup.description",
        "mql": "aws.ec2.securitygroup.description",
        "code_id": "Od2R0DJeTXY=",
        "checksum": "4B4Acf6wPWI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "aws.ec2.securitygroup.id",
        "mql": "aws.ec2.securitygroup.id",
        "code_id": "JPKwbYlYF1U=",
        "checksum": "kJx+14cHy0Y=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.ec2.securitygroup.isAttachedToNetworkInterface",
        "mql": "aws.ec2.securitygroup.isAttachedToNetworkInterface",
        "code_id": "rSWTCfXADxI=",
        "checksum": "bIJqMID5gEM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-in-use",
        "type": "\u0004",
        "title": "In use",
        "filters": {}
      },
      {
        "query": "aws.ec2.securitygroup.ipPermissions.length",
        "mql": "aws.ec2.securitygroup.ipPermissions.length",
        "code_id": "pi9Yti5nXRI=",
        "checksum": "AeUe5GU17AI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-inbound-rules",
        "type": "\u0005",
        "title": "Inbound rule count",
        "filters": {}
      },
      {
        "query": "aws.ec2.securitygroup.ipPermissionsEgress.length",
        "mql": "aws.ec2.securitygroup.ipPermissionsEgress.length",
        "code_id": "LBJdWU44NZc=",
        "checksum": "G4UKYM0b4DY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-outbound-rules",
        "type": "\u0005",
        "title": "Outbound rule count",
        "filters": {}
      },
      {
        "query": "aws.ec2.securitygroup.region",
        "mql": "aws.ec2.securitygroup.region",
        "code_id": "DoNskRXfNlk=",
        "checksum": "qf9VNShitiI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "yfA15ol5mmc=": {
              "mql": "asset.platform == \"aws-security-group\"",
              "code_id": "yfA15ol5mmc=",
              "checksum": "Zk7DBjmFo+4=",
              "mrn": "//policy.api.mondoo.app/filter/yfA15ol5mmc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.securitygroup.tags",
        "mql": "aws.ec2.securitygroup.tags",
        "code_id": "iA10HGMz3HI=",
        "checksum": "7/D9Lp8ggHk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "yfA15ol5mmc=": {
              "mql": "asset.platform == \"aws-security-group\"",
              "code_id": "yfA15ol5mmc=",
              "checksum": "Zk7DBjmFo+4=",
              "mrn": "//policy.api.mondoo.app/filter/yfA15ol5mmc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.securitygroup.vpc.id",
        "mql": "aws.ec2.securitygroup.vpc.id",
        "code_id": "sAm0NqNFhC8=",
        "checksum": "E5Zu+4qeDzU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-vpc-id",
        "type": "\u0007",
        "title": "VPC ID",
        "filters": {}
      },
      {
        "query": "aws.vpc.arn",
        "mql": "aws.vpc.arn",
        "code_id": "KAB9jBh6gzE=",
        "checksum": "et9QZa3aAH4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-arn",
        "type": "\u0007",
        "title": "ARN",
        "filters": {
          "items": {
            "ep4o4JpLn/g=": {
              "mql": "asset.platform == \"aws-vpc\"",
              "code_id": "ep4o4JpLn/g=",
              "checksum": "ATIDRUmB40M=",
              "mrn": "//policy.api.mondoo.app/filter/ep4o4JpLn/g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.vpc.cidrBlock",
        "mql": "aws.vpc.cidrBlock",
        "code_id": "B8rqnW9KjK4=",
        "checksum": "Faxg14q9Ibo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-cidr-block",
        "type": "\u0007",
        "title": "CIDR Block",
        "filters": {}
      },
      {
        "query": "aws.vpc.id",
        "mql": "aws.vpc.id",
        "code_id": "n48IvAwIBbE=",
        "checksum": "VGvP3IgpFiU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "aws.vpc.name",
        "mql": "aws.vpc.name",
        "code_id": "/dM+VLrrvz8=",
        "checksum": "8kw1udJPLfM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "aws.vpc.region",
        "mql": "aws.vpc.region",
        "code_id": "DVz85aW8iQs=",
        "checksum": "lm4w55Hkb5E=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {
          "items": {
            "ep4o4JpLn/g=": {
              "mql": "asset.platform == \"aws-vpc\"",
              "code_id": "ep4o4JpLn/g=",
              "checksum": "ATIDRUmB40M=",
              "mrn": "//policy.api.mondoo.app/filter/ep4o4JpLn/g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.vpc.tags",
        "mql": "aws.vpc.tags",
        "code_id": "Y5EJQ+lHZm0=",
        "checksum": "D05A4uLNjBY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-tags",
        "type": "\u001a\u0007\u0007",
        "title": "AWS tags",
        "filters": {
          "items": {
            "ep4o4JpLn/g=": {
              "mql": "asset.platform == \"aws-vpc\"",
              "code_id": "ep4o4JpLn/g=",
              "checksum": "ATIDRUmB40M=",
              "mrn": "//policy.api.mondoo.app/filter/ep4o4JpLn/g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.tags[\"Creator\"]",
        "mql": "azure.subscription.tags[\"Creator\"]",
        "code_id": "HeJ7kPE638M=",
        "checksum": "i73n7yfpYcQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-creator",
        "type": "\u0007",
        "title": "Creator",
        "filters": {
          "items": {
            "NKWGRVMUiaU=": {
              "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Creator\"] != null",
              "code_id": "NKWGRVMUiaU=",
              "checksum": "WxQOmGyHQr8=",
              "mrn": "//policy.api.mondoo.app/filter/NKWGRVMUiaU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.id",
        "mql": "azure.subscription.id",
        "code_id": "g9B28j4i3YU=",
        "checksum": "jQndlDEAlqk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-id",
        "type": "\u0007",
        "title": "ID",
        "docs": {
          "desc": "The Azure subscription ID"
        },
        "filters": {}
      },
      {
        "query": "azure.subscription.compute.vm.properties.timeCreated",
        "mql": "azure.subscription.compute.vm.properties.timeCreated",
        "code_id": "62sITMLzwjY=",
        "checksum": "IwKCEuN1Wu0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-created-time",
        "type": "\n",
        "title": "Created time",
        "filters": {}
      },
      {
        "query": "azure.subscription.compute.vm.osDisk.properties.diskSizeGB",
        "mql": "azure.subscription.compute.vm.osDisk.properties.diskSizeGB",
        "code_id": "lEJf/sYv6hA=",
        "checksum": "mjudZM0DqV0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-disk-size-gb",
        "type": "\n",
        "title": "Disk size (GB)",
        "filters": {}
      },
      {
        "query": "azure.subscription.compute.vm.id",
        "mql": "azure.subscription.compute.vm.id",
        "code_id": "7ARhTY7t5c4=",
        "checksum": "msyvu/58/jk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-id",
        "type": "\u0007",
        "title": "VM ID",
        "filters": {}
      },
      {
        "query": "azure.subscription.compute.vm.location",
        "mql": "azure.subscription.compute.vm.location",
        "code_id": "Vb/D4Lm7NZI=",
        "checksum": "7fUv2V43vd4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.compute.vm.osDisk.properties.osType",
        "mql": "azure.subscription.compute.vm.osDisk.properties.osType",
        "code_id": "izzZcf2HskU=",
        "checksum": "Yz3wLUpV+yg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-os-type",
        "type": "\n",
        "title": "OS type",
        "filters": {}
      },
      {
        "query": "azure.subscription.compute.vm.properties.hardwareProfile.vmSize",
        "mql": "azure.subscription.compute.vm.properties.hardwareProfile.vmSize",
        "code_id": "QhGVnBg4st8=",
        "checksum": "kpxklGk96vc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-size",
        "type": "\n",
        "title": "VM size",
        "filters": {}
      },
      {
        "query": "azure.subscription.compute.vm.state",
        "mql": "azure.subscription.compute.vm.state",
        "code_id": "HK51Jfv1aZg=",
        "checksum": "CYg4ze3pARs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-instance-state",
        "type": "\u0007",
        "title": "State",
        "filters": {}
      },
      {
        "query": "azure.subscription.keyVault.vault.location",
        "mql": "azure.subscription.keyVault.vault.location",
        "code_id": "eEvVKujKjs8=",
        "checksum": "yRSuvvy93dc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-keyvault-vault-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.mySql.flexibleServer.properties.fullyQualifiedDomainName",
        "mql": "azure.subscription.mySql.flexibleServer.properties.fullyQualifiedDomainName",
        "code_id": "HAq7G3n23SY=",
        "checksum": "XE+tcAhl/Ms=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-fqdn",
        "type": "\n",
        "title": "FQDN",
        "filters": {}
      },
      {
        "query": "azure.subscription.mySql.flexibleServer.properties.highAvailability.mode",
        "mql": "azure.subscription.mySql.flexibleServer.properties.highAvailability.mode",
        "code_id": "kzbPbdbe6xg=",
        "checksum": "R+1D4xlScYM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-high-availability",
        "type": "\n",
        "title": "High Availability",
        "filters": {}
      },
      {
        "query": "azure.subscription.mySql.flexibleServer.location",
        "mql": "azure.subscription.mySql.flexibleServer.location",
        "code_id": "9d0iKvbmSFc=",
        "checksum": "wKU4Vz4ChZA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.mySql.flexibleServer.properties.version",
        "mql": "azure.subscription.mySql.flexibleServer.properties.version",
        "code_id": "z+cgBHMjEwE=",
        "checksum": "3ZJrQ0TF1UE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-major-version",
        "type": "\n",
        "title": "Major version",
        "filters": {}
      },
      {
        "query": "azure.subscription.mySql.flexibleServer.properties.state",
        "mql": "azure.subscription.mySql.flexibleServer.properties.state",
        "code_id": "yo0h6I8EbFk=",
        "checksum": "/RZ1nHBsmhQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-state",
        "type": "\n",
        "title": "State",
        "filters": {}
      },
      {
        "query": "azure.subscription.mySql.flexibleServer.properties.storage.storageSizeGB",
        "mql": "azure.subscription.mySql.flexibleServer.properties.storage.storageSizeGB",
        "code_id": "uVpgUgAm4gQ=",
        "checksum": "PAHUHDPxEzI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-mysql-flexible-server-storage-size",
        "type": "\n",
        "title": "Storage size (GB)",
        "filters": {}
      },
      {
        "query": "azure.subscription.name",
        "mql": "azure.subscription.name",
        "code_id": "PSVzC3osOtY=",
        "checksum": "ZGkHSKdjMEc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-name",
        "type": "\u0007",
        "title": "Name",
        "docs": {
          "desc": "The Azure subscription name"
        },
        "filters": {}
      },
      {
        "query": "azure.subscription.network.securityGroup.id",
        "mql": "azure.subscription.network.securityGroup.id",
        "code_id": "oazgoMECr0Q=",
        "checksum": "p1l5XM/RaZk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-network-secgroup-id",
        "type": "\u0007",
        "title": "Security Group ID",
        "filters": {}
      },
      {
        "query": "azure.subscription.network.securityGroup.location",
        "mql": "azure.subscription.network.securityGroup.location",
        "code_id": "q07Q+WoYHzQ=",
        "checksum": "BizBwX4GJlg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-network-secgroup-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.network.securityGroup.securityRules.length",
        "mql": "azure.subscription.network.securityGroup.securityRules.length",
        "code_id": "3GZ+WEilj80=",
        "checksum": "F4uRAs0dMkw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-network-secgroup-rules-count",
        "type": "\u0005",
        "title": "Security rules count",
        "filters": {}
      },
      {
        "query": "azure.subscription.tags[\"Owner\"]",
        "mql": "azure.subscription.tags[\"Owner\"]",
        "code_id": "Il9aWghqAUI=",
        "checksum": "8J4FVSixrMI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-owner",
        "type": "\u0007",
        "title": "Owner",
        "filters": {
          "items": {
            "7SMsbTMk21g=": {
              "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.tags[\"Owner\"] != null",
              "code_id": "7SMsbTMk21g=",
              "checksum": "iJ2OOuDsDtc=",
              "mrn": "//policy.api.mondoo.app/filter/7SMsbTMk21g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.postgreSqlService.flexibleServer.properties.fullyQualifiedDomainName",
        "mql": "azure.subscription.postgreSqlService.flexibleServer.properties.fullyQualifiedDomainName",
        "code_id": "R3/O2I+PddY=",
        "checksum": "sxDz+MPgdyo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-fqdn",
        "type": "\n",
        "title": "FQDN",
        "filters": {}
      },
      {
        "query": "azure.subscription.postgreSqlService.flexibleServer.properties.highAvailability.mode",
        "mql": "azure.subscription.postgreSqlService.flexibleServer.properties.highAvailability.mode",
        "code_id": "novnzeXHdWE=",
        "checksum": "H6FR40jmd98=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-high-availability",
        "type": "\n",
        "title": "High Availability",
        "filters": {}
      },
      {
        "query": "azure.subscription.postgreSql.flexibleServer.location",
        "mql": "azure.subscription.postgreSql.flexibleServer.location",
        "code_id": "iS69QOLgS8o=",
        "checksum": "qIAlYNhr96s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.postgreSql.flexibleServer.properties.version",
        "mql": "azure.subscription.postgreSql.flexibleServer.properties.version",
        "code_id": "Ay/gY3vqCjc=",
        "checksum": "6Z9lXWZSOlM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-major-version",
        "type": "\n",
        "title": "Major version",
        "filters": {}
      },
      {
        "query": "azure.subscription.postgreSql.flexibleServer.properties.state",
        "mql": "azure.subscription.postgreSql.flexibleServer.properties.state",
        "code_id": "jRQBVRezOhQ=",
        "checksum": "RKgWcQBOiew=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-state",
        "type": "\n",
        "title": "State",
        "filters": {}
      },
      {
        "query": "azure.subscription.postgreSqlService.flexibleServer.properties.storage.storageSizeGB",
        "mql": "azure.subscription.postgreSqlService.flexibleServer.properties.storage.storageSizeGB",
        "code_id": "ZrY93yg7E/I=",
        "checksum": "eIyXsmm3zXU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-postgresql-flexible-server-storage-size",
        "type": "\n",
        "title": "Storage size (GB)",
        "filters": {}
      },
      {
        "query": "azure.subscription.sql.server.properties.fullyQualifiedDomainName",
        "mql": "azure.subscription.sql.server.properties.fullyQualifiedDomainName",
        "code_id": "Z1awjvBYtho=",
        "checksum": "Ql1hnc2rrM8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-fqdn",
        "type": "\n",
        "title": "FQDN",
        "filters": {}
      },
      {
        "query": "azure.subscription.sql.server.location",
        "mql": "azure.subscription.sql.server.location",
        "code_id": "qHOZ93anOck=",
        "checksum": "YwiVr7ta+Ko=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.sql.server.properties.state",
        "mql": "azure.subscription.sql.server.properties.state",
        "code_id": "Zj4e997SAUc=",
        "checksum": "fWdpcQ9mIHE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-state",
        "type": "\n",
        "title": "State",
        "filters": {}
      },
      {
        "query": "azure.subscription.sql.server.properties.version",
        "mql": "azure.subscription.sql.server.properties.version",
        "code_id": "OyFu778d7po=",
        "checksum": "ea6S91jzbfs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-sql-server-version",
        "type": "\n",
        "title": "Version",
        "filters": {}
      },
      {
        "query": "asset.platform == 'azure' \u0026\u0026 azure.subscription.state",
        "mql": "asset.platform == 'azure' \u0026\u0026 azure.subscription.state",
        "code_id": "SGQ+sp8u6yY=",
        "checksum": "AkxzC/+oVas=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-state",
        "type": "\u0004",
        "title": "State",
        "docs": {
          "desc": "The Azure subscription state (For a complete list of states, read Microsoft's [Azure subscription states documentation](https://learn.microsoft.com/en-us/azure/cost-management-billing/manage/subscription-states).)"
        },
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.properties.StatusOfPrimary",
        "mql": "azure.subscription.storage.account.properties.StatusOfPrimary",
        "code_id": "Zfn9UrDOgII=",
        "checksum": "c7ga8G+K6gU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account",
        "type": "\n",
        "title": "State",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.properties.AccessTier",
        "mql": "azure.subscription.storage.account.properties.AccessTier",
        "code_id": "YPku4EZVMZM=",
        "checksum": "dqveOuelVrA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-accesstier",
        "type": "\n",
        "title": "Access tier",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.properties.CreationTime",
        "mql": "azure.subscription.storage.account.properties.CreationTime",
        "code_id": "8Iu4/QE3/1s=",
        "checksum": "EfgD3WkFTQ4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-creationtime",
        "type": "\n",
        "title": "Creation time",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.properties.PrimaryEndpoints.blob",
        "mql": "azure.subscription.storage.account.properties.PrimaryEndpoints.blob",
        "code_id": "WXChw2aJy2w=",
        "checksum": "35hqswzo+jw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-primaryblobendpoint",
        "type": "\n",
        "title": "Primary blob endpoint",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.properties.AllowBlobPublicAccess",
        "mql": "azure.subscription.storage.account.properties.AllowBlobPublicAccess",
        "code_id": "dBDELbUEZVA=",
        "checksum": "XXXSz8nc2x8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-account-public",
        "type": "\n",
        "title": "Public",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.container.properties.AccessTier",
        "mql": "azure.subscription.storage.account.container.properties.AccessTier",
        "code_id": "Kj1RoHRF9SU=",
        "checksum": "cQs+nTgabZk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-accesstier",
        "type": "\n",
        "title": "Access tier",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.container.properties.CreationTime",
        "mql": "azure.subscription.storage.account.container.properties.CreationTime",
        "code_id": "mzBFyya4Pw8=",
        "checksum": "goMEY9hY73s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-creationtime",
        "type": "\n",
        "title": "Creation time",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.container.properties.PrimaryLocation",
        "mql": "azure.subscription.storage.account.container.properties.PrimaryLocation",
        "code_id": "kUsqD/K5Rz8=",
        "checksum": "IweEfObmgsw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-location",
        "type": "\n",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.container.properties.PrimaryEndpoints.blob",
        "mql": "azure.subscription.storage.account.container.properties.PrimaryEndpoints.blob",
        "code_id": "gjJMu9gAHm0=",
        "checksum": "q8ePREr2eLU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-primaryblobendpoint",
        "type": "\n",
        "title": "Primary blob endpoint",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.container.properties.AllowBlobPublicAccess",
        "mql": "azure.subscription.storage.account.container.properties.AllowBlobPublicAccess",
        "code_id": "uLh6tNYCWm4=",
        "checksum": "F5ipDvBXZYw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-public",
        "type": "\n",
        "title": "Public",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.container.properties.StatusOfPrimary",
        "mql": "azure.subscription.storage.account.container.properties.StatusOfPrimary",
        "code_id": "HBm6e/pUGK4=",
        "checksum": "YsvF94XE3yU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-container-state",
        "type": "\n",
        "title": "State",
        "filters": {}
      },
      {
        "query": "azure.subscription.storage.account.location",
        "mql": "azure.subscription.storage.account.location",
        "code_id": "ErN+Jxpas9s=",
        "checksum": "j/HH9UMmKWk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-storage-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "azure.subscription.name",
        "mql": "azure.subscription.name",
        "code_id": "PSVzC3osOtY=",
        "checksum": "7f5CiMEcvJk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-subscription-name",
        "type": "\u0007",
        "title": "Subscription name",
        "docs": {
          "desc": "The Azure subscription name"
        },
        "filters": {}
      },
      {
        "query": "azure.subscription.tenantId",
        "mql": "azure.subscription.tenantId",
        "code_id": "hKJxBEeUmoA=",
        "checksum": "BGrCuipxGkg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-azure-tenant-id",
        "type": "\u0007",
        "title": "Tenant ID",
        "docs": {
          "desc": "The Entra ID (Azure AD) tenant ID for the subscription"
        },
        "filters": {}
      },
      {
        "query": "mondoo.version",
        "mql": "mondoo.version",
        "code_id": "8PjpfkfABtA=",
        "checksum": "r1dx86o8rf0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-clientversion",
        "type": "\u0007",
        "title": "Mondoo client version",
        "docs": {
          "desc": "This version of cnspec that was used to scan this asset"
        },
        "filters": {}
      },
      {
        "query": "cloud.instance.privateHostname",
        "mql": "cloud.instance.privateHostname",
        "code_id": "iEgfI7Tf5/I=",
        "checksum": "9uSW4ndaLF4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-private-hostname",
        "type": "\u0007",
        "title": "cloud.instance.privateHostname",
        "filters": {
          "items": {
            "sVUqp81M5BQ=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.privateHostname.length != 0\n",
              "code_id": "sVUqp81M5BQ=",
              "checksum": "FWhC+tbxNrY=",
              "mrn": "//policy.api.mondoo.app/filter/sVUqp81M5BQ=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "cloud.instance.privateIpv4.first.ip.address",
        "mql": "cloud.instance.privateIpv4.first.ip.address",
        "code_id": "pygzAur/vUE=",
        "checksum": "YqiZbCFToNk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-private-ipaddress",
        "type": "\u0007",
        "title": "Private IP address",
        "filters": {
          "items": {
            "cjMP/TXpW3s=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.privateIpv4.any()\n",
              "code_id": "cjMP/TXpW3s=",
              "checksum": "bH0klFPe2KY=",
              "mrn": "//policy.api.mondoo.app/filter/cjMP/TXpW3s=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "checksum": "8TOW5URNh3A=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider",
        "title": "Cloud",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider-legacy"
          }
        ]
      },
      {
        "query": "cloud.provider",
        "mql": "cloud.provider",
        "code_id": "Sz5XXv3cHXo=",
        "checksum": "Q1KpeDWB5/o=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider-all",
        "type": "\u0007",
        "title": "Cloud",
        "filters": {
          "items": {
            "RsbXPPme1wg=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"",
              "code_id": "RsbXPPme1wg=",
              "checksum": "/tyZDG+JmEY=",
              "mrn": "//policy.api.mondoo.app/filter/RsbXPPme1wg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "if ( file('/etc/amazon/').exists ) {\n  return \"AWS\"\n} else if ( file('/etc/google_instance_id').exists ) {\n  return \"GCP\"\n} else if ( file('/var/lib/waagent/').exists ) {\n  return \"Azure\"\n} else {\n  return \"Unknown\"\n}\n",
        "mql": "if ( file('/etc/amazon/').exists ) {\n  return \"AWS\"\n} else if ( file('/etc/google_instance_id').exists ) {\n  return \"GCP\"\n} else if ( file('/var/lib/waagent/').exists ) {\n  return \"Azure\"\n} else {\n  return \"Unknown\"\n}\n",
        "code_id": "Niwbn5wej3c=",
        "checksum": "uYcwMlvWyKg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-provider-legacy",
        "type": "\u0007",
        "title": "Cloud",
        "filters": {
          "items": {
            "q0blueS0Elw=": {
              "mql": "mondoo.capabilities.containsNone(['run-command'])\nasset.kind != 'baremetal'\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "q0blueS0Elw=",
              "checksum": "EsEkX0m0kCw=",
              "mrn": "//policy.api.mondoo.app/filter/q0blueS0Elw=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "cloud.instance.publicHostname",
        "mql": "cloud.instance.publicHostname",
        "code_id": "NoX4fW7M8EI=",
        "checksum": "liiHZIxGPfQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-public-hostname",
        "type": "\u0007",
        "title": "Public hostname",
        "filters": {
          "items": {
            "3DfQtXum8PI=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.publicHostname.length != 0\n",
              "code_id": "3DfQtXum8PI=",
              "checksum": "/0irabM9Tdg=",
              "mrn": "//policy.api.mondoo.app/filter/3DfQtXum8PI=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "cloud.instance.publicIpv4.first.ip.address",
        "mql": "cloud.instance.publicIpv4.first.ip.address",
        "code_id": "UP/Tq0Kjk58=",
        "checksum": "ZtGxguqnQ8I=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-public-ipaddress",
        "type": "\u0007",
        "title": "Public IP address",
        "filters": {
          "items": {
            "aoQq5hIlrdc=": {
              "mql": "cloud.provider.upcase != \"UNKNOWN\"\ncloud.instance.publicIpv4.any()\n",
              "code_id": "aoQq5hIlrdc=",
              "checksum": "6DaQ/SmdWds=",
              "mrn": "//policy.api.mondoo.app/filter/aoQq5hIlrdc=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "k8s.cronjob.manifest.apiVersion",
        "mql": "k8s.cronjob.manifest.apiVersion",
        "code_id": "Q1QG2LXJdkk=",
        "checksum": "UxaVUT8V8DU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "wtVP5/7gT3A=",
              "mrn": "//policy.api.mondoo.app/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.cronjob.kind",
        "mql": "k8s.cronjob.kind",
        "code_id": "O+Vb1D7dXVA=",
        "checksum": "2OzfbEC5v60=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "wtVP5/7gT3A=",
              "mrn": "//policy.api.mondoo.app/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.cronjob.labels",
        "mql": "k8s.cronjob.labels",
        "code_id": "wRoJI1gmJtA=",
        "checksum": "nH2V9oKTaHU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "wtVP5/7gT3A=",
              "mrn": "//policy.api.mondoo.app/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.cronjob.name",
        "mql": "k8s.cronjob.name",
        "code_id": "5kXIDXVbrt0=",
        "checksum": "mTBVeGKoDrY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "wtVP5/7gT3A=",
              "mrn": "//policy.api.mondoo.app/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.cronjob.namespace",
        "mql": "k8s.cronjob.namespace",
        "code_id": "hnj0m80FO+s=",
        "checksum": "/kZggmr2aKY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "Lo+InTRHu9g=": {
              "mql": "asset.platform == \"k8s-cronjob\"",
              "code_id": "Lo+InTRHu9g=",
              "checksum": "wtVP5/7gT3A=",
              "mrn": "//policy.api.mondoo.app/filter/Lo+InTRHu9g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.daemonset.manifest.apiVersion",
        "mql": "k8s.daemonset.manifest.apiVersion",
        "code_id": "ca4rnWGKR1s=",
        "checksum": "8pzaY6+HbsQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "H9U/uiOPQcs=",
              "mrn": "//policy.api.mondoo.app/filter/QFF/R18/81w=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.daemonset.kind",
        "mql": "k8s.daemonset.kind",
        "code_id": "jcK0k6bN1UE=",
        "checksum": "uRQVxByrsZs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "H9U/uiOPQcs=",
              "mrn": "//policy.api.mondoo.app/filter/QFF/R18/81w=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.daemonset.labels",
        "mql": "k8s.daemonset.labels",
        "code_id": "nz0HukCc5Xg=",
        "checksum": "Hc20B0RQUoc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "H9U/uiOPQcs=",
              "mrn": "//policy.api.mondoo.app/filter/QFF/R18/81w=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.daemonset.name",
        "mql": "k8s.daemonset.name",
        "code_id": "RGyJ9xIJDDI=",
        "checksum": "M25tP3O1ArY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "H9U/uiOPQcs=",
              "mrn": "//policy.api.mondoo.app/filter/QFF/R18/81w=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.daemonset.namespace",
        "mql": "k8s.daemonset.namespace",
        "code_id": "/aFY8az9ufg=",
        "checksum": "hWWTBqN/5no=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "QFF/R18/81w=": {
              "mql": "asset.platform == \"k8s-daemonset\"",
              "code_id": "QFF/R18/81w=",
              "checksum": "H9U/uiOPQcs=",
              "mrn": "//policy.api.mondoo.app/filter/QFF/R18/81w=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.deployment.manifest.apiVersion",
        "mql": "k8s.deployment.manifest.apiVersion",
        "code_id": "FkeDPGguJyc=",
        "checksum": "PnrtX1Nw7gk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "Ek1SiCIjFuw=",
              "mrn": "//policy.api.mondoo.app/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.deployment.kind",
        "mql": "k8s.deployment.kind",
        "code_id": "eSGAhWOe3L8=",
        "checksum": "Hy99x7H1qrY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "Ek1SiCIjFuw=",
              "mrn": "//policy.api.mondoo.app/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.deployment.labels",
        "mql": "k8s.deployment.labels",
        "code_id": "a7FOFTt2taI=",
        "checksum": "jjVo62lS2qk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "Ek1SiCIjFuw=",
              "mrn": "//policy.api.mondoo.app/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.deployment.name",
        "mql": "k8s.deployment.name",
        "code_id": "WiiTRCZ5tSo=",
        "checksum": "A29PXJPScxU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "Ek1SiCIjFuw=",
              "mrn": "//policy.api.mondoo.app/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.deployment.namespace",
        "mql": "k8s.deployment.namespace",
        "code_id": "HGqEnP9Fv8Q=",
        "checksum": "B+7/PzgPzKU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "KcQiaGsE+IA=": {
              "mql": "asset.platform == \"k8s-deployment\"",
              "code_id": "KcQiaGsE+IA=",
              "checksum": "Ek1SiCIjFuw=",
              "mrn": "//policy.api.mondoo.app/filter/KcQiaGsE+IA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "tls.ciphers",
        "mql": "tls.ciphers",
        "code_id": "3srnBlD/E70=",
        "checksum": "ren9nLCCh4U=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-ciphers",
        "type": "\u0019\u0007",
        "title": "TLS ciphers",
        "filters": {}
      },
      {
        "query": "tls.certificates.first.notAfter",
        "mql": "tls.certificates.first.notAfter",
        "code_id": "LDXCjpvJ8RM=",
        "checksum": "FWbXEgsVGOc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-expiration-date",
        "type": "\t",
        "title": "Certificate expiration date",
        "filters": {}
      },
      {
        "query": "tls.domainName",
        "mql": "tls.domainName",
        "code_id": "Rmk01TWEUq0=",
        "checksum": "eDGUuS+OJiA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-name",
        "type": "\u0007",
        "title": "Domain name",
        "filters": {}
      },
      {
        "query": "tls.versions",
        "mql": "tls.versions",
        "code_id": "SoRYzAa31Rc=",
        "checksum": "8VfbZRK49jo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-domain-tls-versions",
        "type": "\u0019\u0007",
        "title": "TLS Versions",
        "filters": {}
      },
      {
        "query": "esxi.host.properties[\"summary\"][\"config\"][\"product\"][\"osType\"]",
        "mql": "esxi.host.properties[\"summary\"][\"config\"][\"product\"][\"osType\"]",
        "code_id": "+X2vKTNckXg=",
        "checksum": "Re9f8gK+Hys=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-architecture",
        "type": "\n",
        "title": "ESXi architecture",
        "filters": {
          "items": {
            "UiVKwjsOOos=": {
              "mql": "asset.platform == \"vmware-esxi\"",
              "code_id": "UiVKwjsOOos=",
              "checksum": "qoChczLbaHI=",
              "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "esxi.host.properties[\"hardware\"][\"biosInfo\"][\"biosVersion\"]",
        "mql": "esxi.host.properties[\"hardware\"][\"biosInfo\"][\"biosVersion\"]",
        "code_id": "uequlntj9B0=",
        "checksum": "23cMLXPEAEI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-bios-version",
        "type": "\n",
        "title": "ESXi BIOS version",
        "filters": {
          "items": {
            "UiVKwjsOOos=": {
              "mql": "asset.platform == \"vmware-esxi\"",
              "code_id": "UiVKwjsOOos=",
              "checksum": "qoChczLbaHI=",
              "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "esxi.host.name",
        "mql": "esxi.host.name",
        "code_id": "tGuoHkruZi4=",
        "checksum": "hBNjvhynEN0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-hostname",
        "type": "\u0007",
        "title": "esxi.host.name",
        "filters": {
          "items": {
            "UiVKwjsOOos=": {
              "mql": "asset.platform == \"vmware-esxi\"",
              "code_id": "UiVKwjsOOos=",
              "checksum": "qoChczLbaHI=",
              "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "esxi.host.properties[\"summary\"][\"config\"][\"product\"][\"fullName\"]",
        "mql": "esxi.host.properties[\"summary\"][\"config\"][\"product\"][\"fullName\"]",
        "code_id": "fbNA895S2jQ=",
        "checksum": "1g4oRU7j8yg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-product-name",
        "type": "\n",
        "title": "ESXi product name",
        "filters": {
          "items": {
            "UiVKwjsOOos=": {
              "mql": "asset.platform == \"vmware-esxi\"",
              "code_id": "UiVKwjsOOos=",
              "checksum": "qoChczLbaHI=",
              "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "esxi.host.properties[\"hardware\"][\"systemInfo\"][\"uuid\"]",
        "mql": "esxi.host.properties[\"hardware\"][\"systemInfo\"][\"uuid\"]",
        "code_id": "DDY9s3dZGgM=",
        "checksum": "DlCrwnPoIcw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-uuid",
        "type": "\n",
        "title": "ESXi UUID",
        "filters": {
          "items": {
            "UiVKwjsOOos=": {
              "mql": "asset.platform == \"vmware-esxi\"",
              "code_id": "UiVKwjsOOos=",
              "checksum": "qoChczLbaHI=",
              "mrn": "//policy.api.mondoo.app/filter/UiVKwjsOOos=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.bigqueryService.dataset.tags",
        "mql": "gcp.project.bigqueryService.dataset.tags",
        "code_id": "me+GRgNwWmM=",
        "checksum": "oEaLHUZD4L8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-biguery-dataset-labels",
        "type": "\u001a\u0007\u0007",
        "title": "GCP labels",
        "filters": {
          "items": {
            "pclrCp0Hy+c=": {
              "mql": "asset.platform == \"gcp-bigquery-dataset\"",
              "code_id": "pclrCp0Hy+c=",
              "checksum": "WGwu1ncZKTo=",
              "mrn": "//policy.api.mondoo.app/filter/pclrCp0Hy+c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.bigqueryService.dataset.location",
        "mql": "gcp.project.bigqueryService.dataset.location",
        "code_id": "y2bPgu+jkJw=",
        "checksum": "hjl3fqWxSEQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "gcp.project.bigqueryService.dataset.models.length",
        "mql": "gcp.project.bigqueryService.dataset.models.length",
        "code_id": "ad1sq1l96Rg=",
        "checksum": "gdS7HViWjj4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-model-count",
        "type": "\u0005",
        "title": "Model count",
        "filters": {}
      },
      {
        "query": "gcp.project.bigqueryService.dataset.routines.length",
        "mql": "gcp.project.bigqueryService.dataset.routines.length",
        "code_id": "Wk066sdQ4QA=",
        "checksum": "jfcjQQ8pFkQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-routine-count",
        "type": "\u0005",
        "title": "Routine count",
        "filters": {}
      },
      {
        "query": "gcp.project.bigqueryService.dataset.created",
        "mql": "gcp.project.bigqueryService.dataset.created",
        "code_id": "G6A8QrL4Bqo=",
        "checksum": "lEbZ+CWwc1s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bqdataset-table-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.storage.bucket.created",
        "mql": "gcp.storage.bucket.created",
        "code_id": "7p+Op2PlHJ8=",
        "checksum": "mxE9i+2Toso=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.storage.bucket.locationType",
        "mql": "gcp.storage.bucket.locationType",
        "code_id": "DSK63ZZ+JuM=",
        "checksum": "mkfxEVYXTZ8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-loc-type",
        "type": "\u0007",
        "title": "Location type",
        "filters": {}
      },
      {
        "query": "gcp.storage.bucket.location",
        "mql": "gcp.storage.bucket.location",
        "code_id": "Q1pn7hP8urc=",
        "checksum": "YSbJ+Re5icE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "gcp.storage.bucket.iamConfiguration['publicAccessPrevention']",
        "mql": "gcp.storage.bucket.iamConfiguration['publicAccessPrevention']",
        "code_id": "YsXW2SIsTdc=",
        "checksum": "b7Vjh4Mauzw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-public-acc",
        "type": "\n",
        "title": "Public access prevention",
        "filters": {}
      },
      {
        "query": "gcp.storage.bucket.storageClass",
        "mql": "gcp.storage.bucket.storageClass",
        "code_id": "l134iaJPkGI=",
        "checksum": "nZCGDBcRR9s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-bucket-storageclass",
        "type": "\u0007",
        "title": "Storage class",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.labels",
        "mql": "gcp.project.compute.image.labels",
        "code_id": "VIzTvfTQKFM=",
        "checksum": "XTuSHUlwr9Y=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-image-labels",
        "type": "\u001a\u0007\u0007",
        "title": "GCP labels",
        "filters": {
          "items": {
            "7NvxkDWMVQQ=": {
              "mql": "asset.platform == \"gcp-compute-image\"",
              "code_id": "7NvxkDWMVQQ=",
              "checksum": "ZvhqKzCqo8I=",
              "mrn": "//policy.api.mondoo.app/filter/7NvxkDWMVQQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.compute.instance.tags",
        "mql": "gcp.project.compute.instance.tags",
        "code_id": "HbtstSUxQWY=",
        "checksum": "URbhbtIgHq8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-instance-labels",
        "type": "\u0019\u0007",
        "title": "GCP labels",
        "filters": {
          "items": {
            "wPJsO/U89DU=": {
              "mql": "asset.platform == \"gcp-compute-instance\"",
              "code_id": "wPJsO/U89DU=",
              "checksum": "SM6uu4BJ32E=",
              "mrn": "//policy.api.mondoo.app/filter/wPJsO/U89DU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.compute.subnetwork.created",
        "mql": "gcp.project.compute.subnetwork.created",
        "code_id": "hVzpjHIoAsg=",
        "checksum": "jCAUsgDtq4U=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.description",
        "mql": "gcp.project.compute.subnetwork.description",
        "code_id": "xPoP3iOyqgQ=",
        "checksum": "+SP+Zo3iXlI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-desc",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.enableFlowLogs",
        "mql": "gcp.project.compute.subnetwork.enableFlowLogs",
        "code_id": "UMZPBJ65POs=",
        "checksum": "ZLZn/MiK5ok=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-flowlogs",
        "type": "\u0004",
        "title": "Flow Logs",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.gatewayAddress",
        "mql": "gcp.project.compute.subnetwork.gatewayAddress",
        "code_id": "UfTuTw+mMUQ=",
        "checksum": "YPEAb/acneU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-gateway-addr",
        "type": "\u0007",
        "title": "Gateway address",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.internalIpv6Prefix",
        "mql": "gcp.project.compute.subnetwork.internalIpv6Prefix",
        "code_id": "o9ZbugIlriQ=",
        "checksum": "Bq+lQnoFGKo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-internal-ipv6",
        "type": "\u0007",
        "title": "Internal IPv6 prefix",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.ipCidrRange",
        "mql": "gcp.project.compute.subnetwork.ipCidrRange",
        "code_id": "yED1certCYI=",
        "checksum": "ltWiNZOuyFo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-ipv4-cidr",
        "type": "\u0007",
        "title": "IPv4 CIDR range",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.internalIpv6Prefix",
        "mql": "gcp.project.compute.subnetwork.internalIpv6Prefix",
        "code_id": "o9ZbugIlriQ=",
        "checksum": "MtDLpduunJU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-ipv6-accesstype",
        "type": "\u0007",
        "title": "IPv6 access type",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.ipv6CidrRange",
        "mql": "gcp.project.compute.subnetwork.ipv6CidrRange",
        "code_id": "klGcb9Nvo4w=",
        "checksum": "9OKm8HOIdAY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-ipv6-cidr",
        "type": "\u0007",
        "title": "IPv6 CIDR range",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.subnetwork.region.name",
        "mql": "gcp.project.compute.subnetwork.region.name",
        "code_id": "K5d91FOUPgE=",
        "checksum": "LyZLWwIeZHo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-subnetwork-region",
        "type": "\u0007",
        "title": "Region",
        "filters": {}
      },
      {
        "query": "gcp.compute.network.autoCreateSubnetworks",
        "mql": "gcp.compute.network.autoCreateSubnetworks",
        "code_id": "tQtxWquQe7A=",
        "checksum": "hA1+UBeMLms=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-auto-create-subnets",
        "type": "\u0004",
        "title": "Auto create subnetworks",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.network.created",
        "mql": "gcp.project.compute.network.created",
        "code_id": "4Ri+8LnLvLQ=",
        "checksum": "u7F10qhhQ/0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.compute.network.description",
        "mql": "gcp.compute.network.description",
        "code_id": "9iPWHdXNXh4=",
        "checksum": "yx+rrSTYaww=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gcp.compute.network.gatewayIPv4",
        "mql": "gcp.compute.network.gatewayIPv4",
        "code_id": "zAbT2bUYLAM=",
        "checksum": "oyUgpnMYXXY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-ipv4-gateway",
        "type": "\u0007",
        "title": "IPv4 gateway",
        "filters": {}
      },
      {
        "query": "gcp.compute.network.id",
        "mql": "gcp.compute.network.id",
        "code_id": "dBySsP39IxE=",
        "checksum": "M1T8ZNEOH6I=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-network-id",
        "type": "\u0007",
        "title": "Network ID",
        "filters": {}
      },
      {
        "query": "gcp.compute.network.routingMode",
        "mql": "gcp.compute.network.routingMode",
        "code_id": "wi7OTH7Q59M=",
        "checksum": "j1u7VutQbag=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-routing-mode",
        "type": "\u0007",
        "title": "Routing mode",
        "filters": {}
      },
      {
        "query": "gcp.compute.network.subnetworks.length",
        "mql": "gcp.compute.network.subnetworks.length",
        "code_id": "pF0R8rpKvAY=",
        "checksum": "3ZOVK3GS1iQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-subnetwork-count",
        "type": "\u0005",
        "title": "Subnetwork count",
        "filters": {}
      },
      {
        "query": "gcp.compute.network.enableUlaInternalIpv6",
        "mql": "gcp.compute.network.enableUlaInternalIpv6",
        "code_id": "7tt0UVDfxOk=",
        "checksum": "Oauroi6H55o=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-computenetwork-ula-insternal-ipv6",
        "type": "\u0004",
        "title": "ULA internal IPv6",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.firewall.created",
        "mql": "gcp.project.compute.firewall.created",
        "code_id": "wJTFkT/mE1Q=",
        "checksum": "LuimbDQrvJ8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.compute.firewall.description",
        "mql": "gcp.compute.firewall.description",
        "code_id": "jggA1JCTDHY=",
        "checksum": "ZNk6/CI4ztA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-desc",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.firewall.direction",
        "mql": "gcp.project.compute.firewall.direction",
        "code_id": "A24Ehmy+evc=",
        "checksum": "LNiZQBuovnE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-direction",
        "type": "\u0007",
        "title": "Direction",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.firewall.disabled != false",
        "mql": "gcp.project.compute.firewall.disabled != false",
        "code_id": "xDdfQfEODZk=",
        "checksum": "4h0/1x3HAn4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-enabled",
        "type": "\u0004",
        "title": "Enabled",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.firewall.priority",
        "mql": "gcp.project.compute.firewall.priority",
        "code_id": "isoZdlKqKvo=",
        "checksum": "fYASKZ3vYTA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-firewall-priority",
        "type": "\u0005",
        "title": "Priority",
        "filters": {}
      },
      {
        "query": "gcp.organization.folders.length",
        "mql": "gcp.organization.folders.length",
        "code_id": "YtCtMJjCcw4=",
        "checksum": "5ArScKKvnxI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-folders-count",
        "type": "\u0005",
        "title": "Folders count",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.autopilotEnabled",
        "mql": "gcp.project.gke.cluster.autopilotEnabled",
        "code_id": "mpdcZ5pDJks=",
        "checksum": "UD9IFTTk4Sc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-autopilot-enabled",
        "type": "\u0004",
        "title": "Autopilot enabled",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.created",
        "mql": "gcp.project.gke.cluster.created",
        "code_id": "XgFAPL3JARw=",
        "checksum": "ZflBWYLJVy0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.description",
        "mql": "gcp.project.gke.cluster.description",
        "code_id": "rA61+v56efI=",
        "checksum": "+L8eyngHgpM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-desc",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.endpoint",
        "mql": "gcp.project.gke.cluster.endpoint",
        "code_id": "bu2Xdiy1aTk=",
        "checksum": "xUS40IHQHVk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-external-endpoint",
        "type": "\u0007",
        "title": "External endpoint",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.databaseEncryption['state']",
        "mql": "gcp.project.gke.cluster.databaseEncryption['state']",
        "code_id": "KCcYXoRKLaI=",
        "checksum": "AhMMP5/E984=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-internal-endpoint",
        "type": "\n",
        "title": "Internal endpoint",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.location",
        "mql": "gcp.project.gke.cluster.location",
        "code_id": "rEdlsauTxQs=",
        "checksum": "zL18PQJq8ec=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-location",
        "type": "\u0007",
        "title": "Location",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.network",
        "mql": "gcp.project.gke.cluster.network",
        "code_id": "ae7ffzTCNdg=",
        "checksum": "rMwtfmU2Xf4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-network",
        "type": "\u0007",
        "title": "Network",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.subnetwork",
        "mql": "gcp.project.gke.cluster.subnetwork",
        "code_id": "qUR/J6OURkc=",
        "checksum": "Gqwsfo7gmh8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-subnet",
        "type": "\u0007",
        "title": "Subnet",
        "filters": {}
      },
      {
        "query": "gcp.project.gke.cluster.currentMasterVersion",
        "mql": "gcp.project.gke.cluster.currentMasterVersion",
        "code_id": "x85HsSuSB1k=",
        "checksum": "g59ZxDhjGeU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-gkecluster-version",
        "type": "\u0007",
        "title": "Cluster version",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.architecture",
        "mql": "gcp.project.compute.image.architecture",
        "code_id": "yZqn367yKKQ=",
        "checksum": "0vnRNVP+jMw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-arch",
        "type": "\u0007",
        "title": "Architecture",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.created",
        "mql": "gcp.project.compute.image.created",
        "code_id": "x7yg+kKwzaQ=",
        "checksum": "BidfPp7dPSI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.description",
        "mql": "gcp.project.compute.image.description",
        "code_id": "RkR9Jh8mjYY=",
        "checksum": "+yWJeAeS3XM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.diskSizeGb",
        "mql": "gcp.project.compute.image.diskSizeGb",
        "code_id": "Q8cstWucOnI=",
        "checksum": "Uu7uwPTm/4U=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-disk-size",
        "type": "\u0005",
        "title": "Disk size (GB)",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.family",
        "mql": "gcp.project.compute.image.family",
        "code_id": "PEIZpOFHamY=",
        "checksum": "pMxo0pOEv4o=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-family",
        "type": "\u0007",
        "title": "Family",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.id",
        "mql": "gcp.project.compute.image.id",
        "code_id": "rfxZobckaUE=",
        "checksum": "Jaq3CP+zkcE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.image.status",
        "mql": "gcp.project.compute.image.status",
        "code_id": "uoSUvb4IZCs=",
        "checksum": "MWab2ffNcg0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-image-status",
        "type": "\u0007",
        "title": "Status",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.cpuPlatform",
        "mql": "gcp.project.compute.instance.cpuPlatform",
        "code_id": "2006rdJvBPE=",
        "checksum": "Xd4pCJaPBeE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-cpu-platform",
        "type": "\u0007",
        "title": "CPU platform",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.created",
        "mql": "gcp.project.compute.instance.created",
        "code_id": "Hqb3R3aCFtQ=",
        "checksum": "mT7TCDywXzA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-created",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.deletionProtection",
        "mql": "gcp.project.compute.instance.deletionProtection",
        "code_id": "jd4Jr5DjnOQ=",
        "checksum": "IOwbs11ZrQs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-deletion-protection",
        "type": "\u0004",
        "title": "Deletion Protection",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.description",
        "mql": "gcp.project.compute.instance.description",
        "code_id": "K5KkW08raxo=",
        "checksum": "bW8NUmOEv94=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.enableDisplay",
        "mql": "gcp.project.compute.instance.enableDisplay",
        "code_id": "DzA5Z5g3qgU=",
        "checksum": "VYIJAgxG2GQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-display-enabled",
        "type": "\u0004",
        "title": "Display Enabled",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.hostname",
        "mql": "gcp.project.compute.instance.hostname",
        "code_id": "GXrZSbTTgio=",
        "checksum": "1F3jBFiTmnY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-hostname",
        "type": "\u0007",
        "title": "Hostname",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.id",
        "mql": "gcp.project.compute.instance.id",
        "code_id": "x06YJViyCGU=",
        "checksum": "lPZJqccm/KQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-id",
        "type": "\u0007",
        "title": "Instance ID",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.enableIntegrityMonitoring",
        "mql": "gcp.project.compute.instance.enableIntegrityMonitoring",
        "code_id": "QXPiToJiNBQ=",
        "checksum": "oDIGonMmFrU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-integrity-monitoring",
        "type": "\u0004",
        "title": "Shielded Instance integrity monitoring",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.machineType.name",
        "mql": "gcp.project.compute.instance.machineType.name",
        "code_id": "24qeyN52Mnc=",
        "checksum": "iBciqz2qeHc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-machinetype",
        "type": "\u0007",
        "title": "Machine Type",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.networkInterfaces.first.networkIP",
        "mql": "gcp.project.compute.instance.networkInterfaces.first.networkIP",
        "code_id": "GSeMjHEqBXk=",
        "checksum": "PcGA4NYbXdE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-privateIp",
        "type": "\n",
        "title": "Private IP",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.projectId",
        "mql": "gcp.project.compute.instance.projectId",
        "code_id": "1/qmDMtkVyY=",
        "checksum": "wyyk2KmlNeg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-project-id",
        "type": "\u0007",
        "title": "Project ID",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.networkInterfaces.first.accessConfigs.first.natIP",
        "mql": "gcp.project.compute.instance.networkInterfaces.first.accessConfigs.first.natIP",
        "code_id": "dRrxGKEuOJM=",
        "checksum": "arlXrJ++BEw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-publicIp",
        "type": "\n",
        "title": "Public IP",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.enableSecureBoot",
        "mql": "gcp.project.compute.instance.enableSecureBoot",
        "code_id": "okdt4PK71G0=",
        "checksum": "rTSn2e7xCms=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-secure-boot",
        "type": "\u0004",
        "title": "Shielded Instance secure boot",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.status",
        "mql": "gcp.project.compute.instance.status",
        "code_id": "BLrgaQZWDqE=",
        "checksum": "8gToLRuCHcY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-status",
        "type": "\u0007",
        "title": "Status",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.enableVtpm",
        "mql": "gcp.project.compute.instance.enableVtpm",
        "code_id": "sFxJHKjmdOY=",
        "checksum": "bz/OUvWM9bA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-vtpm",
        "type": "\u0004",
        "title": "Shielded Instance vTPM",
        "filters": {}
      },
      {
        "query": "gcp.project.compute.instance.zone.name",
        "mql": "gcp.project.compute.instance.zone.name",
        "code_id": "pu0Fcc58/Vg=",
        "checksum": "b7qCjesLgJU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-instance-zone",
        "type": "\u0007",
        "title": "Zone",
        "filters": {}
      },
      {
        "query": "gcp.organization.id",
        "mql": "gcp.organization.id",
        "code_id": "ongEddrXYkk=",
        "checksum": "wLaTNQ/wfxc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-org-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "gcp.project.createTime",
        "mql": "gcp.project.createTime",
        "code_id": "i8twwMT+01c=",
        "checksum": "aGKD8KL1EZI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "gcp.project.id",
        "mql": "gcp.project.id",
        "code_id": "ra7hARXep/A=",
        "checksum": "urd/TjeESyI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-id",
        "type": "\u0007",
        "title": "Project ID",
        "filters": {}
      },
      {
        "query": "gcp.project.labels",
        "mql": "gcp.project.labels",
        "code_id": "6mm8YjEd9kg=",
        "checksum": "fXhQgmSRBeE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-labels",
        "type": "\u001a\u0007\u0007",
        "title": "GCP labels",
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.name",
        "mql": "gcp.project.name",
        "code_id": "djpzP1DPCHI=",
        "checksum": "MFEJwVJD+Uo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "gcp.project.number",
        "mql": "gcp.project.number",
        "code_id": "ygTE5hJOOjo=",
        "checksum": "d9qTBofkKro=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-number",
        "type": "\u0007",
        "title": "Project number",
        "filters": {}
      },
      {
        "query": "gcp.project.parentId.trim('folders/')",
        "mql": "gcp.project.parentId.trim('folders/')",
        "code_id": "/AEgAic1TCI=",
        "checksum": "8IxS2W5n9IA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-parent-folder-id",
        "type": "\u0007",
        "title": "Parent folder ID",
        "filters": {}
      },
      {
        "query": "gcp.organization.id.trim('organizations/')",
        "mql": "gcp.organization.id.trim('organizations/')",
        "code_id": "9pt5I45zG5A=",
        "checksum": "GQHHZNgiKco=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-parent-org-id",
        "type": "\u0007",
        "title": "Parent organization ID",
        "filters": {}
      },
      {
        "query": "gcp.organization.name",
        "mql": "gcp.organization.name",
        "code_id": "S4uaf+pRihg=",
        "checksum": "YkKrQ/TtVso=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-parent-org-name",
        "type": "\u0007",
        "title": "Parent organization name",
        "filters": {}
      },
      {
        "query": "gcp.project.state",
        "mql": "gcp.project.state",
        "code_id": "p9G+OHmbHt4=",
        "checksum": "TmB811tyfOo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-state",
        "type": "\u0007",
        "title": "State",
        "filters": {}
      },
      {
        "query": "gcp.organization.projects.length",
        "mql": "gcp.organization.projects.length",
        "code_id": "VIFak4VjZyc=",
        "checksum": "IseFSO4WR9c=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-projects-count",
        "type": "\u0005",
        "title": "Projects count",
        "filters": {}
      },
      {
        "query": "gcp.project.storageService.bucket.labels",
        "mql": "gcp.project.storageService.bucket.labels",
        "code_id": "1jR6950Cqlg=",
        "checksum": "WX7xG6jDu4o=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-storage-bucket-labels",
        "type": "\u001a\u0007\u0007",
        "title": "GCP labels",
        "filters": {
          "items": {
            "wDTgvEMsna0=": {
              "mql": "asset.platform == \"gcp-storage-bucket\"",
              "code_id": "wDTgvEMsna0=",
              "checksum": "uVwk47SfQc4=",
              "mrn": "//policy.api.mondoo.app/filter/wDTgvEMsna0=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "github.organization.twoFactorRequirementEnabled",
        "mql": "github.organization.twoFactorRequirementEnabled",
        "code_id": "LhS+YQb7yLM=",
        "checksum": "i/37vF7tDvQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-2fa",
        "type": "\u0004",
        "title": "Requires 2FA?",
        "filters": {}
      },
      {
        "query": "github.organization.company",
        "mql": "github.organization.company",
        "code_id": "ikbj0REQfVk=",
        "checksum": "9Tx8hpL4740=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-company",
        "type": "\u0007",
        "title": "Company",
        "filters": {}
      },
      {
        "query": "github.organization.createdAt",
        "mql": "github.organization.createdAt",
        "code_id": "YKZRlktDQY8=",
        "checksum": "iGGm66HMErc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-createdate",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "github.organization.description",
        "mql": "github.organization.description",
        "code_id": "noKEVvP5U/0=",
        "checksum": "Q4SPaAA6Bug=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "github.organization.email",
        "mql": "github.organization.email",
        "code_id": "tO4hRRIFLLI=",
        "checksum": "wNeYYyrQiCY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-email",
        "type": "\u0007",
        "title": "Email",
        "filters": {}
      },
      {
        "query": "github.organization.name",
        "mql": "github.organization.name",
        "code_id": "PlsiQZGf2UQ=",
        "checksum": "OHMI71yKdto=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "github.organization.plan.name",
        "mql": "github.organization.plan.name",
        "code_id": "83ZVQtFhwAw=",
        "checksum": "2QlVDmwyn3c=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-plan",
        "type": "\n",
        "title": "Plan",
        "filters": {}
      },
      {
        "query": "github.organization.ownedPrivateRepos",
        "mql": "github.organization.ownedPrivateRepos",
        "code_id": "DeKk6FN603c=",
        "checksum": "/S5KOgpjLFU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-private-repo-count",
        "type": "\u0005",
        "title": "Private repo count",
        "filters": {}
      },
      {
        "query": "github.organization.repositories.length",
        "mql": "github.organization.repositories.length",
        "code_id": "/2yEsd9qf8U=",
        "checksum": "xCfRgWZDqLQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-org-total-repo-count",
        "type": "\u0005",
        "title": "Total repo count",
        "filters": {}
      },
      {
        "query": "github.repository.archived",
        "mql": "github.repository.archived",
        "code_id": "+QMwD9r4hdQ=",
        "checksum": "OEGonwTU3JY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-archived",
        "type": "\u0004",
        "title": "Archived?",
        "filters": {}
      },
      {
        "query": "github.repository.createdAt",
        "mql": "github.repository.createdAt",
        "code_id": "/SxVIEuxv2A=",
        "checksum": "bHwN1vWr/g0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-createdate",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "github.repository.description",
        "mql": "github.repository.description",
        "code_id": "YQcjycDD+8U=",
        "checksum": "bzO4zJZMYB8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "github.repository.isFork",
        "mql": "github.repository.isFork",
        "code_id": "LehTQNTmc6M=",
        "checksum": "H86tNBIJ5LU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-fork",
        "type": "\u0004",
        "title": "Fork?",
        "filters": {}
      },
      {
        "query": "github.repository.fullName",
        "mql": "github.repository.fullName",
        "code_id": "PygWajuszAE=",
        "checksum": "VIPdbMWYyyg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "github.repository.owner.name",
        "mql": "github.repository.owner.name",
        "code_id": "8ftPHuvXqrg=",
        "checksum": "p4NXhmhtJNQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-owner",
        "type": "\u0007",
        "title": "Owner",
        "filters": {}
      },
      {
        "query": "github.repository.private",
        "mql": "github.repository.private",
        "code_id": "FQIpyrKhrfA=",
        "checksum": "aBuYblWvQnQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-repo-private",
        "type": "\u0004",
        "title": "Private?",
        "filters": {}
      },
      {
        "query": "github.user.login",
        "mql": "github.user.login",
        "code_id": "ZbSYPn6VT0Y=",
        "checksum": "5vCchZZ6MKk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-github-username",
        "type": "\u0007",
        "title": "Username",
        "filters": {}
      },
      {
        "query": "gitlab.group.description",
        "mql": "gitlab.group.description",
        "code_id": "honkze+l1NE=",
        "checksum": "/s1thh5dPfE=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gitlab.group.id",
        "mql": "gitlab.group.id",
        "code_id": "SQZ5l2iaV7Q=",
        "checksum": "EP4eENFxfFM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-id",
        "type": "\u0005",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "gitlab.group.name",
        "mql": "gitlab.group.name",
        "code_id": "Vb9cZhN0ba4=",
        "checksum": "4rkpQb1nihk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "gitlab.group.path",
        "mql": "gitlab.group.path",
        "code_id": "kmGDChyTT08=",
        "checksum": "3sqOkGZPNvA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-path",
        "type": "\u0007",
        "title": "Path",
        "filters": {}
      },
      {
        "query": "gitlab.group.projects.length",
        "mql": "gitlab.group.projects.length",
        "code_id": "s6PtWEG0RT8=",
        "checksum": "R/y4qzSDzig=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-count",
        "type": "\u0005",
        "title": "Total project count",
        "filters": {}
      },
      {
        "query": "gitlab.project.description",
        "mql": "gitlab.project.description",
        "code_id": "4SzCRXy+VIA=",
        "checksum": "zl6A+DcybR0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-description",
        "type": "\u0007",
        "title": "Description",
        "filters": {}
      },
      {
        "query": "gitlab.project.id",
        "mql": "gitlab.project.id",
        "code_id": "Ld0WB+guOpc=",
        "checksum": "BchwCo3cLmQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-id",
        "type": "\u0005",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "gitlab.project.name",
        "mql": "gitlab.project.name",
        "code_id": "7NK9MyPT87Y=",
        "checksum": "is45Nz6c5nM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "gitlab.project.path",
        "mql": "gitlab.project.path",
        "code_id": "LJB15RQF7a4=",
        "checksum": "TiEno9MfOzc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-path",
        "type": "\u0007",
        "title": "Path",
        "filters": {}
      },
      {
        "query": "gitlab.project.visibility",
        "mql": "gitlab.project.visibility",
        "code_id": "9oQLHGXyZGw=",
        "checksum": "xUj8+OQlMsk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-project-visibility",
        "type": "\u0007",
        "title": "Visibility",
        "filters": {}
      },
      {
        "query": "gitlab.group.visibility",
        "mql": "gitlab.group.visibility",
        "code_id": "F81h5K2nUcU=",
        "checksum": "rA/5GL+HkHo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-visibility",
        "type": "\u0007",
        "title": "Visibility",
        "filters": {}
      },
      {
        "query": "gitlab.group.webURL",
        "mql": "gitlab.group.webURL",
        "code_id": "GAJFpkBKM38=",
        "checksum": "44rRgNUpzjI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-weburl-gitlab-group",
        "type": "\u0007",
        "title": "Web URL",
        "filters": {}
      },
      {
        "query": "gitlab.project.webURL",
        "mql": "gitlab.project.webURL",
        "code_id": "YlA+vqtqKjM=",
        "checksum": "GAOGiAkRgbQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-gitlab-weburl-gitlab-project",
        "type": "\u0007",
        "title": "Web URL",
        "filters": {}
      },
      {
        "query": "googleworkspace.report.users.where( security[\"isSuperAdmin\"] == true).length",
        "mql": "googleworkspace.report.users.where( security[\"isSuperAdmin\"] == true).length",
        "code_id": "70J2jbJEUsI=",
        "checksum": "e15w77Ru0B4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-google-workspace-super-admin-count",
        "type": "\u0005",
        "title": "Super admin count",
        "filters": {}
      },
      {
        "query": "googleworkspace.users.length",
        "mql": "googleworkspace.users.length",
        "code_id": "RR/9XHr0SdQ=",
        "checksum": "Gbdl4IWYPso=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-google-workspace-user-count",
        "type": "\u0005",
        "title": "User count",
        "filters": {}
      },
      {
        "checksum": "g7Q/d4J7nUU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-hostname",
        "title": "Hostname",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-hostname"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-esxi-hostname"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-platform-overview-arista-hostname"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cloud-private-hostname"
          }
        ]
      },
      {
        "query": "os.hypervisor",
        "mql": "os.hypervisor",
        "code_id": "GQJ1bYKYROk=",
        "checksum": "x7Ar/5LhJoU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-hypervisor",
        "type": "\u0007",
        "title": "Hypervisor",
        "filters": {
          "items": {
            "GIKTqfvfI7E=": {
              "mql": "cloud.provider.upcase == \"UNKNOWN\"\nasset.kind == \"virtualmachine\"\nos.hypervisor\n",
              "code_id": "GIKTqfvfI7E=",
              "checksum": "/IAeUPqRn8A=",
              "mrn": "//policy.api.mondoo.app/filter/GIKTqfvfI7E=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "k8s.ingress.manifest.apiVersion",
        "mql": "k8s.ingress.manifest.apiVersion",
        "code_id": "niZUsz6QI8g=",
        "checksum": "a+KkZPn7gI4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "EB8f04Z3nJk=",
              "mrn": "//policy.api.mondoo.app/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.ingress.kind",
        "mql": "k8s.ingress.kind",
        "code_id": "Sa99QNTrhqM=",
        "checksum": "YGh4VClCHxI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "EB8f04Z3nJk=",
              "mrn": "//policy.api.mondoo.app/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.ingress.labels",
        "mql": "k8s.ingress.labels",
        "code_id": "WDdBzP90smA=",
        "checksum": "DJqF7MUVvJM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "EB8f04Z3nJk=",
              "mrn": "//policy.api.mondoo.app/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.ingress.name",
        "mql": "k8s.ingress.name",
        "code_id": "fTOpItjQmLk=",
        "checksum": "EZW63nDtNzA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "EB8f04Z3nJk=",
              "mrn": "//policy.api.mondoo.app/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.ingress.namespace",
        "mql": "k8s.ingress.namespace",
        "code_id": "zZrGVQDUrag=",
        "checksum": "9YigXOhfRCA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "C6zVI/ll8wE=": {
              "mql": "asset.platform == \"k8s-ingress\"",
              "code_id": "C6zVI/ll8wE=",
              "checksum": "EB8f04Z3nJk=",
              "mrn": "//policy.api.mondoo.app/filter/C6zVI/ll8wE=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.job.manifest.apiVersion",
        "mql": "k8s.job.manifest.apiVersion",
        "code_id": "e5u/OF3S2mM=",
        "checksum": "aTjBKeGdVp4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "KOK0JR7SAsE=",
              "mrn": "//policy.api.mondoo.app/filter/Gahk63XA/8A=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.job.kind",
        "mql": "k8s.job.kind",
        "code_id": "VPtM3G+Pu7g=",
        "checksum": "NXc7RSpPTdc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "KOK0JR7SAsE=",
              "mrn": "//policy.api.mondoo.app/filter/Gahk63XA/8A=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.job.labels",
        "mql": "k8s.job.labels",
        "code_id": "Noq6/In70Jo=",
        "checksum": "DuK8yiwfUT8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "KOK0JR7SAsE=",
              "mrn": "//policy.api.mondoo.app/filter/Gahk63XA/8A=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.job.name",
        "mql": "k8s.job.name",
        "code_id": "8Xs5LQpu2fE=",
        "checksum": "xHHWMhr0Jz0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "KOK0JR7SAsE=",
              "mrn": "//policy.api.mondoo.app/filter/Gahk63XA/8A=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.job.namespace",
        "mql": "k8s.job.namespace",
        "code_id": "vhMaPPF18Ss=",
        "checksum": "hqF9ROe3Aqg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "Gahk63XA/8A=": {
              "mql": "asset.platform == \"k8s-job\"",
              "code_id": "Gahk63XA/8A=",
              "checksum": "KOK0JR7SAsE=",
              "mrn": "//policy.api.mondoo.app/filter/Gahk63XA/8A=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.serverVersion[\"platform\"]",
        "mql": "k8s.serverVersion[\"platform\"]",
        "code_id": "C8I91AZyAYs=",
        "checksum": "OM/vOuw8DP4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-k8s-cluster-host-platform",
        "type": "\n",
        "title": "Control plane platform",
        "filters": {}
      },
      {
        "query": "k8s.nodes.length",
        "mql": "k8s.nodes.length",
        "code_id": "bCLAwniw8Pw=",
        "checksum": "sigZy89QuBk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-k8s-cluster-node-count",
        "type": "\u0005",
        "title": "Node count",
        "filters": {}
      },
      {
        "checksum": "wsXkhZ/2JaQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-k8s-name",
        "title": "Name",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-name"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-name"
          }
        ]
      },
      {
        "checksum": "B8A6Gez7/Vg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-kind",
        "title": "Kind",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace-kind"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-kind"
          }
        ]
      },
      {
        "checksum": "l0p2BMf0BxQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-labels-gcp",
        "title": "GCP labels",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-project-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-instance-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-compute-image-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-storage-bucket-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-gcp-biguery-dataset-labels"
          }
        ]
      },
      {
        "checksum": "kozCrV+f4p4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-labels-k8s",
        "title": "K8s Labels",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace-labels"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-labels"
          }
        ]
      },
      {
        "query": "command('cat /proc/cpuinfo | grep \"model name\" | sort -u | cut -d : -f 2-').stdout.trim\n",
        "mql": "command('cat /proc/cpuinfo | grep \"model name\" | sort -u | cut -d : -f 2-').stdout.trim\n",
        "code_id": "4pKB3H8YLCs=",
        "checksum": "jtwWt65pO2E=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-cpu",
        "type": "\u0007",
        "title": "CPU type",
        "filters": {
          "items": {
            "eTqruXhu7T4=": {
              "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "eTqruXhu7T4=",
              "checksum": "IVEHesmRA4M=",
              "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "kernel.info[\"version\"]",
        "mql": "kernel.info[\"version\"]",
        "code_id": "GT/Qrfnx7Pw=",
        "checksum": "Ufkv238zj/Y=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-kernel-version",
        "type": "\n",
        "title": "Kernel version",
        "filters": {
          "items": {
            "eTqruXhu7T4=": {
              "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "eTqruXhu7T4=",
              "checksum": "IVEHesmRA4M=",
              "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "machine.baseboard.manufacturer",
        "mql": "machine.baseboard.manufacturer",
        "code_id": "kv1OUBUCnBA=",
        "checksum": "JBlkpuH5cXo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-manufacturer",
        "type": "\u0007",
        "title": "Manufacturer",
        "filters": {
          "items": {
            "nmfXjdG/9PA=": {
              "mql": "asset.kind == 'baremetal'\nmachine.baseboard.manufacturer != \"\"\n",
              "code_id": "nmfXjdG/9PA=",
              "checksum": "rCDDrPpdvi8=",
              "mrn": "//policy.api.mondoo.app/filter/nmfXjdG/9PA=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "command(\"free --mega | grep Mem | awk '{ print $2}'\").stdout.trim + \"M\"\n",
        "mql": "command(\"free --mega | grep Mem | awk '{ print $2}'\").stdout.trim + \"M\"\n",
        "code_id": "aKgwnf8IBbM=",
        "checksum": "yJdoCQ6Cdtw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-memory",
        "type": "\u0007",
        "title": "Memory",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "machine.baseboard.product",
        "mql": "machine.baseboard.product",
        "code_id": "F7bdJ3U4G0g=",
        "checksum": "8Kh9gyYkRWU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-product",
        "type": "\u0007",
        "title": "Product",
        "filters": {
          "items": {
            "7vmuyqQ5FgA=": {
              "mql": "asset.kind == 'baremetal'\nmachine.baseboard.product != \"\"\n",
              "code_id": "7vmuyqQ5FgA=",
              "checksum": "gt3LNyC8sxM=",
              "mrn": "//policy.api.mondoo.app/filter/7vmuyqQ5FgA=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "command(\"df -TH / | grep '/dev' | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
        "mql": "command(\"df -TH / | grep '/dev' | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
        "code_id": "RF3JNuVsjjQ=",
        "checksum": "6pzElaAdzPc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-root-volume",
        "type": "\u0007",
        "title": "Root volume",
        "filters": {
          "items": {
            "eTqruXhu7T4=": {
              "mql": "mondoo.capabilities.contains('run-command')\nasset.kind != 'container'\nasset.kind != 'container-image'\n",
              "code_id": "eTqruXhu7T4=",
              "checksum": "IVEHesmRA4M=",
              "mrn": "//policy.api.mondoo.app/filter/eTqruXhu7T4=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "switch( machine.chassis.serial ) {\ncase _ == \"\":\n  return \"Unknown\"\ncase _ == \"To Be Filled By O.E.M.\":\n  return \"Unknown\"\ndefault:\n  return machine.chassis.serial\n}\n",
        "mql": "switch( machine.chassis.serial ) {\ncase _ == \"\":\n  return \"Unknown\"\ncase _ == \"To Be Filled By O.E.M.\":\n  return \"Unknown\"\ndefault:\n  return machine.chassis.serial\n}\n",
        "code_id": "Rx0VK5B8tZ8=",
        "checksum": "o64du1WlILs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-linux-serial",
        "type": "\u0007",
        "title": "Serial / Service Tag",
        "filters": {
          "items": {
            "MrxXb13XuN4=": {
              "mql": "asset.kind == 'baremetal'\n",
              "code_id": "MrxXb13XuN4=",
              "checksum": "OPwe5LQG5IE=",
              "mrn": "//policy.api.mondoo.app/filter/MrxXb13XuN4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['chip_type']",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['chip_type']",
        "code_id": "ljXrlbjJUsM=",
        "checksum": "E4fwh5rpYB0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-cpu-type",
        "type": "\n",
        "title": "CPU type",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"diskutil info disk0\").stdout.find(/Disk Size:\\s*(\\S* \\S*)/).first.split(\"  \").last.trim",
        "mql": "command(\"diskutil info disk0\").stdout.find(/Disk Size:\\s*(\\S* \\S*)/).first.split(\"  \").last.trim",
        "code_id": "RWFGDQwbamM=",
        "checksum": "/0lKDVaEgdU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-disk",
        "type": "\u0007",
        "title": "Disk size",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['physical_memory']",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['physical_memory']",
        "code_id": "UaIu/LgmuxA=",
        "checksum": "MsRuL5Tve/0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-memory",
        "type": "\n",
        "title": "Memory",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "switch( command('sysctl -n hw.model').stdout.trim ) {\ncase _ == \"MacPro7,1\":\n  return \"Mac Pro (2019)\"\ncase _ == \"Mac14,8\":\n  return \"Mac Pro (2023)\"\ncase _ == \"MacPro2,1\":\n  return \"Mac Pro (Early 2007)\"\ncase _ == \"MacPro3,1\":\n  return \"Mac Pro (Early 2008)\"\ncase _ == \"MacPro4,1\":\n  return \"Mac Pro (Early 2009)\"\ncase _ == \"MacPro6,1\":\n  return \"Mac Pro (Late 2013)\"\ncase _ == \"MacPro1,1\":\n  return \"Mac Pro (Mid 2006)\"\ncase _ == \"Mac13,1\":\n  return \"Mac Studio (M1 Max)\"\ncase _ == \"Mac13,2\":\n  return \"Mac Studio (M1 Ultra)\"\ncase _ == \"Mac14,13\":\n  return \"Mac Studio (M2 Max, 2023)\"\ncase _ == \"Mac14,14\":\n  return \"Mac Studio (M2 Ultra, 2023)\"\ncase _ == \"Mac15,14\":\n  return \"Mac Studio (M3 Ultra, 2025)\"\ncase _ == \"Mac16,9\":\n  return \"Mac Studio (M4 Max, 2025)\"\ncase _ == \"Macmini6,1\":\n  return \"Mac mini (Late 2012, Core i5)\"\ncase _ == \"Macmini6,2\":\n  return \"Mac mini (Late 2012, Core i7)\"\ncase _ == \"Macmini7,1\":\n  return \"Mac mini (Late 2014)\"\ncase _ == \"Macmini8,1\":\n  return \"Mac mini (Late 2018)\"\ncase _ == \"Macmini9,1\":\n  return \"Mac mini (M1, Late 2020)\"\ncase _ == \"Mac14,12\":\n  return \"Mac mini (M2 Pro, 2023)\"\ncase _ == \"Mac14,3\":\n  return \"Mac mini (M2, 2023)\"\ncase _ == \"Mac16,11\":\n  return \"Mac mini (M4 Pro, 2024)\"\ncase _ == \"Mac16,10\":\n  return \"Mac mini (M4, 2024)\"\ncase _ == \"Macmini2,1\":\n  return \"Mac mini (Mid 2007)\"\ncase _ == \"Macmini4,1\":\n  return \"Mac mini (Mid 2010)\"\ncase _ == \"Macmini5,2\":\n  return \"Mac mini (Mid 2011, Dedicated graphics)\"\ncase _ == \"Macmini5,1\":\n  return \"Mac mini (Mid 2011, Integrated graphics)\"\ncase _ == \"Macmini5,3\":\n  return \"Mac mini (Mid 2011, Server)\"\ncase _ == \"MacBook4,1\":\n  return \"MacBook (13-inch, Early 2008)\"\ncase _ == \"MacBook3,1\":\n  return \"MacBook (13-inch, Late 2007)\"\ncase _ == \"MacBook5,1\":\n  return \"MacBook (13-inch, Late 2008)\"\ncase _ == \"MacBook6,1\":\n  return \"MacBook (13-inch, Late 2009)\"\ncase _ == \"MacBook1,1\":\n  return \"MacBook (13-inch, Mid 2006)\"\ncase _ == \"MacBook7,1\":\n  return \"MacBook (13-inch, Mid 2010)\"\ncase _ == \"MacBook10,1\":\n  return \"MacBook (Retina, 12-inch, 2017)\"\ncase _ == \"MacBook8,1\":\n  return \"MacBook (Retina, 12-inch, Early 2015)\"\ncase _ == \"MacBook9,1\":\n  return \"MacBook (Retina, 12-inch, Early 2016)\"\ncase _ == \"MacBookAir7,1\":\n  return \"MacBook Air (11-inch, Early 2015)\"\ncase _ == \"MacBookAir3,1\":\n  return \"MacBook Air (11-inch, Late 2010)\"\ncase _ == \"MacBookAir4,1\":\n  return \"MacBook Air (11-inch, Mid 2011)\"\ncase _ == \"MacBookAir5,1\":\n  return \"MacBook Air (11-inch, Mid 2012)\"\ncase _ == \"MacBookAir3,2\":\n  return \"MacBook Air (13-inch, Late 2010)\"\ncase _ == \"Mac15,12\":\n  return \"MacBook Air (13-inch, M3, 2024)\"\ncase _ == \"Mac16,12\":\n  return \"MacBook Air (13-inch, M4, 2025)\"\ncase _ == \"MacBookAir4,2\":\n  return \"MacBook Air (13-inch, Mid 2011)\"\ncase _ == \"MacBookAir5,2\":\n  return \"MacBook Air (13-inch, Mid 2012)\"\ncase _ == \"Mac14,15\":\n  return \"MacBook Air (15-inch, M2, 2023)\"\ncase _ == \"Mac15,13\":\n  return \"MacBook Air (15-inch, M3, 2024)\"\ncase _ == \"Mac16,13\":\n  return \"MacBook Air (15-inch, M4, 2025)\"\ncase _ == \"MacBookAir1,1\":\n  return \"MacBook Air (Early 2008)\"\ncase _ == \"MacBookAir10,1\":\n  return \"MacBook Air (M1, 2020)\"\ncase _ == \"Mac14,2\":\n  return \"MacBook Air (M2, 2022)\"\ncase _ == \"MacBookAir8,1\":\n  return \"MacBook Air (Retina, 13-inch, 2018)\"\ncase _ == \"MacBookAir8,2\":\n  return \"MacBook Air (Retina, 13-inch, 2019)\"\ncase _ == \"MacBookAir9,1\":\n  return \"MacBook Air (Retina, 13-inch, 2020)\"\ncase _ == \"MacBookPro13,2\":\n  return \"MacBook Pro (13-inch, 2016, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro13,1\":\n  return \"MacBook Pro (13-inch, 2016, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro14,2\":\n  return \"MacBook Pro (13-inch, 2017, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro14,1\":\n  return \"MacBook Pro (13-inch, 2017, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro15,4\":\n  return \"MacBook Pro (13-inch, 2019, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro16,2\":\n  return \"MacBook Pro (13-inch, 2020, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro16,3\":\n  return \"MacBook Pro (13-inch, 2020, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro17,1\":\n  return \"MacBook Pro (13-inch, M1, 2020)\"\ncase _ == \"Mac14,7\":\n  return \"MacBook Pro (13-inch, M2, 2022)\"\ncase _ == \"MacBookPro5,5\":\n  return \"MacBook Pro (13-inch, Mid 2009)\"\ncase _ == \"MacBookPro7,1\":\n  return \"MacBook Pro (13-inch, Mid 2010)\"\ncase _ == \"MacBookPro9,2\":\n  return \"MacBook Pro (13-inch, Mid 2012)\"\ncase _ == \"Mac15,10\":\n  return \"MacBook Pro (14-inch, 14-core M3 Max, Nov 2023)\"\ncase _ == \"Mac15,8\":\n  return \"MacBook Pro (14-inch, 16-core M3 Max, Nov 2023)\"\ncase _ == \"MacBookPro18,4\":\n  return \"MacBook Pro (14-inch, M1 Max, 2021)\"\ncase _ == \"MacBookPro18,3\":\n  return \"MacBook Pro (14-inch, M1 Pro, 2021)\"\ncase _ == \"Mac14,5\":\n  return \"MacBook Pro (14-inch, M2 Max 2023)\"\ncase _ == \"Mac14,9\":\n  return \"MacBook Pro (14-inch, M2 Pro, 2023)\"\ncase _ == \"Mac15,6\":\n  return \"MacBook Pro (14-inch, M3 Pro, Nov 2023)\"\ncase _ == \"Mac15,3\":\n  return \"MacBook Pro (14-inch, M3, Nov 2023)\"\ncase _ == \"Mac16,6\":\n  return \"MacBook Pro (14-inch, M4 Max, Nov 2024)\"\ncase _ == \"Mac16,8\":\n  return \"MacBook Pro (14-inch, M4 Pro, Nov 2024)\"\ncase _ == \"Mac16,1\":\n  return \"MacBook Pro (14-inch, M4, Nov 2024)\"\ncase _ == \"MacBookPro13,3\":\n  return \"MacBook Pro (15-inch, 2016)\"\ncase _ == \"MacBookPro14,3\":\n  return \"MacBook Pro (15-inch, 2017)\"\ncase _ == \"MacBookPro1,1\":\n  return \"MacBook Pro (15-inch, Early 2006)\"\ncase _ == \"MacBookPro2,2\":\n  return \"MacBook Pro (15-inch, Late 2006)\"\ncase _ == \"MacBookPro5,3\":\n  return \"MacBook Pro (15-inch, Mid 2009, Dedicated Graphics)\"\ncase _ == \"MacBookPro5,4\":\n  return \"MacBook Pro (15-inch, Mid 2009, Integrated Graphics)\"\ncase _ == \"MacBookPro6,2\":\n  return \"MacBook Pro (15-inch, Mid 2010)\"\ncase _ == \"MacBookPro9,1\":\n  return \"MacBook Pro (15-inch, Mid 2012)\"\ncase _ == \"Mac15,11\":\n  return \"MacBook Pro (16-inch, 14-core M3 Max, Nov 2023)\"\ncase _ == \"Mac15,9\":\n  return \"MacBook Pro (16-inch, 16-core M3 Max, Nov 2023)\"\ncase _ == \"MacBookPro16,4\":\n  return \"MacBook Pro (16-inch, 2019, Dedicated graphics)\"\ncase _ == \"MacBookPro16,1\":\n  return \"MacBook Pro (16-inch, 2019, Integrated graphics)\"\ncase _ == \"MacBookPro18,2\":\n  return \"MacBook Pro (16-inch, M1 Max, 2021)\"\ncase _ == \"MacBookPro18,1\":\n  return \"MacBook Pro (16-inch, M1 Pro, 2021)\"\ncase _ == \"Mac14,6\":\n  return \"MacBook Pro (16-inch, M2 Max, 2023)\"\ncase _ == \"Mac14,10\":\n  return \"MacBook Pro (16-inch, M2 Pro, 2023)\"\ncase _ == \"Mac15,7\":\n  return \"MacBook Pro (16-inch, M3 Pro, Nov 2023)\"\ncase _ == \"Mac16,5\":\n  return \"MacBook Pro (16-inch, M4 Max, Nov 2024)\"\ncase _ == \"Mac16,7\":\n  return \"MacBook Pro (16-inch, M4 Pro, Nov 2024)\"\ncase _ == \"MacBookPro1,2\":\n  return \"MacBook Pro (17-inch, Early 2006)\"\ncase _ == \"MacBookPro2,1\":\n  return \"MacBook Pro (17-inch, Late 2006)\"\ncase _ == \"MacBookPro6,1\":\n  return \"MacBook Pro (17-inch, Mid 2010)\"\ncase _ == \"MacBookPro12,1\":\n  return \"MacBook Pro (Retina, 13-inch, Early 2015)\"\ncase _ == \"MacBookPro11,5\":\n  return \"MacBook Pro (Retina, 15-inch, Mid 2015, Dedicated graphics)\"\ncase _ == \"MacBookPro11,4\":\n  return \"MacBook Pro (Retina, 15-inch, Mid 2015, Integrated graphics)\"\ncase _ == \"Macmini8,2\":\n  return \"Unreleased Mac mini\"\ncase _ == \"Macmini10,1\":\n  return \"Unreleased Mac mini (M1 Pro)\"\ncase _ == \"iMac5,2\":\n  return \"iMac (17-inch, Late 2006, Integrated Graphics)\"\ncase _ == \"iMac4,2\":\n  return \"iMac (17-inch, Mid 2006)\"\ncase _ == \"iMac18,1\":\n  return \"iMac (21.5-inch, 2017)\"\ncase _ == \"iMac13,3\":\n  return \"iMac (21.5-inch, Early 2013)\"\ncase _ == \"iMac13,1\":\n  return \"iMac (21.5-inch, Late 2012)\"\ncase _ == \"iMac14,3\":\n  return \"iMac (21.5-inch, Late 2013, Dedicated Graphics)\"\ncase _ == \"iMac14,1\":\n  return \"iMac (21.5-inch, Late 2013, Integrated Graphics)\"\ncase _ == \"iMac16,2\":\n  return \"iMac (21.5-inch, Late 2015)\"\ncase _ == \"iMac11,2\":\n  return \"iMac (21.5-inch, Mid 2010)\"\ncase _ == \"iMac14,4\":\n  return \"iMac (21.5-inch, Mid 2014)\"\ncase _ == \"iMac6,1\":\n  return \"iMac (24-inch, Late 2006)\"\ncase _ == \"iMac21,1\":\n  return \"iMac (24-inch, M1, 2021, Four Ports)\"\ncase _ == \"iMac21,2\":\n  return \"iMac (24-inch, M1, 2021, Two Ports)\"\ncase _ == \"Mac15,5\":\n  return \"iMac (24-inch, M3, 2023, Four Ports)\"\ncase _ == \"Mac15,4\":\n  return \"iMac (24-inch, M3, 2023, Two Ports)\"\ncase _ == \"Mac16,3\":\n  return \"iMac (24-inch, M4, 2024, Four Ports)\"\ncase _ == \"Mac16,2\":\n  return \"iMac (24-inch, M4, 2024, Two Ports)\"\ncase _ == \"iMac11,1\":\n  return \"iMac (27-inch, Late 2009, Core i5/i7)\"\ncase _ == \"iMac13,2\":\n  return \"iMac (27-inch, Late 2012)\"\ncase _ == \"iMac14,2\":\n  return \"iMac (27-inch, Late 2013)\"\ncase _ == \"iMac11,3\":\n  return \"iMac (27-inch, Mid 2010)\"\ncase _ == \"iMac12,2\":\n  return \"iMac (27-inch, Mid 2011)\"\ncase _ == \"iMac18,2\":\n  return \"iMac (Retina 4K, 21.5-inch, 2017)\"\ncase _ == \"iMac19,2\":\n  return \"iMac (Retina 4K, 21.5-inch, 2019)\"\ncase _ == \"iMac18,3\":\n  return \"iMac (Retina 5K, 27-inch, 2017)\"\ncase _ == \"iMac19,1\":\n  return \"iMac (Retina 5K, 27-inch, 2019)\"\ncase _ == \"iMac20,1\":\n  return \"iMac (Retina 5K, 27-inch, 2020)\"\ncase _ == \"iMac20,2\":\n  return \"iMac (Retina 5K, 27-inch, 2020, RX 5700/XT)\"\ncase _ == \"iMac17,1\":\n  return \"iMac (Retina 5K, 27-inch, Late 2015)\"\ncase _ == \"iMacPro1,1\":\n  return \"iMac Pro (Retina 5K, 27-inch, Late 2017)\"\ndefault:\n  return _\n}\n",
        "mql": "switch( command('sysctl -n hw.model').stdout.trim ) {\ncase _ == \"MacPro7,1\":\n  return \"Mac Pro (2019)\"\ncase _ == \"Mac14,8\":\n  return \"Mac Pro (2023)\"\ncase _ == \"MacPro2,1\":\n  return \"Mac Pro (Early 2007)\"\ncase _ == \"MacPro3,1\":\n  return \"Mac Pro (Early 2008)\"\ncase _ == \"MacPro4,1\":\n  return \"Mac Pro (Early 2009)\"\ncase _ == \"MacPro6,1\":\n  return \"Mac Pro (Late 2013)\"\ncase _ == \"MacPro1,1\":\n  return \"Mac Pro (Mid 2006)\"\ncase _ == \"Mac13,1\":\n  return \"Mac Studio (M1 Max)\"\ncase _ == \"Mac13,2\":\n  return \"Mac Studio (M1 Ultra)\"\ncase _ == \"Mac14,13\":\n  return \"Mac Studio (M2 Max, 2023)\"\ncase _ == \"Mac14,14\":\n  return \"Mac Studio (M2 Ultra, 2023)\"\ncase _ == \"Mac15,14\":\n  return \"Mac Studio (M3 Ultra, 2025)\"\ncase _ == \"Mac16,9\":\n  return \"Mac Studio (M4 Max, 2025)\"\ncase _ == \"Macmini6,1\":\n  return \"Mac mini (Late 2012, Core i5)\"\ncase _ == \"Macmini6,2\":\n  return \"Mac mini (Late 2012, Core i7)\"\ncase _ == \"Macmini7,1\":\n  return \"Mac mini (Late 2014)\"\ncase _ == \"Macmini8,1\":\n  return \"Mac mini (Late 2018)\"\ncase _ == \"Macmini9,1\":\n  return \"Mac mini (M1, Late 2020)\"\ncase _ == \"Mac14,12\":\n  return \"Mac mini (M2 Pro, 2023)\"\ncase _ == \"Mac14,3\":\n  return \"Mac mini (M2, 2023)\"\ncase _ == \"Mac16,11\":\n  return \"Mac mini (M4 Pro, 2024)\"\ncase _ == \"Mac16,10\":\n  return \"Mac mini (M4, 2024)\"\ncase _ == \"Macmini2,1\":\n  return \"Mac mini (Mid 2007)\"\ncase _ == \"Macmini4,1\":\n  return \"Mac mini (Mid 2010)\"\ncase _ == \"Macmini5,2\":\n  return \"Mac mini (Mid 2011, Dedicated graphics)\"\ncase _ == \"Macmini5,1\":\n  return \"Mac mini (Mid 2011, Integrated graphics)\"\ncase _ == \"Macmini5,3\":\n  return \"Mac mini (Mid 2011, Server)\"\ncase _ == \"MacBook4,1\":\n  return \"MacBook (13-inch, Early 2008)\"\ncase _ == \"MacBook3,1\":\n  return \"MacBook (13-inch, Late 2007)\"\ncase _ == \"MacBook5,1\":\n  return \"MacBook (13-inch, Late 2008)\"\ncase _ == \"MacBook6,1\":\n  return \"MacBook (13-inch, Late 2009)\"\ncase _ == \"MacBook1,1\":\n  return \"MacBook (13-inch, Mid 2006)\"\ncase _ == \"MacBook7,1\":\n  return \"MacBook (13-inch, Mid 2010)\"\ncase _ == \"MacBook10,1\":\n  return \"MacBook (Retina, 12-inch, 2017)\"\ncase _ == \"MacBook8,1\":\n  return \"MacBook (Retina, 12-inch, Early 2015)\"\ncase _ == \"MacBook9,1\":\n  return \"MacBook (Retina, 12-inch, Early 2016)\"\ncase _ == \"MacBookAir7,1\":\n  return \"MacBook Air (11-inch, Early 2015)\"\ncase _ == \"MacBookAir3,1\":\n  return \"MacBook Air (11-inch, Late 2010)\"\ncase _ == \"MacBookAir4,1\":\n  return \"MacBook Air (11-inch, Mid 2011)\"\ncase _ == \"MacBookAir5,1\":\n  return \"MacBook Air (11-inch, Mid 2012)\"\ncase _ == \"MacBookAir3,2\":\n  return \"MacBook Air (13-inch, Late 2010)\"\ncase _ == \"Mac15,12\":\n  return \"MacBook Air (13-inch, M3, 2024)\"\ncase _ == \"Mac16,12\":\n  return \"MacBook Air (13-inch, M4, 2025)\"\ncase _ == \"MacBookAir4,2\":\n  return \"MacBook Air (13-inch, Mid 2011)\"\ncase _ == \"MacBookAir5,2\":\n  return \"MacBook Air (13-inch, Mid 2012)\"\ncase _ == \"Mac14,15\":\n  return \"MacBook Air (15-inch, M2, 2023)\"\ncase _ == \"Mac15,13\":\n  return \"MacBook Air (15-inch, M3, 2024)\"\ncase _ == \"Mac16,13\":\n  return \"MacBook Air (15-inch, M4, 2025)\"\ncase _ == \"MacBookAir1,1\":\n  return \"MacBook Air (Early 2008)\"\ncase _ == \"MacBookAir10,1\":\n  return \"MacBook Air (M1, 2020)\"\ncase _ == \"Mac14,2\":\n  return \"MacBook Air (M2, 2022)\"\ncase _ == \"MacBookAir8,1\":\n  return \"MacBook Air (Retina, 13-inch, 2018)\"\ncase _ == \"MacBookAir8,2\":\n  return \"MacBook Air (Retina, 13-inch, 2019)\"\ncase _ == \"MacBookAir9,1\":\n  return \"MacBook Air (Retina, 13-inch, 2020)\"\ncase _ == \"MacBookPro13,2\":\n  return \"MacBook Pro (13-inch, 2016, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro13,1\":\n  return \"MacBook Pro (13-inch, 2016, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro14,2\":\n  return \"MacBook Pro (13-inch, 2017, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro14,1\":\n  return \"MacBook Pro (13-inch, 2017, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro15,4\":\n  return \"MacBook Pro (13-inch, 2019, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro16,2\":\n  return \"MacBook Pro (13-inch, 2020, Four Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro16,3\":\n  return \"MacBook Pro (13-inch, 2020, Two Thunderbolt 3 ports)\"\ncase _ == \"MacBookPro17,1\":\n  return \"MacBook Pro (13-inch, M1, 2020)\"\ncase _ == \"Mac14,7\":\n  return \"MacBook Pro (13-inch, M2, 2022)\"\ncase _ == \"MacBookPro5,5\":\n  return \"MacBook Pro (13-inch, Mid 2009)\"\ncase _ == \"MacBookPro7,1\":\n  return \"MacBook Pro (13-inch, Mid 2010)\"\ncase _ == \"MacBookPro9,2\":\n  return \"MacBook Pro (13-inch, Mid 2012)\"\ncase _ == \"Mac15,10\":\n  return \"MacBook Pro (14-inch, 14-core M3 Max, Nov 2023)\"\ncase _ == \"Mac15,8\":\n  return \"MacBook Pro (14-inch, 16-core M3 Max, Nov 2023)\"\ncase _ == \"MacBookPro18,4\":\n  return \"MacBook Pro (14-inch, M1 Max, 2021)\"\ncase _ == \"MacBookPro18,3\":\n  return \"MacBook Pro (14-inch, M1 Pro, 2021)\"\ncase _ == \"Mac14,5\":\n  return \"MacBook Pro (14-inch, M2 Max 2023)\"\ncase _ == \"Mac14,9\":\n  return \"MacBook Pro (14-inch, M2 Pro, 2023)\"\ncase _ == \"Mac15,6\":\n  return \"MacBook Pro (14-inch, M3 Pro, Nov 2023)\"\ncase _ == \"Mac15,3\":\n  return \"MacBook Pro (14-inch, M3, Nov 2023)\"\ncase _ == \"Mac16,6\":\n  return \"MacBook Pro (14-inch, M4 Max, Nov 2024)\"\ncase _ == \"Mac16,8\":\n  return \"MacBook Pro (14-inch, M4 Pro, Nov 2024)\"\ncase _ == \"Mac16,1\":\n  return \"MacBook Pro (14-inch, M4, Nov 2024)\"\ncase _ == \"MacBookPro13,3\":\n  return \"MacBook Pro (15-inch, 2016)\"\ncase _ == \"MacBookPro14,3\":\n  return \"MacBook Pro (15-inch, 2017)\"\ncase _ == \"MacBookPro1,1\":\n  return \"MacBook Pro (15-inch, Early 2006)\"\ncase _ == \"MacBookPro2,2\":\n  return \"MacBook Pro (15-inch, Late 2006)\"\ncase _ == \"MacBookPro5,3\":\n  return \"MacBook Pro (15-inch, Mid 2009, Dedicated Graphics)\"\ncase _ == \"MacBookPro5,4\":\n  return \"MacBook Pro (15-inch, Mid 2009, Integrated Graphics)\"\ncase _ == \"MacBookPro6,2\":\n  return \"MacBook Pro (15-inch, Mid 2010)\"\ncase _ == \"MacBookPro9,1\":\n  return \"MacBook Pro (15-inch, Mid 2012)\"\ncase _ == \"Mac15,11\":\n  return \"MacBook Pro (16-inch, 14-core M3 Max, Nov 2023)\"\ncase _ == \"Mac15,9\":\n  return \"MacBook Pro (16-inch, 16-core M3 Max, Nov 2023)\"\ncase _ == \"MacBookPro16,4\":\n  return \"MacBook Pro (16-inch, 2019, Dedicated graphics)\"\ncase _ == \"MacBookPro16,1\":\n  return \"MacBook Pro (16-inch, 2019, Integrated graphics)\"\ncase _ == \"MacBookPro18,2\":\n  return \"MacBook Pro (16-inch, M1 Max, 2021)\"\ncase _ == \"MacBookPro18,1\":\n  return \"MacBook Pro (16-inch, M1 Pro, 2021)\"\ncase _ == \"Mac14,6\":\n  return \"MacBook Pro (16-inch, M2 Max, 2023)\"\ncase _ == \"Mac14,10\":\n  return \"MacBook Pro (16-inch, M2 Pro, 2023)\"\ncase _ == \"Mac15,7\":\n  return \"MacBook Pro (16-inch, M3 Pro, Nov 2023)\"\ncase _ == \"Mac16,5\":\n  return \"MacBook Pro (16-inch, M4 Max, Nov 2024)\"\ncase _ == \"Mac16,7\":\n  return \"MacBook Pro (16-inch, M4 Pro, Nov 2024)\"\ncase _ == \"MacBookPro1,2\":\n  return \"MacBook Pro (17-inch, Early 2006)\"\ncase _ == \"MacBookPro2,1\":\n  return \"MacBook Pro (17-inch, Late 2006)\"\ncase _ == \"MacBookPro6,1\":\n  return \"MacBook Pro (17-inch, Mid 2010)\"\ncase _ == \"MacBookPro12,1\":\n  return \"MacBook Pro (Retina, 13-inch, Early 2015)\"\ncase _ == \"MacBookPro11,5\":\n  return \"MacBook Pro (Retina, 15-inch, Mid 2015, Dedicated graphics)\"\ncase _ == \"MacBookPro11,4\":\n  return \"MacBook Pro (Retina, 15-inch, Mid 2015, Integrated graphics)\"\ncase _ == \"Macmini8,2\":\n  return \"Unreleased Mac mini\"\ncase _ == \"Macmini10,1\":\n  return \"Unreleased Mac mini (M1 Pro)\"\ncase _ == \"iMac5,2\":\n  return \"iMac (17-inch, Late 2006, Integrated Graphics)\"\ncase _ == \"iMac4,2\":\n  return \"iMac (17-inch, Mid 2006)\"\ncase _ == \"iMac18,1\":\n  return \"iMac (21.5-inch, 2017)\"\ncase _ == \"iMac13,3\":\n  return \"iMac (21.5-inch, Early 2013)\"\ncase _ == \"iMac13,1\":\n  return \"iMac (21.5-inch, Late 2012)\"\ncase _ == \"iMac14,3\":\n  return \"iMac (21.5-inch, Late 2013, Dedicated Graphics)\"\ncase _ == \"iMac14,1\":\n  return \"iMac (21.5-inch, Late 2013, Integrated Graphics)\"\ncase _ == \"iMac16,2\":\n  return \"iMac (21.5-inch, Late 2015)\"\ncase _ == \"iMac11,2\":\n  return \"iMac (21.5-inch, Mid 2010)\"\ncase _ == \"iMac14,4\":\n  return \"iMac (21.5-inch, Mid 2014)\"\ncase _ == \"iMac6,1\":\n  return \"iMac (24-inch, Late 2006)\"\ncase _ == \"iMac21,1\":\n  return \"iMac (24-inch, M1, 2021, Four Ports)\"\ncase _ == \"iMac21,2\":\n  return \"iMac (24-inch, M1, 2021, Two Ports)\"\ncase _ == \"Mac15,5\":\n  return \"iMac (24-inch, M3, 2023, Four Ports)\"\ncase _ == \"Mac15,4\":\n  return \"iMac (24-inch, M3, 2023, Two Ports)\"\ncase _ == \"Mac16,3\":\n  return \"iMac (24-inch, M4, 2024, Four Ports)\"\ncase _ == \"Mac16,2\":\n  return \"iMac (24-inch, M4, 2024, Two Ports)\"\ncase _ == \"iMac11,1\":\n  return \"iMac (27-inch, Late 2009, Core i5/i7)\"\ncase _ == \"iMac13,2\":\n  return \"iMac (27-inch, Late 2012)\"\ncase _ == \"iMac14,2\":\n  return \"iMac (27-inch, Late 2013)\"\ncase _ == \"iMac11,3\":\n  return \"iMac (27-inch, Mid 2010)\"\ncase _ == \"iMac12,2\":\n  return \"iMac (27-inch, Mid 2011)\"\ncase _ == \"iMac18,2\":\n  return \"iMac (Retina 4K, 21.5-inch, 2017)\"\ncase _ == \"iMac19,2\":\n  return \"iMac (Retina 4K, 21.5-inch, 2019)\"\ncase _ == \"iMac18,3\":\n  return \"iMac (Retina 5K, 27-inch, 2017)\"\ncase _ == \"iMac19,1\":\n  return \"iMac (Retina 5K, 27-inch, 2019)\"\ncase _ == \"iMac20,1\":\n  return \"iMac (Retina 5K, 27-inch, 2020)\"\ncase _ == \"iMac20,2\":\n  return \"iMac (Retina 5K, 27-inch, 2020, RX 5700/XT)\"\ncase _ == \"iMac17,1\":\n  return \"iMac (Retina 5K, 27-inch, Late 2015)\"\ncase _ == \"iMacPro1,1\":\n  return \"iMac Pro (Retina 5K, 27-inch, Late 2017)\"\ndefault:\n  return _\n}\n",
        "code_id": "VOaxixtxBQs=",
        "checksum": "oNRlY3iXb3Y=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-model-name",
        "type": "\u0007",
        "title": "Model name",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains('run-command')",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "2ruoQzJhTnI=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "machine.system.product",
        "mql": "machine.system.product",
        "code_id": "iXIVTYLtcJk=",
        "checksum": "iO0tCVMkN1A=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-model-part-number",
        "type": "\u0007",
        "title": "Model part number",
        "filters": {}
      },
      {
        "query": "machine.system.serial",
        "mql": "machine.system.serial",
        "code_id": "83YcBnukW7o=",
        "checksum": "rFtGEB+Pvys=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-macos-serial-number",
        "type": "\u0007",
        "title": "System serial number",
        "filters": {}
      },
      {
        "query": "microsoft.organizations.first.createdAt",
        "mql": "microsoft.organizations.first.createdAt",
        "code_id": "hcv9xzGK158=",
        "checksum": "Uk4XIAPY5y8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-create-date",
        "type": "\t",
        "title": "Creation date",
        "filters": {}
      },
      {
        "query": "microsoft.tenantDomainName",
        "mql": "microsoft.tenantDomainName",
        "code_id": "5Lx8mGQWtMs=",
        "checksum": "C+xgogloaE4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-domain",
        "type": "\u0007",
        "title": "Domain",
        "filters": {}
      },
      {
        "query": "microsoft.organizations.first.id",
        "mql": "microsoft.organizations.first.id",
        "code_id": "5g+693o4T7k=",
        "checksum": "SGMQsYHn0jw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "microsoft.organizations.first.name",
        "mql": "microsoft.organizations.first.name",
        "code_id": "bOW82vemTqA=",
        "checksum": "jsxiiyp4KXY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "microsoft.organizations.first.subscriptions.length",
        "mql": "microsoft.organizations.first.subscriptions.length",
        "code_id": "he4wCuu/FNk=",
        "checksum": "vzJgljiuC0I=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-ms365-subscription-count",
        "type": "\u0005",
        "title": "Subscription count",
        "filters": {}
      },
      {
        "checksum": "mPCS6mDcOrg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace",
        "title": "Namespace",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-job-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-cronjob-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-deployment-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-daemonset-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-ingress-namespace"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-namespace"
          }
        ]
      },
      {
        "query": "k8s.namespace.manifest.apiVersion",
        "mql": "k8s.namespace.manifest.apiVersion",
        "code_id": "mTT0GFm9CAc=",
        "checksum": "LXoHIT6L2so=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "so47OTA+9gQ=": {
              "mql": "asset.platform == \"k8s-namespace\"",
              "code_id": "so47OTA+9gQ=",
              "checksum": "yB20l3KRvtM=",
              "mrn": "//policy.api.mondoo.app/filter/so47OTA+9gQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.namespace.kind",
        "mql": "k8s.namespace.kind",
        "code_id": "uT8or4VVvNo=",
        "checksum": "FzIHeCChvpw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "so47OTA+9gQ=": {
              "mql": "asset.platform == \"k8s-namespace\"",
              "code_id": "so47OTA+9gQ=",
              "checksum": "yB20l3KRvtM=",
              "mrn": "//policy.api.mondoo.app/filter/so47OTA+9gQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.namespace.labels",
        "mql": "k8s.namespace.labels",
        "code_id": "Ti6xY6fKCJs=",
        "checksum": "q3uT1emX6LA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-namespace-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "so47OTA+9gQ=": {
              "mql": "asset.platform == \"k8s-namespace\"",
              "code_id": "so47OTA+9gQ=",
              "checksum": "yB20l3KRvtM=",
              "mrn": "//policy.api.mondoo.app/filter/so47OTA+9gQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "oci.tenancy.description",
        "mql": "oci.tenancy.description",
        "code_id": "J8De17JQOCo=",
        "checksum": "TRkBhHFvwTg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-description",
        "type": "\u0007",
        "title": "Tenancy description",
        "filters": {}
      },
      {
        "query": "oci.regions.where(isHomeRegion == true).first.name",
        "mql": "oci.regions.where(isHomeRegion == true).first.name",
        "code_id": "ieMaFxo6nsY=",
        "checksum": "Lj8eC/nGEoY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-homeregion",
        "type": "\u0007",
        "title": "Home region",
        "filters": {}
      },
      {
        "query": "oci.tenancy.id",
        "mql": "oci.tenancy.id",
        "code_id": "FFbaYZ1AKj0=",
        "checksum": "SuqRLSEAXvw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-id",
        "type": "\u0007",
        "title": "Tenancy ID",
        "filters": {}
      },
      {
        "query": "oci.tenancy.name",
        "mql": "oci.tenancy.name",
        "code_id": "p2ETBa5O8JM=",
        "checksum": "+FtvmwlQzgI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-name",
        "type": "\u0007",
        "title": "Tenancy name",
        "filters": {}
      },
      {
        "query": "oci.tenancy.retentionPeriod",
        "mql": "oci.tenancy.retentionPeriod",
        "code_id": "3qBFyQwFa/I=",
        "checksum": "mHf9MrbsT3I=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-oci-tenancy-retention",
        "type": "\t",
        "title": "Retention period",
        "filters": {}
      },
      {
        "query": "okta.applications.length",
        "mql": "okta.applications.length",
        "code_id": "fFDThT0ZN/s=",
        "checksum": "8VAEZN6bGkM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-app-count",
        "type": "\u0005",
        "title": "Applications count",
        "filters": {}
      },
      {
        "query": "okta.organization.companyName",
        "mql": "okta.organization.companyName",
        "code_id": "TS/esJ2P99U=",
        "checksum": "TovTdkEgC3w=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-company-name",
        "type": "\u0007",
        "title": "Company name",
        "filters": {}
      },
      {
        "query": "okta.organization.created",
        "mql": "okta.organization.created",
        "code_id": "weNVSw/07bQ=",
        "checksum": "B4y7FxLauXc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-created",
        "type": "\t",
        "title": "Created",
        "filters": {}
      },
      {
        "query": "okta.organization.id",
        "mql": "okta.organization.id",
        "code_id": "4lHSC2vYrq0=",
        "checksum": "33aQ4KXjufw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "okta.organization.subdomain",
        "mql": "okta.organization.subdomain",
        "code_id": "GJ+hfh/RbkA=",
        "checksum": "acl1Lx49HjY=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-subdomain",
        "type": "\u0007",
        "title": "Subdomain",
        "filters": {}
      },
      {
        "query": "okta.users.length",
        "mql": "okta.users.length",
        "code_id": "EneG2TxnGP8=",
        "checksum": "wMn+TprOxKI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-okta-users-count",
        "type": "\u0005",
        "title": "Users count",
        "filters": {}
      },
      {
        "query": "os.hostname",
        "mql": "os.hostname",
        "code_id": "aRSd7vfjN/s=",
        "checksum": "/h6RxWAAzNM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-hostname",
        "type": "\u0007",
        "title": "Hostname",
        "filters": {
          "items": {
            "ewMgcOZrkmI=": {
              "mql": "asset.family.contains(_ == 'unix')\nasset.kind != 'container-image'\n",
              "code_id": "ewMgcOZrkmI=",
              "checksum": "yhFbqhwno1M=",
              "mrn": "//policy.api.mondoo.app/filter/ewMgcOZrkmI=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "packages.list.length",
        "mql": "packages.list.length",
        "code_id": "JwBey59Il44=",
        "checksum": "cRoZA0h/MoI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-os-installed-packages",
        "type": "\u0005",
        "title": "Installed packages",
        "filters": {}
      },
      {
        "query": "k8s.pod.manifest.apiVersion",
        "mql": "k8s.pod.manifest.apiVersion",
        "code_id": "6S0637kiZns=",
        "checksum": "iOwxZTBQ5Lk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "zkwNCLYgBxs=",
              "mrn": "//policy.api.mondoo.app/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.pod.kind",
        "mql": "k8s.pod.kind",
        "code_id": "ZufbiskWUBg=",
        "checksum": "twg8OxZEG5Y=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "zkwNCLYgBxs=",
              "mrn": "//policy.api.mondoo.app/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.pod.labels",
        "mql": "k8s.pod.labels",
        "code_id": "jGHFtYZvZUg=",
        "checksum": "BluDaqo8L0k=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "zkwNCLYgBxs=",
              "mrn": "//policy.api.mondoo.app/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.pod.name",
        "mql": "k8s.pod.name",
        "code_id": "70qFPpB5zLE=",
        "checksum": "BQEpIelUQdQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "zkwNCLYgBxs=",
              "mrn": "//policy.api.mondoo.app/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.pod.namespace",
        "mql": "k8s.pod.namespace",
        "code_id": "PH/MoBQvgRo=",
        "checksum": "ewmLCtwcGKs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-pod-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "3E1KRjJQDZw=": {
              "mql": "asset.platform == \"k8s-pod\"",
              "code_id": "3E1KRjJQDZw=",
              "checksum": "zkwNCLYgBxs=",
              "mrn": "//policy.api.mondoo.app/filter/3E1KRjJQDZw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.replicaset.manifest.apiVersion",
        "mql": "k8s.replicaset.manifest.apiVersion",
        "code_id": "WpPZhoiIioI=",
        "checksum": "IORj1tLNlCU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "Hac4KTGb+60=",
              "mrn": "//policy.api.mondoo.app/filter/5qRCZazhsy4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.replicaset.kind",
        "mql": "k8s.replicaset.kind",
        "code_id": "yPZfwGhs7LA=",
        "checksum": "N8OZxRJo0Zo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "Hac4KTGb+60=",
              "mrn": "//policy.api.mondoo.app/filter/5qRCZazhsy4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.replicaset.labels",
        "mql": "k8s.replicaset.labels",
        "code_id": "kAelIHRVMgI=",
        "checksum": "5CbFV3B4lAc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "Hac4KTGb+60=",
              "mrn": "//policy.api.mondoo.app/filter/5qRCZazhsy4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.replicaset.name",
        "mql": "k8s.replicaset.name",
        "code_id": "MT5FqBQAHvg=",
        "checksum": "oMN/jwVKJi4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "Hac4KTGb+60=",
              "mrn": "//policy.api.mondoo.app/filter/5qRCZazhsy4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.replicaset.namespace",
        "mql": "k8s.replicaset.namespace",
        "code_id": "pcakfLrffEs=",
        "checksum": "By2lbzflMdw=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-replicaset-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "5qRCZazhsy4=": {
              "mql": "asset.platform == \"k8s-replicaset\"",
              "code_id": "5qRCZazhsy4=",
              "checksum": "Hac4KTGb+60=",
              "mrn": "//policy.api.mondoo.app/filter/5qRCZazhsy4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.service.manifest.apiVersion",
        "mql": "k8s.service.manifest.apiVersion",
        "code_id": "rc6GY4sILRU=",
        "checksum": "X4z0yWIRP08=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "z/U7UiKzbXM=": {
              "mql": "asset.platform == \"k8s-service\"",
              "code_id": "z/U7UiKzbXM=",
              "checksum": "HKShLnIjAJU=",
              "mrn": "//policy.api.mondoo.app/filter/z/U7UiKzbXM=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.service.kind",
        "mql": "k8s.service.kind",
        "code_id": "VwMw+R08KtI=",
        "checksum": "XZ4qYKzedAQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "z/U7UiKzbXM=": {
              "mql": "asset.platform == \"k8s-service\"",
              "code_id": "z/U7UiKzbXM=",
              "checksum": "HKShLnIjAJU=",
              "mrn": "//policy.api.mondoo.app/filter/z/U7UiKzbXM=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.service.labels",
        "mql": "k8s.service.labels",
        "code_id": "wRnltcpUSuw=",
        "checksum": "RdYCB9XSmxk=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "z/U7UiKzbXM=": {
              "mql": "asset.platform == \"k8s-service\"",
              "code_id": "z/U7UiKzbXM=",
              "checksum": "HKShLnIjAJU=",
              "mrn": "//policy.api.mondoo.app/filter/z/U7UiKzbXM=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.service.name",
        "mql": "k8s.service.name",
        "code_id": "XFarP4v7P1E=",
        "checksum": "Gh+ByDQCT1Q=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "z/U7UiKzbXM=": {
              "mql": "asset.platform == \"k8s-service\"",
              "code_id": "z/U7UiKzbXM=",
              "checksum": "HKShLnIjAJU=",
              "mrn": "//policy.api.mondoo.app/filter/z/U7UiKzbXM=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.service.namespace",
        "mql": "k8s.service.namespace",
        "code_id": "O2+mZX8fcnM=",
        "checksum": "V0YOSvIyW4w=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-service-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "z/U7UiKzbXM=": {
              "mql": "asset.platform == \"k8s-service\"",
              "code_id": "z/U7UiKzbXM=",
              "checksum": "HKShLnIjAJU=",
              "mrn": "//policy.api.mondoo.app/filter/z/U7UiKzbXM=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "shodan.host.asn",
        "mql": "shodan.host.asn",
        "code_id": "9tHqctMJK4s=",
        "checksum": "3PfPSvZQDBQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-asn",
        "type": "\u0007",
        "title": "ASN",
        "filters": {}
      },
      {
        "query": "shodan.host.isp",
        "mql": "shodan.host.isp",
        "code_id": "dlp7PkeG7ps=",
        "checksum": "iKkk20e+rh0=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-isp",
        "type": "\u0007",
        "title": "ISP",
        "filters": {}
      },
      {
        "query": "shodan.host.ports.length",
        "mql": "shodan.host.ports.length",
        "code_id": "rFD/eT3pRIM=",
        "checksum": "AJUY1622bCg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-port-count",
        "type": "\u0005",
        "title": "Open port count",
        "filters": {}
      },
      {
        "query": "shodan.host.vulnerabilities.length",
        "mql": "shodan.host.vulnerabilities.length",
        "code_id": "eB7vXmcSDqY=",
        "checksum": "cSVDnyyTYE4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-host-vuln-count",
        "type": "\u0005",
        "title": "Vulnerability count",
        "filters": {}
      },
      {
        "query": "shodan.domain.subdomains.length",
        "mql": "shodan.domain.subdomains.length",
        "code_id": "9UZ0vXH1ADE=",
        "checksum": "vmDQykJ27MI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-shodan-subdomain-count",
        "type": "\u0005",
        "title": "Subdomain count",
        "filters": {}
      },
      {
        "query": "slack.team.domain",
        "mql": "slack.team.domain",
        "code_id": "xEKuclYUMLg=",
        "checksum": "glYLy15UzlQ=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-domain",
        "type": "\u0007",
        "title": "Domain",
        "filters": {}
      },
      {
        "query": "slack.team.id",
        "mql": "slack.team.id",
        "code_id": "8F3/bE7pgJM=",
        "checksum": "6fuqyuuJVZs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-id",
        "type": "\u0007",
        "title": "ID",
        "filters": {}
      },
      {
        "query": "slack.team.name",
        "mql": "slack.team.name",
        "code_id": "v0c6zj9dfzg=",
        "checksum": "go0DsscB8Us=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {}
      },
      {
        "query": "slack.users.owners.length",
        "mql": "slack.users.owners.length",
        "code_id": "6E8KLSMDSL0=",
        "checksum": "FXFx7qRCMLI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-owner-count",
        "type": "\u0005",
        "title": "Owner count",
        "filters": {}
      },
      {
        "query": "slack.users.length",
        "mql": "slack.users.length",
        "code_id": "zjyaVmXDFec=",
        "checksum": "96OgdnwskMs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-slack-team-user-count",
        "type": "\u0005",
        "title": "User count",
        "filters": {}
      },
      {
        "query": "k8s.statefulset.manifest.apiVersion",
        "mql": "k8s.statefulset.manifest.apiVersion",
        "code_id": "ohXZ/hRCRmk=",
        "checksum": "3LmM8bQ2QRs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-apiversion",
        "type": "\n",
        "title": "API version",
        "filters": {
          "items": {
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "9f/IRS839vc=",
              "mrn": "//policy.api.mondoo.app/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.statefulset.kind",
        "mql": "k8s.statefulset.kind",
        "code_id": "Ma11CFXiwA4=",
        "checksum": "Re7O7Kg+laU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-kind",
        "type": "\u0007",
        "title": "Kind",
        "filters": {
          "items": {
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "9f/IRS839vc=",
              "mrn": "//policy.api.mondoo.app/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.statefulset.labels",
        "mql": "k8s.statefulset.labels",
        "code_id": "GadbMMbEXUo=",
        "checksum": "TBco56sCl+s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-labels",
        "type": "\u001a\u0007\u0007",
        "title": "K8s Labels",
        "filters": {
          "items": {
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "9f/IRS839vc=",
              "mrn": "//policy.api.mondoo.app/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.statefulset.name",
        "mql": "k8s.statefulset.name",
        "code_id": "3FtsFbsDSug=",
        "checksum": "XK05FMUQNfU=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-name",
        "type": "\u0007",
        "title": "Name",
        "filters": {
          "items": {
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "9f/IRS839vc=",
              "mrn": "//policy.api.mondoo.app/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "k8s.statefulset.namespace",
        "mql": "k8s.statefulset.namespace",
        "code_id": "ShIQ5Ezax+4=",
        "checksum": "2T+DIyrhcxI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-statefulset-namespace",
        "type": "\u0007",
        "title": "Namespace",
        "filters": {
          "items": {
            "jFFg0qb0Ecc=": {
              "mql": "asset.platform == \"k8s-statefulset\"",
              "code_id": "jFFg0qb0Ecc=",
              "checksum": "9f/IRS839vc=",
              "mrn": "//policy.api.mondoo.app/filter/jFFg0qb0Ecc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "2YwWaa+pPc4=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-tags",
        "title": "AWS tags",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-dynamodb-table-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-snapshot-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ebs-volume-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-ec2-instance-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-efs-filesystem-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-es-domain-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-gateway-restapi-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-iam-user-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-lambda-function-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-rds-instance-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-redshift-cluster-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-s3-bucket-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-sagemaker-notebook-instance-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-security-group-tags"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/asset-overview-aws-vpc-tags"
          }
        ]
      },
      {
        "query": "terraform.modules.map(_.source + \"@\" + _.version)",
        "mql": "terraform.modules.map(_.source + \"@\" + _.version)",
        "code_id": "MCEaVdhNkYE=",
        "checksum": "bKn1ae2FZWo=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-hcl-modules",
        "type": "\u0019\u0007",
        "title": "Terraform Modules",
        "filters": {}
      },
      {
        "query": "if ( terraform.resources.length == 0 ) {\n  return []\n} else {\n  return terraform.resources.map(nameLabel).unique\n}\n",
        "mql": "if ( terraform.resources.length == 0 ) {\n  return []\n} else {\n  return terraform.resources.map(nameLabel).unique\n}\n",
        "code_id": "c7iDSdBtGmc=",
        "checksum": "bfH+YnrhqUs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-hcl-resources",
        "type": "\u0019\u0007",
        "title": "Terraform resources",
        "filters": {}
      },
      {
        "query": "terraform.settings.requiredProviders.values.map(_['source'])",
        "mql": "terraform.settings.requiredProviders.values.map(_['source'])",
        "code_id": "wdnAJaq4uUQ=",
        "checksum": "GaUAHNsc/xA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-hcl-version",
        "type": "\u0019\n",
        "title": "Terraform providers",
        "filters": {}
      },
      {
        "query": "terraform.plan.resourceChanges.map(providerName).unique",
        "mql": "terraform.plan.resourceChanges.map(providerName).unique",
        "code_id": "j1k4AP9Ltq4=",
        "checksum": "dXxqbGeTSrc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-plan-providers-called",
        "type": "\u0019\u0007",
        "title": "Terraform providers",
        "filters": {}
      },
      {
        "query": "terraform.plan.resourceChanges.map(type).unique",
        "mql": "terraform.plan.resourceChanges.map(type).unique",
        "code_id": "o4b2UDY0/uM=",
        "checksum": "/6V8X934nIc=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-plan-terraform-resources",
        "type": "\u0019\u0007",
        "title": "Terraform resources",
        "filters": {}
      },
      {
        "query": "terraform.plan.terraformVersion",
        "mql": "terraform.plan.terraformVersion",
        "code_id": "YovkbZ4777o=",
        "checksum": "NKJRO9AjpLI=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-terraform-plan-terraform-version",
        "type": "\u0007",
        "title": "Terraform version",
        "filters": {}
      },
      {
        "query": "vsphere.about[\"osType\"]",
        "mql": "vsphere.about[\"osType\"]",
        "code_id": "JMkPEikiY8s=",
        "checksum": "6wdGX74/S6s=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-vsphere-architecture",
        "type": "\n",
        "title": "vSphere architecture",
        "filters": {
          "items": {
            "dNrOPq6iZ3Y=": {
              "mql": "asset.platform == \"vmware-vsphere\"",
              "code_id": "dNrOPq6iZ3Y=",
              "checksum": "ICn3D7kQtOI=",
              "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "vsphere.about[\"fullName\"]",
        "mql": "vsphere.about[\"fullName\"]",
        "code_id": "0SHISIgNiQw=",
        "checksum": "OEKgYSwvl8k=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-vsphere-product-name",
        "type": "\n",
        "title": "vSphere product name",
        "filters": {
          "items": {
            "dNrOPq6iZ3Y=": {
              "mql": "asset.platform == \"vmware-vsphere\"",
              "code_id": "dNrOPq6iZ3Y=",
              "checksum": "ICn3D7kQtOI=",
              "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "vsphere.about[\"instanceUuid\"]",
        "mql": "vsphere.about[\"instanceUuid\"]",
        "code_id": "WYEV6M6hpZs=",
        "checksum": "2uvyaRXLa/E=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-vsphere-uuid",
        "type": "\n",
        "title": "vSphere UUID",
        "filters": {
          "items": {
            "dNrOPq6iZ3Y=": {
              "mql": "asset.platform == \"vmware-vsphere\"",
              "code_id": "dNrOPq6iZ3Y=",
              "checksum": "ICn3D7kQtOI=",
              "mrn": "//policy.api.mondoo.app/filter/dNrOPq6iZ3Y=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "windows.computerInfo['CsProcessors'].first['Name']",
        "mql": "windows.computerInfo['CsProcessors'].first['Name']",
        "code_id": "I9JL8JG/ytU=",
        "checksum": "8UIR3YBorfg=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-cpu",
        "type": "\n",
        "title": "CPU",
        "filters": {}
      },
      {
        "query": "switch( asset.labels['windows.mondoo.com/product-type'] ) {\ncase _ == \"1\":\n  return \"Workstation\"\ncase _ == \"2\":\n  return \"Domain controller\"\ncase _ == \"3\":\n  return \"Server\"\ndefault:\n  return _\n}\n",
        "mql": "switch( asset.labels['windows.mondoo.com/product-type'] ) {\ncase _ == \"1\":\n  return \"Workstation\"\ncase _ == \"2\":\n  return \"Domain controller\"\ncase _ == \"3\":\n  return \"Server\"\ndefault:\n  return _\n}\n",
        "code_id": "EB2SMRAA4iM=",
        "checksum": "heA99q9keac=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-install-type",
        "type": "\u0007",
        "title": "Install type",
        "filters": {
          "items": {
            "HkeKGQEOnC8=": {
              "mql": "asset.labels[\"windows.mondoo.com/product-type\"] != \"0\"",
              "code_id": "HkeKGQEOnC8=",
              "checksum": "WVx7kpQUhfY=",
              "mrn": "//policy.api.mondoo.app/filter/HkeKGQEOnC8=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "windows.computerInfo['CsManufacturer']",
        "mql": "windows.computerInfo['CsManufacturer']",
        "code_id": "FlP96firdvY=",
        "checksum": "eaYKUB/xjUs=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-manufacturer",
        "type": "\n",
        "title": "Manufacturer",
        "filters": {
          "items": {
            "N4jy8Xn7NvY=": {
              "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsManufacturer'] != \"\"\n",
              "code_id": "N4jy8Xn7NvY=",
              "checksum": "ZkpRpiIZdIw=",
              "mrn": "//policy.api.mondoo.app/filter/N4jy8Xn7NvY=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "windows.computerInfo['CsPhyicallyInstalledMemory'] / 1024",
        "mql": "windows.computerInfo['CsPhyicallyInstalledMemory'] / 1024",
        "code_id": "bqzz8KVNmDo=",
        "checksum": "d3jn9pCtMeA=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-memory",
        "type": "\n",
        "title": "Memory in MB",
        "filters": {}
      },
      {
        "query": "windows.computerInfo['CsModel']",
        "mql": "windows.computerInfo['CsModel']",
        "code_id": "VGJ7JDM3OME=",
        "checksum": "PrVO9Mw+e0c=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-model",
        "type": "\n",
        "title": "Model",
        "filters": {
          "items": {
            "Gd7SIsIOQlc=": {
              "mql": "asset.kind == 'baremetal'\nwindows.computerInfo['CsModel'] != \"\"\n",
              "code_id": "Gd7SIsIOQlc=",
              "checksum": "+pjdv9oTIgg=",
              "mrn": "//policy.api.mondoo.app/filter/Gd7SIsIOQlc=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "machine.chassis.serial",
        "mql": "machine.chassis.serial",
        "code_id": "QnM7EEbCKow=",
        "checksum": "SvjydqLHgS8=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-serial",
        "type": "\u0007",
        "title": "Serial / Service Tag",
        "filters": {
          "items": {
            "BcOyXN5MJ9w=": {
              "mql": "asset.kind == 'baremetal'\nmachine.chassis.serial != \"\"\n",
              "code_id": "BcOyXN5MJ9w=",
              "checksum": "eMKs1XhdGrY=",
              "mrn": "//policy.api.mondoo.app/filter/BcOyXN5MJ9w=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "asset.labels[\"windows.mondoo.com/display-version\"]",
        "mql": "asset.labels[\"windows.mondoo.com/display-version\"]",
        "code_id": "Jr3STf3zoac=",
        "checksum": "FaqbCfO3DPM=",
        "mrn": "//policy.api.mondoo.app/queries/asset-overview-windows-version",
        "type": "\u0007",
        "title": "Version",
        "filters": {}
      },
      {
        "query": "k8s.clusterrolebindings\n",
        "mql": "k8s.clusterrolebindings\n",
        "code_id": "yyj5NwAixnM=",
        "checksum": "9coSakdPCLs=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-clusterrolebindings",
        "type": "\u0019\f",
        "title": "RBAC cluster-rolebindings",
        "filters": {}
      },
      {
        "query": "k8s.clusterroles\n",
        "mql": "k8s.clusterroles\n",
        "code_id": "A3jgKT/QUos=",
        "checksum": "ieo2GLDfDI8=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-clusterroles",
        "type": "\u0019\f",
        "title": "Cluster RBAC ClusterRoles",
        "filters": {}
      },
      {
        "query": "k8s.namespaces\n",
        "mql": "k8s.namespaces\n",
        "code_id": "wtO8xWny/Hg=",
        "checksum": "af8znksaLcg=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-namespaces",
        "type": "\u0019\f",
        "title": "Kubernetes cluster namespaces",
        "filters": {}
      },
      {
        "query": "k8s.nodes\n",
        "mql": "k8s.nodes\n",
        "code_id": "eZMA6C+kK0g=",
        "checksum": "eZU7r0vzUtI=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-nodes",
        "type": "\u0019\f",
        "title": "Cluster modes",
        "filters": {}
      },
      {
        "query": "k8s.rolebindings\n",
        "mql": "k8s.rolebindings\n",
        "code_id": "ULICLcGYH00=",
        "checksum": "NQQVSt8bBw4=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-rolebindings",
        "type": "\u0019\f",
        "title": "RBAC rolebindings",
        "filters": {}
      },
      {
        "query": "k8s.roles\n",
        "mql": "k8s.roles\n",
        "code_id": "YvSHkB//dOw=",
        "checksum": "0TncLPHP9Xs=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-roles",
        "type": "\u0019\f",
        "title": "RBAC Roles",
        "filters": {}
      },
      {
        "query": "k8s.serverVersion\n",
        "mql": "k8s.serverVersion\n",
        "code_id": "DruaZGDPTNI=",
        "checksum": "e6KQ6U4sF7M=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cluster-version",
        "type": "\n",
        "title": "Kubernetes cluster version",
        "filters": {}
      },
      {
        "query": "k8s.cronjob { * }\n",
        "mql": "k8s.cronjob { * }\n",
        "code_id": "9+XIGM5xWl0=",
        "checksum": "xznH69pzUEY=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cronjob",
        "type": "\f",
        "title": "CronJob information",
        "filters": {}
      },
      {
        "query": "k8s.cronjob.containers { * }\n",
        "mql": "k8s.cronjob.containers { * }\n",
        "code_id": "hasYrXqmH8I=",
        "checksum": "yQw0hGaUlFo=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-cronjob-container",
        "type": "\u0019\f",
        "title": "Container information",
        "filters": {}
      },
      {
        "query": "k8s.daemonset { * }\n",
        "mql": "k8s.daemonset { * }\n",
        "code_id": "j3JI5TGRKZI=",
        "checksum": "tX9g9U3oDjQ=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-daemonset",
        "type": "\f",
        "title": "DaemonSet information",
        "filters": {}
      },
      {
        "query": "k8s.daemonset.containers { * }\n",
        "mql": "k8s.daemonset.containers { * }\n",
        "code_id": "MQLYdcUOay8=",
        "checksum": "p3oBT/qREOQ=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-daemonset-container",
        "type": "\u0019\f",
        "title": "Container information",
        "filters": {}
      },
      {
        "query": "k8s.deployments\n",
        "mql": "k8s.deployments\n",
        "code_id": "BgnOXaHF7Y0=",
        "checksum": "N2+3NdThb3M=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-deployment",
        "type": "\u0019\f",
        "title": "Deployment information",
        "filters": {}
      },
      {
        "query": "k8s.deployment.containers { * }\n",
        "mql": "k8s.deployment.containers { * }\n",
        "code_id": "yz4+KEwBCo0=",
        "checksum": "8GO2Q+GrXW8=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-deployment-container",
        "type": "\u0019\f",
        "title": "Container information",
        "filters": {}
      },
      {
        "query": "k8s.ingress { * }\n",
        "mql": "k8s.ingress { * }\n",
        "code_id": "9Sm0R0xJfUs=",
        "checksum": "cSOYUDKvhGE=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-ingress",
        "type": "\f",
        "title": "Ingress information",
        "filters": {}
      },
      {
        "query": "k8s.job { * }\n",
        "mql": "k8s.job { * }\n",
        "code_id": "ZNRv7izG3II=",
        "checksum": "Hmbe+UXvg+U=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-job",
        "type": "\f",
        "title": "Job information",
        "filters": {}
      },
      {
        "query": "k8s.job.containers { * }\n",
        "mql": "k8s.job.containers { * }\n",
        "code_id": "Pg23paBJUIQ=",
        "checksum": "oWnIFhHMhZI=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-job-container",
        "type": "\u0019\f",
        "title": "Container information",
        "filters": {}
      },
      {
        "query": "k8s.pod\n",
        "mql": "k8s.pod\n",
        "code_id": "gBoE76Jrf7E=",
        "checksum": "TqA1zBixZyc=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-pod",
        "type": "\f",
        "title": "Pod information",
        "filters": {}
      },
      {
        "query": "k8s.pod.containers\n",
        "mql": "k8s.pod.containers\n",
        "code_id": "TlxPuS82lCM=",
        "checksum": "4VpglmkKAs8=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-pod-container",
        "type": "\u0019\f",
        "title": "Container information",
        "filters": {}
      },
      {
        "query": "k8s.replicaset { * }\n",
        "mql": "k8s.replicaset { * }\n",
        "code_id": "jslgGpPs1r0=",
        "checksum": "bIvlrORW6Hk=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-replicaset",
        "type": "\f",
        "title": "ReplicaSet information",
        "filters": {}
      },
      {
        "query": "k8s.replicaset.containers { * }\n",
        "mql": "k8s.replicaset.containers { * }\n",
        "code_id": "B1E8RCGg2gk=",
        "checksum": "VDcOOriPoQE=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-replicaset-container",
        "type": "\u0019\f",
        "title": "Container information",
        "filters": {}
      },
      {
        "query": "k8s.statefulset { * }\n",
        "mql": "k8s.statefulset { * }\n",
        "code_id": "99YW06IQMFE=",
        "checksum": "D6cI6DE84kM=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-statefulset",
        "type": "\f",
        "title": "StatefulSet information",
        "filters": {}
      },
      {
        "query": "k8s.statefulset.containers { * }\n",
        "mql": "k8s.statefulset.containers { * }\n",
        "code_id": "/XhFPdYOias=",
        "checksum": "sTF8EAlOspc=",
        "mrn": "//policy.api.mondoo.app/queries/k8s-statefulset-container",
        "type": "\u0019\f",
        "title": "Container information",
        "filters": {}
      },
      {
        "query": "asset { kind title platform name arch runtime version }",
        "mql": "asset { kind title platform name arch runtime version }",
        "code_id": "Hl4/DeiN8wc=",
        "checksum": "baa+rlkuVFg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-info",
        "type": "\f",
        "title": "Asset information",
        "filters": {}
      },
      {
        "checksum": "ejLhSp/0944=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-access-analyzer",
        "title": "Access Analyzers",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-access-analyzer-all"
          }
        ]
      },
      {
        "query": "aws.accessAnalyzer.analyzers\n",
        "mql": "aws.accessAnalyzer.analyzers\n",
        "code_id": "2v437gC/MPY=",
        "checksum": "cQeg1a5zqtc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-access-analyzer-all",
        "type": "\u0019\f",
        "title": "Access Analyzers",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.account.id\n",
        "mql": "aws.account.id\n",
        "code_id": "NqsOI2adG+Q=",
        "checksum": "WetJDJu8JhE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-account-id",
        "type": "\u0007",
        "title": "AWS account ID",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "nDh2nPFPbf4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-acm-certificates",
        "title": "Certificate Manager certificates",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-acm-certificates-all"
          }
        ]
      },
      {
        "query": "aws.acm.certificates\n",
        "mql": "aws.acm.certificates\n",
        "code_id": "OH6RkMKmEL4=",
        "checksum": "4HREFHeRIyU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-acm-certificates-all",
        "type": "\u0019\f",
        "title": "Certificate Manager certificates",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "ei6Du3k1Mz4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-cloudtrail-trails",
        "title": "CloudTrail trails",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-cloudtrail-trails-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-cloudtrail-trails-single"
          }
        ]
      },
      {
        "query": "aws.cloudtrail.trails\n",
        "mql": "aws.cloudtrail.trails\n",
        "code_id": "E1OBxtanERU=",
        "checksum": "EKQdV3NsnnA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-cloudtrail-trails-all",
        "type": "\u0019\f",
        "title": "CloudTrail trails",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.cloudtrail.trail\n",
        "mql": "aws.cloudtrail.trail\n",
        "code_id": "RH/lbsgEtEs=",
        "checksum": "mEpjUgE63vo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-cloudtrail-trails-single",
        "type": "\f",
        "title": "CloudTrail trails",
        "filters": {
          "items": {
            "qcjTHhgiY8I=": {
              "mql": "asset.platform == \"aws-cloudtrail-trail\"\n",
              "code_id": "qcjTHhgiY8I=",
              "checksum": "fMrzZd0ZBjY=",
              "mrn": "//policy.api.mondoo.app/filter/qcjTHhgiY8I=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "PCLswznUKq4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-retrieve-all-data",
        "title": "Running EC2 instances",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-retrieve-all-data-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-retrieve-all-data-single"
          }
        ]
      },
      {
        "query": "aws.ec2.instances.where(state != \"terminated\")\n",
        "mql": "aws.ec2.instances.where(state != \"terminated\")\n",
        "code_id": "ymRbNoy0eSY=",
        "checksum": "jVdTfFs9Oak=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-retrieve-all-data-all",
        "type": "\u0019\f",
        "title": "Running EC2 instances",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.instance\n",
        "mql": "aws.ec2.instance\n",
        "code_id": "gxwOLlWLbEk=",
        "checksum": "OsFmyzuR2lM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-retrieve-all-data-single",
        "type": "\f",
        "title": "Running EC2 instances",
        "filters": {
          "items": {
            "up38wkcLwsk=": {
              "mql": "asset.platform == \"aws-ec2-instance\"\naws.ec2.instance.state != \"terminated\"\n",
              "code_id": "up38wkcLwsk=",
              "checksum": "Cbm/P25n45c=",
              "mrn": "//policy.api.mondoo.app/filter/up38wkcLwsk=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "checksum": "E9TtR8UJj5U=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-security-groups",
        "title": "EC2 Security Groups",
        "docs": {
          "desc": "This query retrieves all AWS EC2 Security Groups"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-security-groups-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-security-groups-single"
          }
        ]
      },
      {
        "query": "aws.ec2.securityGroups\n",
        "mql": "aws.ec2.securityGroups\n",
        "code_id": "tPB/DCGhRvU=",
        "checksum": "roDYF7nK7pM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-security-groups-all",
        "type": "\u0019\f",
        "title": "EC2 Security Groups",
        "docs": {
          "desc": "This query retrieves all AWS EC2 Security Groups"
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.securitygroup\n",
        "mql": "aws.ec2.securitygroup\n",
        "code_id": "WNeLxc/ZmXU=",
        "checksum": "jkoRWm8COYk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-security-groups-single",
        "type": "\f",
        "title": "EC2 Security Groups",
        "docs": {
          "desc": "This query retrieves all AWS EC2 Security Groups"
        },
        "filters": {
          "items": {
            "yfA15ol5mmc=": {
              "mql": "asset.platform == \"aws-security-group\"\n",
              "code_id": "yfA15ol5mmc=",
              "checksum": "MI1MHQ664Q0=",
              "mrn": "//policy.api.mondoo.app/filter/yfA15ol5mmc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "GVbJhVmoO70=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-volumes",
        "title": "EBS volumes",
        "docs": {
          "desc": "This query retrieves all AWS EBS volumes"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-volumes-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-volumes-single"
          }
        ]
      },
      {
        "query": "aws.ec2.volumes\n",
        "mql": "aws.ec2.volumes\n",
        "code_id": "U6QWLqEO95s=",
        "checksum": "NjXrXPBB+tQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-volumes-all",
        "type": "\u0019\f",
        "title": "EBS volumes",
        "docs": {
          "desc": "This query retrieves all AWS EBS volumes"
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.ec2.volume\n",
        "mql": "aws.ec2.volume\n",
        "code_id": "l/0aFhoBRqI=",
        "checksum": "0GJzVfGWuh4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-ec2-volumes-single",
        "type": "\f",
        "title": "EBS volumes",
        "docs": {
          "desc": "This query retrieves all AWS EBS volumes"
        },
        "filters": {
          "items": {
            "AXL6b/SMqY4=": {
              "mql": "asset.platform == \"aws-ebs-volume\"\n",
              "code_id": "AXL6b/SMqY4=",
              "checksum": "m0eqSKvfDhI=",
              "mrn": "//policy.api.mondoo.app/filter/AXL6b/SMqY4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "vC0dC3SEvKY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-eks-clusters",
        "title": "EKS clusters",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-eks-clusters-all"
          }
        ]
      },
      {
        "query": "aws.eks.clusters\n",
        "mql": "aws.eks.clusters\n",
        "code_id": "uAXbH014uVc=",
        "checksum": "HVX/iVoyI6I=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-eks-clusters-all",
        "type": "\u0019\f",
        "title": "EKS clusters",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws { regions }\n",
        "mql": "aws { regions }\n",
        "code_id": "AuOCa4FxRA0=",
        "checksum": "9Ft1jhepz08=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-enabled-regions",
        "type": "\f",
        "title": "Regions enabled in the AWS account",
        "docs": {
          "desc": "This query retrieves all AWS regions enabled in the account"
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "wpiN4Z+9fpg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-groups",
        "title": "IAM groups",
        "docs": {
          "desc": "This query retrieves all of the IAM groups."
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-groups-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-groups-single"
          }
        ]
      },
      {
        "query": "aws.iam.groups\n",
        "mql": "aws.iam.groups\n",
        "code_id": "cH8hQDY3EL4=",
        "checksum": "fxjpxQ5uCzA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-groups-all",
        "type": "\u0019\f",
        "title": "IAM groups",
        "docs": {
          "desc": "This query retrieves all of the IAM groups."
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.group\n",
        "mql": "aws.iam.group\n",
        "code_id": "iv3KjKglApc=",
        "checksum": "vr/6gnHSclY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-groups-single",
        "type": "\f",
        "title": "IAM groups",
        "docs": {
          "desc": "This query retrieves all of the IAM groups."
        },
        "filters": {
          "items": {
            "GGmsRv0eF+o=": {
              "mql": "asset.platform == \"aws-iam-group\"\n",
              "code_id": "GGmsRv0eF+o=",
              "checksum": "D7wZ+V9I9U0=",
              "mrn": "//policy.api.mondoo.app/filter/GGmsRv0eF+o=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.policies.where( attachmentCount \u003e 0 )",
        "mql": "aws.iam.policies.where( attachmentCount \u003e 0 )",
        "code_id": "i10GdTNzieI=",
        "checksum": "GaH1xNkkpwE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-policies",
        "type": "\u0019\f",
        "title": "Attached IAM policies",
        "docs": {
          "desc": "This query retrieves all IAM policies attached to a user, group, or role."
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "ygpxd68DqYE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-roles",
        "title": "IAM roles",
        "docs": {
          "desc": "This query retrieves all IAM Roles"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-roles-all"
          }
        ]
      },
      {
        "query": "aws.iam.roles\n",
        "mql": "aws.iam.roles\n",
        "code_id": "n1VCN8KIdqM=",
        "checksum": "0FKTnhHIZwQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-roles-all",
        "type": "\u0019\f",
        "title": "IAM roles",
        "docs": {
          "desc": "This query retrieves all IAM Roles"
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "xf7+59LeUiY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-users",
        "title": "IAM users",
        "docs": {
          "desc": "This query retrieves data for all IAM users"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-users-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-users-single"
          }
        ]
      },
      {
        "query": "aws.iam.users\n",
        "mql": "aws.iam.users\n",
        "code_id": "qxuNM7JSSvw=",
        "checksum": "FL7dCk+0Vos=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-users-all",
        "type": "\u0019\f",
        "title": "IAM users",
        "docs": {
          "desc": "This query retrieves data for all IAM users"
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.iam.user\n",
        "mql": "aws.iam.user\n",
        "code_id": "dHSvudXYzZI=",
        "checksum": "PGhYq7BZClU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-iam-users-single",
        "type": "\f",
        "title": "IAM users",
        "docs": {
          "desc": "This query retrieves data for all IAM users"
        },
        "filters": {
          "items": {
            "lQAFhFMIHTo=": {
              "mql": "asset.platform == \"aws-iam-user\"\n",
              "code_id": "lQAFhFMIHTo=",
              "checksum": "jyoGZJn1wD8=",
              "mrn": "//policy.api.mondoo.app/filter/lQAFhFMIHTo=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "i6nq78dp8hA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-lambda",
        "title": "Lambda functions",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-lambda-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-lambda-single"
          }
        ]
      },
      {
        "query": "aws.lambda.functions\n",
        "mql": "aws.lambda.functions\n",
        "code_id": "W/+ef2NeAP0=",
        "checksum": "SDI+cYYsRTU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-lambda-all",
        "type": "\u0019\f",
        "title": "Lambda functions",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.lambda.function\n",
        "mql": "aws.lambda.function\n",
        "code_id": "qSxCzI7JmAY=",
        "checksum": "6OvlojJp+JM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-lambda-single",
        "type": "\f",
        "title": "Lambda functions",
        "filters": {
          "items": {
            "8iGUBh79IzA=": {
              "mql": "asset.platform == \"aws-lambda-function\"\n",
              "code_id": "8iGUBh79IzA=",
              "checksum": "eihuwkpzA1w=",
              "mrn": "//policy.api.mondoo.app/filter/8iGUBh79IzA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "AOUUdEBAddo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbclusters-all-data",
        "title": "RDS database clusters configuration",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbclusters-all-data-all"
          }
        ]
      },
      {
        "query": "aws.rds.clusters\n",
        "mql": "aws.rds.clusters\n",
        "code_id": "61G8XFsAjuc=",
        "checksum": "QloweMvA2MI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbclusters-all-data-all",
        "type": "\u0019\f",
        "title": "RDS database clusters configuration",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "KMdip0eDok4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbinstances-all-data",
        "title": "RDS database instances",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbinstances-all-data-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbinstances-all-data-single"
          }
        ]
      },
      {
        "query": "aws.rds.instances\n",
        "mql": "aws.rds.instances\n",
        "code_id": "iwcTmEzFSjs=",
        "checksum": "XnERhgn196k=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbinstances-all-data-all",
        "type": "\u0019\f",
        "title": "RDS database instances",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.rds.dbinstance\n",
        "mql": "aws.rds.dbinstance\n",
        "code_id": "BnY7+KOu5lA=",
        "checksum": "DEIbdnXXBIw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-rds-dbinstances-all-data-single",
        "type": "\f",
        "title": "RDS database instances",
        "filters": {
          "items": {
            "xXp4iNDx1BU=": {
              "mql": "asset.platform == \"aws-rds-dbinstance\"\n",
              "code_id": "xXp4iNDx1BU=",
              "checksum": "nyPw5yQqLxM=",
              "mrn": "//policy.api.mondoo.app/filter/xXp4iNDx1BU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "9TCNQziW6W4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-s3-retrieve-all-data",
        "title": "S3 buckets",
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-s3-retrieve-all-data-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-s3-retrieve-all-data-single"
          }
        ]
      },
      {
        "query": "aws.s3.buckets\n",
        "mql": "aws.s3.buckets\n",
        "code_id": "pETcJum6GTs=",
        "checksum": "R+Y+rG/neEE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-s3-retrieve-all-data-all",
        "type": "\u0019\f",
        "title": "S3 buckets",
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.s3.bucket\n",
        "mql": "aws.s3.bucket\n",
        "code_id": "zU/of0pEwQE=",
        "checksum": "vjifLQXqySo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-s3-retrieve-all-data-single",
        "type": "\f",
        "title": "S3 buckets",
        "filters": {
          "items": {
            "3z170zdo7Ac=": {
              "mql": "asset.platform == \"aws-s3-bucket\"\n",
              "code_id": "3z170zdo7Ac=",
              "checksum": "J6HuCKzrBlI=",
              "mrn": "//policy.api.mondoo.app/filter/3z170zdo7Ac=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "n6P4SRaHAFE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-vpcs",
        "title": "VPCs",
        "docs": {
          "desc": "This query retrieves all of the configuration data for AWS VPCs"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-vpcs-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-vpcs-single"
          }
        ]
      },
      {
        "query": "aws.vpcs\n",
        "mql": "aws.vpcs\n",
        "code_id": "LstaW79oWX8=",
        "checksum": "bkZ4ZQTw/xM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-vpcs-all",
        "type": "\u0019\f",
        "title": "VPCs",
        "docs": {
          "desc": "This query retrieves all of the configuration data for AWS VPCs"
        },
        "filters": {
          "items": {
            "obFZpPtvU1c=": {
              "mql": "asset.platform == \"aws\"\n",
              "code_id": "obFZpPtvU1c=",
              "checksum": "Q3CbOdtZxpQ=",
              "mrn": "//policy.api.mondoo.app/filter/obFZpPtvU1c=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "aws.vpc\n",
        "mql": "aws.vpc\n",
        "code_id": "lQxJ5JEaWjY=",
        "checksum": "UNuUy0k2HBQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-aws-vpcs-single",
        "type": "\f",
        "title": "VPCs",
        "docs": {
          "desc": "This query retrieves all of the configuration data for AWS VPCs"
        },
        "filters": {
          "items": {
            "ep4o4JpLn/g=": {
              "mql": "asset.platform == \"aws-vpc\"\n",
              "code_id": "ep4o4JpLn/g=",
              "checksum": "kQ4KBC6eRgk=",
              "mrn": "//policy.api.mondoo.app/filter/ep4o4JpLn/g=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.monitor.activityLog",
        "mql": "azure.subscription.monitor.activityLog",
        "code_id": "gHjZIX3CpO8=",
        "checksum": "n6ModWMHTKA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-activitylogs",
        "type": "\f",
        "title": "Azure activity logs",
        "docs": {
          "desc": "This query retrieves data for all activity logs"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.monitor.applicationInsights",
        "mql": "azure.subscription.monitor.applicationInsights",
        "code_id": "l2sxbZSCAUE=",
        "checksum": "oaLcxQwxL1Y=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-applicationInsight",
        "type": "\u0019\f",
        "title": "Azure Monitor Application Insights",
        "docs": {
          "desc": "This query retrieves data for all Application Insights"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.network.bastionHosts",
        "mql": "azure.subscription.network.bastionHosts",
        "code_id": "slw76VmXnjQ=",
        "checksum": "UcEkPcnVzjA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-bastionHosts",
        "type": "\u0019\f",
        "title": "Azure Bastion hosts",
        "docs": {
          "desc": "This query retrieves data for all Bastion hosts"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.cloudDefender { defenderForServers defenderForContainers securityContacts { name alertNotifications }  }",
        "mql": "azure.subscription.cloudDefender { defenderForServers defenderForContainers securityContacts { name alertNotifications }  }",
        "code_id": "JtyZZKP8wAk=",
        "checksum": "dA1D5YvLRKQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-cloudDefender",
        "type": "\f",
        "title": "Microsoft Defender for Cloud configuration",
        "docs": {
          "desc": "This query retrieves data for Microsoft Defender for Cloud"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.compute.disks",
        "mql": "azure.subscription.compute.disks",
        "code_id": "LK8+YNPMX3c=",
        "checksum": "rHI3ntqOT+U=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-compute-disks",
        "type": "\u0019\f",
        "title": "Compute disks",
        "docs": {
          "desc": "This query retrieves data for all compute disks available in the subscription"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.cosmosDb.accounts",
        "mql": "azure.subscription.cosmosDb.accounts",
        "code_id": "lPD+4debVog=",
        "checksum": "MLJqfDG9808=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-cosmosDb",
        "type": "\u0019\f",
        "title": "Azure Cosmos DB accounts",
        "docs": {
          "desc": "This query retrieves data for all Cosmos DB accounts"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "NSDCqpEshlc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults",
        "title": "Azure Key Vault vaults",
        "docs": {
          "desc": "This query retrieves data for all Azure Key Vault vaults"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-api"
          }
        ]
      },
      {
        "query": "azure.subscription.keyVault.vaults",
        "mql": "azure.subscription.keyVault.vaults",
        "code_id": "XkvprJ4AUxA=",
        "checksum": "QvH1j+jBDg8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-api",
        "type": "\u0019\f",
        "title": "Azure Key Vault vaults",
        "docs": {
          "desc": "This query retrieves data for all Azure Key Vault vaults"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "lTDzjqC6p6c=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-certificates",
        "title": "Azure Key Vault vault certificates",
        "docs": {
          "desc": "This query retrieves data for all certificates in Key Vaults"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-certificates-api"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-certificates-single"
          }
        ]
      },
      {
        "query": "azure.subscription.keyVault.vaults { certificates }",
        "mql": "azure.subscription.keyVault.vaults { certificates }",
        "code_id": "R0WD8lP7MBc=",
        "checksum": "Gi7Pg50WMHc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-certificates-api",
        "type": "\u0019\f",
        "title": "Azure Key Vault vault certificates",
        "docs": {
          "desc": "This query retrieves data for all certificates in Key Vaults"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.keyVault.vault.certificates",
        "mql": "azure.subscription.keyVault.vault.certificates",
        "code_id": "Q1hTizHhrZI=",
        "checksum": "RLbidVIOAqI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-certificates-single",
        "type": "\u0019\f",
        "title": "Azure Key Vault vault certificates",
        "docs": {
          "desc": "This query retrieves data for all certificates in Key Vaults"
        },
        "filters": {
          "items": {
            "7gmQt2xyyek=": {
              "mql": "asset.platform == \"azure-keyvault-vault\"",
              "code_id": "7gmQt2xyyek=",
              "checksum": "+rzWnYFLv90=",
              "mrn": "//policy.api.mondoo.app/filter/7gmQt2xyyek=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "TSDG3lv0s14=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-keys",
        "title": "Azure Key Vault vault keys",
        "docs": {
          "desc": "This query retrieves data for all keys in Key Vaults"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-keys-api"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-keys-single"
          }
        ]
      },
      {
        "query": "azure.subscription.keyVault.vaults { keys }",
        "mql": "azure.subscription.keyVault.vaults { keys }",
        "code_id": "Xb9YIBKOi+Q=",
        "checksum": "tt0+JSRz3Z4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-keys-api",
        "type": "\u0019\f",
        "title": "Azure Key Vault vault keys",
        "docs": {
          "desc": "This query retrieves data for all keys in Key Vaults"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.keyVault.vault.keys",
        "mql": "azure.subscription.keyVault.vault.keys",
        "code_id": "fmuMwIogIXo=",
        "checksum": "r2OtzDb+L0I=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-keys-single",
        "type": "\u0019\f",
        "title": "Azure Key Vault vault keys",
        "docs": {
          "desc": "This query retrieves data for all keys in Key Vaults"
        },
        "filters": {
          "items": {
            "7gmQt2xyyek=": {
              "mql": "asset.platform == \"azure-keyvault-vault\"",
              "code_id": "7gmQt2xyyek=",
              "checksum": "+rzWnYFLv90=",
              "mrn": "//policy.api.mondoo.app/filter/7gmQt2xyyek=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "HKwOuslw8gI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-secrets",
        "title": "Azure Key Vault vault secrets",
        "docs": {
          "desc": "This query retrieves data for all secrets in Key Vaults"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-secrets-api"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-secrets-single"
          }
        ]
      },
      {
        "query": "azure.subscription.keyVault.vaults { secrets }",
        "mql": "azure.subscription.keyVault.vaults { secrets }",
        "code_id": "nvOhfuO6Qwo=",
        "checksum": "whsXee1NL5k=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-secrets-api",
        "type": "\u0019\f",
        "title": "Azure Key Vault vault secrets",
        "docs": {
          "desc": "This query retrieves data for all secrets in Key Vaults"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.keyVault.vault.secrets",
        "mql": "azure.subscription.keyVault.vault.secrets",
        "code_id": "JV5xdrlhWQE=",
        "checksum": "+jiJ5mrY3dY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-secrets-single",
        "type": "\u0019\f",
        "title": "Azure Key Vault vault secrets",
        "docs": {
          "desc": "This query retrieves data for all secrets in Key Vaults"
        },
        "filters": {
          "items": {
            "7gmQt2xyyek=": {
              "mql": "asset.platform == \"azure-keyvault-vault\"",
              "code_id": "7gmQt2xyyek=",
              "checksum": "+rzWnYFLv90=",
              "mrn": "//policy.api.mondoo.app/filter/7gmQt2xyyek=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.keyVault.vault",
        "mql": "azure.subscription.keyVault.vault",
        "code_id": "Zmv1oS68igI=",
        "checksum": "KCnifdFnvrI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-keyVaults-single",
        "type": "\f",
        "title": "Azure Key Vault vaults",
        "docs": {
          "desc": "This query retrieves data for all Azure Key Vault vaults"
        },
        "filters": {
          "items": {
            "7gmQt2xyyek=": {
              "mql": "asset.platform == \"azure-keyvault-vault\"",
              "code_id": "7gmQt2xyyek=",
              "checksum": "+rzWnYFLv90=",
              "mrn": "//policy.api.mondoo.app/filter/7gmQt2xyyek=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "N/LQPaVsCSU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mariaDb",
        "title": "Azure MariaDB servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MariaDB servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mariaDb-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mariaDb-api"
          }
        ]
      },
      {
        "query": "azure.subscription.mariaDb.servers",
        "mql": "azure.subscription.mariaDb.servers",
        "code_id": "2tm5vdph/RM=",
        "checksum": "Mne/UiJRCfc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mariaDb-api",
        "type": "\u0019\f",
        "title": "Azure MariaDB servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MariaDB servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.mariaDb.server",
        "mql": "azure.subscription.mariaDb.server",
        "code_id": "tDTu4udFkm4=",
        "checksum": "lpoSxf3eFXc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mariaDb-single",
        "type": "\f",
        "title": "Azure MariaDB servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MariaDB servers"
        },
        "filters": {
          "items": {
            "Mqc04GMFFRg=": {
              "mql": "asset.platform == \"azure-mariadb-server\"",
              "code_id": "Mqc04GMFFRg=",
              "checksum": "vnxKs7ziI40=",
              "mrn": "//policy.api.mondoo.app/filter/Mqc04GMFFRg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "SF/5iij4T8c=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-legacy"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-flexible"
          }
        ]
      },
      {
        "query": "azure.subscription.mySql.servers\nazure.subscription.mySql.flexibleServers\n",
        "mql": "azure.subscription.mySql.servers\nazure.subscription.mySql.flexibleServers\n",
        "code_id": "/er4nR3m91o=",
        "checksum": "+R/RwksmpTg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-all",
        "type": "\u0001",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "vy+uz3hNxj4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules-legacy"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules-flexible"
          }
        ]
      },
      {
        "query": "azure.subscription.mySql.servers { firewallRules }\nazure.subscription.mySql.flexibleServers { firewallRules }\n",
        "mql": "azure.subscription.mySql.servers { firewallRules }\nazure.subscription.mySql.flexibleServers { firewallRules }\n",
        "code_id": "dyLW++ok2wA=",
        "checksum": "0BUrPdj2OOs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules-all",
        "type": "\u0001",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.mySql.flexibleServer.firewallRules",
        "mql": "azure.subscription.mySql.flexibleServer.firewallRules",
        "code_id": "yd9Z8ccUGOE=",
        "checksum": "20XVnFgbzOQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules-flexible",
        "type": "\u0019\f",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {
          "items": {
            "y+DcS8y50ac=": {
              "mql": "asset.platform == \"azure-mysql-flexible-server\"",
              "code_id": "y+DcS8y50ac=",
              "checksum": "xPRk+ewicag=",
              "mrn": "//policy.api.mondoo.app/filter/y+DcS8y50ac=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.mySql.server.firewallRules",
        "mql": "azure.subscription.mySql.server.firewallRules",
        "code_id": "woNu20JFgv4=",
        "checksum": "tKpDlazJ4OQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-firewallrules-legacy",
        "type": "\u0019\f",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {
          "items": {
            "HrRMIvHMfB4=": {
              "mql": "asset.platform == \"azure-mysql-server\"",
              "code_id": "HrRMIvHMfB4=",
              "checksum": "2jQKXx27fzQ=",
              "mrn": "//policy.api.mondoo.app/filter/HrRMIvHMfB4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.mySql.flexibleServer",
        "mql": "azure.subscription.mySql.flexibleServer",
        "code_id": "G4JYeb4dzok=",
        "checksum": "QnnQXCfyKWo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-flexible",
        "type": "\f",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {
          "items": {
            "y+DcS8y50ac=": {
              "mql": "asset.platform == \"azure-mysql-flexible-server\"",
              "code_id": "y+DcS8y50ac=",
              "checksum": "xPRk+ewicag=",
              "mrn": "//policy.api.mondoo.app/filter/y+DcS8y50ac=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.mySql.server",
        "mql": "azure.subscription.mySql.server",
        "code_id": "FL/d12PzEok=",
        "checksum": "ab/I2tReog0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-mysql-legacy",
        "type": "\f",
        "title": "Azure MySQL servers",
        "docs": {
          "desc": "This query retrieves data for all Azure MySQL servers"
        },
        "filters": {
          "items": {
            "HrRMIvHMfB4=": {
              "mql": "asset.platform == \"azure-mysql-server\"",
              "code_id": "HrRMIvHMfB4=",
              "checksum": "2jQKXx27fzQ=",
              "mrn": "//policy.api.mondoo.app/filter/HrRMIvHMfB4=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.network.interfaces{ name location properties['nicType'] properties['nicType'] properties['macAddress'] properties['virtualMachine']['id'] }",
        "mql": "azure.subscription.network.interfaces{ name location properties['nicType'] properties['nicType'] properties['macAddress'] properties['virtualMachine']['id'] }",
        "code_id": "gDmTBPAjEJ4=",
        "checksum": "7hu7mAn56zs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-network-interfaces",
        "type": "\u0019\f",
        "title": "Network interfaces",
        "docs": {
          "desc": "This query retrieves data for all network interfaces"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "KIYfLTgRPZU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkSecurityGroups",
        "title": "Azure network security groups",
        "docs": {
          "desc": "This query retrieves data for all network security groups"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkSecurityGroups-api"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkSecurityGroups-single"
          }
        ]
      },
      {
        "query": "azure.subscription.network.securityGroups",
        "mql": "azure.subscription.network.securityGroups",
        "code_id": "/SpFexm2/8w=",
        "checksum": "d9H/He6jQOc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkSecurityGroups-api",
        "type": "\u0019\f",
        "title": "Azure network security groups",
        "docs": {
          "desc": "This query retrieves data for all network security groups"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.network.securityGroup",
        "mql": "azure.subscription.network.securityGroup",
        "code_id": "DRuX5L7+wLU=",
        "checksum": "R4/RuTKhmmE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkSecurityGroups-single",
        "type": "\f",
        "title": "Azure network security groups",
        "docs": {
          "desc": "This query retrieves data for all network security groups"
        },
        "filters": {
          "items": {
            "XhGWd/sNmOc=": {
              "mql": "asset.platform == \"azure-network-security-group\"",
              "code_id": "XhGWd/sNmOc=",
              "checksum": "h9y/0zM44Pk=",
              "mrn": "//policy.api.mondoo.app/filter/XhGWd/sNmOc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.network.watchers",
        "mql": "azure.subscription.network.watchers",
        "code_id": "5DTdlxB5hh4=",
        "checksum": "G9r8SA+SqyA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-networkWatcher",
        "type": "\u0019\f",
        "title": "Azure Network Watchers",
        "docs": {
          "desc": "This query retrieves data for Azure Network Watchers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "EKiHTTKwMGU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql",
        "title": "Azure PostgreSQL servers",
        "docs": {
          "desc": "This query retrieves data for all PostgreSQL servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-legacy"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-flexible"
          }
        ]
      },
      {
        "query": "azure.subscription.postgreSql.servers\nazure.subscription.postgreSql.flexibleServers\n",
        "mql": "azure.subscription.postgreSql.servers\nazure.subscription.postgreSql.flexibleServers\n",
        "code_id": "pmZamN1KroM=",
        "checksum": "9rmFoWy02vc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-all",
        "type": "\u0001",
        "title": "Azure PostgreSQL servers",
        "docs": {
          "desc": "This query retrieves data for all PostgreSQL servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "7B9jStDB/m0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules",
        "title": "Azure PostgreSQL server firewall rules",
        "docs": {
          "desc": "This query retrieves data for all firewall rules in Azure PostgreSQL servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules-legacy"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules-flexible"
          }
        ]
      },
      {
        "query": "azure.subscription.postgreSql.servers { firewallRules }\nazure.subscription.postgreSql.flexibleServers { firewallRules }\n",
        "mql": "azure.subscription.postgreSql.servers { firewallRules }\nazure.subscription.postgreSql.flexibleServers { firewallRules }\n",
        "code_id": "CJ+Hg8W3Yzc=",
        "checksum": "2elzQOfqd3o=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules-all",
        "type": "\u0001",
        "title": "Azure PostgreSQL server firewall rules",
        "docs": {
          "desc": "This query retrieves data for all firewall rules in Azure PostgreSQL servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.postgreSql.flexibleServer.firewallRules",
        "mql": "azure.subscription.postgreSql.flexibleServer.firewallRules",
        "code_id": "AOBXvC/eTlc=",
        "checksum": "CvezHrlgw8M=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules-flexible",
        "type": "\u0019\f",
        "title": "Azure PostgreSQL server firewall rules",
        "docs": {
          "desc": "This query retrieves data for all firewall rules in Azure PostgreSQL servers"
        },
        "filters": {
          "items": {
            "MUAwfx81KHc=": {
              "mql": "asset.platform == \"azure-postgresql-flexible-server\"",
              "code_id": "MUAwfx81KHc=",
              "checksum": "PiNv2xK+xX4=",
              "mrn": "//policy.api.mondoo.app/filter/MUAwfx81KHc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.postgreSql.server.firewallRules",
        "mql": "azure.subscription.postgreSql.server.firewallRules",
        "code_id": "qKZ3Lg0OOlo=",
        "checksum": "1XpYyKhbIgI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-firewallrules-legacy",
        "type": "\u0019\f",
        "title": "Azure PostgreSQL server firewall rules",
        "docs": {
          "desc": "This query retrieves data for all firewall rules in Azure PostgreSQL servers"
        },
        "filters": {
          "items": {
            "kOdP+bt2IPs=": {
              "mql": "asset.platform == \"azure-postgresql-server\"",
              "code_id": "kOdP+bt2IPs=",
              "checksum": "PiFsnCUsx6k=",
              "mrn": "//policy.api.mondoo.app/filter/kOdP+bt2IPs=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.postgreSql.flexibleServer",
        "mql": "azure.subscription.postgreSql.flexibleServer",
        "code_id": "Q0o57fi2kLQ=",
        "checksum": "UMVWRiBTy9Q=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-flexible",
        "type": "\f",
        "title": "Azure PostgreSQL servers",
        "docs": {
          "desc": "This query retrieves data for all PostgreSQL servers"
        },
        "filters": {
          "items": {
            "MUAwfx81KHc=": {
              "mql": "asset.platform == \"azure-postgresql-flexible-server\"",
              "code_id": "MUAwfx81KHc=",
              "checksum": "PiNv2xK+xX4=",
              "mrn": "//policy.api.mondoo.app/filter/MUAwfx81KHc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.postgreSql.server",
        "mql": "azure.subscription.postgreSql.server",
        "code_id": "gDw0qmaaN9U=",
        "checksum": "AxGm1MZ7Nsc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-postgresql-legacy",
        "type": "\f",
        "title": "Azure PostgreSQL servers",
        "docs": {
          "desc": "This query retrieves data for all PostgreSQL servers"
        },
        "filters": {
          "items": {
            "kOdP+bt2IPs=": {
              "mql": "asset.platform == \"azure-postgresql-server\"",
              "code_id": "kOdP+bt2IPs=",
              "checksum": "PiFsnCUsx6k=",
              "mrn": "//policy.api.mondoo.app/filter/kOdP+bt2IPs=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.networkService.publicIpAddresses{ name location ipAddress }",
        "mql": "azure.subscription.networkService.publicIpAddresses{ name location ipAddress }",
        "code_id": "dDQphASm/uI=",
        "checksum": "gWOZN+0xTvc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-publicip",
        "type": "\u0019\f",
        "title": "Azure public IP addresses",
        "docs": {
          "desc": "This query retrieves all public IP addresses in your subscription"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.resourceGroups",
        "mql": "azure.subscription.resourceGroups",
        "code_id": "aCxkCGCHnew=",
        "checksum": "RzMM3uTSbt4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-resourcegroups",
        "type": "\u0019\f",
        "title": "Azure subscription resource groups",
        "docs": {
          "desc": "This query retrieves data for all resource groups inside the subscription"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.resources",
        "mql": "azure.subscription.resources",
        "code_id": "/fGgrlW3MMY=",
        "checksum": "yU/a4O2wwLE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-resources",
        "type": "\u0019\f",
        "title": "Azure subscription resources",
        "docs": {
          "desc": "This query retrieves data for all resources inside the subscription"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.authorization.roleDefinitions",
        "mql": "azure.subscription.authorization.roleDefinitions",
        "code_id": "tfWDx3obDeA=",
        "checksum": "oSsmjlXTNZc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-roleDefinitions",
        "type": "\u0019\f",
        "title": "Azure role definitions",
        "docs": {
          "desc": "This query retrieves data for all role definitions in the subscription"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "v3HusDawEk0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers",
        "title": "Azure SQL Database servers",
        "docs": {
          "desc": "This query retrieves data for all Azure SQL Database servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-api"
          }
        ]
      },
      {
        "query": "azure.subscription.sql.servers",
        "mql": "azure.subscription.sql.servers",
        "code_id": "nKhubBjIGtA=",
        "checksum": "nx3aBGCqM+s=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-api",
        "type": "\u0019\f",
        "title": "Azure SQL Database servers",
        "docs": {
          "desc": "This query retrieves data for all Azure SQL Database servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "0t99o6J43TQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-databases",
        "title": "Azure SQL Database server databases",
        "docs": {
          "desc": "This query retrieves data for all databases in Azure SQL Database servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-databases-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-databases-api"
          }
        ]
      },
      {
        "query": "azure.subscription.sql.servers { databases }",
        "mql": "azure.subscription.sql.servers { databases }",
        "code_id": "Z2MFpD2FYHg=",
        "checksum": "ChEU8I4eAqE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-databases-api",
        "type": "\u0019\f",
        "title": "Azure SQL Database server databases",
        "docs": {
          "desc": "This query retrieves data for all databases in Azure SQL Database servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.sql.server.databases",
        "mql": "azure.subscription.sql.server.databases",
        "code_id": "sehatqabn8o=",
        "checksum": "oFODmt1dJgI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-databases-single",
        "type": "\u0019\f",
        "title": "Azure SQL Database server databases",
        "docs": {
          "desc": "This query retrieves data for all databases in Azure SQL Database servers"
        },
        "filters": {
          "items": {
            "aBpo44SiOyc=": {
              "mql": "asset.platform == \"azure-sql-server\"",
              "code_id": "aBpo44SiOyc=",
              "checksum": "AD8YCkcfVv0=",
              "mrn": "//policy.api.mondoo.app/filter/aBpo44SiOyc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "/UCRT7hUe4E=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-firewallrules",
        "title": "Azure SQL Database server firewall rules",
        "docs": {
          "desc": "This query retrieves data for all firewall rules in Azure SQL Database servers"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-firewallrules-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-firewallrules-api"
          }
        ]
      },
      {
        "query": "azure.subscription.sql.servers { firewallRules }",
        "mql": "azure.subscription.sql.servers { firewallRules }",
        "code_id": "DH4vF/4yT3c=",
        "checksum": "U2fchgp7cmE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-firewallrules-api",
        "type": "\u0019\f",
        "title": "Azure SQL Database server firewall rules",
        "docs": {
          "desc": "This query retrieves data for all firewall rules in Azure SQL Database servers"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.sql.server.firewallRules",
        "mql": "azure.subscription.sql.server.firewallRules",
        "code_id": "fLAZJSIiuoI=",
        "checksum": "Mf7NQffbbEk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-firewallrules-single",
        "type": "\u0019\f",
        "title": "Azure SQL Database server firewall rules",
        "docs": {
          "desc": "This query retrieves data for all firewall rules in Azure SQL Database servers"
        },
        "filters": {
          "items": {
            "aBpo44SiOyc=": {
              "mql": "asset.platform == \"azure-sql-server\"",
              "code_id": "aBpo44SiOyc=",
              "checksum": "AD8YCkcfVv0=",
              "mrn": "//policy.api.mondoo.app/filter/aBpo44SiOyc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.sql.server",
        "mql": "azure.subscription.sql.server",
        "code_id": "YjmxGEu7Htc=",
        "checksum": "DVl2MShvSxs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-sqlServers-single",
        "type": "\f",
        "title": "Azure SQL Database servers",
        "docs": {
          "desc": "This query retrieves data for all Azure SQL Database servers"
        },
        "filters": {
          "items": {
            "aBpo44SiOyc=": {
              "mql": "asset.platform == \"azure-sql-server\"",
              "code_id": "aBpo44SiOyc=",
              "checksum": "AD8YCkcfVv0=",
              "mrn": "//policy.api.mondoo.app/filter/aBpo44SiOyc=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "L9AWua1nNNs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts",
        "title": "Azure Storage accounts",
        "docs": {
          "desc": "This query retrieves data for all storage accounts"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-api"
          }
        ]
      },
      {
        "query": "azure.subscription.storage.accounts",
        "mql": "azure.subscription.storage.accounts",
        "code_id": "zJlxFOio9QI=",
        "checksum": "K63vvcaDcDc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-api",
        "type": "\u0019\f",
        "title": "Azure Storage accounts",
        "docs": {
          "desc": "This query retrieves data for all storage accounts"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "k70PAP88yzU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-blobs",
        "title": "Azure storage accounts blobs",
        "docs": {
          "desc": "This query retrieves data for all blobs in storage accounts"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-blobs-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-blobs-api"
          }
        ]
      },
      {
        "query": "azure.subscription.storage.accounts { blobProperties }",
        "mql": "azure.subscription.storage.accounts { blobProperties }",
        "code_id": "EpmIbGevz0Q=",
        "checksum": "H2+mWcdj3FU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-blobs-api",
        "type": "\u0019\f",
        "title": "Azure storage accounts blobs",
        "docs": {
          "desc": "This query retrieves data for all blobs in storage accounts"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.storage.account.blobProperties",
        "mql": "azure.subscription.storage.account.blobProperties",
        "code_id": "jxuLR9Z4wTM=",
        "checksum": "J07VhR3aWSU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-blobs-single",
        "type": "\f",
        "title": "Azure storage accounts blobs",
        "docs": {
          "desc": "This query retrieves data for all blobs in storage accounts"
        },
        "filters": {
          "items": {
            "BmvmwwxN7CI=": {
              "mql": "asset.platform == \"azure-storage-account\"",
              "code_id": "BmvmwwxN7CI=",
              "checksum": "9WqtBAdYE38=",
              "mrn": "//policy.api.mondoo.app/filter/BmvmwwxN7CI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "pbJlTNzNUdw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-containers",
        "title": "Azure Storage account containers",
        "docs": {
          "desc": "This query retrieves data for all containers in storage accounts"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-containers-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-containers-api"
          }
        ]
      },
      {
        "query": "azure.subscription.storage.accounts { containers }",
        "mql": "azure.subscription.storage.accounts { containers }",
        "code_id": "cUe1X7dtsdA=",
        "checksum": "q2ljpFPXYCk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-containers-api",
        "type": "\u0019\f",
        "title": "Azure Storage account containers",
        "docs": {
          "desc": "This query retrieves data for all containers in storage accounts"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.storage.account.containers",
        "mql": "azure.subscription.storage.account.containers",
        "code_id": "L3ZYhxE7ZpI=",
        "checksum": "zFRbLEN47LI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-containers-single",
        "type": "\u0019\f",
        "title": "Azure Storage account containers",
        "docs": {
          "desc": "This query retrieves data for all containers in storage accounts"
        },
        "filters": {
          "items": {
            "+zrPv0BAYRs=": {
              "mql": "asset.platform == \"azure-storage-account\" \u0026\u0026 azure.subscription.storage.account.containers != empty",
              "code_id": "+zrPv0BAYRs=",
              "checksum": "Bj/NBueyV54=",
              "mrn": "//policy.api.mondoo.app/filter/+zrPv0BAYRs=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.storage.account",
        "mql": "azure.subscription.storage.account",
        "code_id": "IktTnS8+zXg=",
        "checksum": "gsIguuoLXVM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-single",
        "type": "\f",
        "title": "Azure Storage accounts",
        "docs": {
          "desc": "This query retrieves data for all storage accounts"
        },
        "filters": {
          "items": {
            "BmvmwwxN7CI=": {
              "mql": "asset.platform == \"azure-storage-account\"",
              "code_id": "BmvmwwxN7CI=",
              "checksum": "9WqtBAdYE38=",
              "mrn": "//policy.api.mondoo.app/filter/BmvmwwxN7CI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "mv2oMGJ5IMk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-tables",
        "title": "Azure Storage accounts tables",
        "docs": {
          "desc": "This query retrieves data for all tables in storage accounts"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-tables-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-tables-api"
          }
        ]
      },
      {
        "query": "azure.subscription.storage.accounts { tableProperties }",
        "mql": "azure.subscription.storage.accounts { tableProperties }",
        "code_id": "wAAhiS0QIW4=",
        "checksum": "VeHS93/RQ50=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-tables-api",
        "type": "\u0019\f",
        "title": "Azure Storage accounts tables",
        "docs": {
          "desc": "This query retrieves data for all tables in storage accounts"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.storage.account.tableProperties",
        "mql": "azure.subscription.storage.account.tableProperties",
        "code_id": "aAO0s0qgWuM=",
        "checksum": "fIf8eIYZ31w=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-storageAccounts-tables-single",
        "type": "\f",
        "title": "Azure Storage accounts tables",
        "docs": {
          "desc": "This query retrieves data for all tables in storage accounts"
        },
        "filters": {
          "items": {
            "BmvmwwxN7CI=": {
              "mql": "asset.platform == \"azure-storage-account\"",
              "code_id": "BmvmwwxN7CI=",
              "checksum": "9WqtBAdYE38=",
              "mrn": "//policy.api.mondoo.app/filter/BmvmwwxN7CI=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "PTrztW8rxd8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines",
        "title": "Azure virtual machines",
        "docs": {
          "desc": "This query retrieves data for all virtual machines"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-api"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-single"
          }
        ]
      },
      {
        "query": "azure.subscription.compute.vms",
        "mql": "azure.subscription.compute.vms",
        "code_id": "xztp6kpFpXQ=",
        "checksum": "ox6mOHGV6jQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-api",
        "type": "\u0019\f",
        "title": "Azure virtual machines",
        "docs": {
          "desc": "This query retrieves data for all virtual machines"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "nFZ5PHHOMgY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-managedDisk",
        "title": "Azure virtual machines with managed disks",
        "docs": {
          "desc": "This query retrieves data for all virtual machines with managed disks"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-managedDisk-api"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-managedDisk-single"
          }
        ]
      },
      {
        "query": "azure.subscription.compute.vms.where( properties[\"storageProfile\"][\"osDisk\"][\"managedDisk\"] != empty )",
        "mql": "azure.subscription.compute.vms.where( properties[\"storageProfile\"][\"osDisk\"][\"managedDisk\"] != empty )",
        "code_id": "A38+lFT2aBg=",
        "checksum": "LkiCDQZ5rYw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-managedDisk-api",
        "type": "\u0019\f",
        "title": "Azure virtual machines with managed disks",
        "docs": {
          "desc": "This query retrieves data for all virtual machines with managed disks"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.compute.vm.properties[\"storageProfile\"][\"osDisk\"][\"managedDisk\"] != empty",
        "mql": "azure.subscription.compute.vm.properties[\"storageProfile\"][\"osDisk\"][\"managedDisk\"] != empty",
        "code_id": "oyyxW2/Jl3M=",
        "checksum": "p4h94xWcYVU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-managedDisk-single",
        "type": "\u0004",
        "title": "Azure virtual machines with managed disks",
        "docs": {
          "desc": "This query retrieves data for all virtual machines with managed disks"
        },
        "filters": {
          "items": {
            "vEV90lIvykA=": {
              "mql": "asset.platform == \"azure-compute-vm-api\" \u0026\u0026 azure.subscription.compute.vm.properties[\"storageProfile\"][\"osDisk\"][\"managedDisk\"] != empty",
              "code_id": "vEV90lIvykA=",
              "checksum": "0Rathx4+iNM=",
              "mrn": "//policy.api.mondoo.app/filter/vEV90lIvykA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.compute.vm",
        "mql": "azure.subscription.compute.vm",
        "code_id": "7ClqS4CuDiU=",
        "checksum": "OSf1RUurkHI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-virtualmachines-single",
        "type": "\f",
        "title": "Azure virtual machines",
        "docs": {
          "desc": "This query retrieves data for all virtual machines"
        },
        "filters": {
          "items": {
            "VPkRSzmEtn8=": {
              "mql": "asset.platform == \"azure-compute-vm-api\"",
              "code_id": "VPkRSzmEtn8=",
              "checksum": "CpRtqzMR4cY=",
              "mrn": "//policy.api.mondoo.app/filter/VPkRSzmEtn8=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "azure.subscription.web.apps",
        "mql": "azure.subscription.web.apps",
        "code_id": "QWBbVmgAdyk=",
        "checksum": "fHijMJBnYJE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-azure-webapp",
        "type": "\u0019\f",
        "title": "Azure web apps",
        "docs": {
          "desc": "This query retrieves data for all web apps"
        },
        "filters": {
          "items": {
            "I1rf3pkmKQw=": {
              "mql": "asset.platform == \"azure\"",
              "code_id": "I1rf3pkmKQw=",
              "checksum": "qbB5+9fEKPw=",
              "mrn": "//policy.api.mondoo.app/filter/I1rf3pkmKQw=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.compute.instances.where( status == \"RUNNING\" ).length",
        "mql": "gcp.compute.instances.where( status == \"RUNNING\" ).length",
        "code_id": "UcQ4RrUJYfc=",
        "checksum": "9oFLQnISQ2I=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-count",
        "type": "\u0005",
        "title": "GCP compute instances count",
        "docs": {
          "desc": "This query retrieves a count of running GCP compute instances in a GCP project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "hF8uM4/Z5Tw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-data",
        "title": "GCP compute instances",
        "docs": {
          "desc": "This query retrieves the data for all running GCP compute instances in a GCP project"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-data-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-data-single"
          }
        ]
      },
      {
        "query": "gcp.compute.instances.where( status == \"RUNNING\" )\n",
        "mql": "gcp.compute.instances.where( status == \"RUNNING\" )\n",
        "code_id": "e0MwUGVx3g0=",
        "checksum": "EcLe45OyMaA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-data-all",
        "type": "\u0019\f",
        "title": "GCP compute instances",
        "docs": {
          "desc": "This query retrieves the data for all running GCP compute instances in a GCP project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.compute.instance\n",
        "mql": "gcp.compute.instance\n",
        "code_id": "Yo0pkFvmPLY=",
        "checksum": "hwcPKxoPxo0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-data-single",
        "type": "\f",
        "title": "GCP compute instances",
        "docs": {
          "desc": "This query retrieves the data for all running GCP compute instances in a GCP project"
        },
        "filters": {
          "items": {
            "n7KC7R5JBPo=": {
              "mql": "asset.platform == \"gcp-compute-instance\"\ngcp.compute.instance.status == \"RUNNING\"\n",
              "code_id": "n7KC7R5JBPo=",
              "checksum": "loJqxh4bIWY=",
              "mrn": "//policy.api.mondoo.app/filter/n7KC7R5JBPo=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "checksum": "XMdD5SvRgKw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-public",
        "title": "GCP Compute Engine instances",
        "docs": {
          "desc": "This query retrieves the data for all GCP Compute Engine instances that have been configured with an external IP address."
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-public-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-public-single"
          }
        ]
      },
      {
        "query": "gcp.compute.instances.where(networkInterfaces.where(_['accessConfigs'].where(_['name'] == \"External NAT\")))\n",
        "mql": "gcp.compute.instances.where(networkInterfaces.where(_['accessConfigs'].where(_['name'] == \"External NAT\")))\n",
        "code_id": "YeyMY/+7OGI=",
        "checksum": "Jywkp+XQzj4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-public-all",
        "type": "\u0019\f",
        "title": "GCP Compute Engine instances",
        "docs": {
          "desc": "This query retrieves the data for all GCP Compute Engine instances that have been configured with an external IP address."
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.compute.instance\n",
        "mql": "gcp.compute.instance\n",
        "code_id": "Yo0pkFvmPLY=",
        "checksum": "idU5sAaX9vw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-instances-public-single",
        "type": "\f",
        "title": "GCP Compute Engine instances",
        "docs": {
          "desc": "This query retrieves the data for all GCP Compute Engine instances that have been configured with an external IP address."
        },
        "filters": {
          "items": {
            "Kgi28nuBpag=": {
              "mql": "asset.platform == \"gcp-compute-instance\"\ngcp.compute.instance.networkInterfaces.any(_['accessConfigs'].where(_['name'] == \"External NAT\"))\n",
              "code_id": "Kgi28nuBpag=",
              "checksum": "GKzrTqk61Rc=",
              "mrn": "//policy.api.mondoo.app/filter/Kgi28nuBpag=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "gcp.compute.networks.length",
        "mql": "gcp.compute.networks.length",
        "code_id": "V3Z2KOdUHV0=",
        "checksum": "Vsh+V1Nd1Ng=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-count",
        "type": "\u0005",
        "title": "GCP Compute Engine networks count",
        "docs": {
          "desc": "This query retrieves a count of GCP Compute Engine networks configured in a GCP project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "MTAMfFq2FH4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data",
        "title": "GCP Compute Engine networks",
        "docs": {
          "desc": "This query retrieves the data for all GCP Compute Engine networks configured in a GCP project."
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data-single"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data-subnet"
          }
        ]
      },
      {
        "query": "gcp.compute.networks\n",
        "mql": "gcp.compute.networks\n",
        "code_id": "+0c+rDxHx1w=",
        "checksum": "cWI0uVUueEM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data-all",
        "type": "\u0019\f",
        "title": "GCP Compute Engine networks",
        "docs": {
          "desc": "This query retrieves the data for all GCP Compute Engine networks configured in a GCP project."
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"\n",
              "code_id": "turd8YONuKg=",
              "checksum": "rNfFIKM1qSs=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.compute.network\n",
        "mql": "gcp.compute.network\n",
        "code_id": "DCq9aukQ6Wc=",
        "checksum": "cj3tGTCpxcQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data-single",
        "type": "\f",
        "title": "GCP Compute Engine networks",
        "docs": {
          "desc": "This query retrieves the data for all GCP Compute Engine networks configured in a GCP project."
        },
        "filters": {
          "items": {
            "0xGx5RDAF4o=": {
              "mql": "asset.platform == \"gcp-compute-network\"\n",
              "code_id": "0xGx5RDAF4o=",
              "checksum": "V/sWJm67UTU=",
              "mrn": "//policy.api.mondoo.app/filter/0xGx5RDAF4o=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.compute.subnetwork\n",
        "mql": "gcp.compute.subnetwork\n",
        "code_id": "lKJIrXZp8us=",
        "checksum": "H66bgDwygFo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-compute-networks-data-subnet",
        "type": "\f",
        "title": "GCP Compute Engine networks",
        "docs": {
          "desc": "This query retrieves the data for all GCP Compute Engine networks configured in a GCP project."
        },
        "filters": {
          "items": {
            "/4iD720uH3E=": {
              "mql": "asset.platform == \"gcp-compute-subnetwork\"\n",
              "code_id": "/4iD720uH3E=",
              "checksum": "Cw9i6qMs5j0=",
              "mrn": "//policy.api.mondoo.app/filter//4iD720uH3E=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.services.where( enabled == true )",
        "mql": "gcp.project.services.where( enabled == true )",
        "code_id": "Hp91zOVvnWI=",
        "checksum": "doM61q10mS4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-enabled-services",
        "type": "\u0019\f",
        "title": "Services enabled in the GCP project",
        "docs": {
          "desc": "This query retrieves all services enabled in the GCP Project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.gke.clusters.length",
        "mql": "gcp.project.gke.clusters.length",
        "code_id": "GXnMy0KdC5s=",
        "checksum": "mew0NiaMph8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-count",
        "type": "\u0005",
        "title": "GKE clusters count",
        "docs": {
          "desc": "This query retrieves a count of GKE clusters running in a GCP project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "FUQWdOunjzU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-data",
        "title": "GKE clusters configuration",
        "docs": {
          "desc": "This query retrieves all of the configuration data for GKE clusters within a project"
        },
        "filters": {},
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-data-all"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-data-single"
          }
        ]
      },
      {
        "query": "gcp.project.gke.clusters\n",
        "mql": "gcp.project.gke.clusters\n",
        "code_id": "uvbpAGM42HQ=",
        "checksum": "54NBS5sn5+g=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-data-all",
        "type": "\u0019\f",
        "title": "GKE clusters configuration",
        "docs": {
          "desc": "This query retrieves all of the configuration data for GKE clusters within a project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.gke.cluster\n",
        "mql": "gcp.project.gke.cluster\n",
        "code_id": "Axmd6jZEals=",
        "checksum": "JFvPp+Vi2Bk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-gke-clusters-data-single",
        "type": "\f",
        "title": "GKE clusters configuration",
        "docs": {
          "desc": "This query retrieves all of the configuration data for GKE clusters within a project"
        },
        "filters": {
          "items": {
            "wEKjALBSsDA=": {
              "mql": "asset.platform == \"gcp-gke-cluster\"",
              "code_id": "wEKjALBSsDA=",
              "checksum": "wSXMw47IQAY=",
              "mrn": "//policy.api.mondoo.app/filter/wEKjALBSsDA=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.iamPolicy { role }",
        "mql": "gcp.project.iamPolicy { role }",
        "code_id": "jo4S5Efns10=",
        "checksum": "97g+FtyCuuU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-iam-roles",
        "type": "\u0019\f",
        "title": "IAM Policy roles",
        "docs": {
          "desc": "This query retrieves all roles defined for a GCP project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.iamPolicy.where( role == \"roles/editors\" ) {\n  id\n  members\n}\n",
        "mql": "gcp.project.iamPolicy.where( role == \"roles/editors\" ) {\n  id\n  members\n}\n",
        "code_id": "esjpb5+uUTI=",
        "checksum": "EycEzMnTI10=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-project-editors",
        "type": "\u0019\f",
        "title": "GCP project editors",
        "docs": {
          "desc": "This query retrieves data for all editors of the GCP project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project {\n  name\n  id\n  number\n  state\n  labels\n}\n",
        "mql": "gcp.project {\n  name\n  id\n  number\n  state\n  labels\n}\n",
        "code_id": "8ZTLRdgMdfc=",
        "checksum": "YPdT0ozr+Y8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-project-info",
        "type": "\f",
        "title": "GCP Project Information",
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "gcp.project.iamPolicy.where( role == \"roles/owner\" ) {\n  id\n  members\n}\n",
        "mql": "gcp.project.iamPolicy.where( role == \"roles/owner\" ) {\n  id\n  members\n}\n",
        "code_id": "SijcqY8aEC8=",
        "checksum": "26BCZxMbf4o=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-asset-inventory-gcp-project-owners",
        "type": "\u0019\f",
        "title": "GCP project owners",
        "docs": {
          "desc": "This query retrieves data for all owners of the GCP project"
        },
        "filters": {
          "items": {
            "turd8YONuKg=": {
              "mql": "asset.platform == \"gcp-project\"",
              "code_id": "turd8YONuKg=",
              "checksum": "gsZ5PUN4GKA=",
              "mrn": "//policy.api.mondoo.app/filter/turd8YONuKg=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "os.hostname",
        "mql": "os.hostname",
        "code_id": "aRSd7vfjN/s=",
        "checksum": "6oWj/RhTDBE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-hostname",
        "type": "\u0007",
        "title": "Hostname",
        "filters": {}
      },
      {
        "query": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "code_id": "GHihoQG+Q/Y=",
        "checksum": "BhkpNYcpNrk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-active-connections",
        "type": "\u0019\f",
        "title": "Active network connections",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "asset { kind title platform name arch runtime version }",
        "mql": "asset { kind title platform name arch runtime version }",
        "code_id": "Hl4/DeiN8wc=",
        "checksum": "7FdH3PxFAQ8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-asset-info",
        "type": "\f",
        "title": "Asset information",
        "filters": {}
      },
      {
        "query": "file(\"/proc/cpuinfo\").content.lines.where(_.contains(\"model name\")).first().split(\":\").last().trim()\n",
        "mql": "file(\"/proc/cpuinfo\").content.lines.where(_.contains(\"model name\")).first().split(\":\").last().trim()\n",
        "code_id": "/tUd3Rzfo5c=",
        "checksum": "CKQ/26OFjEk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-cpu-type",
        "type": "\u0007",
        "title": "CPU type",
        "filters": {}
      },
      {
        "query": "groups.where(name == \"wheel\") { members }",
        "mql": "groups.where(name == \"wheel\") { members }",
        "code_id": "HnD55hbNskM=",
        "checksum": "kA6mhmA/wYw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-groups-wheel",
        "type": "\u0019\f",
        "title": "Members of the wheel group",
        "filters": {}
      },
      {
        "query": "os.hostname",
        "mql": "os.hostname",
        "code_id": "aRSd7vfjN/s=",
        "checksum": "zQv8QVG6Lzs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-hostname",
        "type": "\u0007",
        "title": "Hostname",
        "filters": {}
      },
      {
        "query": "kernel.installed",
        "mql": "kernel.installed",
        "code_id": "oyTxcyFFxp0=",
        "checksum": "dUjTBomDajg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-installed-kernel",
        "type": "\u0019\n",
        "title": "Installed kernels",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "packages { name version arch installed epoch origin purl }",
        "mql": "packages { name version arch installed epoch origin purl }",
        "code_id": "XAoGqylTzOA=",
        "checksum": "DRfbaXefvEU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-installed-packages",
        "type": "\u0019\f",
        "title": "Installed packages",
        "filters": {}
      },
      {
        "query": "parse.json(content: command('ip -j a').stdout).params\n",
        "mql": "parse.json(content: command('ip -j a').stdout).params\n",
        "code_id": "FXIrgChC3pg=",
        "checksum": "SUtSFzT3yao=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-interface-configuration",
        "type": "\n",
        "title": "Network interface configuration",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.info",
        "mql": "kernel.info",
        "code_id": "phM/AwY3gBg=",
        "checksum": "G7cE5DYGmeI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-kernel-info",
        "type": "\n",
        "title": "Running kernel versions",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.modules { name loaded }",
        "mql": "kernel.modules { name loaded }",
        "code_id": "onEYxXTUj2k=",
        "checksum": "ij9DvcMf22Y=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-kernel-modules",
        "type": "\u0019\f",
        "title": "Kernel modules",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.parameters",
        "mql": "kernel.parameters",
        "code_id": "VLSfq6hDahY=",
        "checksum": "jYyRCg21Mxg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-kernel-parameters",
        "type": "\u001a\u0007\u0007",
        "title": "Kernel parameters",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "ports.listening { user state port address protocol process remoteAddress remotePort }",
        "mql": "ports.listening { user state port address protocol process remoteAddress remotePort }",
        "code_id": "Ms4tg4zNmLg=",
        "checksum": "oCs+XMLPkJQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-listening-ports",
        "type": "\u0019\f",
        "title": "Listening ports",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command('w -h').stdout",
        "mql": "command('w -h').stdout",
        "code_id": "VDW0zuKNTNA=",
        "checksum": "0/2JecOBwZg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-logged-in-users",
        "type": "\u0007",
        "title": "Logged-in users",
        "filters": {}
      },
      {
        "query": "mount.list { path fstype device options }",
        "mql": "mount.list { path fstype device options }",
        "code_id": "5pm2mmNGelY=",
        "checksum": "uvAZSAiEYXM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-mounts",
        "type": "\u0019\f",
        "title": "Mounted devices",
        "filters": {}
      },
      {
        "query": "file(\"/proc/meminfo\").content.lines.where(_.contains(\"MemTotal\")).first().split(\":\").last().trim()\n",
        "mql": "file(\"/proc/meminfo\").content.lines.where(_.contains(\"MemTotal\")).first().split(\":\").last().trim()\n",
        "code_id": "g7SQRtln0e0=",
        "checksum": "WHyE186nIHg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-physical-memory",
        "type": "\u0007",
        "title": "Physical memory size",
        "filters": {}
      },
      {
        "query": "asset.platform",
        "mql": "asset.platform",
        "code_id": "qXLiKKJcpv8=",
        "checksum": "Gx1Ew5IEouk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-platform",
        "type": "\u0007",
        "title": "Platform",
        "filters": {}
      },
      {
        "query": "processes { pid command flags }",
        "mql": "processes { pid command flags }",
        "code_id": "pB9cpZY/Uy0=",
        "checksum": "tYsYRBR2Br8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-processes",
        "type": "\u0019\f",
        "title": "Running processes",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command(\"df -TH / | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
        "mql": "command(\"df -TH / | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
        "code_id": "WmxWYi4ILtg=",
        "checksum": "zgkk/ifOns4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-root-volume",
        "type": "\u0007",
        "title": "Root volume size and filesystem type",
        "filters": {}
      },
      {
        "query": "services.where(running == true) { name running enabled masked type }",
        "mql": "services.where(running == true) { name running enabled masked type }",
        "code_id": "qWE8ALBsqTE=",
        "checksum": "FWwAcR4ay0E=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-running-services",
        "type": "\u0019\f",
        "title": "Running services",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "pam.conf.entries[\"/etc/pam.d/su\"].where(pamType == \"auth\" \u0026\u0026 module == \"pam_wheel.so\").any(options.contains(\"use_uid\"))\ngroups.any(name == \"wheel\" || name == \"sudo\")\ngroups.where(name == \"wheel\" || name == \"sudo\") {\n  members {\n    name\n    name == props.mondooLinuxSecuritySudoGroup\n  }\n}\n",
        "mql": "pam.conf.entries[\"/etc/pam.d/su\"].where(pamType == \"auth\" \u0026\u0026 module == \"pam_wheel.so\").any(options.contains(\"use_uid\"))\ngroups.any(name == \"wheel\" || name == \"sudo\")\ngroups.where(name == \"wheel\" || name == \"sudo\") {\n  members {\n    name\n    name == props.mondooLinuxSecuritySudoGroup\n  }\n}\n",
        "code_id": "XrcAaXYX6aA=",
        "checksum": "1kpP9fiPmAQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-access-to-the-su-command-is-restricted",
        "type": "\u0001",
        "title": "Ensure access to the su command is restricted",
        "docs": {
          "desc": "This check ensures that access to the `su` command is restricted to authorized users by configuring the `pam_wheel.so` module in the `/etc/pam.d/su` file. This configuration limits the use of the `su` command to members of the `wheel` or `sudo` group, enhancing system security.\n\n**Why this matters**\n\nThe `su` command allows a user to switch to another user account, including the root account, without logging out. If unrestricted:\n\n- Unauthorized users could gain elevated privileges, potentially compromising system security.\n- Malicious actors could exploit the `su` command to escalate privileges or perform unauthorized actions.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy restricting access to the `su` command, organizations can ensure that only authorized users can perform privileged actions, reducing the risk of unauthorized access and maintaining a secure system configuration.\n\nNOTE: The users allowed in the wheel group are defined in the property `props.mondooLinuxSecuritySudoGroup` field of this policy. By default the users \"root\", \"ec2-user\", \"centos\" and \"ubuntu\" are included. To include custom users you need to define additional users in this property.",
          "audit": "Run this command and verify output includes matching line:\n\n```\n# grep pam_wheel.so /etc/pam.d/su\nauth required pam_wheel.so use_uid\n```\n\nRun this command and verify users in wheel group match site policy:\n\n```\n# grep wheel /etc/group\nwheel:x:10:root,\u003cuser list\u003e\n```",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo restrict access to the `su` command, you can edit the `/etc/pam.d/su` file and add the following line:\n\n```bash\necho \"auth required pam_wheel.so use_uid\" \u003e\u003e /etc/pam.d/su\n```\n\nIf users need `su` access, add their username to the comma-separated list of users in the `wheel` group within the `/etc/group` file:\n\n```bash\nsed -i 's/^wheel:x:10:root/wheel:x:10:root,\u003cuser list\u003e/' /etc/group\n```\n\nIf you want to lock down the use of the command `su` entirely instead, you need to create an empty group, for example `sugroup`:\n\n```bash\ngroupadd sugroup\n```\n\nThen add the following line to the `/etc/pam.d/su` file:\n\n```\nauth required pam_wheel.so use_uid group=sugroup\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo restrict access to the `su` command, you can use the following Ansible playbook:\n\n```yaml\n---\n- name: Restrict access to su command\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure pam_wheel.so is configured in /etc/pam.d/su\n      ansible.builtin.lineinfile:\n        path: /etc/pam.d/su\n        regexp: '^auth required pam_wheel.so use_uid'\n        line: 'auth required pam_wheel.so use_uid'\n        create: yes\n    - name: Ensure users are in the wheel group\n      ansible.builtin.user:\n        name: \"{{ item }}\"\n        group: wheel\n        append: yes\n      loop: \"{{ props.mondooLinuxSecuritySudoGroup }}\"\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\nTo restrict access to the `su` command, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Restricting access to su command\"\necho \"auth required pam_wheel.so use_uid\" \u003e\u003e /etc/pam.d/su\necho \"wheel:x:10:root,\u003cuser list\u003e\" \u003e\u003e /etc/group\n\necho \"Adding a group named sugroup and configuring it for su access\"\ngroupadd sugroup\necho \"auth required pam_wheel.so use_uid group=sugroup\" \u003e\u003e /etc/pam.d/su\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "return /root|ec2-user|centos|ubuntu|admin|mondoo/\n",
            "code_id": "/PSm4FyhKWY=",
            "checksum": "w5836fk78I8=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySudoGroup",
            "uid": "mondooLinuxSecuritySudoGroup",
            "type": "\b",
            "title": "Define the members of the sudo or wheel group"
          }
        ]
      },
      {
        "query": "kernel.parameters[\"kernel.randomize_va_space\"] == 2\n",
        "mql": "kernel.parameters[\"kernel.randomize_va_space\"] == 2\n",
        "code_id": "dVk74tk32xs=",
        "checksum": "3wFjsBxykaA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-address-space-layout-randomization-aslr-is-enabled",
        "type": "\u0004",
        "title": "Ensure address space layout randomization (ASLR) is enabled",
        "docs": {
          "desc": "This check verifies that Address Space Layout Randomization (ASLR) is enabled by confirming that the kernel parameter kernel.randomize_va_space is set to 2, which enforces full randomization of memory regions.\n\n**Why this matters**\n\nASLR is a memory protection technique that randomizes the location of key data areas in a process's address space, such as the stack, heap, and libraries. This unpredictability makes it significantly harder for attackers to exploit memory corruption vulnerabilities, such as buffer overflows, since they cannot reliably guess the locations of critical functions or data structures in memory.\n\nWhen ASLR is disabled or misconfigured:\n  - Exploits that rely on fixed memory addresses become easier to execute.\n  - Attackers may leverage known memory layouts to bypass protections like stack canaries, non-executable memory (NX), and control flow integrity.\n  - Systems become more susceptible to privilege escalation, remote code execution, and other forms of memory-based attacks.\n\nSetting kernel.randomize_va_space to 2 enables full ASLR, providing the strongest level of memory layout unpredictability and helping to enforce modern exploit mitigation strategies on Linux systems.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to set the ASLR value to 2:\n\n```bash\nsysctl -w kernel.randomize_va_space=2\n```\n\nTo make the change permanent:\n\nEdit `/etc/sysctl.conf` or a file in `/etc/sysctl.d/` and add the following line:\n\n```\nkernel.randomize_va_space = 2\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set ASLR:\n\n```yaml\n---\n- name: Set ASLR to 2 on Linux systems\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set kernel.randomize_va_space to 2\n      ansible.builtin.sysctl:\n        name: kernel.randomize_va_space\n        value: '2'\n        sysctl_file: /etc/sysctl.d/99-aslr.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to set ASLR. It will check if the setting is already configured and apply it if not.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set ASLR to 2\nif ! grep -q '^kernel.randomize_va_space' /etc/sysctl.conf 2\u003e/dev/null \u0026\u0026 ! grep -q '^kernel.randomize_va_space' /etc/sysctl.d/* 2\u003e/dev/null; then\n  echo \"Setting kernel.randomize_va_space to 2 in /etc/sysctl.d/99-aslr.conf\"\n  echo 'kernel.randomize_va_space = 2' | tee /etc/sysctl.d/99-aslr.conf\nfi\n\nsysctl -w kernel.randomize_va_space=2\n```"
            }
          ]
        },
        "impact": {
          "value": 90
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "package(\"aide\").installed\n",
        "mql": "package(\"aide\").installed\n",
        "code_id": "vVtLCflAlII=",
        "checksum": "W63Lj+kEGEA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-aide-is-installed",
        "type": "\u0004",
        "title": "Ensure Advanced Intrusion Detection Environment (AIDE) is installed",
        "docs": {
          "desc": "This check verifies that the Advanced Intrusion Detection Environment (AIDE) is installed on a Linux system. AIDE functions as a file integrity checker that helps detect unauthorized changes to critical system files and configurations.\n\n**Why this matters**\n\nAIDE creates a database of cryptographic checksums for important system files and directories. Once initialized, AIDE can be used to scan the system and compare the current state of files against the known-good baseline. This process helps detect file tampering, rootkit installation, or configuration drift that may indicate a security breach.\n\nWithout a host-based file integrity monitoring (FIM) solution like AIDE, administrators may not be aware of changes to critical files made by malicious actors or unintended actions by privileged users. This lack of visibility undermines incident response, auditability, and system trustworthiness.\n\nInstalling AIDE contributes to the overall integrity assurance of a Linux system and supports compliance with standards such as:\n  - PCI-DSS Requirement 11.5\n  - NIST 800-53 (SI-7: Software, Firmware, and Information Integrity)\n\nEnsuring AIDE is installed lays the foundation for host-based file integrity monitoring, which is a critical part of a defense-in-depth strategy for detecting intrusions and preserving system integrity.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to install `aide`:\n\n### RHEL/Fedora/Amazon Linux and derivatives\n\n```bash\nyum install aide\n```\n\n### Debian/Ubuntu and derivatives\n\n```bash\napt-get install aide\n```\n\n### SLES and openSUSE\n\n```bash\nzypper install aide\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to install `aide`:\n\n```yaml\n---\n- name: Install AIDE on Linux systems\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure AIDE is installed\n      ansible.builtin.package:\n        name: aide\n        state: present"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to install AIDE. It will auto-detect the package manager and install AIDE if not already installed.\n\n```bash\n#!/bin/bash\nset -e\n\nif command -v yum \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected yum-based system. Installing aide...\"\n  yum install -y aide\nelif command -v dnf \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected dnf-based system. Installing aide...\"\n  dnf install -y aide\nelif command -v apt-get \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected apt-based system. Installing aide...\"\n  apt-get update\n  apt-get install -y aide\nelif command -v zypper \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected zypper-based system. Installing aide...\"\n  zypper install -y aide\nelse\n  echo \"No supported package manager found. Please install AIDE manually.\"\n  exit 1\nfi\n\necho \"AIDE installation complete.\"\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "file(\"/etc/audit/auditd.conf\").exists\nauditd.config.params.contains(\"max_log_file\")\nauditd.config.params.max_log_file != 0\n",
        "mql": "file(\"/etc/audit/auditd.conf\").exists\nauditd.config.params.contains(\"max_log_file\")\nauditd.config.params.max_log_file != 0\n",
        "code_id": "lKmcBkurkyM=",
        "checksum": "Yeq9r8QUUmA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-audit-log-storage-size-is-configured",
        "type": "\u0001",
        "title": "Ensure audit log storage size is configured",
        "docs": {
          "desc": "This check verifies that the auditd configuration specifies a maximum storage size for audit logs by ensuring the `max_log_file` parameter in `/etc/audit/auditd.conf` is set to a value greater than zero.\n\n**Why this matters**\n\nThe `max_log_file` setting defines the maximum size (in megabytes) that an audit log file can grow before it is rotated. Without this limit, audit logs can consume excessive disk space, leading to system performance degradation or failures—especially on systems with limited storage or extensive auditing.\n\nIf audit log size is not properly configured:\n  - Log files may grow indefinitely and fill the disk, potentially causing services to fail or the system to become unresponsive.\n  - Critical audit data may be lost if the system cannot write to a full disk.\n  - Administrators may be unaware of abnormal log volume trends, missing opportunities for early detection of suspicious activity.\n\nConfiguring max_log_file helps maintain system stability by preventing uncontrolled log growth. It also supports log management practices such as automated rotation and retention policies, ensuring that audit data remains available without jeopardizing system operations.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameter in `/etc/audit/auditd.conf` in accordance with site policy:\n\n```\nmax_log_file = \u003cMB\u003e\n```\n\n2. Restart the auditd service to apply the new configuration:\n\n```bash\nsystemctl restart auditd\n```\n\n3. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the maximum log file size for audit logs:\n\n```yaml\n---\n- name: Configure audit log storage size\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n\n    - name: Ensure audit log storage size is configured in auditd.conf\n      ansible.builtin.lineinfile:\n        path: /etc/audit/auditd.conf\n        regexp: '^max_log_file ='\n        line: 'max_log_file = \u003cMB\u003e'\n        create: yes\n        state: present\n      register: auditd_logsize_changed\n\n    - name: Restart auditd service to apply changes if not immutable\n      ansible.builtin.systemd:\n        name: auditd\n        state: restarted\n      when:\n        - immutable_check.rc != 0\n        - auditd_logsize_changed.changed\n\n    - name: Warn if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to configure the maximum log file size for audit logs.\n\n```bash\n#!/bin/bash\nset -e\n\nMB_SIZE=\"500\"  # Replace 500 with the desired size in megabytes\n\nif grep -q '^max_log_file' /etc/audit/auditd.conf; then\n  echo \"Updating max_log_file to $MB_SIZE in /etc/audit/auditd.conf\"\n  sed -i \"s/^max_log_file.*/max_log_file = $MB_SIZE/\" /etc/audit/auditd.conf\nelse\n  echo \"Adding max_log_file = $MB_SIZE to /etc/audit/auditd.conf\"\n  echo \"max_log_file = $MB_SIZE\" \u003e\u003e /etc/audit/auditd.conf\nfi\n\necho \"Restarting auditd service to apply changes\"\nsystemctl restart auditd\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 40
        },
        "filters": {}
      },
      {
        "query": "file(\"/etc/audit/auditd.conf\").exists\nauditd.config.params.max_log_file_action == \"keep_logs\"\n",
        "mql": "file(\"/etc/audit/auditd.conf\").exists\nauditd.config.params.max_log_file_action == \"keep_logs\"\n",
        "code_id": "SVOkJRXlADk=",
        "checksum": "luds1jDgIfg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-audit-logs-are-not-automatically-deleted",
        "type": "\u0001",
        "title": "Ensure audit logs are not automatically deleted",
        "docs": {
          "desc": "This check verifies that the system is configured to retain audit logs by ensuring the `max_log_file_action` parameter in `/etc/audit/auditd.conf`` is set to `keep_logs`.\n\n**Why this matters**\n\nThe `max_log_file_action` setting controls how auditd behaves when an audit log file reaches its maximum size. Setting it to keep_logs ensures that old logs are preserved rather than deleted or overwritten, supporting long-term retention and forensic traceability.\n\nIf audit logs are automatically deleted:\n  - Critical historical data may be lost, undermining the ability to investigate past events or security incidents.\n  - Organizations may fall out of compliance with regulatory requirements that mandate audit log retention.\n  - Incident response efforts may be hindered by incomplete log records.\n\nBy configuring auditd to preserve logs, the system ensures that valuable audit data is available when needed for security analysis, compliance reviews, or legal investigation. This supports a more robust and accountable auditing strategy.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameter in `/etc/audit/auditd.conf`:\n\n```\nmax_log_file_action = keep_logs\n```\n\n2. Restart the service to load the new configuration values:\n\n```bash\nsystemctl restart auditd\n```\n\n3. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the maximum log file action for audit logs:\n\n```yaml\n---\n- name: Configure audit log file action\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n      auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n\n    - name: Ensure audit log file action is configured in auditd.conf\n      ansible.builtin.lineinfile:\n        path: /etc/audit/auditd.conf\n        regexp: '^max_log_file_action ='\n        line: 'max_log_file_action = keep_logs'\n        create: yes\n        state: present\n        register: auditd_logfile_action_changed\n\n    - name: Restart auditd service to apply changes if not immutable\n      ansible.builtin.systemd:\n        name: auditd\n        state: restarted\n        when:\n        - immutable_check.rc != 0\n        - auditd_logfile_action_changed.changed\n\n    - name: Warn if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n        when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\nUse this Bash script to configure the maximum log file action for audit logs.\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^max_log_file_action' /etc/audit/auditd.conf; then\n  echo \"Updating max_log_file_action to keep_logs in /etc/audit/auditd.conf\"\n  sed -i 's/^max_log_file_action.*/max_log_file_action = keep_logs/' /etc/audit/auditd.conf\nelse\n  echo \"Adding max_log_file_action = keep_logs to /etc/audit/auditd.conf\"\n  echo \"max_log_file_action = keep_logs\" \u003e\u003e /etc/audit/auditd.conf\nfi\n\necho \"Restarting auditd service to apply changes\"\nsystemctl restart auditd\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 40
        },
        "filters": {}
      },
      {
        "query": "package(\"auditd\").installed \u0026\u0026 package(\"audispd-plugins\").installed\n|| package(\"audit\").installed || package(\"audit-libs\").installed\nservice(\"auditd\").enabled\nservice(\"auditd\").running\n",
        "mql": "package(\"auditd\").installed \u0026\u0026 package(\"audispd-plugins\").installed\n|| package(\"audit\").installed || package(\"audit-libs\").installed\nservice(\"auditd\").enabled\nservice(\"auditd\").running\n",
        "code_id": "RrFyOiEFiIM=",
        "checksum": "6dA4PVM94ys=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-auditd-is-installed-and-running",
        "type": "\u0001",
        "title": "Ensure auditd is installed, enabled, and running",
        "docs": {
          "desc": "This check verifies that the auditd package is installed on the system and that the auditd service is both enabled and running.\n\n**Why this matters**\n\nauditd is the core component of the Linux Auditing System, responsible for collecting, processing, and writing audit records to disk. These records provide detailed visibility into system-level activities such as user logins, file access, command execution, and permission changes.\n\nEnsuring that auditd is installed and actively running is essential for:\n  - Capturing a reliable audit trail of security-relevant events.\n  - Supporting forensic investigations and incident response efforts.\n  - Meeting regulatory and organizational compliance requirements that mandate audit logging.\n  - Detecting suspicious or unauthorized behavior on the system in near real time.\n\nIf auditd is not installed, or if the service is disabled or inactive:\n  - No audit logs will be recorded, creating blind spots in system monitoring.\n  - Critical evidence may be lost during or after an attack.\n  - The system may fall out of compliance with standards that require audit functionality.\n\nBy installing and enabling auditd, organizations ensure consistent audit logging is in place, improving accountability and strengthening overall system security.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Install the auditd package:\n\n**RHEL/Fedora/Amazon Linux and derivatives**\n\n```bash\ndnf install audit audit-libs\n```\n\n**Debian/Ubuntu and derivatives**\n\n```bash\napt-get install auditd audispd-plugins\n```\n\n**SLES and openSUSE**\n\n```bash\nzypper install audit\n```\n\n2. Enable and start the auditd service:\n\n```bash\nsystemctl --now enable auditd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to ensure auditd is installed, enabled, and running:\n\n```yaml\n---\n- name: Ensure auditd is installed and running\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Install auditd on RHEL/Fedora/Amazon Linux\n      package:\n        name:\n          - audit\n          - audit-libs\n        state: present\n      when: ansible_facts['os_family'] == \"RedHat\"\n\n    - name: Install auditd on Debian/Ubuntu\n      package:\n        name:\n          - auditd\n          - audispd-plugins\n        state: present\n      when: ansible_facts['os_family'] == \"Debian\"\n\n    - name: Install auditd on SLES/openSUSE\n      package:\n        name: audit\n        state: present\n      when: ansible_facts['os_family'] == \"Suse\"\n\n    - name: Enable and start auditd service\n      systemd:\n        name: auditd\n        enabled: yes\n        state: started\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to install auditd, enable it, and start the service.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Installing auditd...\"\nif command -v dnf \u0026\u003e /dev/null; then\n  dnf install -y audit audit-libs\nelif command -v apt-get \u0026\u003e /dev/null; then\n  apt-get install -y auditd audispd-plugins\nelif command -v zypper \u0026\u003e /dev/null; then\n  zypper install -y audit\nelse\n  echo \"Unsupported package manager. Please install auditd manually.\"\n  exit 1\nfi\n\necho \"Enabling and starting auditd service...\"\nsystemctl --now enable auditd\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {}
      },
      {
        "query": "switch {\n  case file(\"/boot/grub2/grubenv\").exists:\n    file(\"/boot/grub2/grubenv\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/boot/grub2/grub.cfg\").exists:\n    file(\"/boot/grub2/grub.cfg\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/boot/grub/grub.cfg\").exists:\n    file(\"/boot/grub/grub.cfg\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/boot/grub/grub.conf\").exists:\n    file(\"/boot/grub/grub.conf\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/etc/secboot/config.json\").exists:\n    parse.json('/etc/secboot/config.json')\n      .params['kernel-params'] == /audit(\\s+)?\\=(\\s+)?1/;\n  default: false\n}\n",
        "mql": "switch {\n  case file(\"/boot/grub2/grubenv\").exists:\n    file(\"/boot/grub2/grubenv\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/boot/grub2/grub.cfg\").exists:\n    file(\"/boot/grub2/grub.cfg\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/boot/grub/grub.cfg\").exists:\n    file(\"/boot/grub/grub.cfg\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/boot/grub/grub.conf\").exists:\n    file(\"/boot/grub/grub.conf\").content.lines.where( _ == /^[^#]/ )\n      .any(_ == /audit(\\s+)?\\=(\\s+)?1/);\n  case file(\"/etc/secboot/config.json\").exists:\n    parse.json('/etc/secboot/config.json')\n      .params['kernel-params'] == /audit(\\s+)?\\=(\\s+)?1/;\n  default: false\n}\n",
        "code_id": "58MqTpuplNk=",
        "checksum": "XgdjaaaU/fg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-auditing-for-processes-that-start-prior-to-auditd-is-enabled",
        "type": "\u0004",
        "title": "Ensure auditing for processes that start prior to auditd is enabled",
        "docs": {
          "desc": "This check verifies that the system's GRUB bootloader is configured to pass the audit=1 kernel parameter, which ensures that auditing is enabled from the earliest stages of system initialization—even before the auditd daemon starts.\n\n**Why this matters**\n\nBy default, some processes may start before auditd is initialized, especially during early boot. Without early auditing enabled, actions taken by these processes can go unrecorded, creating a blind spot in audit logs and weakening the system's ability to track critical events.\n\nIf the audit=1 kernel parameter is not set:\n  - Early-boot processes such as init systems, kernel modules, or startup scripts may execute without being logged.\n  - Attackers or misconfigurations could exploit this window to perform actions undetected.\n  - The system's audit trail may be incomplete, undermining trust in audit data and complicating incident response or compliance reviews.\n\nAdding audit=1 to the GRUB configuration ensures that the Linux kernel begins generating audit records as soon as it starts, capturing all auditable activity regardless of when auditd is fully initialized. This enhances the completeness and integrity of audit logging across the system lifecycle.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Edit the GRUB configuration file to include the `audit=1`` parameter:\n\n**RHEL/Fedora/Amazon Linux and derivatives**\n\nFor BIOS systems, edit `/etc/default/grub`:\n\n```bash\nGRUB_CMDLINE_LINUX=\"audit=1\"\n```\n\nFor UEFI systems, edit `/etc/default/grub`:\n\n```bash\nGRUB_CMDLINE_LINUX=\"audit=1\"\n```\n\n**Debian/Ubuntu and derivatives**\n\nEdit `/etc/default/grub`:\n\n```bash\nGRUB_CMDLINE_LINUX_DEFAULT=\"audit=1\"\n```\n\n2. Update the GRUB configuration:\n\n**RHEL/Fedora/Amazon Linux and derivatives**\n\nFor BIOS systems:\n\n```bash\ngrub2-mkconfig -o /boot/grub2/grub.cfg\n```\nFor UEFI systems:\n\n```bash\ngrub2-mkconfig -o /boot/efi/EFI/\u003cdistribution\u003e/grub.cfg\n```\n\nReplace `\u003cdistribution\u003e` with your distribution's directory name (e.g., `centos`, `redhat`, `fedora`).\n\n**Debian/Ubuntu and derivatives**\n\n```bash\nupdate-grub\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {}
      },
      {
        "query": "service(\"avahi-daemon\").enabled == false\nservice(\"avahi-daemon\").running == false\n",
        "mql": "service(\"avahi-daemon\").enabled == false\nservice(\"avahi-daemon\").running == false\n",
        "code_id": "3QL3VcmScCM=",
        "checksum": "OaohuXtH0W8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-avahi-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure Avahi server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the avahi-daemon service is neither running nor enabled on the system. Avahi is a zeroconf (zero-configuration networking) implementation that supports multicast DNS (mDNS) and DNS Service Discovery (DNS-SD), allowing devices to automatically discover each other on local networks.\n\n**Why this matters**\n\nWhile convenient in desktop or home environments, Avahi is rarely needed on production servers or hardened enterprise systems. When enabled, the Avahi daemon broadcasts services and listens for network announcements, which can:\n  - Expose unnecessary information about the system to local network peers.\n  - Increase the system's attack surface through unneeded services.\n  - Allow unauthorized devices to detect and interact with the host without explicit configuration.\n\nIn secure environments, it is a best practice to disable Avahi unless explicitly required for functionality. Stopping and disabling the avahi-daemon service helps enforce the principle of least functionality and reduces the risk of unintended network exposure.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to stop and disable `avahi-daemon`:\n\n```bash\nsystemctl stop avahi-daemon\nsystemctl disable avahi-daemon\n```\n\nNote: Since the `avahi-daemon` service is often interdependent with other services, it might not be enough to disable the service because other services will likely restart the service automatically.\n\nTo make the service `avahi-daemon` invisible to other services run this command:\n\n```bash\nsystemctl mask avahi-daemon\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `avahi-daemon`:\n\n```yaml\n---\n- name: Stop and disable Avahi daemon\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure Avahi daemon is stopped and disabled\n      ansible.builtin.systemd:\n        name: avahi-daemon\n        state: stopped\n        enabled: no\n        masked: true\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the Avahi daemon.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling Avahi daemon...\"\nsystemctl stop avahi-daemon\nsystemctl disable avahi-daemon\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv4.icmp_ignore_bogus_error_responses'] == 1\n",
        "mql": "kernel.parameters['net.ipv4.icmp_ignore_bogus_error_responses'] == 1\n",
        "code_id": "H2ZH2J+F/yo=",
        "checksum": "mGIzIHT72mg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-bogus-icmp-responses-are-ignored",
        "type": "\u0004",
        "title": "Ensure bogus ICMP responses are ignored",
        "docs": {
          "desc": "This check verifies that the system is configured to ignore bogus ICMP error responses by ensuring the kernel parameter `net.ipv4.icmp_ignore_bogus_error_responses` is set to `1`.\n\n**Why this matters**\n\nBogus ICMP error responses are non-compliant or malformed ICMP messages that do not correspond to any legitimate traffic. These can be generated accidentally by misconfigured devices or intentionally by attackers attempting to disrupt or confuse network communications.\n\nIf bogus ICMP responses are not ignored:\n  - The system may log unnecessary or misleading error messages, cluttering logs and making it harder to identify real issues.\n  - Attackers may exploit this setting to flood logs or trigger unstable behavior in poorly configured systems.\n  - It may lead to resource exhaustion or degradation of network performance in environments with high volumes of invalid traffic.\n\nBy ignoring bogus ICMP error responses, the system avoids reacting to malformed or irrelevant network messages, helping to maintain cleaner logs and more stable network operations.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameter in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1\nsysctl -w net.ipv4.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable bogus ICMP responses\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure bogus ICMP responses are ignored in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-bogus-icmp-responses.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.icmp_ignore_bogus_error_responses', value: '1' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable bogus ICMP responses and persist the setting.\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^net.ipv4.icmp_ignore_bogus_error_responses' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.icmp_ignore_bogus_error_responses.*/net.ipv4.icmp_ignore_bogus_error_responses = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 in /etc/sysctl.d/99-disable-bogus-icmp-responses.conf\"\n  echo \"net.ipv4.icmp_ignore_bogus_error_responses = 1\" \u003e\u003e /etc/sysctl.d/99-disable-bogus-icmp-responses.conf\nfi\n\nsysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1\nsysctl -w net.ipv4.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv4.icmp_echo_ignore_broadcasts'] == 1\n",
        "mql": "kernel.parameters['net.ipv4.icmp_echo_ignore_broadcasts'] == 1\n",
        "code_id": "7wuHGnsUApE=",
        "checksum": "3yzFlqxnwT8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-broadcast-icmp-requests-are-ignored",
        "type": "\u0004",
        "title": "Ensure broadcast ICMP requests are ignored",
        "docs": {
          "desc": "This check verifies that the system is configured to ignore ICMP echo requests sent to broadcast or multicast addresses by ensuring the kernel parameter `net.ipv4.icmp_echo_ignore_broadcasts` is set to `1`.\n\n**Why this matters**\n\nICMP echo requests sent to broadcast addresses can be used in amplification attacks, such as the Smurf attack, where a single ICMP request can generate a large volume of responses from multiple hosts. This can lead to denial-of-service conditions for targeted systems or network segments.\n\nIf broadcast ICMP requests are not ignored:\n  - The system may be exploited as part of a distributed denial-of-service (DDoS) attack.\n  - Network resources may be consumed by processing and responding to unnecessary or malicious requests.\n  - Attackers can use broadcast ICMP traffic to map networks or identify live hosts.\n\nIgnoring broadcast ICMP requests reduces the likelihood that the system can be leveraged in amplification attacks and helps maintain the integrity and availability of the network. This is particularly important in environments where network resources are limited or where systems are exposed to untrusted networks.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameter in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\nsysctl -w net.ipv4.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable ICMP echo broadcasts\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure ICMP echo broadcasts are ignored in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-icmp-echo-broadcasts.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.icmp_echo_ignore_broadcasts', value: '1' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable ICMP echo broadcasts.\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^net.ipv4.icmp_echo_ignore_broadcasts' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.icmp_echo_ignore_broadcasts.*/net.ipv4.icmp_echo_ignore_broadcasts = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 in /etc/sysctl.d/99-disable-icmp-echo-broadcasts.conf\"\n  echo \"net.ipv4.icmp_echo_ignore_broadcasts = 1\" \u003e\u003e /etc/sysctl.d/99-disable-icmp-echo-broadcasts.conf\nfi\n\nsysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\nsysctl -w net.ipv4.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/sudoers\\.d(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+scope(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/sudoers(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+scope(\\s+)?$/))\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/sudoers\\.d(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+scope(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/sudoers(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+scope(\\s+)?$/))\n",
        "code_id": "hLT/RMRLRTs=",
        "checksum": "pDusIaN7qac=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-changes-to-system-administration-scope-sudoers-is-collected",
        "type": "\u0001",
        "title": "Ensure changes to system administration scope (sudoers) is collected",
        "docs": {
          "desc": "This check verifies that auditd is configured to monitor changes to the system administration scope (sudoers). The parameters below track changes to files associated with sudoers.\n\n- The file `/etc/sudoers` is the main configuration file for sudo.\n- The `/etc/sudoers.d/` directory contains additional configuration files for sudo.\n\n**Why this matters**\n\nMonitoring changes to the sudoers file and its associated directory is critical for maintaining system security. Unauthorized modifications can lead to privilege escalation, unauthorized access, or other malicious activities.\n\nIf monitoring is not enabled:\n  - Changes to sudo permissions may go undetected, allowing unauthorized users to gain elevated privileges.\n  - It becomes difficult to track who made changes and when, complicating incident response efforts.\n  - The system may fall out of compliance with security policies or regulatory requirements.\n\nBy ensuring that changes to the sudoers file and directory are monitored, organizations can maintain a secure environment and quickly respond to potential threats.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nEdit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-scope.rules`\n\nAdd the following lines:\n\n```\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d -p wa -k scope\n```\n\nTo load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\nCheck if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for sudoers:\n\n```yaml\n---\n- name: Ensure changes to system administration scope (sudoers) is collected\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure audit rules for sudoers are configured in auditd.conf\n      ansible.builtin.lineinfile:\n        path: /etc/audit/rules.d/50-scope.rules\n        line: |\n          -w /etc/sudoers -p wa -k scope\n          -w /etc/sudoers.d -p wa -k scope\n        create: yes\n        state: present\n    - name: Reload auditd service to apply changes\n      ansible.builtin.systemd:\n        name: auditd\n        state: reloaded\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure changes to the sudoers file and directory are collected.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-scope.rules\"\n\nif [ ! -f \"$RULES_FILE\" ]; then\n  echo \"Creating audit rules file: $RULES_FILE\"\n  touch \"$RULES_FILE\"\nfi\n\necho \"Ensuring audit rules for sudoers are configured\"\nif ! grep -q '^-w /etc/sudoers -p wa -k scope' \"$RULES_FILE\"; then\n  echo \"-w /etc/sudoers -p wa -k scope\" \u003e\u003e \"$RULES_FILE\"\nfi\nif ! grep -q '^-w /etc/sudoers.d -p wa -k scope' \"$RULES_FILE\"; then\n  echo \"-w /etc/sudoers.d -p wa -k scope\" \u003e\u003e \"$RULES_FILE\"\nfi\n\necho \"Loading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "file(\"/etc/security/limits.conf\").content.lines.where( _ == /^[^#]/ ).where( _.contains(\"core\") ) {\n  _ == /\\*\\s+hard\\s+core\\s+0/\n}\nkernel.parameters['fs.suid_dumpable'] == 0\nif(service(\"coredump\").enabled || service(\"coredump\").running) {\n  parse.ini(\"/etc/systemd/coredump.conf\").sections['Coredump']['ProcessSizeMax'] == 0\n  parse.ini(\"/etc/systemd/coredump.conf\").sections['Coredump']['Storage'] == 'none'\n}\n",
        "mql": "file(\"/etc/security/limits.conf\").content.lines.where( _ == /^[^#]/ ).where( _.contains(\"core\") ) {\n  _ == /\\*\\s+hard\\s+core\\s+0/\n}\nkernel.parameters['fs.suid_dumpable'] == 0\nif(service(\"coredump\").enabled || service(\"coredump\").running) {\n  parse.ini(\"/etc/systemd/coredump.conf\").sections['Coredump']['ProcessSizeMax'] == 0\n  parse.ini(\"/etc/systemd/coredump.conf\").sections['Coredump']['Storage'] == 'none'\n}\n",
        "code_id": "Gjj6ZTcWK1M=",
        "checksum": "uREhXgbEgsE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-core-dumps-are-restricted",
        "type": "\u0001",
        "title": "Ensure core dumps are restricted",
        "docs": {
          "desc": "This check verifies that core dumps are restricted on the system by setting appropriate limits in `/etc/security/limits.conf`, configuring the `fs.suid_dumpable` kernel parameter, and ensuring the `coredump` service (if installed) is properly configured. These settings prevent unauthorized or excessive core dump creation, especially for set-user-ID (SUID) programs.\n\n**Why this matters**\n\nCore dumps capture the memory contents of a process at the time it crashes. While useful for debugging, core dumps can expose sensitive information such as passwords, cryptographic keys, or proprietary application logic—especially if generated by privileged or network-facing applications.\n\nBy default, systems may allow core dumps for all processes, including those with elevated privileges. If unrestricted:\n  - Attackers could exploit this to gain access to in-memory secrets.\n  - Users could accidentally or intentionally generate core dumps containing sensitive information.\n  - Storage systems could become overwhelmed by large or repeated core files, leading to denial-of-service risks.\n\nTo mitigate this, three key protections should be enforced:\n  - A hard limit of 0 core file size in /etc/security/limits.conf to block core dumps for all users by default.\n  - Setting the fs.suid_dumpable kernel parameter to 0 to disable core dumps for SUID programs, which typically run with elevated privileges.\n  - Properly configuring the coredump service (if installed) with ProcessSizeMax=0 and Storage=none to prevent systemd-based core dump handling from storing crash data.\n\nRestricting core dumps helps preserve the confidentiality of system memory, prevents unnecessary disk usage, and protects against inadvertent leakage of sensitive data.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Run this command to set the core dump size to 0:\n\n```bash\nulimit -c 0\n```\n\n2. To make the change permanent:\n\nEdit `/etc/security/limits.conf` and add the following line:\n\n```\n* hard core 0\n```\n\nSet the following parameter in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nfs.suid_dumpable = 0\n```\n\nRun this command to set the active kernel parameter:\n\n```bash\nsysctl -w fs.suid_dumpable=0\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to restrict core dumps:\n\n```yaml\n---\n- name: Disable core dumps on Linux\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set hard core dump limit to 0 in limits.d\n      ansible.builtin.copy:\n        dest: /etc/security/limits.d/99-disable-core.conf\n        owner: root\n        group: root\n        mode: '0644'\n        content: |\n          * hard core 0\n\n    - name: Disable core dumps via sysctl\n      ansible.builtin.sysctl:\n        name: fs.suid_dumpable\n        value: '0'\n        sysctl_file: /etc/sysctl.d/99-disable-coredump.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n\n    - name: Check if systemd-coredump config exists\n      ansible.builtin.stat:\n        path: /etc/systemd/coredump.conf\n      register: coredump_conf\n\n    - name: Set systemd-coredump options if applicable\n      block:\n        - name: Ensure /etc/systemd/coredump.conf exists with correct settings\n          ansible.builtin.ini_file:\n            path: /etc/systemd/coredump.conf\n            section: Coredump\n            option: \"{{ item.option }}\"\n            value: \"{{ item.value }}\"\n          loop:\n            - { option: 'Storage', value: 'none' }\n            - { option: 'ProcessSizeMax', value: '0' }\n\n        - name: Reload systemd daemon after coredump config change\n          ansible.builtin.command: systemctl daemon-reexec\n      when: coredump_conf.stat.exists\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to restrict core dumps. It will set the appropriate limits, kernel parameters, and update systemd-coredump configuration if present.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set hard core dump limit to 0\nif ! grep -qE '^\\*\\s+hard\\s+core\\s+0' /etc/security/limits.conf; then\n  echo \"Adding hard core limit to /etc/security/limits.conf\"\n  echo '* hard core 0' | tee -a /etc/security/limits.conf\nfi\n\n# Set fs.suid_dumpable to 0 in sysctl\nif ! grep -q '^fs.suid_dumpable' /etc/sysctl.conf 2\u003e/dev/null \u0026\u0026 ! grep -q '^fs.suid_dumpable' /etc/sysctl.d/* 2\u003e/dev/null; then\n  echo \"Setting fs.suid_dumpable to 0 in /etc/sysctl.d/99-disable-coredump.conf\"\n  echo 'fs.suid_dumpable = 0' | tee /etc/sysctl.d/99-disable-coredump.conf\nfi\nsysctl -w fs.suid_dumpable=0\n\n# Configure systemd-coredump if present\nif [ -f /etc/systemd/coredump.conf ]; then\n  echo \"Setting systemd-coredump configuration\"\n  sed -i '/^ProcessSizeMax/d' /etc/systemd/coredump.conf\n  sed -i '/^Storage/d' /etc/systemd/coredump.conf\n  echo -e '[Coredump]\\nProcessSizeMax=0\\nStorage=none' | tee -a /etc/systemd/coredump.conf\n  systemctl daemon-reexec\nfi\n\necho \"Core dump restrictions applied.\"\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "service(\"cups\").enabled == false\nservice(\"cups\").running == false\n",
        "mql": "service(\"cups\").enabled == false\nservice(\"cups\").running == false\n",
        "code_id": "MCCspWdD2Vk=",
        "checksum": "nLzRmxc1U4Q=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-cups-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure CUPS is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the Common Unix Printing System (CUPS) service is neither running nor enabled on the system. CUPS provides printing capabilities for local and network printers and includes web-based administration tools.\n\n**Why this matters**\n\nCUPS is typically unnecessary on hardened servers or cloud-hosted Linux systems where printing services are not required. If left running:\n  - It may expose the system to remote exploitation, especially if administrative interfaces are accessible over the network.\n  - It increases the overall attack surface by introducing a network-accessible daemon.\n  - Unused services like CUPS can be leveraged in lateral movement or privilege escalation scenarios, particularly if misconfigured or unpatched.\n\nDisabling CUPS aligns with the principle of least functionality and helps reduce the number of services available for exploitation. It is recommended to stop and disable the service unless printing capabilities are explicitly required for the system's role.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to stop and disable `cups`:\n\n```bash\nsystemctl stop cups\nsystemctl disable cups\n```\n\nNote: Since the `cups` service is often interdependent with other services, it might not be enough to disable the service because other services will likely restart the service automatically.\n\nTo make the service `cups` invisible to other services run this command:\n\n```bash\nsystemctl mask cups\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `cups`:\n\n```yaml\n---\n- name: Stop and disable CUPS printing service\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure CUPS service is stopped and disabled\n      ansible.builtin.systemd:\n        name: cups\n        state: stopped\n        enabled: no\n        masked: true\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the CUPS service.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling CUPS service...\"\nsystemctl stop cups\nsystemctl disable cups\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "users.where(name == \"root\").list.all(gid == 0)\n",
        "mql": "users.where(name == \"root\").list.all(gid == 0)\n",
        "code_id": "nTE51L+DiAo=",
        "checksum": "x8zu7TJIZto=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-default-group-for-the-root-account-is-gid-0",
        "type": "\u0004",
        "title": "Ensure default group for the root account is GID 0",
        "docs": {
          "desc": "This check ensures that the default group for the root account is set to GID 0, which is the standard group for administrative privileges on Linux systems. This configuration ensures proper access control and consistency in file ownership and permissions.\n\n**Why this matters**\n\nThe root account is the most privileged account on a Linux system. Ensuring that its default group is set to GID 0 is critical for maintaining system security and proper access control. If the root account is assigned to a different group:\n\n- Files created by the root user may have incorrect group ownership, leading to potential security risks.\n- System utilities and processes that rely on the root group may behave unpredictably.\n- Compliance with security standards and best practices may be compromised.\n\nBy ensuring that the root account's default group is GID 0, organizations can maintain a secure and consistent system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to set the `root` user default group to GID `0`:\n\n```bash\nusermod -g 0 root\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo ensure that the default group for the root account is set to GID 0, you can use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure default group for root account is GID 0\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set root user default group to GID 0\n      ansible.builtin.user:\n        name: root\n        group: 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the default group for the root account is set to GID 0, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting default group for root account to GID 0\"\nusermod -g 0 root\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "service(\"dhcpd\").enabled == false\nservice(\"dhcpd\").running == false\n",
        "mql": "service(\"dhcpd\").enabled == false\nservice(\"dhcpd\").running == false\n",
        "code_id": "pG8C4AikOeo=",
        "checksum": "rTRQ+Gl2cWE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-dhcp-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure DHCP server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the DHCP server service (dhcpd) is neither running nor enabled on the system.\n\n**Why this matters**\n\nThe Dynamic Host Configuration Protocol (DHCP) allows systems to dynamically assign IP addresses and other network configuration parameters to devices on a network. While essential in network infrastructure roles, DHCP servers are rarely required on general-purpose Linux systems or production servers.\n\nRunning a DHCP server where it is not explicitly needed can:\n  - Lead to IP address conflicts and unpredictable network behavior.\n  - Allow unauthorized clients to obtain network configuration from an untrusted source.\n  - Expose the host to exploitation if the service is vulnerable or misconfigured.\n\nDisabling unused services like dhcpd reduces the system's attack surface and aligns with the principle of least functionality. On systems that are not intended to serve as DHCP servers, the service should be fully disabled to prevent accidental exposure or misuse.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Run this command to stop and disable `dhcpd`:\n\n```bash\nsystemctl stop dhcpd\nsystemctl disable dhcpd\n```\n\n2. To make the service `dhcpd` invisible to other services run this command:\n\n```bash\nsystemctl mask dhcpd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `dhcpd`:\n\n```yaml\n---\n- name: Stop and disable DHCP server service\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure DHCP server (dhcpd) is stopped and disabled\n      ansible.builtin.systemd:\n        name: dhcpd\n        state: stopped\n        enabled: no\n        masked: true\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the DHCP server.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling DHCP server...\"\nsystemctl stop dhcpd\nsystemctl disable dhcpd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /chmod/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchmod/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchmodat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /chown/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchown/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchownat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /lchown/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /setxattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /lsetxattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fsetxattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /removexattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /lremovexattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fremovexattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /chmod|fchmod|fchmodat|chown|fchown|fchownat|lchown|setxattr|lsetxattr|fsetxattr|removexattr|lremovexattr|fremovexattr/).all(\n  split(\"=\").any(split(\" \").any(_ == logindefs.params.UID_MIN))\n    \u0026\u0026 split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F auid!=\",\"1 \"])\n      || split(\"-\").containsAll([\"F auid!=unset \"])\n      || split(\"-\").containsAll([\"F auid!=4294967295 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F key=perm_mod\"])\n      || split(\"-\").containsAll([\"k perm_mod\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /chmod/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchmod/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchmodat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /chown/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchown/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fchownat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /lchown/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /setxattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /lsetxattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fsetxattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /removexattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /lremovexattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /fremovexattr/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /chmod|fchmod|fchmodat|chown|fchown|fchownat|lchown|setxattr|lsetxattr|fsetxattr|removexattr|lremovexattr|fremovexattr/).all(\n  split(\"=\").any(split(\" \").any(_ == logindefs.params.UID_MIN))\n    \u0026\u0026 split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F auid!=\",\"1 \"])\n      || split(\"-\").containsAll([\"F auid!=unset \"])\n      || split(\"-\").containsAll([\"F auid!=4294967295 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F key=perm_mod\"])\n      || split(\"-\").containsAll([\"k perm_mod\"])\n)\n",
        "code_id": "NxpRrPxljBI=",
        "checksum": "Hidhjk0aNYU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-discretionary-access-control-permission-modification-events-are-collected",
        "type": "\u0001",
        "title": "Ensure discretionary access control permission modification events are collected",
        "docs": {
          "desc": "This check verifies that changes to file permissions, attributes, ownership, and group are monitored. It ensures that system calls affecting these properties—such as `chmod`, `fchmod`, `fchmodat` (permissions), `chown`, `fchown`, `fchownat`, `lchown` (ownership), and `setxattr`, `lsetxattr`, `fsetxattr`, `removexattr`, `lremovexattr`, `fremovexattr` (extended attributes)—are audited.\n\n**Why this matters**\n\nMonitoring changes to file permissions and attributes is critical for maintaining system security. Unauthorized or accidental modifications can lead to privilege escalation, data leakage, or system compromise.\n\nIf these events are not audited:\n  - Changes to critical files may go undetected, exposing the system to potential threats.\n  - It becomes difficult to trace unauthorized actions or identify the source of configuration drift.\n  - Compliance with security standards requiring audit logging may be compromised.\n\nBy auditing these system calls, administrators can detect and respond to unauthorized changes, ensuring the integrity of file permissions and attributes.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-perm_mod.rules`\n\n2. Add the following lines:\n\n```\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n```\n\n3. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n4. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for permission modification events:\n\n```yaml\n---\n- name: Configure audit rules for permission modification events\n  hosts: all\n  become: true\n  tasks:\n    - name: Ensure permission modification audit rules are present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-perm_mod.rules\n        block: |\n          -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n          -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n          -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n          -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n          -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n          -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: perm_mod_audit_rules_updated\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: perm_mod_audit_rules_updated.changed\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure discretionary access control permission modification events are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-perm_mod.rules\"\necho \"Ensuring audit rules for permission modification events are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid\u003e=1000 -F auid!=4294967295 -k perm_mod\nEOF\n\necho \"Loading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "service(\"named\").enabled == false\nservice(\"named\").running == false\nservice(\"bind9\").enabled == false\nservice(\"bind9\").running == false\n",
        "mql": "service(\"named\").enabled == false\nservice(\"named\").running == false\nservice(\"bind9\").enabled == false\nservice(\"bind9\").running == false\n",
        "code_id": "Pw2IPak7soE=",
        "checksum": "ivLI5Jo0XRw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-dns-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure DNS server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that DNS server services such as named (BIND) or bind9 are not running and are disabled on the system.\n\n**Why this matters**\n\nDNS servers provide name resolution services by mapping domain names to IP addresses. While essential in network infrastructure roles, running a DNS server on systems that are not explicitly intended to serve DNS requests introduces unnecessary risk.\n\nIf a DNS server is unintentionally left active:\n  - It may expose internal network details or zone files to unauthorized users.\n  - It can be used in DNS amplification attacks if misconfigured.\n  - It increases the system's attack surface through open ports and additional daemon processes.\n\nDisabling DNS server services on systems that are not authoritative or caching resolvers aligns with the principle of least functionality. This reduces exposure to misconfiguration, limits available network services, and strengthens the host's security posture.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to stop and disable `named` and `bind9`:\n\n```bash\nsystemctl stop named\nsystemctl stop bind9\n\nsystemctl disable named\nsystemctl disable bind9\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `named` and `bind9`:\n\n```yaml\n---\n- name: Stop and disable DNS server services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure DNS server services (named and bind9) are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - named\n        - bind9\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the DNS server services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling DNS server services...\"\nsystemctl stop named\nsystemctl stop bind9\nsystemctl disable named\nsystemctl disable bind9\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "users.list.all(gid != empty)\n",
        "mql": "users.list.all(gid != empty)\n",
        "code_id": "wE8/X4w6/GQ=",
        "checksum": "2yZqWk88Hmk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-each-user-member-of-a-group",
        "type": "\u0004",
        "title": "Ensure each user is a member of a group",
        "docs": {
          "desc": "This check ensures that each user is a member of at least one group, as defined in the `/etc/group` file. Group memberships are essential for managing access control and permissions on Linux systems.\n\n**Why this matters**\n\nGroup memberships provide a mechanism for assigning permissions and access rights to multiple users. If a user is not a member of any group:\n\n- The user may lack necessary permissions to access files or resources.\n- System administrators may face challenges in managing access control effectively.\n- Compliance with security policies that require group-based access control may be compromised.\n\nBy ensuring that each user is a member of at least one group, organizations can maintain proper access control, streamline user management, and enhance system security.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo ensure that each user is a member of a group, you can run the following command to list users who are not members of any group:\n\n```bash\nawk -F: '($4 == \"\") {print $1}' /etc/passwd\n```\n\nIf any users are found without a group, you can add them to a primary group using the `usermod` command:\n\n```bash\nusermod -g \u003cprimary group\u003e \u003cuser\u003e\n```"
            }
          ]
        },
        "impact": {
          "value": 70
        },
        "filters": {}
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /settimeofday/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /clock_settime/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /adjtimex/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /settimeofday|clock_settime|adjtimex/).all(\n  split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\" \").containsAll([\"-F\", \"key=time-change\"])\n      || split(\" \").containsAll([\"-k\", \"time-change\"])\n)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(/\\/etc\\/localtime/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(/\\/etc\\/localtime/).all(\n  split(\"-\").containsAll([\"w /etc/localtime \",\"p wa \",])\n    \u0026\u0026 split(\" \").containsAll([\"-F\", \"key=time-change\"])\n      || split(\" \").containsAll([\"-k\", \"time-change\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /settimeofday/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /clock_settime/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /adjtimex/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /settimeofday|clock_settime|adjtimex/).all(\n  split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\" \").containsAll([\"-F\", \"key=time-change\"])\n      || split(\" \").containsAll([\"-k\", \"time-change\"])\n)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(/\\/etc\\/localtime/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(/\\/etc\\/localtime/).all(\n  split(\"-\").containsAll([\"w /etc/localtime \",\"p wa \",])\n    \u0026\u0026 split(\" \").containsAll([\"-F\", \"key=time-change\"])\n      || split(\" \").containsAll([\"-k\", \"time-change\"])\n)\n",
        "code_id": "+Z7BKJAHubo=",
        "checksum": "c/zRK64wRmI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-date-and-time-information-are-collected",
        "type": "\u0001",
        "title": "Ensure events that modify date and time information are collected",
        "docs": {
          "desc": "This check verifies that the audit system is configured to log all events that change the system's date and time settings, including modifications to the system clock and timezone.\n\n**Why this matters**\n\nAccurate system time is critical for security auditing, log correlation, and incident investigation. If an attacker or unauthorized user alters the system time, it can obscure malicious activity, disrupt monitoring tools, and compromise the integrity of audit logs.\n\nIf changes to date and time settings are not audited:\n  •  Malicious modifications may go unnoticed, allowing attackers to hide their tracks.\n  •  Log timestamps may become unreliable, complicating forensic analysis.\n  •  Compliance with standards that require time synchronization and audit log integrity may be violated.\n\nBy auditing all date and time modifications, administrators can detect tampering attempts, verify system integrity, and maintain a trustworthy timeline of system events. This ensures that audit logs remain a reliable source of truth during security reviews and investigations.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-time_change.rules`\n\n2. Add the following lines:\n\n```\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n```\n\n3. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n4. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for date and time changes:\n\n```yaml\n---\n- name: Configure audit rules for time change events\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure required time-change audit rules are present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-time_change.rules\n        block: |\n          -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n          -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n          -a always,exit -F arch=b32 -S clock_settime -k time-change\n          -a always,exit -F arch=b64 -S clock_settime -k time-change\n          -w /etc/localtime -p wa -k time-change\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: audit_rules_updated\n\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: audit_rules_updated.changed\n\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to configure the auditd rules for date and time changes.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-time_change.rules\"\n\necho \"Ensuring audit rules for time changes are configured\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,  exit -F arch=b32 -S clock_settime -k time-change\n-a always,  exit -F arch=b64 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\nEOF\n\necho \"Loading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "appArmorSys = props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/apparmor(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\n  \u0026\u0026 props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/apparmor.d(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\nseLinuxSys = props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/selinux(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\n \u0026\u0026 props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/usr\\/share\\/selinux(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\nappArmorSys || seLinuxSys\n",
        "mql": "appArmorSys = props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/apparmor(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\n  \u0026\u0026 props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/apparmor.d(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\nseLinuxSys = props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/selinux(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\n \u0026\u0026 props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/usr\\/share\\/selinux(\\/?)\\s+\\-p\\s+wa\\s+\\-k\\s+MAC-policy(\\s+)?$/))\nappArmorSys || seLinuxSys\n",
        "code_id": "9oZVlCiYffA=",
        "checksum": "MCAsSMMPCJQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-mandatory-access-controls-are-collected",
        "type": "\u0004",
        "title": "Ensure events that modify the system's Mandatory Access Controls are collected",
        "docs": {
          "desc": "This check verifies that the audit system is configured to log changes to the system's Mandatory Access Control (MAC) configurations, such as modifications to SELinux or AppArmor policies.\n\n**Why this matters**\n\nMandatory Access Controls enforce strict rules about which subjects (users, processes) can access which objects (files, resources) beyond traditional discretionary permissions. Changes to MAC settings directly impact the system's security posture and can either strengthen or weaken its defenses.\n\nWhen modifications to MAC configurations are not audited:\n  - Unauthorized or malicious changes may go undetected, potentially disabling key security mechanisms.\n  - Administrators may be unaware of policy alterations that expose the system to privilege escalation or data leakage.\n  - The system's compliance with security frameworks requiring MAC enforcement may be compromised.\n\nLogging events that alter SELinux modes, AppArmor profiles, or related configuration files helps ensure that all security policy changes are tracked and attributable. This supports continuous monitoring, strengthens control over access enforcement, and enhances trust in the system's security model.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-MAC_policy.rules`\n\n2. Add the following lines, for SELinux:\n\n```\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n```\n\n3. Add the following lines, for AppArmor:\n\n```\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n```\n\n4. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n5. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for MAC policy changes:\n\n```yaml\n---\n- name: Configure audit rules for SELinux and AppArmor MAC policy monitoring\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure MAC-policy audit rules are present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-MAC_policy.rules\n        block: |\n          -w /etc/selinux/ -p wa -k MAC-policy\n          -w /usr/share/selinux/ -p wa -k MAC-policy\n          -w /etc/apparmor/ -p wa -k MAC-policy\n          -w /etc/apparmor.d/ -p wa -k MAC-policy\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: mac_audit_rules_updated\n\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: mac_audit_rules_updated.changed\n\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure events that modify the system's Mandatory Access Controls are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-MAC_policy.rules\"\n\necho \"Ensuring audit rules for MAC policy changes are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\nEOF\n\necho \"Loading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "checksum": "sBRRcihlRhI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-network-environment-are-collected",
        "title": "Ensure events that modify the system's network environment are collected",
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ],
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-network-environment-are-collected-debian-rhel"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-network-environment-are-collected-other"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /sethostname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /setdomainname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /sethostname|setdomainname/).all(\n  split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue.net/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/hosts/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/sysconfig\\/network/)\n  || props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/network/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/etc\\/issue|\\/etc\\/issue.net|\\/etc\\/hosts|\\/etc\\/sysconfig\\/network|\\/etc\\/network/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /sethostname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /setdomainname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /sethostname|setdomainname/).all(\n  split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue.net/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/hosts/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/sysconfig\\/network/)\n  || props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/network/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/etc\\/issue|\\/etc\\/issue.net|\\/etc\\/hosts|\\/etc\\/sysconfig\\/network|\\/etc\\/network/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\n",
        "code_id": "AbVDXvvX13s=",
        "checksum": "NZ6OFs5YLxU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-network-environment-are-collected-debian-rhel",
        "type": "\u0001",
        "title": "Ensure events that modify the system's network environment are collected",
        "impact": {
          "value": 50
        },
        "filters": {
          "items": {
            "Hgs86AORbWw=": {
              "mql": "asset.family.contains(/redhat|debian/) == true",
              "code_id": "Hgs86AORbWw=",
              "checksum": "fM/w3a2/VkM=",
              "mrn": "//policy.api.mondoo.app/filter/Hgs86AORbWw=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /sethostname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /setdomainname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /sethostname|setdomainname/).all(\n  split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue.net/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/hosts/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/etc\\/issue|\\/etc\\/issue.net|\\/etc\\/hosts/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /sethostname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /setdomainname/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /sethostname|setdomainname/).all(\n  split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/issue.net/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/etc\\/hosts/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/etc\\/issue|\\/etc\\/issue.net|\\/etc\\/hosts/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"system-locale\"])\n      || split(\" \").containsAll([\"-F\",\"key=system-locale\"])\n)\n",
        "code_id": "lnXtWakmVkU=",
        "checksum": "NXwum+NcuPc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-the-systems-network-environment-are-collected-other",
        "type": "\u0001",
        "title": "Ensure events that modify the system's network environment are collected",
        "docs": {
          "desc": "This check verifies that the audit system is configured to record changes to key network configuration files and system identity settings by monitoring specific system calls and file paths.\n\n**Why this matters**\n\nChanges to the system's hostname, domain name, or core network-related files can alter how the system identifies itself and interacts with other hosts. These modifications may indicate reconfiguration, misconfiguration, or unauthorized tampering.\n\nIf these events are not audited:\n  •  Changes to system identity (via sethostname or setdomainname) may go untracked, affecting asset management and security visibility.\n  •  Modifications to files like `/etc/hosts`, `/etc/issue`, or `/etc/sysconfig/network` could enable social engineering, redirect network traffic, or disrupt connectivity.\n  •  Attackers may exploit these files to mask their activity or persist on the system.\n\nBy auditing the sethostname and setdomainname system calls and monitoring changes to `/etc/issue`, `/etc/issue.net`, `/etc/hosts`, and `/etc/sysconfig/network`, administrators can detect critical network and identity changes. This supports system integrity, operational consistency, and incident investigation efforts.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-network.rules`\n\n2. Add the following lines, for SELinux:\n\n```\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n```\n\n3. Add the following line for Red Hat based systems:\n\n```\n-w /etc/sysconfig/network -p wa -k system-locale\n```\n\n4. Add the following line for Debian/Ubuntu based systems:\n\n```\n-w /etc/network -p wa -k system-locale\n```\n\n5. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n6. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for network environment changes:\n\n```yaml\n---\n- name: Gather network file facts\n  ansible.builtin.stat:\n    path: \"{{ item }}\"\n  register: network_files\n  loop:\n    - /etc/sysconfig/network\n    - /etc/network\n\n- name: Configure base audit rules\n  ansible.builtin.blockinfile:\n    path: /etc/audit/rules.d/50-system_local.rules\n    block: |\n      -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n      -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n      -w /etc/issue -p wa -k system-locale\n      -w /etc/issue.net -p wa -k system-locale\n      -w /etc/hosts -p wa -k system-locale\n    marker: \"# {mark} ANSIBLE MANAGED - base network rules\"\n    state: present\n    create: true\n  register: base_audit_rules\n\n- name: Configure conditional network file monitoring\n  ansible.builtin.blockinfile:\n    path: /etc/audit/rules.d/50-system_local.rules\n    block: \"-w {{ item.item }} -p wa -k system-locale\"\n    marker: \"# {mark} ANSIBLE MANAGED - {{ item.item | basename }}\"\n    state: present\n  loop: \"{{ network_files.results }}\"\n  when: item.stat.exists\n  register: conditional_audit_rules\n\n- name: Set secure file permissions\n  ansible.builtin.file:\n    path: /etc/audit/rules.d/50-system_local.rules\n    owner: root\n    group: root\n    mode: '0600'\n\n- name: Reload audit rules with proper error handling\n  ansible.builtin.command: augenrules --load\n  register: augenrules_result\n  failed_when:\n    - augenrules_result.rc != 0\n    - not audit_immutable\n  when: \u003e\n    base_audit_rules.changed or\n    conditional_audit_rules.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure events that modify the system's network environment are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-network.rules\"\n\necho \"Ensuring audit rules for network environment changes are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\nEOF\n\nif [[ -f /etc/sysconfig/network ]]; then\n  echo \"-w /etc/sysconfig/network -p wa -k system-locale\" \u003e\u003e \"$RULES_FILE\"\nelif [[ -d /etc/network ]]; then\n  echo \"-w /etc/network -p wa -k system-locale\" \u003e\u003e \"$RULES_FILE\"\nfi\n\necho \"Loading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {
          "items": {
            "iC0Z61Ug6yw=": {
              "mql": "asset.family.contains(/redhat|debian/) == false",
              "code_id": "iC0Z61Ug6yw=",
              "checksum": "JRBbea8s8qs=",
              "mrn": "//policy.api.mondoo.app/filter/iC0Z61Ug6yw=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/group\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/passwd\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/gshadow\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/shadow\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/security\\/opasswd\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/group\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/passwd\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/gshadow\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/shadow\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/etc\\/security\\/opasswd\\s+\\-p\\s+wa\\s+\\-k\\s+identity(\\s+)?$/))\n",
        "code_id": "I7rY3OB+Qus=",
        "checksum": "O9v4XdSIxeA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-events-that-modify-usergroup-information-are-collected",
        "type": "\u0001",
        "title": "Ensure events that modify user/group information are collected",
        "docs": {
          "desc": "This check verifies that the system is configured to monitor changes to critical user and group management files, including `/etc/group`, `/etc/passwd`, `/etc/shadow`, `/etc/gshadow`, and `/etc/security/opasswd`. These files store information about user accounts, group memberships, and password policies.\n\n**Why this matters**\n\nMonitoring changes to these files is essential for maintaining system security. Unauthorized modifications can lead to privilege escalation, unauthorized access, or other malicious activities.\n\nIf monitoring is not enabled:\n  - Changes to user or group configurations may go undetected, exposing the system to potential threats.\n  - It becomes difficult to trace unauthorized actions or identify the source of configuration drift.\n  - The system may fall out of compliance with security standards requiring audit logging.\n\nBy ensuring that changes to these critical files are monitored, organizations can maintain a secure environment and quickly respond to potential threats.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-identity.rules`\n\n2. Add the following lines:\n\n```\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n```\n\n3. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n4. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for user and group information changes:\n\n```yaml\n---\n- name: Configure audit rules for identity file monitoring\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure identity audit rules are present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-identity.rules\n        block: |\n          -w /etc/group -p wa -k identity\n          -w /etc/passwd -p wa -k identity\n          -w /etc/gshadow -p wa -k identity\n          -w /etc/shadow -p wa -k identity\n          -w /etc/security/opasswd -p wa -k identity\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: identity_audit_rules_updated\n\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: identity_audit_rules_updated.changed\n\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure events that modify user/group information are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-identity.rules\"\n\necho \"Ensuring audit rules for user/group information changes are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\nEOF\n\necho \"Loading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /unlink/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /rename/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /unlinkat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /renameat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /unlink|rename|unlinkat|renameat/).all(\n  split(\"=\").any(split(\" \").any(_ == logindefs.params.UID_MIN))\n    \u0026\u0026 split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F auid!=\",\"1 \"])\n      || split(\"-\").containsAll([\"F auid!=unset \"])\n      || split(\"-\").containsAll([\"F auid!=4294967295 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F key=delete\"])\n      || split(\"-\").containsAll([\"k delete\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /unlink/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /rename/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /unlinkat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /renameat/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /unlink|rename|unlinkat|renameat/).all(\n  split(\"=\").any(split(\" \").any(_ == logindefs.params.UID_MIN))\n    \u0026\u0026 split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F auid!=\",\"1 \"])\n      || split(\"-\").containsAll([\"F auid!=unset \"])\n      || split(\"-\").containsAll([\"F auid!=4294967295 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F key=delete\"])\n      || split(\"-\").containsAll([\"k delete\"])\n)\n",
        "code_id": "qKSWN1woC6U=",
        "checksum": "MUce6vKkTe4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-file-deletion-events-by-users-are-collected",
        "type": "\u0001",
        "title": "Ensure file deletion events by users are collected",
        "docs": {
          "desc": "This check ensures that the system is configured to monitor the use of system calls associated with the deletion or renaming of files and file attributes. It verifies that the `unlink`, `unlinkat`, `rename`, and `renameat` system calls are audited, which helps track file deletions and renames.\n\n**Why this matters**\n\nMonitoring file deletion and renaming events is critical for maintaining system security and integrity. If these events are not audited:\n  - Unauthorized file deletions or renames may go unnoticed, leading to data loss or tampering.\n  - Malicious actors could exploit this lack of visibility to hide their tracks or disrupt system operations.\n  - Compliance with security standards requiring audit logging may be compromised.\n\nAuditing these system calls ensures that all file deletion and renaming activities are logged, providing visibility into potential security incidents and supporting forensic investigations.\n\n**Note:**\nSystems may have been customized to change the default UID_MIN. To confirm the UID_MIN for your system, run this command:\n\n```bash\nawk '/^\\s*UID_MIN/{print $2}' /etc/login.defs\n```\n\nIf your system's UID_MIN is not `1000`, replace `auid\u003e=1000` with `auid\u003e=\u003cUID_MIN for your system\u003e` in the audit and remediation procedures.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-deletion.rules`\n\nAdd the following lines:\n\n```\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid\u003e=1000 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid\u003e=1000 -F auid!=4294967295 -k delete\n```\n\n2. Load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n3. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for file deletion and renaming:\n\n```yaml\n---\n- name: Configure audit rules for file deletion and renaming\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure file deletion and renaming audit rules are present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-deletion.rules\n        block: |\n          -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid\u003e=1000 -F auid!=4294967295 -k delete\n          -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid\u003e=1000 -F auid!=4294967295 -k delete\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: deletion_audit_rules_updated\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: deletion_audit_rules_updated.changed\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash script**\n\nTo set the audit rules for file deletion and renaming, you can use the following Bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Configuring audit rules for file deletion and renaming...\"\ncat \u003c\u003cEOF \u003e /etc/audit/rules.d/50-deletion.rules\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid\u003e=1000 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid\u003e=1000 -F auid!=4294967295 -k delete\nEOF\n\necho \"Loading audit rules...\"\naugenrules --load\n\n# Notify if a reboot is required due to immutable audit configuration\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "file(\"/etc/default/aide\").exists \u0026\u0026 [\"/etc/default/aide\"].where(file(_).exists).all(parse.ini(_).params[\"CRON_DAILY_RUN\"] == \"yes\") ||\ncommand(\"crontab -u root -l | grep aide\").stdout.lines.where(/^[^#]/).any(_.contains(\"aide --check\")) ||\ncommand(\"crontab -u root -l | grep aide\").stdout.lines.where(/^[^#]/).any(_.contains(\"aide.conf --check\")) ||\nservice('aidecheck').enabled\n",
        "mql": "file(\"/etc/default/aide\").exists \u0026\u0026 [\"/etc/default/aide\"].where(file(_).exists).all(parse.ini(_).params[\"CRON_DAILY_RUN\"] == \"yes\") ||\ncommand(\"crontab -u root -l | grep aide\").stdout.lines.where(/^[^#]/).any(_.contains(\"aide --check\")) ||\ncommand(\"crontab -u root -l | grep aide\").stdout.lines.where(/^[^#]/).any(_.contains(\"aide.conf --check\")) ||\nservice('aidecheck').enabled\n",
        "code_id": "W3jQosUKoIk=",
        "checksum": "pfObrX/v9zs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-filesystem-integrity-is-regularly-checked",
        "type": "\u0004",
        "title": "Ensure filesystem integrity is regularly checked using AIDE",
        "docs": {
          "desc": "This check verifies that AIDE (Advanced Intrusion Detection Environment) is actively used to perform regular integrity scans of the filesystem. It ensures that an AIDE database has been initialized and that periodic checks are scheduled and executed.\n\n**Why this matters**\n\nInstalling AIDE alone is not sufficient to protect a system from unauthorized changes. To be effective, AIDE must be routinely run to compare the current system state against its known-good baseline. Regular execution of these checks helps detect file tampering, unauthorized modifications, and early signs of compromise—especially in sensitive directories like /etc, /bin, and /sbin.\n\nIf AIDE is not executed on a regular basis:\n  - Integrity violations may go undetected, exposing the system to persistent threats such as rootkits or malware.\n  - Audit logs and incident response efforts may be incomplete due to a lack of timely data.\n  - Organizations may fail to meet compliance requirements that mandate proactive monitoring of system integrity.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI to setup Cron:**\n\n1. Run this command to initialize the AIDE database:\n\n```bash\naide --init\n```\n\n2. Edit the root crontab:\n\n```bash\ncrontab -u root -e\n```\n\nAdd the following line to the crontab:\n\n```\n0 5 * * * /usr/sbin/aide --check\n```\n\n**Using the CLI to setup systemd:**\n\n1. Run this command to initialize the AIDE database:\n\n```bash\naide --init\n```\n\n2. Create the systemd service by creating the file `/etc/systemd/system/aidecheck.service` and adding the following lines:\n\n```\n[Unit]\nDescription=Aide Check\n\n[Service]\nType=simple\nExecStart=/usr/sbin/aide --check\n\n[Install]\nWantedBy=multi-user.target\n```\n\n3. Create the systemd timer by creating or editing the file `/etc/systemd/system/aidecheck.timer` and add the following lines:\n\n```\n[Unit]\nDescription=Aide check every day at 5AM\n\n[Timer]\nOnCalendar=*-*-* 05:00:00\nUnit=aidecheck.service\n\n[Install]\nWantedBy=multi-user.target\n```\n\n4. Configure the service and timer to run:\n\n```bash\nchown root:root /etc/systemd/system/aidecheck.*\nchmod 0644 /etc/systemd/system/aidecheck.*\n\nsystemctl daemon-reload\n\nsystemctl enable aidecheck.service\nsystemctl --now enable aidecheck.timer\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to run AIDE using a systemd timer:\n\n```yaml\n---\n- name: Configure daily AIDE check using systemd timer\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Create systemd service unit for AIDE check\n      copy:\n        dest: /etc/systemd/system/aidecheck.service\n        owner: root\n        group: root\n        mode: '0644'\n        content: |\n          [Unit]\n          Description=Aide Check\n\n          [Service]\n          Type=simple\n          ExecStart=/usr/sbin/aide --check\n\n          [Install]\n          WantedBy=multi-user.target\n\n    - name: Create systemd timer unit for daily AIDE check at 5AM\n      copy:\n        dest: /etc/systemd/system/aidecheck.timer\n        owner: root\n        group: root\n        mode: '0644'\n        content: |\n          [Unit]\n          Description=Aide check every day at 5AM\n\n          [Timer]\n          OnCalendar=*-*-* 05:00:00\n          Unit=aidecheck.service\n\n          [Install]\n          WantedBy=multi-user.target\n\n    - name: Reload systemd daemon to recognize new units\n      command: systemctl daemon-reexec\n\n    - name: Enable aidecheck.service (not started, only enabled)\n      systemd:\n        name: aidecheck.service\n        enabled: true\n\n    - name: Enable and start aidecheck.timer\n      systemd:\n        name: aidecheck.timer\n        enabled: true\n        state: started\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to configure a daily AIDE check. It will auto-detect the package manager, install AIDE if not already installed, initialize the database, and set up a cron job for daily checks at 5AM.\n\n```bash\n#!/bin/bash\nset -e\n\n# Install AIDE if not present\nif ! command -v aide \u003e/dev/null 2\u003e\u00261; then\n  if command -v yum \u003e/dev/null 2\u003e\u00261; then\n    echo \"Detected yum-based system. Installing aide...\"\n    yum install -y aide\n  elif command -v dnf \u003e/dev/null 2\u003e\u00261; then\n    echo \"Detected dnf-based system. Installing aide...\"\n    dnf install -y aide\n  elif command -v apt-get \u003e/dev/null 2\u003e\u00261; then\n    echo \"Detected apt-based system. Installing aide...\"\n    apt-get update\n    apt-get install -y aide\n  elif command -v zypper \u003e/dev/null 2\u003e\u00261; then\n    echo \"Detected zypper-based system. Installing aide...\"\n    zypper install -y aide\n  else\n    echo \"No supported package manager found. Please install AIDE manually.\"\n    exit 1\n  fi\nfi\n\n# Initialize AIDE database if not already initialized\nif [ ! -f /var/lib/aide/aide.db.gz ] \u0026\u0026 [ ! -f /var/lib/aide/aide.db ]; then\n  echo \"Initializing AIDE database...\"\n  aide --init\n  cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz 2\u003e/dev/null || true\n  cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db 2\u003e/dev/null || true\nfi\n\n# Add cron job for daily check at 5AM if not already present\nCRON_LINE=\"0 5 * * * /usr/sbin/aide --check\"\n(crontab -l 2\u003e/dev/null | grep -v -F \"$CRON_LINE\" ; echo \"$CRON_LINE\") | crontab -\n\necho \"AIDE daily check scheduled at 5AM via cron.\"\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "service(\"vsftpd\").enabled == false\nservice(\"vsftpd\").running == false\nservice(\"proftpd\").enabled == false\nservice(\"proftpd\").running == false\nservice(\"pure-ftpd\").enabled == false\nservice(\"pure-ftpd\").running == false\n",
        "mql": "service(\"vsftpd\").enabled == false\nservice(\"vsftpd\").running == false\nservice(\"proftpd\").enabled == false\nservice(\"proftpd\").running == false\nservice(\"pure-ftpd\").enabled == false\nservice(\"pure-ftpd\").running == false\n",
        "code_id": "+h+9W63fwWE=",
        "checksum": "R/+1lv878d8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ftp-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure FTP servers are stopped and not enabled",
        "docs": {
          "desc": "This check verifies that common FTP server services—vsftpd, proftpd, and pure-ftpd—are not running and are disabled on the system.\n\n**Why this matters**\n\nFTP servers enable file transfer over a network but do so using plaintext for both data and credentials, making them inherently insecure. When enabled without encryption or proper controls, FTP services are vulnerable to:\n  - Credential theft through packet sniffing\n  - Unauthorized file access or modification\n  - Abuse in reconnaissance and data exfiltration by attackers\n\nIn most environments, FTP has been replaced by more secure alternatives like SFTP or FTPS, which encrypt both authentication and file transfer traffic. Unless explicitly required, running an FTP server introduces unnecessary risk and increases the system's attack surface.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun this command to stop and disable `vsftpd`, `proftpd`, and `pure-ftpd`:\n\n```bash\nsystemctl stop vsftpd\nsystemctl disable vsftpd\n\nsystemctl stop proftpd\nsystemctl disable proftpd\n\nsystemctl stop pure-ftpd\nsystemctl disable pure-ftpd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `vsftpd`, `proftpd`, and `pure-ftpd`:\n\n```yaml\n---\n- name: Stop and disable FTP server services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure FTP server services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - vsftpd\n        - proftpd\n        - pure-ftpd\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the FTP server services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling FTP server services...\"\nsystemctl stop vsftpd\nsystemctl stop proftpd\nsystemctl stop pure-ftpd\nsystemctl disable vsftpd\nsystemctl disable proftpd\nsystemctl disable pure-ftpd\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "users.list.all(group != empty)\n",
        "mql": "users.list.all(group != empty)\n",
        "code_id": "/Kj/I7IqKvY=",
        "checksum": "uiYrGnyP1kI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-gid-in-passwd-exists-in-group",
        "type": "\u0004",
        "title": "Ensure all GIDs in /etc/passwd exist in /etc/group",
        "docs": {
          "desc": "This check ensures that every GID mentioned in the `/etc/passwd` file is defined in the `/etc/group` file. This ensures consistency and proper mapping of user groups across the system.\n\n**Why this matters**\n\nThe `/etc/passwd` file associates users with their respective GIDs, while the `/etc/group` file defines the groups and their memberships. If a GID in `/etc/passwd` is not defined in `/etc/group`:\n\n- Users may encounter issues with group-based permissions and access control.\n- System utilities and applications may behave unpredictably due to missing group definitions.\n- Compliance with security policies requiring proper group management may be compromised.\n\nBy ensuring that all GIDs in `/etc/passwd` exist in `/etc/group`, organizations can maintain a consistent and secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo ensure that all GIDs in `/etc/passwd` exist in `/etc/group`, you can run the following command to list GIDs that are not defined in `/etc/group`:\n\n```bash\nawk -F: '{print $4}' /etc/passwd | sort | uniq | comm -13 \u003c(cut -d: -f3 /etc/group | sort) -\n```\n\nIf any GIDs are found that do not exist in `/etc/group`, you can create a group for each missing GID using the `groupadd` command:\n\n```bash\ngroupadd -g \u003cgid\u003e \u003cgroupname\u003e\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "service(\"squid\").enabled == false\nservice(\"squid\").running == false\nservice(\"tinyproxy\").enabled == false\nservice(\"tinyproxy\").running == false\n",
        "mql": "service(\"squid\").enabled == false\nservice(\"squid\").running == false\nservice(\"tinyproxy\").enabled == false\nservice(\"tinyproxy\").running == false\n",
        "code_id": "f5q/EiRn95Q=",
        "checksum": "AcBEwQ7Nj+U=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-http-proxy-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure HTTP Proxy server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that HTTP proxy services such as squid and tinyproxy are not running and are disabled on the system.\n\n**Why this matters**\n\nHTTP proxy servers are used to forward client requests to destination servers, often to enable caching, access control, or anonymization of traffic. While valuable in network perimeter or gateway roles, proxy services are rarely needed on general-purpose Linux systems or hardened servers.\n\nIf an HTTP proxy service is enabled unnecessarily:\n  - It may relay traffic without proper filtering or monitoring, exposing the system to misuse or abuse.\n  - Misconfigured proxies can be exploited to bypass security controls, leak sensitive information, or allow unauthorized access to internal networks.\n  - Proxy daemons increase the system's attack surface through open ports and additional network logic.\n\nTo reduce risk, squid, tinyproxy, and similar services should be stopped and disabled unless the system is explicitly designed to function as a proxy server. This limits unnecessary service exposure and aligns with best practices for host hardening.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable `squid` and `tinyproxy`:\n\n```bash\nsystemctl stop squid\nsystemctl stop tinyproxy\n\nsystemctl disable squid\nsystemctl disable tinyproxy\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `squid` and `tinyproxy`:\n\n```yaml\n---\n- name: Stop and disable HTTP proxy services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure HTTP proxy services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - squid\n        - tinyproxy\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable HTTP proxy services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling HTTP proxy services...\"\nsystemctl stop squid\nsystemctl stop tinyproxy\nsystemctl disable squid\nsystemctl disable tinyproxy\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "service(\"httpd\").enabled == false\nservice(\"httpd\").running == false\nservice(\"apache2\").enabled == false\nservice(\"apache2\").running == false\nservice(\"nginx\").enabled == false\nservice(\"nginx\").running == false\n",
        "mql": "service(\"httpd\").enabled == false\nservice(\"httpd\").running == false\nservice(\"apache2\").enabled == false\nservice(\"apache2\").running == false\nservice(\"nginx\").enabled == false\nservice(\"nginx\").running == false\n",
        "code_id": "gxsrJvn0Hag=",
        "checksum": "7e7Q8/Mx3w8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-http-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure HTTP servers are stopped and not enabled",
        "docs": {
          "desc": "This check verifies that common HTTP server services such as httpd, apache2, and nginx are not running and are disabled on the system.\n\n**Why this matters**\n\nHTTP servers provide web hosting functionality and are often exposed to the network, making them high-value targets for attackers. Unless the system is explicitly intended to serve web content, running these services introduces unnecessary security risk.\n\nIf left enabled:\n  - HTTP servers can expose sensitive files or administrative interfaces.\n  - They may contain unpatched vulnerabilities that are remotely exploitable.\n  - Misconfigurations can lead to data leakage, privilege escalation, or unauthorized access.\n\nDisabling web servers like Apache and NGINX on systems where they are not required aligns with the principle of least functionality. This reduces the system's attack surface and helps ensure that only essential services are active and maintained.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun this command to stop and disable `httpd`, `apache2`, and `nginx`:\n\n```bash\nsystemctl stop httpd\nsystemctl disable httpd\n\nsystemctl stop apache2\nsystemctl disable apache2\n\nsystemctl stop nginx\nsystemctl disable nginx\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `httpd`, `apache2`, and `nginx`:\n\n```yaml\n---\n- name: Stop and disable HTTP server services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure HTTP server services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - httpd\n        - apache2\n        - nginx\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable HTTP server services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling HTTP server services...\"\nsystemctl stop httpd\nsystemctl stop apache2\nsystemctl stop nginx\nsystemctl disable httpd\nsystemctl disable apache2\nsystemctl disable nginx\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv4.conf.all.accept_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.all.accept_redirects'] == null\nkernel.parameters['net.ipv4.conf.default.accept_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.default.accept_redirects'] == null\nkernel.parameters['net.ipv6.conf.all.accept_redirects'] == 0\n  || kernel.parameters['net.ipv6.conf.all.accept_redirects'] == null\nkernel.parameters['net.ipv6.conf.default.accept_redirects'] == 0\n  || kernel.parameters['net.ipv6.conf.default.accept_redirects'] == null\n",
        "mql": "kernel.parameters['net.ipv4.conf.all.accept_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.all.accept_redirects'] == null\nkernel.parameters['net.ipv4.conf.default.accept_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.default.accept_redirects'] == null\nkernel.parameters['net.ipv6.conf.all.accept_redirects'] == 0\n  || kernel.parameters['net.ipv6.conf.all.accept_redirects'] == null\nkernel.parameters['net.ipv6.conf.default.accept_redirects'] == 0\n  || kernel.parameters['net.ipv6.conf.default.accept_redirects'] == null\n",
        "code_id": "Zx8F8dGkU44=",
        "checksum": "YlX7mC7bRXU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-icmp-redirects-are-not-accepted",
        "type": "\u0001",
        "title": "Ensure ICMP redirects are not accepted",
        "docs": {
          "desc": "This check verifies that the system is configured to reject ICMP redirect messages by ensuring the kernel parameters `net.ipv4.conf.all.accept_redirects`, `net.ipv4.conf.default.accept_redirects`, `net.ipv6.conf.all.accept_redirects`, and `net.ipv6.conf.default.accept_redirects` are set to `0`.\n\n**Why this matters**\n\nICMP redirect messages are used by routers to inform hosts of a better route for reaching a destination. While intended to optimize network traffic, accepting these messages on non-router systems can introduce serious security risks.\n\nIf ICMP redirects are accepted:\n  - Attackers can exploit this to alter the routing table of a host, redirecting traffic through malicious devices.\n  - It creates opportunities for man-in-the-middle attacks, traffic interception, or denial-of-service.\n  - It makes network traffic paths unpredictable and harder to audit or monitor effectively.\n\nDisabling ICMP redirect acceptance ensures that the system maintains static and trusted routing behavior, helping to preserve network integrity and defend against unauthorized routing changes.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv6.conf.default.accept_redirects = 0\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.conf.all.accept_redirects=0\nsysctl -w net.ipv4.conf.default.accept_redirects=0\nsysctl -w net.ipv4.route.flush=1\n\nsysctl -w net.ipv6.conf.all.accept_redirects=0\nsysctl -w net.ipv6.conf.default.accept_redirects=0\nsysctl -w net.ipv6.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable ICMP redirects acceptance\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure ICMP redirects are not accepted in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-icmp-redirects.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.conf.all.accept_redirects', value: '0' }\n        - { name: 'net.ipv4.conf.default.accept_redirects', value: '0' }\n        - { name: 'net.ipv6.conf.all.accept_redirects', value: '0' }\n        - { name: 'net.ipv6.conf.default.accept_redirects', value: '0' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n        - { name: 'net.ipv6.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable ICMP redirects acceptance.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set net.ipv4.conf.all.accept_redirects\nif grep -q '^net.ipv4.conf.all.accept_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.all.accept_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.all.accept_redirects.*/net.ipv4.conf.all.accept_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.all.accept_redirects to 0 in /etc/sysctl.d/99-disable-icmp-redirects.conf\"\n  echo \"net.ipv4.conf.all.accept_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-icmp-redirects.conf\nfi\n\n# Set net.ipv4.conf.default.accept_redirects\nif grep -q '^net.ipv4.conf.default.accept_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.default.accept_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.default.accept_redirects.*/net.ipv4.conf.default.accept_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.default.accept_redirects to 0 in /etc/sysctl.d/99-disable-icmp-redirects.conf\"\n  echo \"net.ipv4.conf.default.accept_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-icmp-redirects.conf\nfi\n\n# Set net.ipv6.conf.all.accept_redirects\nif grep -q '^net.ipv6.conf.all.accept_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.conf.all.accept_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.conf.all.accept_redirects.*/net.ipv6.conf.all.accept_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.conf.all.accept_redirects to 0 in /etc/sysctl.d/99-disable-icmp-redirects.conf\"\n  echo \"net.ipv6.conf.all.accept_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-icmp-redirects.conf\nfi\n\n# Set net.ipv6.conf.default.accept_redirects\nif grep -q '^net.ipv6.conf.default.accept_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.conf.default.accept_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.conf.default.accept_redirects.*/net.ipv6.conf.default.accept_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.conf.default.accept_redirects to 0 in /etc/sysctl.d/99-disable-icmp-redirects.conf\"\n  echo \"net.ipv6.conf.default.accept_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-icmp-redirects.conf\nfi\n\nsysctl -w net.ipv4.conf.all.accept_redirects=0\nsysctl -w net.ipv4.conf.default.accept_redirects=0\nsysctl -w net.ipv4.route.flush=1\nsysctl -w net.ipv6.conf.all.accept_redirects=0\nsysctl -w net.ipv6.conf.default.accept_redirects=0\nsysctl -w net.ipv6.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "service(\"dovecot\").enabled == false\nservice(\"dovecot\").running == false\nservice(\"cyrus-imapd\").enabled == false\nservice(\"cyrus-imapd\").running == false\n",
        "mql": "service(\"dovecot\").enabled == false\nservice(\"dovecot\").running == false\nservice(\"cyrus-imapd\").enabled == false\nservice(\"cyrus-imapd\").running == false\n",
        "code_id": "nVZfumjyNkA=",
        "checksum": "EV6TkVYQqvI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-imap-and-pop3-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure IMAP and POP3 servers are stopped and not enabled",
        "docs": {
          "desc": "This check verifies that common IMAP and POP3 email server services such as dovecot and cyrus-imapd are not running and are disabled from starting at boot.\n\n**Why this matters**\n\nIMAP (Internet Message Access Protocol) and POP3 (Post Office Protocol) servers are used to deliver email messages to clients. These services are typically deployed in environments where systems are designated as mail servers. On general-purpose Linux systems or hardened servers, they are rarely required and introduce unnecessary risk if left enabled.\n\nRunning IMAP or POP3 servers where not needed can:\n  - Expose authentication services and mail data to the network.\n  - Increase the system's attack surface via potentially unpatched or misconfigured mail daemons.\n  - Create compliance and privacy issues if email data is improperly stored or transmitted.\n\nTo minimize exposure, systems that do not explicitly require mail delivery services should have dovecot, cyrus-imapd, and similar services disabled. This approach supports the principle of least functionality and reduces the risk of unauthorized access or system compromise.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun this command to stop and disable `dovecot` and `cyrus-imapd`:\n\n```bash\nsystemctl stop dovecot\nsystemctl disable dovecot\n\nsystemctl stop cyrus-imapd\nsystemctl disable cyrus-imapd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `dovecot` and `cyrus-imapd`:\n\n```yaml\n---\n- name: Stop and disable IMAP and POP3 server services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure IMAP and POP3 server services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - dovecot\n        - cyrus-imapd\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable IMAP and POP3 server services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling IMAP and POP3 server services...\"\nsystemctl stop dovecot\nsystemctl stop cyrus-imapd\nsystemctl disable dovecot\nsystemctl disable cyrus-imapd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv4.ip_forward'] == 0\n  || kernel.parameters['net.ipv4.ip_forward'] == null\nkernel.parameters['net.ipv6.conf.all.forwarding'] == 0\n  || kernel.parameters['net.ipv6.conf.all.forwarding'] == null\n",
        "mql": "kernel.parameters['net.ipv4.ip_forward'] == 0\n  || kernel.parameters['net.ipv4.ip_forward'] == null\nkernel.parameters['net.ipv6.conf.all.forwarding'] == 0\n  || kernel.parameters['net.ipv6.conf.all.forwarding'] == null\n",
        "code_id": "8LouP9HP/NY=",
        "checksum": "3wSN8tQKlQo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ip-forwarding-is-disabled",
        "type": "\u0001",
        "title": "Ensure IP forwarding is disabled",
        "docs": {
          "desc": "This check verifies that IP forwarding is disabled by confirming that the kernel parameters net.ipv4.ip_forward and net.ipv6.conf.all.forwarding are set to 0.\n\n**Why this matters**\n\nIP forwarding allows a system to route network packets between interfaces, effectively enabling it to act as a router. While necessary for certain network infrastructure roles, IP forwarding is not appropriate for general-purpose servers, workstations, or systems that are not explicitly configured to route traffic.\n\nIf IP forwarding is enabled unnecessarily:\n  - The system could be used to redirect or intercept network traffic, intentionally or accidentally.\n  - It increases the risk of network misconfiguration, data leakage, or man-in-the-middle attacks.\n  - It may violate segmentation and isolation policies in secure environments.\n\nDisabling IP forwarding ensures the system cannot forward packets between networks, reducing the potential for misuse or compromise. This helps maintain clear boundaries between network zones and supports a more secure and predictable system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameter in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.ip_forward = 0\nnet.ipv6.conf.all.forwarding = 0\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.ip_forward=0\nsysctl -w net.ipv4.route.flush=1\n\nsysctl -w net.ipv6.conf.all.forwarding=0\nsysctl -w net.ipv6.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable IPv4 and IPv6 forwarding\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure IPv4 and IPv6 forwarding is disabled in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-ip-forwarding.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.ip_forward', value: '0' }\n        - { name: 'net.ipv6.conf.all.forwarding', value: '0' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n        - { name: 'net.ipv6.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable IP forwarding.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set net.ipv4.ip_forward\nif grep -q '^net.ipv4.ip_forward' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.ip_forward to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.ip_forward.*/net.ipv4.ip_forward = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.ip_forward to 0 in /etc/sysctl.d/99-disable-ip-forwarding.conf\"\n  echo \"net.ipv4.ip_forward = 0\" \u003e\u003e /etc/sysctl.d/99-disable-ip-forwarding.conf\nfi\n\n# Set net.ipv6.conf.all.forwarding\nif grep -q '^net.ipv6.conf.all.forwarding' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.conf.all.forwarding to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.conf.all.forwarding.*/net.ipv6.conf.all.forwarding = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.conf.all.forwarding to 0 in /etc/sysctl.d/99-disable-ip-forwarding.conf\"\n  echo \"net.ipv6.conf.all.forwarding = 0\" \u003e\u003e /etc/sysctl.d/99-disable-ip-forwarding.conf\nfi\n\nsysctl -w net.ipv4.ip_forward=0\nsysctl -w net.ipv4.route.flush=1\n\nsysctl -w net.ipv6.conf.all.forwarding=0\nsysctl -w net.ipv6.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv6.conf.all.accept_ra'] == 0\n  || kernel.parameters['net.ipv6.conf.all.accept_ra'] == null\nkernel.parameters['net.ipv6.conf.default.accept_ra'] == 0\n  || kernel.parameters['net.ipv6.conf.default.accept_ra'] == null\n",
        "mql": "kernel.parameters['net.ipv6.conf.all.accept_ra'] == 0\n  || kernel.parameters['net.ipv6.conf.all.accept_ra'] == null\nkernel.parameters['net.ipv6.conf.default.accept_ra'] == 0\n  || kernel.parameters['net.ipv6.conf.default.accept_ra'] == null\n",
        "code_id": "bTRvw0zFOGI=",
        "checksum": "BbutHgAvjAk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ipv6-router-advertisements-are-not-accepted",
        "type": "\u0001",
        "title": "Ensure IPv6 router advertisements are not accepted",
        "docs": {
          "desc": "This check verifies that the system is configured to reject IPv6 router advertisements by ensuring the kernel parameters `net.ipv6.conf.all.accept_ra` and `net.ipv6.conf.default.accept_ra` are set to `0`.\n\n**Why this matters**\n\nIPv6 router advertisements (RAs) are used by routers to inform hosts about network configuration settings, such as default gateways and prefix information. While useful in dynamic network environments, accepting unsolicited RAs on systems that are not mobile or router-dependent can introduce security risks.\n\nIf IPv6 router advertisements are accepted:\n  - Malicious or misconfigured devices on the network could inject rogue RAs, redirecting traffic or altering host routing tables.\n  - Attackers could exploit this to perform man-in-the-middle attacks, traffic interception, or denial-of-service.\n  - It undermines predictable network configuration and may conflict with security policies that rely on static or managed routing.\n\nDisabling acceptance of IPv6 router advertisements helps ensure that routing configuration is controlled explicitly, reducing the likelihood of unauthorized or harmful route changes on the host.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv6.conf.all.accept_ra = 0\nnet.ipv6.conf.default.accept_ra = 0\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv6.conf.all.accept_ra=0\nsysctl -w net.ipv6.conf.default.accept_ra=0\nsysctl -w net.ipv6.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable IPv6 router advertisements acceptance\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure IPv6 router advertisements are not accepted in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-ipv6-router-advertisements.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv6.conf.all.accept_ra', value: '0' }\n        - { name: 'net.ipv6.conf.default.accept_ra', value: '0' }\n        - { name: 'net.ipv6.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable IPv6 router advertisements acceptance and persist the settings.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set net.ipv6.conf.all.accept_ra\nif grep -q '^net.ipv6.conf.all.accept_ra' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.conf.all.accept_ra to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.conf.all.accept_ra.*/net.ipv6.conf.all.accept_ra = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.conf.all.accept_ra to 0 in /etc/sysctl.d/99-disable-ipv6-router-advertisements.conf\"\n  echo \"net.ipv6.conf.all.accept_ra = 0\" \u003e\u003e /etc/sysctl.d/99-disable-ipv6-router-advertisements.conf\nfi\n\n# Set net.ipv6.conf.default.accept_ra\nif grep -q '^net.ipv6.conf.default.accept_ra' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.conf.default.accept_ra to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.conf.default.accept_ra.*/net.ipv6.conf.default.accept_ra = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.conf.default.accept_ra to 0 in /etc/sysctl.d/99-disable-ipv6-router-advertisements.conf\"\n  echo \"net.ipv6.conf.default.accept_ra = 0\" \u003e\u003e /etc/sysctl.d/99-disable-ipv6-router-advertisements.conf\nfi\n\n# Set net.ipv6.route.flush\nif grep -q '^net.ipv6.route.flush' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.route.flush to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.route.flush.*/net.ipv6.route.flush = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.route.flush to 1 in /etc/sysctl.d/99-disable-ipv6-router-advertisements.conf\"\n  echo \"net.ipv6.route.flush = 1\" \u003e\u003e /etc/sysctl.d/99-disable-ipv6-router-advertisements.conf\nfi\n\nsysctl -w net.ipv6.conf.all.accept_ra=0\nsysctl -w net.ipv6.conf.default.accept_ra=0\nsysctl -w net.ipv6.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "[\"/etc/systemd/journald.conf\"].where(file(_).exists) {\n  file(_) {\n    parse.ini(\"/etc/systemd/journald.conf\").sections[\"Journal\"][\"Compress\"] == \"yes\"\n  }\n}\n",
        "mql": "[\"/etc/systemd/journald.conf\"].where(file(_).exists) {\n  file(_) {\n    parse.ini(\"/etc/systemd/journald.conf\").sections[\"Journal\"][\"Compress\"] == \"yes\"\n  }\n}\n",
        "code_id": "ZvXlb6v6KyE=",
        "checksum": "ndSN/ktjShI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-journald-is-configured-to-compress-large-log-files",
        "type": "\u0019\f",
        "title": "Ensure journald is configured to compress large log files",
        "docs": {
          "desc": "This check ensures that journald is configured to compress large log files, helping to manage disk space and maintain system performance.\n\n**Why this matters**\n\njournald's compression capability provides several benefits:\n  - Prevents log files from consuming excessive disk space, ensuring system stability.\n  - Reduces the risk of logs becoming unmanageably large, simplifying log management.\n  - Supports efficient storage of log data, enabling better resource utilization.\n\nBy enabling log compression in journald, organizations can maintain a reliable logging system, optimize disk usage, and ensure effective log management.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo configure journald to compress large log files, edit the `/etc/systemd/journald.conf` file and add the following line:\n\n```bash\nCompress=yes\n```\n\nRestart the service to load the new configuration values:\n\n```bash\nsystemctl restart systemd-journald\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo configure journald to compress large log files, use the following Ansible playbook:\n\n```yaml\n---\n- name: Configure journald to compress large log files\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure Compress=yes is set in journald.conf\n      ansible.builtin.lineinfile:\n        path: /etc/systemd/journald.conf\n        regexp: '^#?Compress='\n        line: 'Compress=yes'\n        create: yes\n        backup: yes\n\n    - name: Restart systemd-journald to apply compression setting\n      ansible.builtin.systemd:\n        name: systemd-journald\n        state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo configure journald to compress large log files, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Configuring journald to compress large log files...\"\n\nif grep -q '^Compress=' /etc/systemd/journald.conf; then\n  sed -i 's/^Compress=.*/Compress=yes/' /etc/systemd/journald.conf\nelse\n  echo \"Compress=yes\" \u003e\u003e /etc/systemd/journald.conf\nfi\n\necho \"Restarting systemd-journald service...\"\nsystemctl restart systemd-journald\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {}
      },
      {
        "query": "[\"/etc/systemd/journald.conf\"].where(file(_).exists) {\n  file(_) {\n    parse.ini(\"/etc/systemd/journald.conf\").sections[\"Journal\"][\"ForwardToSyslog\"].downcase == \"yes\"\n  }\n}\n",
        "mql": "[\"/etc/systemd/journald.conf\"].where(file(_).exists) {\n  file(_) {\n    parse.ini(\"/etc/systemd/journald.conf\").sections[\"Journal\"][\"ForwardToSyslog\"].downcase == \"yes\"\n  }\n}\n",
        "code_id": "WQeoXe+JcK4=",
        "checksum": "pEo4ouZv0ow=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-journald-is-configured-to-send-logs-to-rsyslog",
        "type": "\u0019\f",
        "title": "Ensure journald is configured to send logs to rsyslog",
        "docs": {
          "desc": "This check ensures that journald is configured to forward logs to rsyslog, providing a consistent and reliable means of log collection and export.\n\n**Why this matters**\n\nForwarding logs from journald to rsyslog offers several benefits:\n  - Centralized log management, enabling easier analysis and troubleshooting.\n  - Compatibility with existing rsyslog configurations for log forwarding and storage.\n  - Enhanced reliability and flexibility in log handling, including support for remote log export.\n\nBy configuring journald to forward logs to rsyslog, organizations can improve log management, ensure consistent log collection, and maintain compliance with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo configure journald to forward logs to rsyslog, edit the `/etc/systemd/journald.conf` file and add the following line:\n\n```bash\nForwardToSyslog=yes\n```\n\nRestart the service to load the new configuration values:\n\n```bash\nsystemctl restart systemd-journald\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo configure journald to forward logs to rsyslog, use the following Ansible playbook:\n\n```yaml\n---\n- name: Configure journald to forward logs to rsyslog\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure ForwardToSyslog=yes is set in journald.conf\n      ansible.builtin.lineinfile:\n        path: /etc/systemd/journald.conf\n        regexp: '^#?ForwardToSyslog='\n        line: 'ForwardToSyslog=yes'\n        create: yes\n        backup: yes\n\n    - name: Restart systemd-journald to apply changes\n      ansible.builtin.systemd:\n        name: systemd-journald\n        state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo configure journald to forward logs to rsyslog, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Configuring journald to forward logs to rsyslog...\"\n\nif grep -q '^ForwardToSyslog=' /etc/systemd/journald.conf; then\n  sed -i 's/^ForwardToSyslog=.*/ForwardToSyslog=yes/' /etc/systemd/journald.conf\nelse\n  echo \"ForwardToSyslog=yes\" \u003e\u003e /etc/systemd/journald.conf\nfi\n\necho \"Restarting systemd-journald service...\"\nsystemctl restart systemd-journald\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {}
      },
      {
        "query": "[\"/etc/systemd/journald.conf\"].where(file(_).exists) {\n  file(_) {\n    parse.ini(\"/etc/systemd/journald.conf\").sections[\"Journal\"][\"Storage\"] == \"persistent\"\n  }\n}\n",
        "mql": "[\"/etc/systemd/journald.conf\"].where(file(_).exists) {\n  file(_) {\n    parse.ini(\"/etc/systemd/journald.conf\").sections[\"Journal\"][\"Storage\"] == \"persistent\"\n  }\n}\n",
        "code_id": "e9xjBam83U8=",
        "checksum": "9l5CzAGZmP8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-journald-is-configured-to-write-logfiles-to-persistent-disk",
        "type": "\u0019\f",
        "title": "Ensure journald is configured to write logfiles to persistent disk",
        "docs": {
          "desc": "This check ensures that journald is configured to write log files to a persistent disk, preventing log loss during system reboots and ensuring reliable log retention.\n\n**Why this matters**\n\nPersisting logs to a local disk provides several benefits:\n  - Protects logs from being lost during system reboots, ensuring continuity in log data.\n  - Enhances the reliability of log retention for troubleshooting and auditing purposes.\n  - Supports compliance with security policies and regulatory requirements that mandate log preservation.\n\nBy configuring journald to write logs to a persistent disk, organizations can maintain a robust logging infrastructure, safeguard critical log data, and ensure effective system monitoring.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo configure journald to write log files to a persistent disk, edit the `/etc/systemd/journald.conf` file and add the following line:\n\n```bash\nStorage=persistent\n```\n\nRestart the service to load the new configuration values:\n\n```bash\nsystemctl restart systemd-journald\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo configure journald to write log files to a persistent disk, use the following Ansible playbook:\n\n```yaml\n---\n- name: Configure journald to write logs to persistent storage\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure Storage=persistent is set in journald.conf\n      ansible.builtin.lineinfile:\n        path: /etc/systemd/journald.conf\n        regexp: '^#?Storage='\n        line: 'Storage=persistent'\n        create: yes\n        backup: yes\n\n    - name: Restart systemd-journald to apply storage setting\n      ansible.builtin.systemd:\n        name: systemd-journald\n        state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo configure journald to write log files to a persistent disk, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Configuring journald to write logs to persistent storage...\"\n\nif grep -q '^Storage=' /etc/systemd/journald.conf; then\n  sed -i 's/^Storage=.*/Storage=persistent/' /etc/systemd/journald.conf\nelse\n  echo \"Storage=persistent\" \u003e\u003e /etc/systemd/journald.conf\nfi\n\necho \"Restarting systemd-journald service...\"\nsystemctl restart systemd-journald\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {}
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/sbin\\/insmod\\s+\\-p\\s+x\\s+\\-k\\s+modules(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/sbin\\/rmmod\\s+\\-p\\s+x\\s+\\-k\\s+modules(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/sbin\\/modprobe\\s+\\-p\\s+x\\s+\\-k\\s+modules(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-a\\s+always,exit\\s+\\-F\\s+arch\\=b64\\s+\\-S\\s+init\\_module\\s+\\-S\\s+delete\\_module\\s+\\-k\\s+modules(\\s+)?$/))\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/sbin\\/insmod\\s+\\-p\\s+x\\s+\\-k\\s+modules(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/sbin\\/rmmod\\s+\\-p\\s+x\\s+\\-k\\s+modules(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/sbin\\/modprobe\\s+\\-p\\s+x\\s+\\-k\\s+modules(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-a\\s+always,exit\\s+\\-F\\s+arch\\=b64\\s+\\-S\\s+init\\_module\\s+\\-S\\s+delete\\_module\\s+\\-k\\s+modules(\\s+)?$/))\n",
        "code_id": "pIG2P/rTk2s=",
        "checksum": "sJnByZ0awtI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-kernel-module-loading-and-unloading-is-collected",
        "type": "\u0001",
        "title": "Ensure kernel module loading and unloading is collected",
        "docs": {
          "desc": "This check verifies that the loading and unloading of kernel modules is monitored by auditing the execution of related programs and system calls, such as `insmod`, `rmmod`, `modprobe`, `init_module`, and `delete_module`.\n\n**Why this matters**\n\nKernel modules extend the functionality of the Linux kernel by adding features such as device drivers or file systems. Monitoring the loading and unloading of kernel modules is critical for maintaining system security and integrity. If these events are not audited:\n  - Unauthorized or malicious modules could be loaded, compromising the system's security.\n  - Attackers could use kernel modules to hide malicious activities or escalate privileges.\n  - System administrators may lack visibility into critical changes to the kernel's behavior.\n\nBy auditing the execution of module-related programs and system calls, organizations can detect and respond to unauthorized changes, ensuring the integrity and security of the kernel.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nEdit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-modules.rules`\n\nAdd the following lines:\n\n```\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n```\n\nTo load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\nCheck if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for kernel module loading and unloading:\n\n```yaml\n---\n- name: Configure audit rules for kernel modules\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure audit rules for kernel modules are present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-modules.rules\n        block: |\n          -w /sbin/insmod -p x -k modules\n          -w /sbin/rmmod -p x -k modules\n          -w /sbin/modprobe -p x -k modules\n          -a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n        register: modules_audit_rules_updated\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: modules_audit_rules_updated.changed\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the audit rules for kernel module loading and unloading, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting audit rules for kernel modules...\"\necho \"-w /sbin/insmod -p x -k modules\" \u003e /etc/audit/rules.d/50-modules.rules\necho \"-w /sbin/rmmod -p x -k modules\" \u003e\u003e /etc/audit/rules.d/50-modules.rules\necho \"-w /sbin/modprobe -p x -k modules\" \u003e\u003e /etc/audit/rules.d/50-modules.rules\necho \"-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\" \u003e\u003e /etc/audit/rules.d/50-modules.rules\n\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "service(\"slapd\").enabled == false\nservice(\"slapd\").running == false\n",
        "mql": "service(\"slapd\").enabled == false\nservice(\"slapd\").running == false\n",
        "code_id": "QTN+NYX439o=",
        "checksum": "kfIzhmNx62E=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ldap-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure LDAP server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the LDAP server service (slapd) is neither running nor enabled on the system.\n\n**Why this matters**\n\nThe Lightweight Directory Access Protocol (LDAP) server provides centralized directory services for managing user identities, authentication data, and configuration information across a network. While useful in enterprise environments that require directory-based access management, an LDAP server is rarely needed on general-purpose Linux systems unless explicitly part of the infrastructure design.\n\nIf an unnecessary LDAP server is running:\n  - It may expose sensitive directory information to the network.\n  - It increases the system's attack surface by introducing a network-accessible service.\n  - It can be misused or targeted by attackers to enumerate user accounts, perform unauthorized lookups, or exploit known vulnerabilities.\n\nTo reduce risk and enforce the principle of least functionality, the slapd service should be stopped and disabled on systems that are not intended to serve directory services. This helps limit exposure and strengthens the host's overall security posture.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to stop and disable `slapd`:\n\n```bash\nsystemctl stop slapd\nsystemctl disable slapd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `slapd`:\n\n```yaml\n---\n- name: Stop and disable LDAP server (slapd)\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure LDAP server (slapd) is stopped and disabled\n      ansible.builtin.systemd:\n        name: slapd\n        state: stopped\n        enabled: no\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the LDAP server.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling the slapd service...\"\nsystemctl stop slapd\nsystemctl disable slapd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "checksum": "CepIHGYVVdk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected",
        "title": "Ensure login and logout events are collected",
        "docs": {
          "desc": "This check verifies that auditd is configured to monitor login and logout events. The parameters in this section track changes to the files associated with login and logout events. The file `/var/log/lastlog` tracks the last login of each user. The file `/var/log/tallylog` tracks failed login attempts. The file `/var/run/faillock` is used by the `pam_faillock` module to track failed authentication attempts. All audit records will be tagged with the identifier \"logins.\"\n\n**Why this matters**\n\nMonitoring login and logout events is critical for maintaining system security. Unauthorized access attempts or successful logins by malicious actors can lead to data breaches, privilege escalation, or other security incidents.\n\nIf monitoring is not enabled:\n  - Unauthorized login attempts may go undetected, allowing attackers to gain access to the system.\n  - Legitimate user activity may be obscured, complicating incident response efforts.\n  - The system may fall out of compliance with security policies or regulatory requirements.\n\nBy ensuring that login and logout events are monitored, organizations can maintain a secure environment and quickly respond to potential threats. This is particularly important in environments with sensitive data or critical infrastructure.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-logins.rules`\n\n2. Add the following lines:\n\n```\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n```\n\n3. Add the following additional line for Debian/Ubuntu based systems:\n\n```\n-w /var/log/faillog -p wa -k logins\n```\n\n4. Add the following additional line for Red Hat/Fedora/Amazon Linux based systems:\n\n```\n-w /var/run/faillock -p wa -k logins\n```\n\n5. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n6. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for login and logout events:\n\n```yaml\n---\n- name: Ensure login and logout events are collected\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set base login audit rules\n      copy:\n        dest: /etc/audit/rules.d/50-logins.rules\n        content: |\n          -w /var/log/lastlog -p wa -k logins\n          -w /var/log/tallylog -p wa -k logins\n      notify: Load audit rules\n\n    - name: Add Debian/Ubuntu-specific faillog audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/log/faillog -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family == \"Debian\"\n      notify: Load audit rules\n\n    - name: Add RedHat/Fedora/Amazon-specific faillock audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/run/faillock -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family in [\"RedHat\", \"Amazon\"]\n      notify: Load audit rules\n\n    - name: Check if audit rules are immutable\n      shell: |\n        auditctl -s | grep '^enabled' | awk '{print $2}'\n      register: audit_enabled\n\n    - name: Warn if reboot is required to apply immutable audit rules\n      debug:\n        msg: \"Reboot required to load audit rules because the configuration is immutable.\"\n      when: audit_enabled.stdout == \"2\"\n\n  handlers:\n    - name: Load audit rules\n      command: augenrules --load\n  ```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure login and logout events are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-logins.rules\"\n\necho \"Ensuring audit rules for lastlog and tallylog are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\nEOF\n\nif [[ -d /var/log/faillog ]]; then\n  echo \"Adding auditing for faillog in $RULES_FILE\"\n  echo \"-w /var/log/faillog -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\nif [[ -d /var/run/faillock ]]; then\n  echo \"Adding auditing for faillock in $RULES_FILE\"\n  echo \"-w /var/run/faillock -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\necho \"Audit rules for login and logout events have been set in $RULES_FILE\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ],
        "variants": [
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected-debian"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected-rhel"
          },
          {
            "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected-other"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/lastlog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/faillog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/tallylog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/var\\/log\\/faillog|\\/var\\/log\\/lastlog|\\/var\\/log\\/tallylog/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"logins\"])\n      || split(\" \").containsAll([\"-F\",\"key=logins\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/lastlog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/faillog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/tallylog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/var\\/log\\/faillog|\\/var\\/log\\/lastlog|\\/var\\/log\\/tallylog/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"logins\"])\n      || split(\" \").containsAll([\"-F\",\"key=logins\"])\n)\n",
        "code_id": "7hQz1GjiMIU=",
        "checksum": "izptaD/BuYM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected-debian",
        "type": "\u0001",
        "title": "Ensure login and logout events are collected",
        "docs": {
          "desc": "This check verifies that auditd is configured to monitor login and logout events. The parameters in this section track changes to the files associated with login and logout events. The file `/var/log/lastlog` tracks the last login of each user. The file `/var/log/tallylog` tracks failed login attempts. The file `/var/run/faillock` is used by the `pam_faillock` module to track failed authentication attempts. All audit records will be tagged with the identifier \"logins.\"\n\n**Why this matters**\n\nMonitoring login and logout events is critical for maintaining system security. Unauthorized access attempts or successful logins by malicious actors can lead to data breaches, privilege escalation, or other security incidents.\n\nIf monitoring is not enabled:\n  - Unauthorized login attempts may go undetected, allowing attackers to gain access to the system.\n  - Legitimate user activity may be obscured, complicating incident response efforts.\n  - The system may fall out of compliance with security policies or regulatory requirements.\n\nBy ensuring that login and logout events are monitored, organizations can maintain a secure environment and quickly respond to potential threats. This is particularly important in environments with sensitive data or critical infrastructure.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-logins.rules`\n\n2. Add the following lines:\n\n```\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n```\n\n3. Add the following additional line for Debian/Ubuntu based systems:\n\n```\n-w /var/log/faillog -p wa -k logins\n```\n\n4. Add the following additional line for Red Hat/Fedora/Amazon Linux based systems:\n\n```\n-w /var/run/faillock -p wa -k logins\n```\n\n5. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n6. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for login and logout events:\n\n```yaml\n---\n- name: Ensure login and logout events are collected\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set base login audit rules\n      copy:\n        dest: /etc/audit/rules.d/50-logins.rules\n        content: |\n          -w /var/log/lastlog -p wa -k logins\n          -w /var/log/tallylog -p wa -k logins\n      notify: Load audit rules\n\n    - name: Add Debian/Ubuntu-specific faillog audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/log/faillog -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family == \"Debian\"\n      notify: Load audit rules\n\n    - name: Add RedHat/Fedora/Amazon-specific faillock audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/run/faillock -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family in [\"RedHat\", \"Amazon\"]\n      notify: Load audit rules\n\n    - name: Check if audit rules are immutable\n      shell: |\n        auditctl -s | grep '^enabled' | awk '{print $2}'\n      register: audit_enabled\n\n    - name: Warn if reboot is required to apply immutable audit rules\n      debug:\n        msg: \"Reboot required to load audit rules because the configuration is immutable.\"\n      when: audit_enabled.stdout == \"2\"\n\n  handlers:\n    - name: Load audit rules\n      command: augenrules --load\n  ```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure login and logout events are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-logins.rules\"\n\necho \"Ensuring audit rules for lastlog and tallylog are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\nEOF\n\nif [[ -d /var/log/faillog ]]; then\n  echo \"Adding auditing for faillog in $RULES_FILE\"\n  echo \"-w /var/log/faillog -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\nif [[ -d /var/run/faillock ]]; then\n  echo \"Adding auditing for faillock in $RULES_FILE\"\n  echo \"-w /var/run/faillock -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\necho \"Audit rules for login and logout events have been set in $RULES_FILE\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {
          "items": {
            "Z50YyJG54ZE=": {
              "mql": "asset.family.contains(\"debian\")",
              "code_id": "Z50YyJG54ZE=",
              "checksum": "0jShjMEsdwc=",
              "mrn": "//policy.api.mondoo.app/filter/Z50YyJG54ZE=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/lastlog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/tallylog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/var\\/log\\/lastlog|\\/var\\/log\\/tallylog/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"logins\"])\n      || split(\" \").containsAll([\"-F\",\"key=logins\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/lastlog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/tallylog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/var\\/log\\/lastlog|\\/var\\/log\\/tallylog/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"logins\"])\n      || split(\" \").containsAll([\"-F\",\"key=logins\"])\n)\n",
        "code_id": "MmC8Qgre0mk=",
        "checksum": "KUHWzB912Bk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected-other",
        "type": "\u0001",
        "title": "Ensure login and logout events are collected",
        "docs": {
          "desc": "This check verifies that auditd is configured to monitor login and logout events. The parameters in this section track changes to the files associated with login and logout events. The file `/var/log/lastlog` tracks the last login of each user. The file `/var/log/tallylog` tracks failed login attempts. The file `/var/run/faillock` is used by the `pam_faillock` module to track failed authentication attempts. All audit records will be tagged with the identifier \"logins.\"\n\n**Why this matters**\n\nMonitoring login and logout events is critical for maintaining system security. Unauthorized access attempts or successful logins by malicious actors can lead to data breaches, privilege escalation, or other security incidents.\n\nIf monitoring is not enabled:\n  - Unauthorized login attempts may go undetected, allowing attackers to gain access to the system.\n  - Legitimate user activity may be obscured, complicating incident response efforts.\n  - The system may fall out of compliance with security policies or regulatory requirements.\n\nBy ensuring that login and logout events are monitored, organizations can maintain a secure environment and quickly respond to potential threats. This is particularly important in environments with sensitive data or critical infrastructure.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-logins.rules`\n\n2. Add the following lines:\n\n```\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n```\n\n3. Add the following additional line for Debian/Ubuntu based systems:\n\n```\n-w /var/log/faillog -p wa -k logins\n```\n\n4. Add the following additional line for Red Hat/Fedora/Amazon Linux based systems:\n\n```\n-w /var/run/faillock -p wa -k logins\n```\n\n5. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n6. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for login and logout events:\n\n```yaml\n---\n- name: Ensure login and logout events are collected\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set base login audit rules\n      copy:\n        dest: /etc/audit/rules.d/50-logins.rules\n        content: |\n          -w /var/log/lastlog -p wa -k logins\n          -w /var/log/tallylog -p wa -k logins\n      notify: Load audit rules\n\n    - name: Add Debian/Ubuntu-specific faillog audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/log/faillog -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family == \"Debian\"\n      notify: Load audit rules\n\n    - name: Add RedHat/Fedora/Amazon-specific faillock audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/run/faillock -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family in [\"RedHat\", \"Amazon\"]\n      notify: Load audit rules\n\n    - name: Check if audit rules are immutable\n      shell: |\n        auditctl -s | grep '^enabled' | awk '{print $2}'\n      register: audit_enabled\n\n    - name: Warn if reboot is required to apply immutable audit rules\n      debug:\n        msg: \"Reboot required to load audit rules because the configuration is immutable.\"\n      when: audit_enabled.stdout == \"2\"\n\n  handlers:\n    - name: Load audit rules\n      command: augenrules --load\n  ```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure login and logout events are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-logins.rules\"\n\necho \"Ensuring audit rules for lastlog and tallylog are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\nEOF\n\nif [[ -d /var/log/faillog ]]; then\n  echo \"Adding auditing for faillog in $RULES_FILE\"\n  echo \"-w /var/log/faillog -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\nif [[ -d /var/run/faillock ]]; then\n  echo \"Adding auditing for faillock in $RULES_FILE\"\n  echo \"-w /var/run/faillock -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\necho \"Audit rules for login and logout events have been set in $RULES_FILE\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {
          "items": {
            "+hNUsU8LJQU=": {
              "mql": "asset.family.contains(/redhat|debian/) == false \u0026\u0026 asset.platform != \"amazonlinux\"",
              "code_id": "+hNUsU8LJQU=",
              "checksum": "4lOb8IKR03g=",
              "mrn": "//policy.api.mondoo.app/filter/+hNUsU8LJQU=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/run\\/faillock/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/lastlog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/tallylog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/var\\/run\\/faillock|\\/var\\/log\\/lastlog|\\/var\\/log\\/tallylog/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"logins\"])\n      || split(\" \").containsAll([\"-F\",\"key=logins\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/run\\/faillock/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/lastlog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == /\\/var\\/log\\/tallylog/)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == /\\/var\\/run\\/faillock|\\/var\\/log\\/lastlog|\\/var\\/log\\/tallylog/).all(\n  split(\"-\").contains(/p wa/)\n    \u0026\u0026 split(\" \").containsAll([\"-k\",\"logins\"])\n      || split(\" \").containsAll([\"-F\",\"key=logins\"])\n)\n",
        "code_id": "Jy5JicBru9A=",
        "checksum": "W2WTGA/g/jo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-login-and-logout-events-are-collected-rhel",
        "type": "\u0001",
        "title": "Ensure login and logout events are collected",
        "docs": {
          "desc": "This check verifies that auditd is configured to monitor login and logout events. The parameters in this section track changes to the files associated with login and logout events. The file `/var/log/lastlog` tracks the last login of each user. The file `/var/log/tallylog` tracks failed login attempts. The file `/var/run/faillock` is used by the `pam_faillock` module to track failed authentication attempts. All audit records will be tagged with the identifier \"logins.\"\n\n**Why this matters**\n\nMonitoring login and logout events is critical for maintaining system security. Unauthorized access attempts or successful logins by malicious actors can lead to data breaches, privilege escalation, or other security incidents.\n\nIf monitoring is not enabled:\n  - Unauthorized login attempts may go undetected, allowing attackers to gain access to the system.\n  - Legitimate user activity may be obscured, complicating incident response efforts.\n  - The system may fall out of compliance with security policies or regulatory requirements.\n\nBy ensuring that login and logout events are monitored, organizations can maintain a secure environment and quickly respond to potential threats. This is particularly important in environments with sensitive data or critical infrastructure.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-logins.rules`\n\n2. Add the following lines:\n\n```\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n```\n\n3. Add the following additional line for Debian/Ubuntu based systems:\n\n```\n-w /var/log/faillog -p wa -k logins\n```\n\n4. Add the following additional line for Red Hat/Fedora/Amazon Linux based systems:\n\n```\n-w /var/run/faillock -p wa -k logins\n```\n\n5. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n6. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for login and logout events:\n\n```yaml\n---\n- name: Ensure login and logout events are collected\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set base login audit rules\n      copy:\n        dest: /etc/audit/rules.d/50-logins.rules\n        content: |\n          -w /var/log/lastlog -p wa -k logins\n          -w /var/log/tallylog -p wa -k logins\n      notify: Load audit rules\n\n    - name: Add Debian/Ubuntu-specific faillog audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/log/faillog -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family == \"Debian\"\n      notify: Load audit rules\n\n    - name: Add RedHat/Fedora/Amazon-specific faillock audit rule\n      lineinfile:\n        path: /etc/audit/rules.d/50-logins.rules\n        line: \"-w /var/run/faillock -p wa -k logins\"\n        create: yes\n        insertafter: EOF\n      when: ansible_os_family in [\"RedHat\", \"Amazon\"]\n      notify: Load audit rules\n\n    - name: Check if audit rules are immutable\n      shell: |\n        auditctl -s | grep '^enabled' | awk '{print $2}'\n      register: audit_enabled\n\n    - name: Warn if reboot is required to apply immutable audit rules\n      debug:\n        msg: \"Reboot required to load audit rules because the configuration is immutable.\"\n      when: audit_enabled.stdout == \"2\"\n\n  handlers:\n    - name: Load audit rules\n      command: augenrules --load\n  ```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure login and logout events are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-logins.rules\"\n\necho \"Ensuring audit rules for lastlog and tallylog are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\nEOF\n\nif [[ -d /var/log/faillog ]]; then\n  echo \"Adding auditing for faillog in $RULES_FILE\"\n  echo \"-w /var/log/faillog -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\nif [[ -d /var/run/faillock ]]; then\n  echo \"Adding auditing for faillock in $RULES_FILE\"\n  echo \"-w /var/run/faillock -p wa -k logins\" \u003e\u003e \"$RULES_FILE\"\nfi\n\necho \"Audit rules for login and logout events have been set in $RULES_FILE\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {
          "items": {
            "xJDq/JxOoLM=": {
              "mql": "asset.family.contains(\"redhat\") || asset.platform == \"amazonlinux\"",
              "code_id": "xJDq/JxOoLM=",
              "checksum": "fJWxbo76iRM=",
              "mrn": "//policy.api.mondoo.app/filter/xJDq/JxOoLM=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "if( package(\"postfix\").installed \u0026\u0026 service('postfix').running ) {\n  parse.ini(\"/etc/postfix/main.cf\").params[\"inet_interfaces\"] == \"localhost\" || parse.ini(\"/etc/postfix/main.cf\").params[\"inet_interfaces\"] == \"loopback-only\"\n}\nif( package(\"exim4\").installed \u0026\u0026 service('exim4').running ) {\n  parse.ini(\"/etc/exim4/update-exim4.conf.conf\").params[\"dc_local_interfaces\"] == \"'127.0.0.1 ; ::1'\"\n}\nports.listening.where(address != \"127.0.0.1\" \u0026\u0026 address != \"[::1]\").none(port == 25)\n",
        "mql": "if( package(\"postfix\").installed \u0026\u0026 service('postfix').running ) {\n  parse.ini(\"/etc/postfix/main.cf\").params[\"inet_interfaces\"] == \"localhost\" || parse.ini(\"/etc/postfix/main.cf\").params[\"inet_interfaces\"] == \"loopback-only\"\n}\nif( package(\"exim4\").installed \u0026\u0026 service('exim4').running ) {\n  parse.ini(\"/etc/exim4/update-exim4.conf.conf\").params[\"dc_local_interfaces\"] == \"'127.0.0.1 ; ::1'\"\n}\nports.listening.where(address != \"127.0.0.1\" \u0026\u0026 address != \"[::1]\").none(port == 25)\n",
        "code_id": "xCFcWbP9qQo=",
        "checksum": "AtylwFHBDsE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-mail-transfer-agent-is-configured-for-local-only-mode",
        "type": "\u0001",
        "title": "Ensure mail transfer agent is configured for local-only mode",
        "docs": {
          "desc": "This check verifies that the system's mail transfer agent (MTA), such as Postfix or Exim, is configured to accept and process email only from the local host, rather than listening on external network interfaces.\n\n**Why this matters**\n\nMail transfer agents are used to route and deliver email messages. On most Linux systems, an MTA is installed by default to handle local system notifications, such as cron job outputs or security alerts. However, if the MTA is configured to listen on external interfaces, it may unintentionally expose the system to external email traffic.\n\nAllowing remote connections to a local MTA can:\n  - Turn the system into an open relay if not properly secured.\n  - Increase the attack surface by exposing the MTA to brute-force attacks, spoofed messages, or software vulnerabilities.\n  - Introduce compliance concerns if email flows are not properly audited or encrypted.\n\nConfiguring the MTA to listen only on the loopback interface (127.0.0.1) ensures it serves only local applications and users. This reduces exposure, limits attack vectors, and aligns with security best practices for systems that are not intended to function as full email servers.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. For Postfix, edit the main configuration file `/etc/postfix/main.cf`\n2. Find the line that starts with `inet_interfaces` and change it to:\n\n```\ninet_interfaces = loopback-only\n```\n\n3. Restart Postfix:\n\n```bash\nsystemctl restart postfix\n```\n\n4. For Exim4, edit the Exim4 configuration file:\n\n```bash\nnano /etc/exim4/update-exim4.conf.conf\n```\n\n5. Find the line that sets `dc_local_interfaces` and modify it to:\n\n```\ndc_local_interfaces='127.0.0.1 ; ::1'\n```\n\n6. Regenerate the Exim4 runtime configuration and restart the service:\n\n```bash\nupdate-exim4.conf\nsystemctl restart exim4\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to ensure the Postfix is configured for local-only mode:\n\n```yaml\n---\n- name: Ensure mail transfer agent is configured for local-only mode\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Configure Postfix for local-only mode\n      ansible.builtin.lineinfile:\n        path: /etc/postfix/main.cf\n        regexp: '^inet_interfaces'\n        line: 'inet_interfaces = loopback-only'\n        state: present\n\n    - name: Restart Postfix\n      ansible.builtin.systemd:\n        name: postfix\n        state: restarted\n```\n\nUse this Ansible playbook to ensure the Exim4 is configured for local-only mode:\n\n```yaml\n---\n- name: Ensure Exim4 is configured for local-only mode\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Configure Exim4 for local-only mode\n      ansible.builtin.lineinfile:\n        path: /etc/exim4/update-exim4.conf.conf\n        regexp: '^dc_local_interfaces'\n        line: 'dc_local_interfaces=\\'127.0.0.1 ; ::1\\''\n        state: present\n\n    - name: Regenerate Exim4 configuration\n      ansible.builtin.command:\n        cmd: update-exim4.conf\n\n    - name: Restart Exim4\n      ansible.builtin.systemd:\n        name: exim4\n        state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to configure the MTA for local-only mode.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Configuring Postfix for local-only mode...\"\nsed -i 's/^inet_interfaces = .*/inet_interfaces = loopback-only/' /etc/postfix/main.cf\nsystemctl restart postfix\n\necho \"Configuring Exim4 for local-only mode...\"\nsed -i \"s/^dc_local_interfaces = .*/dc_local_interfaces='127.0.0.1 ; ::1'/\" /etc/exim4/update-exim4.conf.conf\nupdate-exim4.conf\nsystemctl restart exim4\n```"
            }
          ]
        },
        "impact": {
          "value": 85
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "service(\"nfs\").enabled == false\nservice(\"nfs\").running == false\nservice(\"rpcbind\").enabled == false\nservice(\"rpcbind\").running == false\n",
        "mql": "service(\"nfs\").enabled == false\nservice(\"nfs\").running == false\nservice(\"rpcbind\").enabled == false\nservice(\"rpcbind\").running == false\n",
        "code_id": "HKo0vfMZsRE=",
        "checksum": "IuQpd9WSy4c=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-nfs-and-rpc-are-not-enabled",
        "type": "\u0001",
        "title": "Ensure NFS and RPC are stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the NFS (nfs) and RPC (rpcbind) services are not running and are disabled from starting at boot. These services are commonly used to share directories across systems on a network using the Network File System (NFS) protocol.\n\n**Why this matters**\n\nNFS and RPC are powerful but legacy components of networked UNIX environments. They introduce significant security risks when enabled unnecessarily, particularly on systems not explicitly configured as file servers or requiring remote filesystem mounts.\n\nWhen NFS and RPC are active:\n  - They open multiple ports and expose services that can be discovered and potentially exploited.\n  - RPC-based services may leak metadata about system configurations or mount points.\n  - Misconfigurations or vulnerabilities in these services can be used for privilege escalation, lateral movement, or data exfiltration.\n\nDisabling NFS and RPC services on systems where they are not required reduces unnecessary network exposure, aligns with the principle of least functionality, and helps harden systems against remote access threats.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Run this command to stop and disable `nfs` and `rpcbind`:\n\n```bash\nsystemctl stop nfs\nsystemctl stop rpcbind\n\nsystemctl disable nfs\nsystemctl disable rpcbind\n```\n\n2. To make the service `nfs` and `rpcbind` invisible to other services run this command:\n\n```bash\nsystemctl mask nfs\nsystemctl mask rpcbind\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `nfs` and `rpcbind`:\n\n```yaml\n---\n- name: Stop and disable NFS and RPC services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure NFS and RPC services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n        masked: true\n      loop:\n        - nfs\n        - rpcbind\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the NFS and RPC services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling NFS and RPC services...\"\nsystemctl stop nfs\nsystemctl stop rpcbind\nsystemctl disable nfs\nsystemctl disable rpcbind\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "service(\"ypserv\").enabled == false\nservice(\"ypserv\").running == false\nservice(\"nis\").enabled == false\nservice(\"nis\").running == false\n",
        "mql": "service(\"ypserv\").enabled == false\nservice(\"ypserv\").running == false\nservice(\"nis\").enabled == false\nservice(\"nis\").running == false\n",
        "code_id": "rJzKiYz1fys=",
        "checksum": "w8etPo1o3II=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-nis-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure NIS server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the Network Information Service (NIS) server services, such as ypserv or nis, are not running and are disabled on the system.\n\n**Why this matters**\n\nNIS (formerly known as Yellow Pages) is a legacy directory service protocol used to centrally manage user accounts and configuration data across multiple systems. While once common in UNIX environments, NIS has significant security limitations and has been largely replaced by more secure alternatives like LDAP or Kerberos.\n\nIf the NIS server is enabled unnecessarily:\n  - It may transmit sensitive data such as usernames and password hashes in plaintext.\n  - NIS lacks modern authentication and encryption mechanisms, making it highly susceptible to eavesdropping and spoofing attacks.\n  - Running NIS services can expose the system to unauthorized access or information disclosure, especially in mixed or untrusted networks.\n\nOn systems that are not explicitly designated to serve as NIS servers, ypserv, nis, and related services should be stopped and disabled. This helps enforce the principle of least functionality and significantly reduces the system's vulnerability to legacy protocol risks.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable `ypserv` and `nis`:\n\n```bash\nsystemctl stop ypserv\nsystemctl stop nis\n\nsystemctl disable ypserv\nsystemctl disable nis\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `ypserv` and `nis`:\n\n```yaml\n---\n- name: Stop and disable NIS server services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure NIS server services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - ypserv\n        - nis\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable NIS server services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling NIS server services...\"\nsystemctl stop ypserv\nsystemctl stop nis\nsystemctl disable ypserv\nsystemctl disable nis\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "groups.list.duplicates(gid).none()\n",
        "mql": "groups.list.duplicates(gid).none()\n",
        "code_id": "vf3LKN6rpLg=",
        "checksum": "fo6DvYCz3NQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-gids-exist",
        "type": "\u0004",
        "title": "Ensure no duplicate GIDs exist",
        "docs": {
          "desc": "This check ensures that each group ID (GID) in the system is unique and does not have duplicates in the `/etc/group` file. Unique GIDs are critical for maintaining proper group identification and system security.\n\n**Why this matters**\n\nDuplicate GIDs can lead to confusion and security risks:\n\n- It becomes difficult to track group ownership and permissions, leading to potential security gaps.\n- System utilities and applications may behave unpredictably due to conflicts in group identification.\n- Networked systems may experience inconsistencies, especially when sharing resources or accessing files across systems.\n\nBy ensuring that GIDs are unique, organizations can maintain a secure and well-functioning system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo ensure no duplicate GIDs exist, you can use the following command to list groups with duplicate GIDs:\n\n```bash\nawk -F: '{print $3}' /etc/group | sort | uniq -d\n```\n\nIf duplicates are found, you can change the GID of a group using the `groupmod` command:\n\n```bash\ngroupmod -g \u003cnew gid\u003e \u003cold groupname\u003e\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "groups.list.duplicates(name).none()\n",
        "mql": "groups.list.duplicates(name).none()\n",
        "code_id": "YNN6XbHEMSg=",
        "checksum": "IKHfNacnwzs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-group-names-exist",
        "type": "\u0004",
        "title": "Ensure no duplicate group names exist",
        "docs": {
          "desc": "This check ensures that each login name, user ID (UID), and group ID (GID) is unique across the system. It also ensures that every user is a member of at least one group, and that every GID mentioned in the `/etc/passwd` file is defined in the `/etc/group` file.\n\n**Why this matters**\n\nUnique UIDs, user names, and GIDs are essential for proper system management and security. If duplicates or inconsistencies exist:\n\n- It becomes difficult to track user activity and file ownership, leading to potential security gaps.\n- System utilities and applications may behave unpredictably due to conflicts in user or group identification.\n- Networked systems may experience inconsistencies, especially when sharing resources or accessing files across systems.\n\nBy ensuring that UIDs, user names, and GIDs are unique, and that group memberships are properly defined, organizations can maintain a secure and well-functioning system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo ensure no duplicate group names exist, you can use the following command to list groups with duplicate names:\n\n```bash\nawk -F: '{print $1}' /etc/group | sort | uniq -d\n```\n\nIf duplicates are found, you can change the group name of a group using the `groupmod` command:\n\n```bash\ngroupmod -n \u003cnew group name\u003e \u003cold groupname\u003e\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "users.list.duplicates(uid).none()\n",
        "mql": "users.list.duplicates(uid).none()\n",
        "code_id": "/xtAflG+77k=",
        "checksum": "CPlaJleY3Z8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-uids-exist",
        "type": "\u0004",
        "title": "Ensure no duplicate UIDs exist",
        "docs": {
          "desc": "This check ensures that each user ID (UID), login name, and group ID (GID) is unique across the system. Duplicate UIDs, user names, or GIDs can lead to security and operational issues, making it critical to maintain uniqueness.\n\n**Why this matters**\n\nUnique UIDs, user names, and GIDs are essential for proper system management and security. If duplicates exist:\n\n- It becomes difficult to track user activity and file ownership, leading to potential security gaps.\n- System utilities and applications may behave unpredictably due to conflicts in user or group identification.\n- Networked systems may experience inconsistencies, especially when sharing resources or accessing files across systems.\n\nBy ensuring that UIDs, user names, and GIDs are unique, organizations can maintain a secure and well-functioning system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo ensure no duplicate UIDs exist, you can use the following command to list users with duplicate UIDs:\n\n```bash\nawk -F: '{print $3}' /etc/passwd | sort | uniq -d\n```\n\nIf duplicates are found, you can change the UID of a user using the `usermod` command:\n\n```bash\nusermod -u \u003cnew uid\u003e \u003cuser\u003e\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "users.list.duplicates(name).none()\n",
        "mql": "users.list.duplicates(name).none()\n",
        "code_id": "003uGoeCJx8=",
        "checksum": "/sAAGm5+Z5s=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-user-names-exist",
        "type": "\u0004",
        "title": "Ensure no duplicate user names exist",
        "docs": {
          "desc": "This check ensures that each user name in the system is unique and does not have duplicates in the `/etc/passwd` file. Unique user names are critical for maintaining proper user identification and system security.\n\n**Why this matters**\n\nDuplicate user names can lead to confusion and security risks:\n\n- It becomes difficult to track user activity and file ownership, leading to potential security gaps.\n- System utilities and applications may behave unpredictably due to conflicts in user identification.\n- Networked systems may experience inconsistencies, especially when sharing resources or accessing files across systems.\n\nBy ensuring that user names are unique, organizations can maintain a secure and well-functioning system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo ensure no duplicate user names exist, you can use the following command to list users with duplicate names:\n\n```bash\nawk -F: '{print $1}' /etc/passwd | sort | uniq -d\n```\n\nIf duplicates are found, you can change the user name of a user using the `usermod` command:\n\n```bash\nusermod -l \u003cnew login-name\u003e \u003cold username\u003e\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "sshd.config.ciphers != empty\nsshd.config.ciphers.containsOnly(props.mondooLinuxSecuritySshdCiphers)\n",
        "mql": "sshd.config.ciphers != empty\nsshd.config.ciphers.containsOnly(props.mondooLinuxSecuritySshdCiphers)\n",
        "code_id": "oF0BVouZexA=",
        "checksum": "VEj4QtHD93Y=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-only-strong-ciphers-are-used",
        "type": "\u0001",
        "title": "Ensure only strong ciphers are used",
        "docs": {
          "desc": "This check ensures that the SSH configuration limits the ciphers used during communication to secure and approved algorithms. Restricting the ciphers helps prevent the use of weak or deprecated encryption methods that could compromise the confidentiality and integrity of SSH sessions.\n\n**Why this matters**\n\nSSH is a critical protocol for secure remote access and management of systems. If weak or deprecated ciphers are allowed:\n\n- Attackers could exploit vulnerabilities in outdated encryption methods to intercept or manipulate SSH communications.\n- Sensitive data transmitted during SSH sessions could be exposed to unauthorized parties.\n- The overall security posture of the system could be weakened, increasing the risk of compromise.\n\nBy enforcing the use of strong and approved ciphers, organizations can ensure secure SSH communication, protect sensitive data, and maintain compliance with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo configure SSH to use only strong ciphers, edit the `/etc/ssh/sshd_config` file and add or modify the `Ciphers` parameter to include a comma-separated list of approved ciphers.\n\nExample:\n\n```bash\nCiphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo configure SSH to use only strong ciphers, use the following Ansible playbook:\n\n```yaml\n---\n- name: Configure SSH to use only strong ciphers\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure Ciphers are set in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^Ciphers'\n        line: 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'\n        create: yes\n        state: present\n        register: ssh_ciphers_config_change\n    - name: Restart SSH service to apply changes\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n        when: ssh_ciphers_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that only strong ciphers are used in SSH, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nCIPHER_LINE=\"Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\"\n\nif grep -q '^Ciphers' /etc/ssh/sshd_config; then\n  echo \"Updating Ciphers in sshd_config...\"\n  sed -i \"s/^Ciphers.*/$CIPHER_LINE/\" /etc/ssh/sshd_config\nelse\n  echo \"Adding Ciphers to sshd_config...\"\n  echo \"$CIPHER_LINE\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "6JjwtW5h8yk=": {
              "mql": "package('openssh-server').installed",
              "code_id": "6JjwtW5h8yk=",
              "checksum": "hFWTa/waBVM=",
              "mrn": "//policy.api.mondoo.app/filter/6JjwtW5h8yk=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "if( package('openssh-server').version \u003e= semver(\"6\") \u0026\u0026 package('openssh-server').version \u003c semver(\"7\")  ) {\n  return [\"aes256-ctr\", \"aes192-ctr\", \"aes128-ctr\"]\n}\nreturn [\"chacha20-poly1305@openssh.com\",\"aes256-gcm@openssh.com\",\"aes128-gcm@openssh.com\",\"aes256-ctr\",\"aes192-ctr\",\"aes128-ctr\"]\n",
            "code_id": "wi5AxmxexCM=",
            "checksum": "Qg1gJcy79CE=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySshdCiphers",
            "uid": "mondooLinuxSecuritySshdCiphers",
            "type": "\u0019\u0007",
            "title": "Define the hardened ciphers for all SSH configurations"
          }
        ]
      },
      {
        "query": "sshd.config.kexs != empty\nsshd.config.kexs.containsOnly(props.mondooLinuxSecurityKexAlgos)\n",
        "mql": "sshd.config.kexs != empty\nsshd.config.kexs.containsOnly(props.mondooLinuxSecurityKexAlgos)\n",
        "code_id": "oeEK/apU+Nk=",
        "checksum": "Cq7jso5Pjv8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-only-strong-kex-algorithms-are-used",
        "type": "\u0001",
        "title": "Ensure that strong Key Exchange algorithms are used",
        "docs": {
          "desc": "This check ensures that strong key exchange algorithms are used in the SSH configuration to secure the exchange of cryptographic keys between two parties. Key exchange is a critical component of cryptography, enabling secure communication by allowing both parties to establish a shared secret.\n\n**Why this matters**\n\nKey exchange algorithms play a vital role in establishing secure communication channels. If weak or outdated algorithms are used:\n\n- Attackers could exploit vulnerabilities to intercept or manipulate the key exchange process.\n- The confidentiality and integrity of encrypted communications could be compromised.\n- Compliance with security standards requiring strong cryptographic practices may be violated.\n\nBy ensuring that only strong key exchange algorithms are used, organizations can protect sensitive data, maintain secure communications, and comply with cryptographic best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo configure SSH to use only approved key exchange algorithms, edit the `/etc/ssh/sshd_config` file and add or modify the `KexAlgorithms` parameter based on your `openssh-server` version.\n\nFirst, determine your SSH server version:\n\n```bash\ncnquery run -c \"package('openssh-server').version\"\n```\n\nThen, based on the version, set the appropriate `KexAlgorithms` value:\n\n- **OpenSSH 6.x**:\n  ```\n  KexAlgorithms curve25519-sha256@libssh.org\n  ```\n\n- **OpenSSH 7.x**:\n  ```\n  KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\n  ```\n\n- **OpenSSH 8.0 to 8.5**:\n  ```\n  KexAlgorithms sntrup4591761x25519-sha512@tinyssh.org,curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\n  ```\n\n- **OpenSSH 8.6 or later**:\n  ```\n  KexAlgorithms sntrup761x25519-sha512@openssh.com,curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\n  ```\n\nAfter editing the file, restart the SSH service:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\nTo configure SSH to use only approved key exchange algorithms, use the following Ansible playbook:\n\n```yaml\n---\n- name: Configure SSH with approved KexAlgorithms based on OpenSSH version\n  hosts: all\n  become: true\n  gather_facts: true\n  tasks:\n    - name: Get OpenSSH version from sshd binary\n      ansible.builtin.shell: |\n        /usr/sbin/sshd -v 2\u003e\u00261 | grep -oP 'OpenSSH_\\K\\d+\\.\\d+'\n      register: sshd_version\n      changed_when: false\n      failed_when: sshd_version.rc != 0 or sshd_version.stdout == \"\"\n\n    - name: Set parsed OpenSSH version\n      ansible.builtin.set_fact:\n        openssh_version_float: \"{{ sshd_version.stdout | float }}\"\n\n    - name: Determine appropriate KexAlgorithms value\n      ansible.builtin.set_fact:\n        kexalgos: \u003e-\n          {% if openssh_version_float \u003c 7.0 %}\n            curve25519-sha256@libssh.org\n          {% elif openssh_version_float \u003c 8.0 %}\n            curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\n          {% elif openssh_version_float \u003c 8.6 %}\n            sntrup4591761x25519-sha512@tinyssh.org,curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\n          {% else %}\n            sntrup761x25519-sha512@openssh.com,curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\n          {% endif %}\n\n    - name: Ensure KexAlgorithms is set in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^KexAlgorithms'\n        line: \"KexAlgorithms {{ kexalgos }}\"\n        create: yes\n        state: present\n        register: kexalgos_config_change\n\n    - name: Restart SSHD to apply configuration\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n        when: kexalgos_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that SSH uses only strong key exchange algorithms, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Configuring SSH with strong KexAlgorithms\"\nopenssh_version=$(sshd -v 2\u003e\u00261 | grep -oP 'OpenSSH_\\K\\d+\\.\\d+')\n\nif (( $(echo \"$openssh_version \u003c 7.0\" | bc -l) )); then\n  kex_algos=\"curve25519-sha256@libssh.org\"\nelif (( $(echo \"$openssh_version \u003c 8.0\" | bc -l) )); then\n  kex_algos=\"curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\"\nelif (( $(echo \"$openssh_version \u003c 8.6\" | bc -l) )); then\n  kex_algos=\"sntrup4591761x25519-sha512@tinyssh.org,curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\"\nelse\n  kex_algos=\"sntrup761x25519-sha512@openssh.com,curve25519-sha256@libssh.org,diffie-hellman-group18-sha512\"\nfi\n\nif grep -q '^KexAlgorithms' /etc/ssh/sshd_config; then\n  echo \"Updating existing KexAlgorithms configuration value\"\n  sed -i \"s/^KexAlgorithms.*/KexAlgorithms $kex_algos/\" /etc/ssh/sshd_config\nelse\n  echo \"Adding KexAlgorithms configuration value to SSH config\"\n  echo \"KexAlgorithms $kex_algos\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "6JjwtW5h8yk=": {
              "mql": "package('openssh-server').installed",
              "code_id": "6JjwtW5h8yk=",
              "checksum": "hFWTa/waBVM=",
              "mrn": "//policy.api.mondoo.app/filter/6JjwtW5h8yk=",
              "type": "\u0004"
            }
          }
        },
        "props": [
          {
            "mql": "if( package('openssh-server').version  \u003e= semver(\"6\") \u0026\u0026 package('openssh-server').version  \u003c semver(\"7\") ) {\n  return [\"curve25519-sha256@libssh.org\"]\n}\nif( package('openssh-server').version  \u003e= semver(\"7\") \u0026\u0026 package('openssh-server').version  \u003c semver(\"8\") ) {\n  return [\"curve25519-sha256@libssh.org\",\"diffie-hellman-group18-sha512\"]\n}\nif( package('openssh-server').version  \u003e= semver(\"8\") \u0026\u0026 package('openssh-server').version  \u003c semver(\"9\") ) {\n  return [\"sntrup4591761x25519-sha512@tinyssh.org\",\"curve25519-sha256@libssh.org\",\"diffie-hellman-group18-sha512\"]\n}\nreturn [\"sntrup761x25519-sha512@openssh.com\",\"curve25519-sha256@libssh.org\",\"diffie-hellman-group18-sha512\"]\n",
            "code_id": "HnrEwwGzTHc=",
            "checksum": "GXhZZcz07D0=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityKexAlgos",
            "uid": "mondooLinuxSecurityKexAlgos",
            "type": "\u0019\u0007",
            "title": "Define the hardened key exchange algorithms for all SSH configurations"
          }
        ]
      },
      {
        "query": "sshd.config.macs != empty\nsshd.config.macs.containsOnly(props.mondooLinuxSecurityMacAlgos)\n",
        "mql": "sshd.config.macs != empty\nsshd.config.macs.containsOnly(props.mondooLinuxSecurityMacAlgos)\n",
        "code_id": "hqBfqXYMp9M=",
        "checksum": "axRogBmil0I=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-only-strong-mac-algorithms-are-used",
        "type": "\u0001",
        "title": "Ensure only strong MAC algorithms are used",
        "docs": {
          "desc": "This check ensures that the types of MAC (Message Authentication Code) algorithms used by SSH during communication are restricted to secure and approved options. Limiting the MAC algorithms helps to prevent the use of weak or deprecated algorithms that could compromise the integrity of SSH connections.\n\n**Why this matters**\n\nSSH communication relies on MAC algorithms to ensure the integrity and authenticity of transmitted data. If insecure or outdated MAC algorithms are allowed:\n\n- Attackers could exploit vulnerabilities in weak algorithms to intercept or tamper with SSH communications.\n- The confidentiality and integrity of sensitive data transmitted over SSH could be compromised.\n- Compliance with security standards and best practices could be violated.\n\nBy enforcing the use of secure MAC algorithms, organizations can strengthen the security of SSH connections, protect sensitive data, and maintain compliance with security policies.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo configure SSH to use only strong MAC algorithms, edit the `/etc/ssh/sshd_config` file and add or modify the `MACs` parameter to include a comma-separated list of approved MAC algorithms.\n\nExample:\n\n```bash\nMACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo configure SSH to use only strong MAC algorithms, use the following Ansible playbook:\n\n```yaml\n---\n- name: Configure SSH to use only strong MAC algorithms\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure MACs are set in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^MACs'\n        line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256'\n        create: yes\n        state: present\n        register: ssh_mac_config_change\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n        when: ssh_mac_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that only strong MAC algorithms are used in SSH, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nMAC_LINE=\"MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256\"\n\nif grep -q '^MACs' /etc/ssh/sshd_config; then\n  echo \"Updating MACs in sshd_config...\"\n  sed -i \"s/^MACs.*/$MAC_LINE/\" /etc/ssh/sshd_config\nelse\n  echo \"Adding MACs to sshd_config...\"\n  echo \"$MAC_LINE\" \u003e\u003e /etc/ssh/sshd_config\nfi\n\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {},
        "props": [
          {
            "mql": "return [\"umac-128-etm@openssh.com\",\"hmac-sha2-256-etm@openssh.com\",\"hmac-sha2-512-etm@openssh.com\",\n\"umac-128@openssh.com\",\"hmac-sha2-256\",\"hmac-sha2-512\"]\n",
            "code_id": "WRx5aDKT3ao=",
            "checksum": "1H/ITwkNECg=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityMacAlgos",
            "uid": "mondooLinuxSecurityMacAlgos",
            "type": "\u0019\u0007",
            "title": "Define the accepted MAC algorithms"
          }
        ]
      },
      {
        "query": "kernel.parameters['net.ipv4.conf.all.send_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.all.send_redirects'] == null\nkernel.parameters['net.ipv4.conf.default.send_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.default.send_redirects'] == null\n",
        "mql": "kernel.parameters['net.ipv4.conf.all.send_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.all.send_redirects'] == null\nkernel.parameters['net.ipv4.conf.default.send_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.default.send_redirects'] == null\n",
        "code_id": "/O0ScIZCkeE=",
        "checksum": "SjUxoJWo4J8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-packet-redirect-sending-is-disabled",
        "type": "\u0001",
        "title": "Ensure packet redirect sending is disabled",
        "docs": {
          "desc": "This check verifies that the system is configured to not send ICMP redirect messages by ensuring the kernel parameters `net.ipv4.conf.all.send_redirects` and `net.ipv4.conf.default.send_redirects` are set to `0`.\n\n**Why this matters**\n\nICMP redirect messages are used by routers to inform hosts of a more efficient route for reaching a destination. However, on systems that are not functioning as routers, this feature is unnecessary and can introduce security risks.\n\nIf packet redirect sending is enabled:\n  - The system could inadvertently influence the routing behavior of other devices on the network.\n  - Malicious actors could exploit redirect functionality to reroute traffic through compromised or untrusted devices.\n  - It increases the complexity and unpredictability of network traffic flow, complicating security monitoring and enforcement.\n\nDisabling the ability to send ICMP redirects on non-router systems prevents unauthorized route manipulation and supports secure, well-defined network behavior. This reduces the risk of traffic interception or redirection by adversaries.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.conf.all.send_redirects=0\nsysctl -w net.ipv4.conf.default.send_redirects=0\nsysctl -w net.ipv4.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable packet redirect sending\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure packet redirect sending is disabled in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-packet-redirect.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.conf.all.send_redirects', value: '0' }\n        - { name: 'net.ipv4.conf.default.send_redirects', value: '0' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable packet redirect sending.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set net.ipv4.conf.all.send_redirects\nif grep -q '^net.ipv4.conf.all.send_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.all.send_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.all.send_redirects.*/net.ipv4.conf.all.send_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.all.send_redirects to 0 in /etc/sysctl.d/99-disable-packet-redirect.conf\"\n  echo \"net.ipv4.conf.all.send_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-packet-redirect.conf\nfi\n\n# Set net.ipv4.conf.default.send_redirects\nif grep -q '^net.ipv4.conf.default.send_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.default.send_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.default.send_redirects.*/net.ipv4.conf.default.send_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.default.send_redirects to 0 in /etc/sysctl.d/99-disable-packet-redirect.conf\"\n  echo \"net.ipv4.conf.default.send_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-packet-redirect.conf\nfi\n\nsysctl -w net.ipv4.conf.all.send_redirects=0\nsysctl -w net.ipv4.conf.default.send_redirects=0\nsysctl -w net.ipv4.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "files.find(from: \"/var/log\", type: \"file\").list {\n  path\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_readable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "mql": "files.find(from: \"/var/log\", type: \"file\").list {\n  path\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_readable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "code_id": "FbII7up+bkQ=",
        "checksum": "oS4YrNRa4JY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-all-logfiles-are-configured",
        "type": "\u0019\f",
        "title": "Ensure secure permissions on all log files are set",
        "docs": {
          "desc": "This check ensures that log files stored in `/var/log/` are properly secured to protect sensitive information and maintain system integrity.\n\n**Why this matters**\n\nLog files in `/var/log/` contain critical information from various services on the system. If these files are not properly secured:\n  - Sensitive data may be exposed, especially on log aggregation servers that collect logs from multiple systems.\n  - Unauthorized access to log files could lead to data breaches or compromise system security.\n  - Compliance with security policies and regulatory requirements for log protection may be violated.\n\nBy ensuring that log files in `/var/log/` are properly secured, organizations can protect sensitive information, maintain system integrity, and meet compliance requirements.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Set the correct permissions on all log files in `/var/log/`, run the following command:\n\n```bash\nfind /var/log/ -type f -exec chmod g-wx,o-rwx {} +\n```\n\n2. Configure rsyslog to set default permissions for newly created log files if using `rsyslog`:\n\nEdit the `/etc/rsyslog.conf` file (and any relevant files in `/etc/rsyslog.d/*.conf`) and add or update the following lines:\n\n```\n$FileCreateMode 0640\n$Umask 0077\n```\n\nSave the file and restart the rsyslog service to apply the changes:\n\n```bash\nsystemctl restart rsyslog\n```\n\n3. Configure the creation, deletion, and cleaning of volatile and temporary files:\n\nEdit or create a file in the `/etc/tmpfiles.d/` directory, for example, `var.conf`, and add the following lines:\n\n```\nf /var/log/faillog 0640 root root -\nf /var/log/wtmp 0640 root utmp -\nf /var/log/btmp 0640 root utmp -\nf /var/log/lastlog 0640 root utmp -\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the ownership and permissions on all log files in /var/log, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting permissions on all log files in /var/log...\"\nfind /var/log/ -type f -exec chmod g-wx,o-rwx {} +\n\necho \"Configuring tmpfiles.d to set default permissions for newly created log files...\"\ncat \u003c\u003cEOF \u003e\u003e /etc/tmpfiles.d/var.conf\nf /var/log/faillog 0640 root root -\nf /var/log/wtmp 0640 root utmp -\nf /var/log/btmp 0640 root utmp -\nf /var/log/lastlog 0640 root utmp -\nEOF\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "if (file(\"/etc/group-\").exists) {\n  file(\"/etc/group-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "mql": "if (file(\"/etc/group-\").exists) {\n  file(\"/etc/group-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "code_id": "Kd0nC0U7dfs=",
        "checksum": "2TZJCRa9v0o=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup--are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/group- are set",
        "docs": {
          "desc": "This check ensures that the `/etc/group-` file, which contains a backup of all valid groups defined in the system, is secured with appropriate permissions. Only the root user should have read and write access to this file to prevent unauthorized access to group names and user membership information.\n\n**Why this matters**\n\nThe `/etc/group-` file serves as a backup for the `/etc/group` file, which defines group memberships on the system. If this file is improperly secured:\n\n- Unauthorized users could access sensitive group membership information.\n- Malicious actors could exploit this information to escalate privileges or compromise system security.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has access to the `/etc/group-` file, organizations can protect critical group membership data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. To set the ownership and permissions on the `/etc/group-` file, run the following commands:\n\n```bash\nchown root:root /etc/group-\nchmod 600 /etc/group-\n```\n\n2. To ensure these permissions are not reverted by automated actions, add the following line to `/etc/tmpfiles.d/etc.conf`:\n\n```\nf /etc/group- 0600 root root -\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/group-` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/group-\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/group-\n      ansible.builtin.file:\n        path: /etc/group-\n        owner: root\n        group: root\n        mode: '0600'\n    - name: Ensure /etc/group- is not reverted\n      ansible.builtin.lineinfile:\n        path: /etc/tmpfiles.d/etc.conf\n        line: 'f /etc/group- 0600 root root -'\n        state: present\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/group-` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/group-\"\nchown root:root /etc/group-\nchmod 0600 /etc/group-\necho \"f /etc/group- 0600 root root -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "file(\"/etc/group\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "mql": "file(\"/etc/group\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "code_id": "m7DAOFbL9Qg=",
        "checksum": "m7Ateb1hgmA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup-are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/group are set",
        "docs": {
          "desc": "This check ensures that the `/etc/group` file, which contains a list of all valid groups defined in the system, is secured with appropriate permissions. Only the root user should have read and write access to this file to prevent unauthorized modifications to group definitions.\n\n**Why this matters**\n\nThe `/etc/group` file defines group memberships on the system. If this file is improperly secured:\n\n- Unauthorized users could modify group definitions, potentially escalating privileges or disrupting access control.\n- Malicious actors could exploit this information to compromise system security.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has access to the `/etc/group` file, organizations can protect critical group membership data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the ownership and permissions on the `/etc/group` file, run the following commands:\n\n```bash\nchown root:root /etc/group\nchmod 644 /etc/group\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/group` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/group\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/group\n      ansible.builtin.file:\n        path: /etc/group\n        owner: root\n        group: root\n        mode: '0644'\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/group` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/group\"\nchown root:root /etc/group\nchmod 0644 /etc/group\necho \"f /etc/group 0644 root root -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "if (file(\"/etc/gshadow-\").exists) {\n  file(\"/etc/gshadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "mql": "if (file(\"/etc/gshadow-\").exists) {\n  file(\"/etc/gshadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "code_id": "vdDFAY9Qxko=",
        "checksum": "0AE5fdbzkgA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow--are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/gshadow- are set",
        "docs": {
          "desc": "This check ensures that the `/etc/gshadow-` file, which contains a backup of the `/etc/gshadow` file, is secured with appropriate permissions. Only the root user should have read and write access to this file to prevent unauthorized access to sensitive group password information.\n\n**Why this matters**\n\nThe `/etc/gshadow-` file serves as a backup for the `/etc/gshadow` file, which stores information about group administrators, group members, and encrypted group passwords. If this file is improperly secured:\n\n- Unauthorized users could access sensitive group password information.\n- Malicious actors could exploit this information to escalate privileges or compromise system security.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has access to the `/etc/gshadow-` file, organizations can protect critical group password data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. To set the ownership and permissions on the `/etc/gshadow-` file, run the following commands:\n\n```bash\nchown root:root /etc/gshadow-\nchmod 640 /etc/gshadow-\n```\n\n2. To ensure these permissions are not reverted by automated actions, add the following line to `/etc/tmpfiles.d/etc.conf`:\n\n```\nf /etc/gshadow- 0640 root root -\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/gshadow-` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/gshadow-\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/gshadow-\n      ansible.builtin.file:\n        path: /etc/gshadow-\n        owner: root\n        group: root\n        mode: '0640'\n    - name: Ensure /etc/gshadow- is not reverted\n      ansible.builtin.lineinfile:\n        path: /etc/tmpfiles.d/etc.conf\n        line: 'f /etc/gshadow- 0640 root root -'\n        state: present\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/gshadow-` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/gshadow-\"\nchown root:root /etc/gshadow-\nchmod 0640 /etc/gshadow-\necho \"f /etc/gshadow- 0640 root root -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "if (file(\"/etc/gshadow\").exists) {\n  file(\"/etc/gshadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "mql": "if (file(\"/etc/gshadow\").exists) {\n  file(\"/etc/gshadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "code_id": "FrdMe+1q6Bc=",
        "checksum": "CIErHmCRVcE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow-are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/gshadow are set",
        "docs": {
          "desc": "This check ensures that the `/etc/gshadow` file, which stores hashed group passwords, is secured with appropriate permissions. Only the root user should have read and write access to this file to prevent unauthorized access to sensitive group password information.\n\n**Why this matters**\n\nThe `/etc/gshadow` file serves as a companion to `/etc/group`, listing group memberships while storing sensitive password information. If this file is improperly secured:\n\n- Unauthorized users could access sensitive group password data.\n- Malicious actors could exploit this information to escalate privileges or compromise system security.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has access to the `/etc/gshadow` file, organizations can protect critical group password data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the ownership and permissions on the `/etc/gshadow` file, run the following commands:\n\n```bash\nchown root:shadow /etc/gshadow\nchmod 640 /etc/gshadow\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/gshadow` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/gshadow\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/gshadow\n      ansible.builtin.file:\n        path: /etc/gshadow\n        owner: root\n        group: root\n        mode: '0640'\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/gshadow` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/gshadow\"\nchown root:shadow /etc/gshadow\nchmod 0640 /etc/gshadow\necho \"f /etc/gshadow 0640 root shadow -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "if (file(\"/etc/passwd-\").exists) {\n  file(\"/etc/passwd-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "mql": "if (file(\"/etc/passwd-\").exists) {\n  file(\"/etc/passwd-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "code_id": "Gjm+13rDf3o=",
        "checksum": "qEDAEhGkPHY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd--are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/passwd- are set",
        "docs": {
          "desc": "This check ensures that the `/etc/passwd-` file, which contains a backup of the `/etc/passwd` file, is secured with appropriate permissions. Only the root user should have read and write access to this file to prevent unauthorized access to sensitive user account information.\n\n**Why this matters**\n\nThe `/etc/passwd-` file serves as a backup for the `/etc/passwd` file, which stores essential information about system users. If this file is improperly secured:\n\n- Unauthorized users could access sensitive user account information.\n- Malicious actors could exploit this information to compromise user accounts or escalate privileges.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has access to the `/etc/passwd-` file, organizations can protect critical user account data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. To set the ownership and permissions on the `/etc/passwd-` file, run the following commands:\n\n```bash\nchown root:root /etc/passwd-\nchmod 600 /etc/passwd-\n```\n\n2. To ensure these permissions are not reverted by automated actions, add the following line to `/etc/tmpfiles.d/etc.conf`:\n\n```\nf /etc/passwd- 0600 root root -\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/passwd-` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/passwd-\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/passwd-\n      ansible.builtin.file:\n        path: /etc/passwd-\n        owner: root\n        group: root\n        mode: '0600'\n    - name: Ensure /etc/passwd- is not reverted\n      ansible.builtin.lineinfile:\n        path: /etc/tmpfiles.d/etc.conf\n        line: 'f /etc/passwd- 0600 root root -'\n        state: present\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/passwd-` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/passwd-\"\nchown root:root /etc/passwd-\nchmod 0600 /etc/passwd-\necho \"f /etc/passwd- 0600 root root -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "file(\"/etc/passwd\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "mql": "file(\"/etc/passwd\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "code_id": "OFWIXTzBv00=",
        "checksum": "wDCwyiaJOSM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd-are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/passwd are set",
        "docs": {
          "desc": "This check ensures that the `/etc/passwd` file, which contains user account information, is secured with appropriate permissions. The file must be readable for system utilities to operate correctly, but write access should be restricted to the root user to prevent unauthorized modifications.\n\n**Why this matters**\n\nThe `/etc/passwd` file is critical for managing user accounts and system operations. If this file is improperly secured:\n\n- Unauthorized users could modify account information, potentially escalating privileges or disrupting system operations.\n- Malicious actors could exploit this information to compromise system security.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has write access to the `/etc/passwd` file, organizations can protect critical account data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the ownership and permissions on the `/etc/passwd` file, run the following commands:\n\n```bash\nchown root:root /etc/passwd\nchmod 644 /etc/passwd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/passwd` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/passwd\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/passwd\n      ansible.builtin.file:\n        path: /etc/passwd\n        owner: root\n        group: root\n        mode: '0644'"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/passwd` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/passwd\"\nchown root:root /etc/passwd\nchmod 0644 /etc/passwd\necho \"f /etc/passwd 0644 root root -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "if (file(\"/etc/shadow-\").exists) {\n  file(\"/etc/shadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "mql": "if (file(\"/etc/shadow-\").exists) {\n  file(\"/etc/shadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "code_id": "Xs984txmLXk=",
        "checksum": "q3hib2dKoRg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow--are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/shadow- are set",
        "docs": {
          "desc": "This check ensures that the `/etc/shadow-` file, which contains a backup of the `/etc/shadow` file, is secured with appropriate permissions. Only the root user should have read and write access to this file to prevent unauthorized access to sensitive user account information.\n\n**Why this matters**\n\nThe `/etc/shadow-` file serves as a backup for the `/etc/shadow` file, which stores hashed passwords and other critical security information about user accounts. If this file is improperly secured:\n\n- Unauthorized users could access sensitive password data.\n- Malicious actors could exploit this information to compromise user accounts or escalate privileges.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has access to the `/etc/shadow-` file, organizations can protect critical user account data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. To set the ownership and permissions on the `/etc/shadow-` file, run the following commands:\n\n```bash\nchown root:shadow /etc/shadow-\nchmod 640 /etc/shadow-\n```\n\n2. To ensure these permissions are not reverted by automated actions, add the following line to `/etc/tmpfiles.d/etc.conf`:\n\n```\nf /etc/shadow- 0640 root shadow -\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/shadow-` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/shadow-\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/shadow-\n      ansible.builtin.file:\n      ansible.builtin.file:\n        path: /etc/shadow-\n        owner: root\n        group: shadow\n        mode: '0640'\n    - name: Ensure /etc/shadow- is not reverted\n      ansible.builtin.lineinfile:\n        path: /etc/tmpfiles.d/etc.conf\n        line: 'f /etc/shadow- 0640 root shadow -'\n        state: present\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/shadow-` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/shadow-\"\nchown root:shadow /etc/shadow-\nchmod 0640 /etc/shadow-\necho \"f /etc/shadow- 0640 root shadow -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "if (file(\"/etc/shadow\").exists) {\n  file(\"/etc/shadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "mql": "if (file(\"/etc/shadow\").exists) {\n  file(\"/etc/shadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
        "code_id": "htUqKZYa860=",
        "checksum": "zOzow6mMpHs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow-are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/shadow are set",
        "docs": {
          "desc": "This check ensures that the `/etc/shadow` file, which stores sensitive information about user accounts, is secured with appropriate permissions. Only the root user should have read and write access to this file to prevent unauthorized access to critical account data.\n\n**Why this matters**\n\nThe `/etc/shadow` file contains hashed passwords and other security-related information for user accounts. If this file is improperly secured:\n\n- Unauthorized users could access sensitive password data.\n- Malicious actors could exploit this information to compromise user accounts or escalate privileges.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the root user has access to the `/etc/shadow` file, organizations can protect critical account data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the ownership and permissions on the `/etc/shadow` file, run the following commands:\n\n```bash\nchown root:shadow /etc/shadow\nchmod 640 /etc/shadow\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the `/etc/shadow` file, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on /etc/shadow\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set correct ownership and permissions on /etc/shadow\n      ansible.builtin.file:\n        path: /etc/shadow\n        owner: root\n        group: shadow\n        mode: '0640'\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `/etc/shadow` file has the correct permissions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions on /etc/shadow\"\nchown root:shadow /etc/shadow\nchmod 0640 /etc/shadow\necho \"f /etc/shadow 0640 root shadow -\" \u003e\u003e /etc/tmpfiles.d/etc.conf\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "file(\"/etc/ssh/sshd_config\") {\n  user.name == \"root\"\n  group.name == \"root\"\n  permissions.user_executable == false\n  permissions.group_readable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_readable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "mql": "file(\"/etc/ssh/sshd_config\") {\n  user.name == \"root\"\n  group.name == \"root\"\n  permissions.user_executable == false\n  permissions.group_readable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_readable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
        "code_id": "Yost34GlKyE=",
        "checksum": "gbbQSXXp5WE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcsshsshd-config-are-configured",
        "type": "\f",
        "title": "Ensure secure permissions on /etc/ssh/sshd_config are set",
        "docs": {
          "desc": "This check ensures that the `/etc/ssh/sshd_config` file is secured with appropriate ownership and permissions. The file must be owned by the root user and group to prevent unauthorized modifications.\n\n**Why this matters**\n\nThe `/etc/ssh/sshd_config` file contains critical configuration settings for the SSH daemon. If this file is improperly secured:\n  - Unauthorized users could modify SSH settings, potentially compromising system security.\n  - Malicious actors could weaken SSH configurations to allow unauthorized access or escalate privileges.\n  - System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that the `/etc/ssh/sshd_config` file is owned by the root user and group, organizations can protect critical SSH configurations and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the ownership and permissions on `/etc/ssh/sshd_config`, run the following commands:\n\n```bash\nchown root:root /etc/ssh/sshd_config\nchmod og-rwx /etc/ssh/sshd_config\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on `/etc/ssh/sshd_config`, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure correct ownership and permissions for sshd_config\n  hosts: all\n  become: yes\n  tasks:\n    - name: Set ownership of /etc/ssh/sshd_config to root:root\n      ansible.builtin.file:\n        path: /etc/ssh/sshd_config\n        owner: root\n        group: root\n\n    - name: Remove read/write/execute permissions for group and others on sshd_config\n      ansible.builtin.file:\n        path: /etc/ssh/sshd_config\n        mode: '0600'\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the ownership and permissions on `/etc/ssh/sshd_config`, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting ownership and permissions for /etc/ssh/sshd_config...\"\nchown root:root /etc/ssh/sshd_config\nchmod og-rwx /etc/ssh/sshd_config\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "files.\n  find(from: \"/etc/ssh\", type: \"file\").\n  where(path == /ssh_host_.*key$/).list {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n",
        "mql": "files.\n  find(from: \"/etc/ssh\", type: \"file\").\n  where(path == /ssh_host_.*key$/).list {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n",
        "code_id": "x7jUqDgSbuM=",
        "checksum": "hOs4AO8Zfv8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-ssh-private-host-key-files-are-configured",
        "type": "\u0019\f",
        "title": "Ensure secure permissions on SSH private host key files are set",
        "docs": {
          "desc": "This check ensures that SSH private keys are securely stored and handled to prevent unauthorized access and maintain the integrity of SSH public key authentication.\n\n**Why this matters**\n\nSSH private keys are critical for authentication in public key cryptography. If private keys are not properly secured:\n  - Unauthorized users could gain access to sensitive systems by using compromised private keys.\n  - The integrity of the authentication process could be undermined, leading to potential security breaches.\n  - Compliance with security policies requiring proper key management may be compromised.\n\nBy ensuring that SSH private keys are securely stored and handled, organizations can protect sensitive systems, maintain secure authentication, and comply with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the ownership and permissions on the SSH host private key files, run the following commands:\n\n```bash\nfind /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:ssh_keys {} \\; -exec chmod 0600 {} \\;\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the SSH host private key files, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on SSH host private key files\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set ownership to root:ssh_keys for SSH private key files\n      ansible.builtin.find:\n        paths: /etc/ssh\n        patterns: 'ssh_host_*_key'\n        file_type: file\n        recurse: no\n        follow: false\n      register: ssh_private_keys\n\n    - name: Set correct ownership and permissions on SSH host private keys\n      ansible.builtin.file:\n        path: \"{{ item.path }}\"\n        owner: root\n        group: ssh_keys\n        mode: '0600'\n      loop: \"{{ ssh_private_keys.files }}\"\n      when: ssh_private_keys.matched \u003e 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the ownership and permissions on the SSH host private key files, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nfind /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:ssh_keys {} \\; -exec chmod 0600 {} \\;\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "files.\n  find(from: \"/etc/ssh\", type: \"file\").\n  where(path == /ssh_host_.*key.pub$/).list {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n",
        "mql": "files.\n  find(from: \"/etc/ssh\", type: \"file\").\n  where(path == /ssh_host_.*key.pub$/).list {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n",
        "code_id": "mQG2kdC1CYg=",
        "checksum": "TdloD5SGq2c=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-ssh-public-host-key-files-are-configured",
        "type": "\u0019\f",
        "title": "Ensure secure permissions on SSH public host key files are set",
        "docs": {
          "desc": "This check ensures that SSH public keys are properly configured and secured as part of the SSH public key authentication mechanism. Public keys are used to verify digital signatures generated by their corresponding private keys, enabling secure and reliable authentication.\n\n**Why this matters**\n\nSSH public key authentication provides several benefits:\n  - Enhances security by eliminating the need for password-based authentication, reducing the risk of brute-force attacks.\n  - Ensures that only users with the corresponding private key can authenticate successfully.\n  - Supports compliance with security policies requiring strong authentication mechanisms.\n\nBy properly configuring and securing SSH public keys, organizations can strengthen their authentication processes, protect sensitive systems, and maintain a secure environment.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the ownership and permissions on the SSH host public key files, run the following commands:\n\n```bash\nfind /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \\; -exec chmod 0644 {} \\;\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the ownership and permissions on the SSH host public key files, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set ownership and permissions on SSH host public key files\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Find SSH host public key files\n      ansible.builtin.find:\n        paths: /etc/ssh\n        patterns: 'ssh_host_*_key.pub'\n        file_type: file\n        recurse: no\n        follow: false\n      register: ssh_public_keys\n\n    - name: Set correct ownership and permissions on SSH host public keys\n      ansible.builtin.file:\n        path: \"{{ item.path }}\"\n        owner: root\n        group: root\n        mode: '0644'\n      loop: \"{{ ssh_public_keys.files }}\"\n      when: ssh_public_keys.matched \u003e 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the ownership and permissions on the SSH host public key files, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nfind /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \\; -exec chmod 0644 {} \\;\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "package(\"prelink\").installed == false\n",
        "mql": "package(\"prelink\").installed == false\n",
        "code_id": "aS95c8UVV00=",
        "checksum": "A7LLvwvUjGY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-prelink-is-disabled",
        "type": "\u0004",
        "title": "Ensure prelink is disabled",
        "docs": {
          "desc": "This check verifies that the prelink package is not installed on the system. The prelink utility modifies ELF binaries to optimize program load times by precomputing memory locations for shared libraries. While this can improve performance, it also introduces security risks and interferes with other critical system protections.\n\n**Why this matters**\n\nDisabling prelink helps ensure the reliability of security tools and strengthens system integrity protections. When prelink is active:\n  - It modifies binaries on disk, which can prevent tools like AIDE from detecting unauthorized tampering because legitimate prelink changes obscure unauthorized ones.\n  - It can negate security mechanisms such as Address Space Layout Randomization (ASLR) by fixing memory address locations in advance, undermining this key exploit mitigation technique.\n  - It increases the system's attack surface by introducing complexity and modifying binaries in ways that may be exploited or misunderstood by defenders.\n\nRemoving prelink eliminates this unnecessary risk, ensures compatibility with file integrity monitoring tools, and supports consistent enforcement of modern memory protection strategies.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to remove the prelink package:\n\n### RHEL/Fedora/Amazon Linux and derivatives\n\n```bash\nyum remove prelink\n```\n\n### Debian/Ubuntu and derivatives\n\n```bash\napt-get purge prelink\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to remove the prelink package:\n\n```yaml\n---\n- name: Remove prelink package\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Remove prelink on RHEL/Fedora/Amazon Linux\n      ansible.builtin.yum:\n        name: prelink\n        state: absent\n      when: ansible_os_family == \"RedHat\"\n\n    - name: Remove prelink on Debian/Ubuntu\n      ansible.builtin.apt:\n        name: prelink\n        state: absent\n      when: ansible_os_family == \"Debian\"\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to remove the prelink package. It will auto-detect the package manager and remove prelink if installed.\n\n```bash\n#!/bin/bash\nset -e\n\nif command -v yum \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected yum-based system. Removing prelink...\"\n  yum remove -y prelink\nelif command -v dnf \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected dnf-based system. Removing prelink...\"\n  dnf remove -y prelink\nelif command -v apt-get \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected apt-based system. Removing prelink...\"\n  apt-get purge -y prelink\nelse\n  echo \"No supported package manager found. Please remove prelink manually.\"\n  exit 1\nfi\necho \"Prelink removal complete.\"\n```"
            }
          ]
        },
        "impact": {
          "value": 70
        },
        "filters": {}
      },
      {
        "query": "kernel.parameters['net.ipv4.conf.all.rp_filter'] == 1\nkernel.parameters['net.ipv4.conf.default.rp_filter'] == 1\n",
        "mql": "kernel.parameters['net.ipv4.conf.all.rp_filter'] == 1\nkernel.parameters['net.ipv4.conf.default.rp_filter'] == 1\n",
        "code_id": "THw+yxDZOpw=",
        "checksum": "KICrP//Pm6I=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-reverse-path-filtering-is-enabled",
        "type": "\u0001",
        "title": "Ensure Reverse Path Filtering is enabled",
        "docs": {
          "desc": "This check verifies that reverse path filtering is active by ensuring the kernel parameters `net.ipv4.conf.all.rp_filter` and `net.ipv4.conf.default.rp_filter` are set to `1`.\n\n**Why this matters**\n\nReverse Path Filtering is a security mechanism that helps prevent IP spoofing by verifying that the source of a packet has a valid route back to the receiving interface. If a packet arrives on an interface and the system would not use that same interface to reach the source IP, the packet is dropped.\n\nIf reverse path filtering is not enabled:\n  - Spoofed packets with forged source addresses may be accepted, allowing attackers to bypass basic network controls.\n  - Systems may become vulnerable to reflection and amplification attacks.\n  - It undermines the reliability of source-based filtering and complicates network traffic analysis.\n\nEnabling reverse path filtering ensures the system performs sanity checks on incoming traffic, which helps prevent IP spoofing and enhances the integrity of network communications. It is an important safeguard in both perimeter and internal network environments.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.conf.all.rp_filter = 1\nnet.ipv4.conf.default.rp_filter = 1\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.conf.all.rp_filter=1\nsysctl -w net.ipv4.conf.default.rp_filter=1\nsysctl -w net.ipv4.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Enable Reverse Path Filtering\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure Reverse Path Filtering is enabled in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-enable-reverse-path-filtering.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.conf.all.rp_filter', value: '1' }\n        - { name: 'net.ipv4.conf.default.rp_filter', value: '1' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to enable reverse path filtering and persist the settings.\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^net.ipv4.conf.all.rp_filter' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.all.rp_filter to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.all.rp_filter.*/net.ipv4.conf.all.rp_filter = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.all.rp_filter to 1 in /etc/sysctl.d/99-enable-reverse-path-filtering.conf\"\n  echo \"net.ipv4.conf.all.rp_filter = 1\" \u003e\u003e /etc/sysctl.d/99-enable-reverse-path-filtering.conf\nfi\n\nif grep -q '^net.ipv4.conf.default.rp_filter' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.default.rp_filter to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.default.rp_filter.*/net.ipv4.conf.default.rp_filter = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.default.rp_filter to 1 in /etc/sysctl.d/99-enable-reverse-path-filtering.conf\"\n  echo \"net.ipv4.conf.default.rp_filter = 1\" \u003e\u003e /etc/sysctl.d/99-enable-reverse-path-filtering.conf\nfi\n\nsysctl -w net.ipv4.conf.all.rp_filter=1\nsysctl -w net.ipv4.conf.default.rp_filter=1\nsysctl -w net.ipv4.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "groups.where(name == \"root\").all(members == empty || members.all(name == 'root'))\n",
        "mql": "groups.where(name == \"root\").all(members == empty || members.all(name == 'root'))\n",
        "code_id": "Weu8LLZyY6g=",
        "checksum": "caP1T/EfYKA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-root-group-is-empty",
        "type": "\u0004",
        "title": "Ensure root group is empty",
        "docs": {
          "desc": "This check ensures that the `root` group, which allows system programs or defined users the ability to read and write configurations and files on the system, is properly secured by ensuring no users other than the `root` user are assigned to it.\n\n**Why this matters**\n\nThe `root` group provides elevated privileges that can impact the security and stability of the system. If unauthorized users are assigned to the `root` group:\n\n- They could gain access to sensitive system configurations and files.\n- Malicious actors could exploit this access to compromise system security or escalate privileges.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that only the `root` user is assigned to the `root` group, organizations can maintain a secure and well-functioning system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. To remove all users from the `root` group, you can run the following command:\n\n```bash\ngpasswd -d \u003cuser\u003e root\n```\n\n2. To change the primary group of any users with `root` as their primary group, except the `root` user, you can run:\n\n```bash\nusermod -g \u003cnew_group\u003e \u003cuser\u003e\n```\n\nReplace `\u003cuser\u003e` with the username and `\u003cnew_group\u003e` with the desired primary group."
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo ensure that the `root` group is empty, you can use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure root group is empty\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Remove users from root group\n      ansible.builtin.user:\n        name: \"{{ item }}\"\n        groups: root\n        state: absent\n      loop: \"{{ ansible_users | selectattr('name', 'ne', 'root') | map(attribute='name') | list }}\"\n\n    - name: Change primary group for users in root group\n      ansible.builtin.user:\n        name: \"{{ item }}\"\n        group: \u003cnew_group\u003e\n      loop: \"{{ ansible_users | selectattr('gid', 'eq', 0) | map(attribute='name') | list }}\"\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `root` group is empty, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Removing users from root group\"\nfor user in $(getent group root | cut -d: -f4 | tr ',' ' '); do\n  if [ \"$user\" != \"root\" ]; then\n    echo \"Removing $user from root group\"\n    gpasswd -d $user root || true\n  fi\ndone\n\necho \"Changing primary group for users in root group\"\nfor user in $(getent passwd | awk -F: '$4 == 0 {print $1}'); do\n  if [ \"$user\" != \"root\" ]; then\n    usermod -g \u003cnew_group\u003e $user || true\n  fi\ndone\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "service(\"rsh.socket\").enabled == false\nservice(\"rlogin.socket\").enabled == false\nservice(\"rexec.socket\").enabled == false\nservice(\"rsh.socket\").running == false\nservice(\"rlogin.socket\").running == false\nservice(\"rexec.socket\").running == false\n",
        "mql": "service(\"rsh.socket\").enabled == false\nservice(\"rlogin.socket\").enabled == false\nservice(\"rexec.socket\").enabled == false\nservice(\"rsh.socket\").running == false\nservice(\"rlogin.socket\").running == false\nservice(\"rexec.socket\").running == false\n",
        "code_id": "lSnkpvWD+i0=",
        "checksum": "AOyeZ93SyN4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsh-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure rsh server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the Remote Shell (rsh) server services—specifically rsh.socket, rlogin.socket, and rexec.socket—are not running and are disabled on the system.\n\n**Why this matters**\n\nThe rsh suite (which includes rsh, rlogin, and rexec) provides remote command execution and login capabilities over a network. However, these services transmit data, including credentials, in plaintext and rely on weak authentication mechanisms based on hostname and user trust relationships.\n\nIf rsh services are enabled:\n  - They expose sensitive data to interception, making the system vulnerable to credential theft.\n  - Host-based trust mechanisms (like .rhosts) can be easily bypassed or misconfigured, allowing unauthorized access.\n  - They increase the system's attack surface and may be exploited for lateral movement in a compromised environment.\n\nBecause of these risks, rsh is considered obsolete and should be replaced with secure alternatives such as SSH. Disabling rsh, rlogin, and rexec services helps prevent unauthorized remote access and aligns with modern security best practices for system hardening.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable `rsh`, `rlogin`, and `rexec`:\n\n```bash\nsystemctl stop rsh.socket\nsystemctl stop rlogin.socket\nsystemctl stop rexec.socket\n\nsystemctl disable rsh.socket\nsystemctl disable rlogin.socket\nsystemctl disable rexec.socket\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `rsh`, `rlogin`, and `rexec`:\n\n```yaml\n---\n- name: Stop and disable rsh server services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure rsh-related services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - rsh.socket\n        - rlogin.socket\n        - rexec.socket\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable rsh server services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling rsh server services...\"\nsystemctl stop rsh.socket\nsystemctl stop rlogin.socket\nsystemctl stop rexec.socket\nsystemctl disable rsh.socket\nsystemctl disable rlogin.socket\nsystemctl disable rexec.socket\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "service(\"rsyncd\").enabled == false\nservice(\"rsyncd\").running == false\n",
        "mql": "service(\"rsyncd\").enabled == false\nservice(\"rsyncd\").running == false\n",
        "code_id": "NoJQoV63siE=",
        "checksum": "JYqYpufxtDw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsync-service-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure rsync service is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the rsyncd service, which enables the rsync daemon for file synchronization over the network, is not running and is disabled on the system.\n\n**Why this matters**\n\nThe rsync daemon allows systems to synchronize files with remote hosts. While useful in backup and replication workflows, running rsyncd as a service introduces a network-accessible endpoint that may expose files or directories if not properly secured.\n\nIf the rsync service is enabled unnecessarily:\n  - It can expose sensitive files to unauthorized access, especially if authentication is misconfigured or absent.\n  - It increases the system's attack surface by opening a network port that could be targeted for exploitation.\n  - Unrestricted or anonymous rsync configurations can lead to data exfiltration or integrity compromise.\n\nUnless the system is explicitly configured to serve files via rsyncd, the service should be disabled. This aligns with the principle of least functionality and helps prevent accidental exposure of file data to untrusted networks.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable `rsync`:\n\n```bash\nsystemctl stop rsyncd\nsystemctl disable rsyncd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `rsync`:\n\n```yaml\n---\n- name: Stop and disable rsync service\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure rsync service is stopped and disabled\n      ansible.builtin.systemd:\n        name: rsyncd\n        state: stopped\n        enabled: no\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the rsync service.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling rsyncd service...\"\nsystemctl stop rsyncd\nsystemctl disable rsyncd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "rsyslog.conf.settings.contains(\"$FileCreateMode 0640\")\n",
        "mql": "rsyslog.conf.settings.contains(\"$FileCreateMode 0640\")\n",
        "code_id": "nxVlUWzBV1c=",
        "checksum": "Uo+OxfXhcGM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsyslog-default-file-permissions-configured",
        "type": "\u0004",
        "title": "Ensure rsyslog default file permissions configured",
        "docs": {
          "desc": "This check ensures that `rsyslog` is configured to apply appropriate permissions to newly created log files. This setting controls the default permissions for log files that do not already exist on the system.\n\n**Why this matters**\n\nProperly configured file permissions for log files are critical for maintaining system security:\n  - Prevents unauthorized access to sensitive log data.\n  - Ensures compliance with security policies and regulatory requirements.\n  - Protects the integrity and confidentiality of log information.\n\nBy setting appropriate permissions for newly created log files, organizations can safeguard sensitive information, maintain a secure logging environment, and reduce the risk of data exposure.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the default file permissions for `rsyslog`, edit the `/etc/rsyslog.conf` and `/etc/rsyslog.d/*.conf` files and add or modify the following line:\n\n```bash\n$FileCreateMode 0640\n```\nRestart the `rsyslog` service to apply the changes:\n\n```bash\nsystemctl restart rsyslog\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the default file permissions for `rsyslog`, use the following Ansible playbook:\n\n```yaml\n---\n- name: Set default file permissions for rsyslog\n  hosts: all\n  become: yes\n  tasks:\n    - name: Ensure $FileCreateMode 0640 is set in /etc/rsyslog.conf\n      ansible.builtin.lineinfile:\n        path: /etc/rsyslog.conf\n        regexp: '^\\$FileCreateMode'\n        line: '$FileCreateMode 0640'\n        state: present\n        insertafter: EOF\n        create: yes\n\n    - name: Ensure $FileCreateMode 0640 is set in all /etc/rsyslog.d/*.conf files\n      ansible.builtin.find:\n        paths: /etc/rsyslog.d\n        patterns: '*.conf'\n        file_type: file\n      register: rsyslog_conf_files\n\n    - name: Set $FileCreateMode 0640 in each rsyslog.d file\n      ansible.builtin.lineinfile:\n        path: \"{{ item.path }}\"\n        regexp: '^\\$FileCreateMode'\n        line: '$FileCreateMode 0640'\n        create: yes\n        state: present\n        backup: yes\n      loop: \"{{ rsyslog_conf_files.files }}\"\n\n    - name: Restart rsyslog service\n      ansible.builtin.systemd:\n        name: rsyslog\n        state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the default file permissions for `rsyslog`, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting default file permissions for rsyslog...\"\n\n# Update /etc/rsyslog.conf\nif grep -q '^\\$FileCreateMode' /etc/rsyslog.conf; then\n  sed -i 's/^\\$FileCreateMode.*/\\$FileCreateMode 0640/' /etc/rsyslog.conf\nelse\n  echo \"\\$FileCreateMode 0640\" \u003e\u003e /etc/rsyslog.conf\nfi\n\n# Update all /etc/rsyslog.d/*.conf files\nfor file in /etc/rsyslog.d/*.conf; do\n  if grep -q '^\\$FileCreateMode' \"$file\"; then\n    sed -i 's/^\\$FileCreateMode.*/\\$FileCreateMode 0640/' \"$file\"\n  else\n    echo \"\\$FileCreateMode 0640\" \u003e\u003e \"$file\"\n  fi\ndone\n\necho \"Restarting rsyslog service...\"\nsystemctl restart rsyslog\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {}
      },
      {
        "query": "package(\"rsyslog\").installed\nservice(\"rsyslog\").enabled\n",
        "mql": "package(\"rsyslog\").installed\nservice(\"rsyslog\").enabled\n",
        "code_id": "z57ahl5vzoY=",
        "checksum": "K75AyatNNE0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-rsyslog-is-installed-and-enabled",
        "type": "\u0001",
        "title": "Ensure rsyslog is installed",
        "docs": {
          "desc": "This check ensures that the `rsyslog` software is installed and enabled as a replacement for the original `syslogd` daemon, providing enhanced logging capabilities and security features.\n\n**Why this matters**\n\n`rsyslog` offers several improvements over `syslogd`, including:\n  - Connection-oriented (i.e., TCP) transmission of logs, ensuring reliable delivery.\n  - Support for logging to database formats, enabling advanced log analysis and storage.\n  - Encryption of log data during transmission, protecting sensitive information from interception.\n\nBy using `rsyslog`, organizations can enhance their logging infrastructure, improve log reliability and security, and meet compliance requirements for secure log management.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo install and enable `rsyslog`, run the following commands:\n\n### RHEL/Fedora/Amazon Linux and derivatives\n\n```bash\nyum install rsyslog\nsystemctl --now enable rsyslog\n```\n\n### Debian/Ubuntu and derivatives\n\n```bash\napt-get install rsyslog\nsystemctl --now enable rsyslog\n```\n\n### SLES and openSUSE\n\n```bash\nzypper install rsyslog\nsystemctl --now enable rsyslog\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo install and enable `rsyslog`, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure rsyslog is installed and enabled\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install rsyslog\n      ansible.builtin.package:\n        name: rsyslog\n        state: present\n\n    - name: Enable and start rsyslog service\n      ansible.builtin.systemd:\n        name: rsyslog\n        enabled: yes\n        state: started\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo install and enable `rsyslog`, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Installing rsyslog...\"\nif command -v yum \u0026\u003e /dev/null; then\n  yum install -y rsyslog\nelif command -v apt-get \u0026\u003e /dev/null; then\n  apt-get install -y rsyslog\nelif command -v zypper \u0026\u003e /dev/null; then\n  zypper install -y rsyslog\nelse\n  echo \"Unsupported package manager. Please install rsyslog manually.\"\n  exit 1\nfi\n\necho \"Starting and enabling rsyslog service...\"\nsystemctl enable --now rsyslog\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {}
      },
      {
        "query": "service(\"smb\").enabled == false\nservice(\"smbd\").enabled == false\nservice(\"smb\").running == false\nservice(\"smbd\").running == false\n",
        "mql": "service(\"smb\").enabled == false\nservice(\"smbd\").enabled == false\nservice(\"smb\").running == false\nservice(\"smbd\").running == false\n",
        "code_id": "jb3wqU5HpR8=",
        "checksum": "bTwjHGs9DUA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-samba-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure Samba is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the Samba services (smb and smbd) are not running and are disabled on the system.\n\n**Why this matters**\n\nSamba provides file and print sharing capabilities for interoperability between Linux and Windows systems using the SMB/CIFS protocol. While useful in mixed OS environments that require shared resources, Samba is unnecessary—and potentially risky—on systems that are not intended to serve files or printers over the network.\n\nIf Samba is enabled where not needed:\n  - It introduces network-facing services that can be discovered and targeted by attackers.\n  - Misconfigurations or outdated Samba versions may allow unauthorized access or remote code execution.\n  - It increases the system's attack surface and may expose internal file systems unintentionally.\n\nTo minimize unnecessary exposure, Samba should be disabled on systems that do not explicitly require Windows-compatible file sharing. This approach supports a least functionality model and helps reduce the risk of data leakage or compromise.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable `smb` and `smbd`:\n\n```bash\nsystemctl stop smb\nsystemctl stop smbd\n\nsystemctl disable smb\nsystemctl disable smbd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `smb` and `smbd`:\n\n```yaml\n---\n- name: Stop and disable Samba services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Stop and disable Samba services\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - smb\n        - smbd\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable Samba services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling Samba services...\"\nsystemctl stop smb\nsystemctl stop smbd\nsystemctl disable smb\nsystemctl disable smbd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv4.conf.all.secure_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.all.secure_redirects'] == null\nkernel.parameters['net.ipv4.conf.default.secure_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.default.secure_redirects'] == null\n",
        "mql": "kernel.parameters['net.ipv4.conf.all.secure_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.all.secure_redirects'] == null\nkernel.parameters['net.ipv4.conf.default.secure_redirects'] == 0\n  || kernel.parameters['net.ipv4.conf.default.secure_redirects'] == null\n",
        "code_id": "h1TBH+oroos=",
        "checksum": "JVHBZHo6C6U=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-secure-icmp-redirects-are-not-accepted",
        "type": "\u0001",
        "title": "Ensure secure ICMP redirects are not accepted",
        "docs": {
          "desc": "This check verifies that the system is configured to reject secure ICMP redirect messages by ensuring the kernel parameters `net.ipv4.conf.all.secure_redirects` and `net.ipv4.conf.default.secure_redirects` are set to `0`.\n\n**Why this matters**\n\nSecure ICMP redirects are a variant of ICMP redirect messages that are accepted only from gateways listed in the system's default gateway table. While they are intended to provide safer route optimization, accepting any form of redirect introduces risk by allowing remote influence over local routing decisions.\n\nIf secure ICMP redirects are accepted:\n  - An attacker controlling or spoofing a default gateway could influence traffic paths.\n  - It increases the likelihood of man-in-the-middle attacks by rerouting data through malicious intermediaries.\n  - It undermines the reliability of static routing configurations and may conflict with security controls or monitoring systems.\n\nDisabling acceptance of secure ICMP redirects ensures that routing updates are not accepted dynamically from potentially compromised gateways. This strengthens network security by enforcing a more predictable and tightly controlled routing posture.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.conf.all.secure_redirects = 0\nnet.ipv4.conf.default.secure_redirects = 0\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.conf.all.secure_redirects=0\nsysctl -w net.ipv4.conf.default.secure_redirects=0\nsysctl -w net.ipv4.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable secure ICMP redirects acceptance\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure secure ICMP redirects are not accepted in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-secure-icmp-redirects.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.conf.all.secure_redirects', value: '0' }\n        - { name: 'net.ipv4.conf.default.secure_redirects', value: '0' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable secure ICMP redirects acceptance and persist the settings.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set net.ipv4.conf.all.secure_redirects\nif grep -q '^net.ipv4.conf.all.secure_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.all.secure_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.all.secure_redirects.*/net.ipv4.conf.all.secure_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.all.secure_redirects to 0 in /etc/sysctl.d/99-disable-secure-icmp-redirects.conf\"\n  echo \"net.ipv4.conf.all.secure_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-secure-icmp-redirects.conf\nfi\n\n# Set net.ipv4.conf.default.secure_redirects\nif grep -q '^net.ipv4.conf.default.secure_redirects' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.default.secure_redirects to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.default.secure_redirects.*/net.ipv4.conf.default.secure_redirects = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.default.secure_redirects to 0 in /etc/sysctl.d/99-disable-secure-icmp-redirects.conf\"\n  echo \"net.ipv4.conf.default.secure_redirects = 0\" \u003e\u003e /etc/sysctl.d/99-disable-secure-icmp-redirects.conf\nfi\n\nsysctl -w net.ipv4.conf.all.secure_redirects=0\nsysctl -w net.ipv4.conf.default.secure_redirects=0\nsysctl -w net.ipv4.route.flush=1\n\nsysctl -w net.ipv6.conf.all.secure_redirects=0\nsysctl -w net.ipv6.conf.default.secure_redirects=0\nsysctl -w net.ipv6.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/run\\/utmp\\s+\\-p\\s+wa\\s+\\-k\\s+session(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/log\\/wtmp\\s+\\-p\\s+wa\\s+\\-k\\s+(logins|session)(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/log\\/btmp\\s+\\-p\\s+wa\\s+\\-k\\s+(logins|session)(\\s+)?$/))\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/run\\/utmp\\s+\\-p\\s+wa\\s+\\-k\\s+session(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/log\\/wtmp\\s+\\-p\\s+wa\\s+\\-k\\s+(logins|session)(\\s+)?$/))\nprops.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/log\\/btmp\\s+\\-p\\s+wa\\s+\\-k\\s+(logins|session)(\\s+)?$/))\n",
        "code_id": "ZK5uz6bt/dc=",
        "checksum": "Njp+QXbnc/A=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-session-initiation-information-is-collected",
        "type": "\u0001",
        "title": "Ensure session initiation information is collected",
        "docs": {
          "desc": "This check verifies that the system is configured to record session start events in the audit logs, ensuring that audit rules are in place to track successful login sessions using the auditd subsystem.\n\n**Why this matters**\n\nCapturing session initiation information—such as user logins and terminal access—is essential for establishing a complete record of user activity. These events mark the beginning of user interactions with the system and provide vital context for analyzing subsequent actions.\n\nIf session initiation is not logged:\n  •  User activity cannot be reliably correlated to specific sessions, weakening audit trails.\n  •  Security incidents such as unauthorized access or lateral movement may go undetected.\n  •  Compliance with security standards and regulatory frameworks that require session logging may be compromised.\n\nBy ensuring session start events are audited, organizations gain visibility into who accessed the system and when, supporting effective monitoring, incident investigation, and user accountability. This forms a foundational element of audit-based security controls.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-session.rules`\n\n2. Add the following lines:\n\n```\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\n```\n\n3. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n4. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for session initiation:\n\n```yaml\n---\n- name: Ensure session initiation information is collected\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set session tracking audit rules\n      copy:\n        dest: /etc/audit/rules.d/50-session.rules\n        content: |\n          -w /var/run/utmp -p wa -k session\n          -w /var/log/wtmp -p wa -k logins\n          -w /var/log/btmp -p wa -k logins\n      notify: Load audit rules\n\n    - name: Check if audit rules are immutable\n      shell: |\n        auditctl -s | grep '^enabled' | awk '{print $2}'\n      register: audit_enabled\n\n    - name: Warn if reboot is required to apply immutable audit rules\n      debug:\n        msg: \"Reboot required to load audit rules because the configuration is immutable.\"\n      when: audit_enabled.stdout == \"2\"\n\n  handlers:\n    - name: Load audit rules\n      command: augenrules --load\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure session initiation information is collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-session.rules\"\n\necho \"Ensuring audit rules for session initiation are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\nEOF\n\necho \"Reloading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "groups.where(name == \"shadow\").all(members.length == 0)\n",
        "mql": "groups.where(name == \"shadow\").all(members.length == 0)\n",
        "code_id": "8KD9vCPQy4E=",
        "checksum": "0bNhDoub+B4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-shadow-group-is-empty",
        "type": "\u0004",
        "title": "Ensure shadow group is empty",
        "docs": {
          "desc": "This check ensures that the `shadow` group, which allows access to the `/etc/shadow` file, is empty. No users should be assigned to this group to prevent unauthorized access to sensitive password information.\n\n**Why this matters**\n\nThe `shadow` group provides access to the `/etc/shadow` file, which contains hashed passwords and other sensitive account information. If users are improperly assigned to this group:\n\n- Unauthorized users could gain access to sensitive password data.\n- Malicious actors could exploit this information to compromise user accounts or escalate privileges.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that the `shadow` group is empty, organizations can protect critical account data and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. To ensure that the `shadow` group is empty, you can run the following command to remove all users from the `shadow` group:\n\n```bash\ngpasswd -d \u003cuser\u003e shadow\n```\n\n2. To change the primary group of any users with `shadow` as their primary group, you can run:\n\n```bash\nusermod -g \u003cnew_group\u003e \u003cuser\u003e\n```\n\nReplace `\u003cuser\u003e` with the username and `\u003cnew_group\u003e` with the desired primary group."
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo ensure that the `shadow` group is empty, you can use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure shadow group is empty\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Remove users from shadow group\n      ansible.builtin.user:\n        name: \"{{ item }}\"\n        groups: shadow\n        state: absent\n      loop: \"{{ ansible_users | selectattr('groups', 'contains', 'shadow') | map(attribute='name') | list }}\"\n\n    - name: Change primary group for users in shadow group\n      ansible.builtin.user:\n        name: \"{{ item }}\"\n        group: \u003cnew_group\u003e\n      loop: \"{{ ansible_users | selectattr('gid', 'eq', 42) | map(attribute='name') | list }}\"\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the `shadow` group is empty, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Removing users from shadow group\"\nfor user in $(getent group shadow | cut -d: -f4 | tr ',' ' '); do\n  echo \"Removing $user from shadow group\"\n  gpasswd -d $user shadow || true\ndone\n\necho \"Changing primary group for users in shadow group\"\nfor user in $(getent passwd | awk -F: '$4 == 42 {print $1}'); do\n  usermod -g \u003cnew_group\u003e $user || true\ndone\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "service(\"snmpd\").enabled == false\nservice(\"snmpd\").running == false\n",
        "mql": "service(\"snmpd\").enabled == false\nservice(\"snmpd\").running == false\n",
        "code_id": "+u6doYoYG5E=",
        "checksum": "MigrkoqKUGY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-snmp-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure SNMP server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the SNMP server service (snmpd) is not running and is disabled on the system.\n\n**Why this matters**\n\nThe Simple Network Management Protocol (SNMP) is used for monitoring and managing network devices. While SNMP can be valuable in infrastructure environments that require centralized device monitoring, it is rarely needed on general-purpose Linux systems or non-networking servers.\n\nIf the SNMP service is enabled unnecessarily:\n  - It may expose system and network information to unauthorized users, especially if default community strings are not changed.\n  - SNMPv1 and SNMPv2c transmit data in plaintext, making them vulnerable to interception and misuse.\n  - Misconfigured or unmonitored SNMP services can be leveraged for network reconnaissance or as part of broader attack campaigns.\n\nTo reduce the risk of information disclosure and limit unnecessary network services, snmpd should be stopped and disabled on systems that are not specifically designated for SNMP-based monitoring. This supports the principle of least functionality and strengthens the system's security posture.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable `snmpd`:\n\n```bash\nsystemctl stop snmpd\nsystemctl disable snmpd\n```\n\nNote: Since the `snmpd` service is often interdependent with other services, it might not be enough to disable the service because other services will likely restart the service automatically.\n\nTo make the service `snmpd` invisible to other services run this command:\n\n```bash\nsystemctl mask snmpd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `snmpd`:\n\n```yaml\n---\n- name: Stop and disable SNMP server\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure SNMP server (snmpd) is stopped and disabled\n      ansible.builtin.systemd:\n        name: snmpd\n        state: stopped\n        masked: true\n        enabled: no\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the SNMP server.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling the snmpd service...\"\nsystemctl stop snmpd\nsystemctl disable snmpd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv4.conf.all.accept_source_route'] == 0\n  || kernel.parameters['net.ipv4.conf.all.accept_source_route'] == null\nkernel.parameters['net.ipv4.conf.default.accept_source_route'] == 0\n  || kernel.parameters['net.ipv4.conf.default.accept_source_route'] == null\nkernel.parameters['net.ipv6.conf.all.accept_source_route'] == 0\n  || kernel.parameters['net.ipv6.conf.all.accept_source_route'] == null\nkernel.parameters['net.ipv6.conf.default.accept_source_route'] == 0\n  || kernel.parameters['net.ipv6.conf.default.accept_source_route'] == null\n",
        "mql": "kernel.parameters['net.ipv4.conf.all.accept_source_route'] == 0\n  || kernel.parameters['net.ipv4.conf.all.accept_source_route'] == null\nkernel.parameters['net.ipv4.conf.default.accept_source_route'] == 0\n  || kernel.parameters['net.ipv4.conf.default.accept_source_route'] == null\nkernel.parameters['net.ipv6.conf.all.accept_source_route'] == 0\n  || kernel.parameters['net.ipv6.conf.all.accept_source_route'] == null\nkernel.parameters['net.ipv6.conf.default.accept_source_route'] == 0\n  || kernel.parameters['net.ipv6.conf.default.accept_source_route'] == null\n",
        "code_id": "XTNPK6iBxpE=",
        "checksum": "uwbqvZX9m1I=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-source-routed-packets-are-not-accepted",
        "type": "\u0001",
        "title": "Ensure source routed packets are not accepted",
        "docs": {
          "desc": "This check verifies that the system is configured to reject source-routed packets by ensuring the kernel parameters `net.ipv4.conf.all.accept_source_route`, `net.ipv4.conf.default.accept_source_route`, `net.ipv6.conf.all.accept_source_route`, and `net.ipv6.conf.default.accept_source_route` are set to `0`.\n\n**Why this matters**\n\nSource routing allows the sender of a packet to specify the exact path it should take through the network. While this feature was designed for network troubleshooting, it is rarely used in modern environments and poses significant security risks.\n\nIf source-routed packets are accepted:\n  - Attackers can bypass network routing controls and firewall rules by crafting packets with arbitrary paths.\n  - It enables traffic spoofing and man-in-the-middle attacks by redirecting data through attacker-controlled systems.\n  - It undermines network segmentation and isolation policies.\n\nDisabling acceptance of source-routed packets ensures that the system only processes packets routed according to the network's standard path selection, reducing the risk of exploitation and reinforcing a secure network posture.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.conf.all.accept_source_route = 0\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv6.conf.all.accept_source_route = 0\nnet.ipv6.conf.default.accept_source_route = 0\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.conf.all.accept_source_route=0\nsysctl -w net.ipv4.conf.default.accept_source_route=0\nsysctl -w net.ipv4.route.flush=1\n\nsysctl -w net.ipv6.conf.all.accept_source_route=0\nsysctl -w net.ipv6.conf.default.accept_source_route=0\nsysctl -w net.ipv6.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Disable source routed packets acceptance\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure source routed packets are not accepted in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-disable-source-routing.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.conf.all.accept_source_route', value: '0' }\n        - { name: 'net.ipv4.conf.default.accept_source_route', value: '0' }\n        - { name: 'net.ipv6.conf.all.accept_source_route', value: '0' }\n        - { name: 'net.ipv6.conf.default.accept_source_route', value: '0' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n        - { name: 'net.ipv6.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to disable source routed packets acceptance.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set net.ipv4.conf.all.accept_source_route\nif grep -q '^net.ipv4.conf.all.accept_source_route' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.all.accept_source_route to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.all.accept_source_route.*/net.ipv4.conf.all.accept_source_route = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.all.accept_source_route to 0 in /etc/sysctl.d/99-disable-source-routing.conf\"\n  echo \"net.ipv4.conf.all.accept_source_route = 0\" \u003e\u003e /etc/sysctl.d/99-disable-source-routing.conf\nfi\n\n# Set net.ipv4.conf.default.accept_source_route\nif grep -q '^net.ipv4.conf.default.accept_source_route' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.default.accept_source_route to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.default.accept_source_route.*/net.ipv4.conf.default.accept_source_route = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.default.accept_source_route to 0 in /etc/sysctl.d/99-disable-source-routing.conf\"\n  echo \"net.ipv4.conf.default.accept_source_route = 0\" \u003e\u003e /etc/sysctl.d/99-disable-source-routing.conf\nfi\n\n# Set net.ipv6.conf.all.accept_source_route\nif grep -q '^net.ipv6.conf.all.accept_source_route' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.conf.all.accept_source_route to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.conf.all.accept_source_route.*/net.ipv6.conf.all.accept_source_route = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.conf.all.accept_source_route to 0 in /etc/sysctl.d/99-disable-source-routing.conf\"\n  echo \"net.ipv6.conf.all.accept_source_route = 0\" \u003e\u003e /etc/sysctl.d/99-disable-source-routing.conf\nfi\n\n# Set net.ipv6.conf.default.accept_source_route\nif grep -q '^net.ipv6.conf.default.accept_source_route' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv6.conf.default.accept_source_route to 0 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv6.conf.default.accept_source_route.*/net.ipv6.conf.default.accept_source_route = 0/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv6.conf.default.accept_source_route to 0 in /etc/sysctl.d/99-disable-source-routing.conf\"\n  echo \"net.ipv6.conf.default.accept_source_route = 0\" \u003e\u003e /etc/sysctl.d/99-disable-source-routing.conf\nfi\n\nsysctl -w net.ipv4.conf.all.accept_source_route=0\nsysctl -w net.ipv4.conf.default.accept_source_route=0\nsysctl -w net.ipv4.route.flush=1\n\nsysctl -w net.ipv6.conf.all.accept_source_route=0\nsysctl -w net.ipv6.conf.default.accept_source_route=0\nsysctl -w net.ipv6.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "sshd.config.params[\"AllowUsers\"] != empty || sshd.config.params[\"AllowGroups\"] != empty || sshd.config.params[\"DenyUsers\"] != empty || sshd.config.params[\"DenyGroups\"] != empty\n\nif (sshd.config.params[\"AllowUsers\"] != empty) { sshd.config.params[\"AllowUsers\"] != \"\" }\nif (sshd.config.params[\"AllowGroups\"] != empty) { sshd.config.params[\"AllowGroups\"] != \"\" }\nif (sshd.config.params[\"DenyUsers\"] != empty) { sshd.config.params[\"DenyUsers\"] != \"\" }\nif (sshd.config.params[\"DenyGroups\"] != empty) { sshd.config.params[\"DenyGroups\"] != \"\" }\n",
        "mql": "sshd.config.params[\"AllowUsers\"] != empty || sshd.config.params[\"AllowGroups\"] != empty || sshd.config.params[\"DenyUsers\"] != empty || sshd.config.params[\"DenyGroups\"] != empty\n\nif (sshd.config.params[\"AllowUsers\"] != empty) { sshd.config.params[\"AllowUsers\"] != \"\" }\nif (sshd.config.params[\"AllowGroups\"] != empty) { sshd.config.params[\"AllowGroups\"] != \"\" }\nif (sshd.config.params[\"DenyUsers\"] != empty) { sshd.config.params[\"DenyUsers\"] != \"\" }\nif (sshd.config.params[\"DenyGroups\"] != empty) { sshd.config.params[\"DenyGroups\"] != \"\" }\n",
        "code_id": "XOMm7Xl0yi0=",
        "checksum": "0ztwUGLeFYE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-access-is-limited",
        "type": "\u0001",
        "title": "Ensure SSH access is limited",
        "docs": {
          "desc": "This check ensures that SSH access is restricted to specific users or groups by configuring the `AllowUsers`, `AllowGroups`, `DenyUsers`, or `DenyGroups` parameters in the `/etc/ssh/sshd_config` file. These options provide granular control over who can access the system via SSH.\n\n**Why this matters**\n\nRestricting SSH access to authorized users and groups is critical for maintaining system security. If SSH access is not properly restricted:\n\n- Unauthorized users could gain access to the system, potentially compromising sensitive data or escalating privileges.\n- Malicious actors could exploit open access to perform brute-force attacks or other unauthorized actions.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy configuring the `AllowUsers`, `AllowGroups`, `DenyUsers`, or `DenyGroups` parameters, organizations can enforce strict access controls, reduce the attack surface, and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo limit SSH access, edit the `/etc/ssh/sshd_config` file and add or modify the `AllowUsers`, `AllowGroups`, `DenyUsers`, or `DenyGroups` parameters as needed.\n\nExample:\n\n```bash\nAllowUsers user1 user2\nAllowGroups sshusers\nDenyUsers user3\nDenyGroups nogroup\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\nTo limit SSH access using Ansible, use the following playbook:\n\n```yaml\n---\n- name: Restrict SSH access using AllowUsers, AllowGroups, DenyUsers, and DenyGroups\n  hosts: all\n  become: true\n  vars:\n    ssh_allow_users: \"user1 user2\"\n    ssh_allow_groups: \"sshusers\"\n    ssh_deny_users: \"user3\"\n    ssh_deny_groups: \"nogroup\"\n\n  tasks:\n    - name: Set AllowUsers in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^AllowUsers'\n        line: \"AllowUsers {{ ssh_allow_users }}\"\n        create: yes\n        state: present\n      register: allow_users_changed\n\n    - name: Set AllowGroups in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^AllowGroups'\n        line: \"AllowGroups {{ ssh_allow_groups }}\"\n        create: yes\n        state: present\n      register: allow_groups_changed\n\n    - name: Set DenyUsers in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^DenyUsers'\n        line: \"DenyUsers {{ ssh_deny_users }}\"\n        create: yes\n        state: present\n      register: deny_users_changed\n\n    - name: Set DenyGroups in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^DenyGroups'\n        line: \"DenyGroups {{ ssh_deny_groups }}\"\n        create: yes\n        state: present\n      register: deny_groups_changed\n\n    - name: Restart sshd if any config was changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: \u003e\n        allow_users_changed.changed or\n        allow_groups_changed.changed or\n        deny_users_changed.changed or\n        deny_groups_changed.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that SSH access is limited, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\n# Define variables for users and groups\nALLOW_USERS=\"user1 user2\"\nALLOW_GROUPS=\"sshusers\"\nDENY_USERS=\"user3\"\nDENY_GROUPS=\"nogroup\"\n\nif grep -q '^AllowUsers' /etc/ssh/sshd_config; then\n  echo \"Updating existing AllowUsers configuration value\"\n  sed -i \"s/^AllowUsers.*/AllowUsers $ALLOW_USERS/\" /etc/ssh/sshd_config\nelse\n  echo \"Adding AllowUsers configuration value to SSH config\"\n  echo \"AllowUsers $ALLOW_USERS\" \u003e\u003e /etc/ssh/sshd_config\nfi\n\n# Set or update AllowGroups\nif grep -q '^AllowGroups' /etc/ssh/sshd_config; then\n  echo \"Updating existing AllowGroups configuration value\"\n  sed -i \"s/^AllowGroups.*/AllowGroups $ALLOW_GROUPS/\" /etc/ssh/sshd_config\nelse\n  echo \"Adding AllowGroups configuration value to SSH config\"\n  echo \"AllowGroups $ALLOW_GROUPS\" \u003e\u003e /etc/ssh/sshd_config\nfi\n\n# Set or update DenyUsers\nif grep -q '^DenyUsers' /etc/ssh/sshd_config; then\n  echo \"Updating existing DenyUsers configuration value\"\n  sed -i \"s/^DenyUsers.*/DenyUsers $DENY_USERS/\" /etc/ssh/sshd_config\nelse\n  echo \"Adding DenyUsers configuration value to SSH config\"\n  echo \"DenyUsers $DENY_USERS\" \u003e\u003e /etc/ssh/sshd_config\nfi\n\n# Set or update DenyGroups\nif grep -q '^DenyGroups' /etc/ssh/sshd_config; then\n  echo \"Updating existing DenyGroups configuration value\"\n  sed -i \"s/^DenyGroups.*/DenyGroups $DENY_GROUPS/\" /etc/ssh/sshd_config\nelse\n  echo \"Adding DenyGroups configuration value to SSH config\"\n  echo \"DenyGroups $DENY_GROUPS\" \u003e\u003e /etc/ssh/sshd_config\nfi\n\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"HostbasedAuthentication\"] == \"no\"\n",
        "mql": "sshd.config.params[\"HostbasedAuthentication\"] == \"no\"\n",
        "code_id": "YiaSSdvN0BM=",
        "checksum": "Ky3PU09bYoQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-hostbasedauthentication-is-disabled",
        "type": "\u0004",
        "title": "Ensure SSH HostbasedAuthentication is disabled",
        "docs": {
          "desc": "This check ensures that the `HostbasedAuthentication` parameter in the SSH configuration is properly set to prevent authentication through trusted hosts using `.rhosts` or `/etc/hosts.equiv` files, combined with public key client host authentication. This setting applies only to SSH Protocol Version 2.\n\n**Why this matters**\n\nAllowing host-based authentication can introduce significant security risks:\n\n- Unauthorized users could exploit trusted host relationships to gain access to the system.\n- Malicious actors could use compromised `.rhosts` or `/etc/hosts.equiv` files to bypass authentication mechanisms.\n- System integrity and compliance with security policies could be compromised.\n\nBy disabling `HostbasedAuthentication`, organizations can reduce the attack surface and ensure that authentication relies on more secure mechanisms, such as public key or password-based authentication.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo disable SSH HostbasedAuthentication, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nHostbasedAuthentication no\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo disable SSH HostbasedAuthentication, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH HostbasedAuthentication is disabled\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set HostbasedAuthentication to no in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^HostbasedAuthentication'\n        line: 'HostbasedAuthentication no'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo disable SSH HostbasedAuthentication, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^HostbasedAuthentication' /etc/ssh/sshd_config; then\n  echo \"Updating HostbasedAuthentication to no in /etc/ssh/sshd_config...\"\n  sed -i 's/^HostbasedAuthentication.*/HostbasedAuthentication no/' /etc/ssh/sshd_config\nelse\n  echo \"Adding HostbasedAuthentication no to /etc/ssh/sshd_config...\"\n  echo \"HostbasedAuthentication no\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 70
        },
        "filters": {}
      },
      {
        "query": "defaultBlock = sshd.config.blocks.where(criteria.in([\"\"]) == props.checkDefaultMatchBlock \u0026\u0026 criteria == \"\");\n\nuserBlocks = sshd.config.blocks.where(criteria.contains(props.excludedMatchBlocks) == false \u0026\u0026 criteria != \"\");\n\nuserBlocks.all(params.ClientAliveInterval \u003e= 1)\nuserBlocks.all(params.ClientAliveInterval \u003c= 900)\nuserBlocks.all(params.ClientAliveCountMax \u003e 0)\nuserBlocks.all(params.ClientAliveCountMax \u003c= 3)\n\ndefaultBlock.all(params.ClientAliveInterval \u003e= 1)\ndefaultBlock.all(params.ClientAliveInterval \u003c= 900)\ndefaultBlock.all(params.ClientAliveCountMax \u003e 0)\ndefaultBlock.all(params.ClientAliveCountMax \u003c= 3)\n",
        "mql": "defaultBlock = sshd.config.blocks.where(criteria.in([\"\"]) == props.checkDefaultMatchBlock \u0026\u0026 criteria == \"\");\n\nuserBlocks = sshd.config.blocks.where(criteria.contains(props.excludedMatchBlocks) == false \u0026\u0026 criteria != \"\");\n\nuserBlocks.all(params.ClientAliveInterval \u003e= 1)\nuserBlocks.all(params.ClientAliveInterval \u003c= 900)\nuserBlocks.all(params.ClientAliveCountMax \u003e 0)\nuserBlocks.all(params.ClientAliveCountMax \u003c= 3)\n\ndefaultBlock.all(params.ClientAliveInterval \u003e= 1)\ndefaultBlock.all(params.ClientAliveInterval \u003c= 900)\ndefaultBlock.all(params.ClientAliveCountMax \u003e 0)\ndefaultBlock.all(params.ClientAliveCountMax \u003c= 3)\n",
        "code_id": "leBbraAjdkQ=",
        "checksum": "MFVmTAuvayo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-idle-timeout-interval-is-configured",
        "type": "\u0001",
        "title": "Ensure SSH Idle Timeout Interval is configured",
        "docs": {
          "desc": "This check ensures that the `ClientAliveInterval` and `ClientAliveCountMax` parameters in the SSH configuration are set to control the timeout of SSH sessions. These parameters help terminate idle SSH sessions after a specified period of inactivity.\n\n**Why this matters**\n\nThe `ClientAliveInterval` parameter specifies the interval (in seconds) at which the SSH server sends keepalive messages to the client. The `ClientAliveCountMax` parameter determines the maximum number of keepalive messages sent without a response before terminating the session. If these parameters are not configured:\n\n- Idle SSH sessions may remain open indefinitely, increasing the risk of unauthorized access.\n- System resources may be consumed by inactive connections, potentially impacting performance.\n- Compliance with security policies requiring session timeouts may be compromised.\n\nBy configuring `ClientAliveInterval` and `ClientAliveCountMax`, organizations can enforce session timeouts, reduce the risk of unauthorized access, and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the SSH idle timeout interval, edit the `/etc/ssh/sshd_config` file and add or modify the `ClientAliveInterval` and `ClientAliveCountMax` parameters.\n\nExample:\n\n```bash\nClientAliveInterval 300\nClientAliveCountMax 0\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the SSH idle timeout interval using Ansible, use the following playbook:\n\n```yaml\n---\n- name: Configure SSH Idle Timeout Interval\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure ClientAliveInterval is set in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^ClientAliveInterval'\n        line: 'ClientAliveInterval 300'\n        create: yes\n        state: present\n\n    - name: Ensure ClientAliveCountMax is set in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^ClientAliveCountMax'\n        line: 'ClientAliveCountMax 0'\n        create: yes\n        state: present\n    - name: Restart SSH service to apply changes\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that SSH LoginGraceTime is set to one minute or less, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^LoginGraceTime' /etc/ssh/sshd_config; then\n  echo \"Updating existing LoginGraceTime configuration value\"\n  sed -i 's/^LoginGraceTime.*/LoginGraceTime 60/' /etc/ssh/sshd_config\nelse\n  echo \"Adding LoginGraceTime configuration value to SSH config\"\n  echo 'LoginGraceTime 60' \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {},
        "props": [
          {
            "mql": "return [\n  \"placeholder-do-not-delete\",\n]\n",
            "code_id": "ONiK+eVEjJA=",
            "checksum": "C2mOTcqyR3Q=",
            "mrn": "//policy.api.mondoo.app/queries/excludedMatchBlocks",
            "uid": "excludedMatchBlocks",
            "type": "\u0019\u0007",
            "title": "A list of match blocks to exclude from checking, add items such as \"User ansible\""
          },
          {
            "mql": "return true\n",
            "code_id": "u3R8xyHx4gQ=",
            "checksum": "n7/2kOfJR2Q=",
            "mrn": "//policy.api.mondoo.app/queries/checkDefaultMatchBlock",
            "uid": "checkDefaultMatchBlock",
            "type": "\u0004",
            "title": "Set to true if you want to check the default \"\" match block"
          }
        ]
      },
      {
        "query": "sshd.config.params[\"IgnoreRhosts\"] == \"yes\"\n",
        "mql": "sshd.config.params[\"IgnoreRhosts\"] == \"yes\"\n",
        "code_id": "Daaqa///pts=",
        "checksum": "FMNF/Zh+gQ8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-ignorerhosts-is-enabled",
        "type": "\u0004",
        "title": "Ensure SSH IgnoreRhosts is enabled",
        "docs": {
          "desc": "This check ensures that the `IgnoreRhosts` parameter in the SSH configuration is enabled to prevent the use of `.rhosts` and `.shosts` files for authentication. Disabling these files enhances the security of the SSH server by enforcing stricter authentication mechanisms.\n\n**Why this matters**\n\nThe `IgnoreRhosts` parameter ensures that `.rhosts` and `.shosts` files are not used in `RhostsRSAAuthentication` or `HostbasedAuthentication`. If these files are allowed:\n\n- Unauthorized users could exploit trusted host relationships to gain access to the system.\n- Malicious actors could use compromised `.rhosts` or `.shosts` files to bypass authentication mechanisms.\n- System integrity and compliance with security policies could be compromised.\n\nBy enabling the `IgnoreRhosts` parameter, organizations can reduce the attack surface and ensure that authentication relies on more secure mechanisms, such as public key or password-based authentication.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo enable SSH IgnoreRhosts, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nIgnoreRhosts yes\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo enable SSH IgnoreRhosts, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH IgnoreRhosts is enabled\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set IgnoreRhosts to yes in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^IgnoreRhosts'\n        line: 'IgnoreRhosts yes'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo enable SSH IgnoreRhosts, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^IgnoreRhosts' /etc/ssh/sshd_config; then\n  echo \"Updating IgnoreRhosts to yes in /etc/ssh/sshd_config...\"\n  sed -i 's/^IgnoreRhosts.*/IgnoreRhosts yes/' /etc/ssh/sshd_config\nelse\n  echo \"Adding IgnoreRhosts yes to /etc/ssh/sshd_config...\"\n  echo \"IgnoreRhosts yes\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"LoginGraceTime\"] \u003e= 1\nsshd.config.params[\"LoginGraceTime\"] \u003c= 60\n",
        "mql": "sshd.config.params[\"LoginGraceTime\"] \u003e= 1\nsshd.config.params[\"LoginGraceTime\"] \u003c= 60\n",
        "code_id": "IxUOpWGEf8g=",
        "checksum": "+0Sq5L37MO0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-logingracetime-is-set-to-one-minute-or-less",
        "type": "\u0001",
        "title": "Ensure SSH LoginGraceTime is set to one minute or less",
        "docs": {
          "desc": "This check ensures that the `LoginGraceTime` parameter in the SSH configuration is set to an appropriate value, limiting the time allowed for successful authentication to the SSH server. This configuration helps reduce the risk of unauthenticated connections lingering on the system.\n\n**Why this matters**\n\nThe `LoginGraceTime` parameter specifies the time (in seconds) allowed for successful authentication to the SSH server. If this value is set too high:\n\n- Unauthenticated connections may remain open for extended periods, increasing the risk of unauthorized access.\n- System resources may be consumed by idle connections, potentially impacting performance.\n- Compliance with security policies requiring strict session controls may be compromised.\n\nBy setting the `LoginGraceTime` parameter to a minimal value, organizations can reduce the risk of unauthorized access, maintain system performance, and ensure compliance with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the SSH LoginGraceTime, edit the `/etc/ssh/sshd_config` file and add or modify the `LoginGraceTime` parameter.\n\nExample:\n\n```bash\nLoginGraceTime 60\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the SSH LoginGraceTime using Ansible, use the following playbook:\n\n```yaml\n---\n- name: Configure SSH LoginGraceTime\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure LoginGraceTime is set in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^LoginGraceTime'\n        line: 'LoginGraceTime 60'\n        create: yes\n        state: present\n  - name: Restart SSH service to apply changes\n    ansible.builtin.systemd:\n      name: sshd\n      state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that SSH access is limited, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Configuring SSH access restrictions\"\necho \"AllowUsers user1 user2\" \u003e\u003e /etc/ssh/sshd_config\necho \"AllowGroups sshusers\" \u003e\u003e /etc/ssh/sshd_config\necho \"DenyUsers user3\" \u003e\u003e /etc/ssh/sshd_config\necho \"DenyGroups nogroup\" \u003e\u003e /etc/ssh/sshd_config\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"LogLevel\"] == /INFO|VERBOSE/\n",
        "mql": "sshd.config.params[\"LogLevel\"] == /INFO|VERBOSE/\n",
        "code_id": "lzX+6GYw7S0=",
        "checksum": "hcWX1MEyHNg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-loglevel-is-appropriate",
        "type": "\u0004",
        "title": "Ensure SSH LogLevel is appropriate",
        "docs": {
          "desc": "This check ensures that the `LogLevel` parameter in the SSH configuration is set to an appropriate level to log user login and logout activity, as well as key fingerprints for SSH key-based logins.\n\n**Why this matters**\n\nThe `INFO` level logs basic login activity, which is essential for tracking user access to the system. This helps identify when users were active and supports incident response efforts by narrowing down potential suspects during investigations.\n\nThe `VERBOSE` level provides additional details, including the key fingerprint for any SSH key used during login. This is particularly useful for SSH key management, especially in environments with legacy systems or shared keys.\n\nBy configuring the `LogLevel` parameter to `INFO` or `VERBOSE`, organizations can enhance visibility into SSH activity, improve auditability, and strengthen overall security.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the SSH LogLevel to an appropriate value, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nLogLevel VERBOSE\n```\n\nor\n\n```bash\nLogLevel INFO\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the SSH LogLevel to an appropriate value, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH LogLevel is set to VERBOSE\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set LogLevel in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^LogLevel'\n        line: 'LogLevel VERBOSE'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the SSH LogLevel to an appropriate value, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^LogLevel' /etc/ssh/sshd_config; then\n  echo \"Updating LogLevel to VERBOSE in /etc/ssh/sshd_config...\"\n  sed -i 's/^LogLevel.*/LogLevel VERBOSE/' /etc/ssh/sshd_config\nelse\n  echo \"Adding LogLevel VERBOSE to /etc/ssh/sshd_config...\"\n  echo \"LogLevel VERBOSE\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"MaxAuthTries\"] \u003c= 4\n",
        "mql": "sshd.config.params[\"MaxAuthTries\"] \u003c= 4\n",
        "code_id": "/Su2a1bp8TA=",
        "checksum": "hOlJto266Zs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-maxauthtries-is-set-to-4-or-less",
        "type": "\u0004",
        "title": "Ensure SSH MaxAuthTries is set to 4 or less",
        "docs": {
          "desc": "This check ensures that the `MaxAuthTries` parameter is configured to limit the maximum number of authentication attempts permitted per connection. Properly setting this parameter helps prevent brute-force attacks and enhances system security.\n\n**Why this matters**\n\nThe `MaxAuthTries` parameter controls the number of authentication attempts allowed before the connection is terminated. If this parameter is not properly configured:\n\n- Attackers could exploit unlimited or high authentication attempts to perform brute-force attacks.\n- System logs could be flooded with failed login attempts, making it harder to detect legitimate security incidents.\n- The overall security posture of the system could be weakened, increasing the risk of unauthorized access.\n\nBy configuring `MaxAuthTries` to an appropriate value, organizations can mitigate the risk of brute-force attacks, protect sensitive data, and maintain compliance with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the SSH MaxAuthTries to 4 or less, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nMaxAuthTries 4\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the SSH MaxAuthTries to 4 or less, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH MaxAuthTries is set to 4 or less\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set MaxAuthTries in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^MaxAuthTries'\n        line: 'MaxAuthTries 4'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the SSH MaxAuthTries to 4 or less, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^MaxAuthTries' /etc/ssh/sshd_config; then\n  echo \"Updating MaxAuthTries to 4 in /etc/ssh/sshd_config...\"\n  sed -i 's/^MaxAuthTries.*/MaxAuthTries 4/' /etc/ssh/sshd_config\nelse\n  echo \"Adding MaxAuthTries 4 to /etc/ssh/sshd_config...\"\n  echo \"MaxAuthTries 4\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"PermitEmptyPasswords\"] == \"no\"\n",
        "mql": "sshd.config.params[\"PermitEmptyPasswords\"] == \"no\"\n",
        "code_id": "ubafkKyRPyY=",
        "checksum": "TJwPBPEmSR4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-permitemptypasswords-is-disabled",
        "type": "\u0004",
        "title": "Ensure SSH PermitEmptyPasswords is disabled",
        "docs": {
          "desc": "This check ensures that the `PermitEmptyPasswords` parameter in the SSH configuration is disabled to prevent accounts with empty password strings from being used for login. Disabling this option enhances the security of the SSH server by enforcing password-based authentication.\n\n**Why this matters**\n\nAllowing accounts with empty passwords to log in via SSH poses significant security risks:\n\n- Unauthorized users could gain access to the system without providing any credentials.\n- Malicious actors could exploit this vulnerability to compromise sensitive data or escalate privileges.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that the `PermitEmptyPasswords` parameter is disabled, organizations can enforce secure authentication practices, reduce the attack surface, and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo disable SSH PermitEmptyPasswords, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nPermitEmptyPasswords no\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo disable SSH PermitEmptyPasswords, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH PermitEmptyPasswords is disabled\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set PermitEmptyPasswords to no in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^PermitEmptyPasswords'\n        line: 'PermitEmptyPasswords no'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo disable SSH PermitEmptyPasswords, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^PermitEmptyPasswords' /etc/ssh/sshd_config; then\n  echo \"Updating PermitEmptyPasswords in sshd_config...\"\n  sed -i 's/^PermitEmptyPasswords.*/PermitEmptyPasswords no/' /etc/ssh/sshd_config\nelse\n  echo \"Adding PermitEmptyPasswords to sshd_config...\"\n  echo \"PermitEmptyPasswords no\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 70
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"PermitUserEnvironment\"] == \"no\"\n",
        "mql": "sshd.config.params[\"PermitUserEnvironment\"] == \"no\"\n",
        "code_id": "tLcO8I/iXyk=",
        "checksum": "Ovu/w7HS0AQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-permituserenvironment-is-disabled",
        "type": "\u0004",
        "title": "Ensure SSH PermitUserEnvironment is disabled",
        "docs": {
          "desc": "This check ensures that the `PermitUserEnvironment` option in the SSH configuration is disabled to prevent users from passing environment variables to the SSH daemon. Disabling this option helps maintain a secure and controlled SSH environment.\n\n**Why this matters**\n\nThe `PermitUserEnvironment` option allows users to specify environment variables that are passed to the SSH daemon. If enabled:\n\n- Malicious users could exploit this feature to inject unauthorized environment variables, potentially compromising system security.\n- It increases the risk of privilege escalation or unauthorized access to sensitive resources.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy disabling the `PermitUserEnvironment` option, organizations can reduce the attack surface, maintain a secure SSH configuration, and ensure compliance with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo disable SSH PermitUserEnvironment, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nPermitUserEnvironment no\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo disable SSH PermitUserEnvironment, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH PermitUserEnvironment is disabled\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set PermitUserEnvironment to no in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^PermitUserEnvironment'\n        line: 'PermitUserEnvironment no'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo disable SSH PermitUserEnvironment, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^PermitUserEnvironment' /etc/ssh/sshd_config; then\n  echo \"Updating PermitUserEnvironment in sshd_config...\"\n  sed -i 's/^PermitUserEnvironment.*/PermitUserEnvironment no/' /etc/ssh/sshd_config\nelse\n  echo \"Adding PermitUserEnvironment to sshd_config...\"\n  echo \"PermitUserEnvironment no\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 70
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"Protocol\"] == 2\n",
        "mql": "sshd.config.params[\"Protocol\"] == 2\n",
        "code_id": "wM8ZVC/LDTg=",
        "checksum": "7HGMnskIEZ0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-protocol-is-set-to-2",
        "type": "\u0004",
        "title": "Ensure SSH Protocol is set to 2",
        "docs": {
          "desc": "This check ensures that the SSH protocol is set to version 2, which provides enhanced security and addresses vulnerabilities present in the older SSH1 protocol.\n\n**Why this matters**\n\nSSH1 is an outdated protocol with known security issues, including:\n  - Weak encryption algorithms that are susceptible to attacks.\n  - Vulnerabilities that can be exploited to compromise the confidentiality and integrity of SSH sessions.\n\nSSH2 is a more advanced and secure protocol, offering:\n  - Stronger encryption algorithms to protect data in transit.\n  - Improved authentication mechanisms to prevent unauthorized access.\n  - Enhanced security features to mitigate modern threats.\n\nBy enforcing the use of SSH2, organizations can ensure secure remote access, protect sensitive data, and maintain compliance with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the SSH protocol to version 2, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nProtocol 2\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the SSH protocol to version 2, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH Protocol is set to 2\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set Protocol 2 in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^Protocol'\n        line: 'Protocol 2'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the SSH Protocol to 2, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^Protocol' /etc/ssh/sshd_config; then\n  echo \"Updating Protocol to 2 in /etc/ssh/sshd_config...\"\n  sed -i 's/^Protocol.*/Protocol 2/' /etc/ssh/sshd_config\nelse\n  echo \"Adding Protocol 2 to /etc/ssh/sshd_config...\"\n  echo \"Protocol 2\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {
          "items": {
            "SjETaXBC4Zs=": {
              "mql": "package('openssh-server').version  \u003e= semver(\"6\") \u0026\u0026 package('openssh-server').version \u003c semver(\"7.6\")",
              "code_id": "SjETaXBC4Zs=",
              "checksum": "FXs6HkAIVmQ=",
              "mrn": "//policy.api.mondoo.app/filter/SjETaXBC4Zs=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "sshd.config.params[\"PermitRootLogin\"] == \"no\" || sshd.config.params[\"PermitRootLogin\"] == \"prohibit-password\" || sshd.config.params[\"PermitRootLogin\"] == \"without-password\"\n",
        "mql": "sshd.config.params[\"PermitRootLogin\"] == \"no\" || sshd.config.params[\"PermitRootLogin\"] == \"prohibit-password\" || sshd.config.params[\"PermitRootLogin\"] == \"without-password\"\n",
        "code_id": "gmsQpeNjdsE=",
        "checksum": "VZNSddZAcDg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-root-login-is-disabled",
        "type": "\u0004",
        "title": "Ensure SSH root login is disabled or set to prohibit-password",
        "docs": {
          "desc": "This check ensures that the `PermitRootLogin` parameter in the SSH configuration is set to restrict root login access. Disabling root login enhances the security of the SSH server by preventing direct access to the root account.\n\n**Why this matters**\n\nAllowing root login via SSH poses significant security risks:\n\n- Attackers could target the root account with brute-force attacks, increasing the likelihood of unauthorized access.\n- Direct root access bypasses the accountability provided by individual user accounts.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that the `PermitRootLogin` parameter is disabled or set to `prohibit-password`, organizations can enforce secure authentication practices, reduce the attack surface, and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo disable SSH root login or set it to prohibit password authentication, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nPermitRootLogin no\n```\n\nor\n\n```bash\nPermitRootLogin prohibit-password\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo disable SSH root login or set it to prohibit password authentication, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH root login is disabled or set to prohibit-password\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set PermitRootLogin to no in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^PermitRootLogin'\n        line: 'PermitRootLogin no'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo disable SSH PermitRootLogin, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^PermitRootLogin' /etc/ssh/sshd_config; then\n  echo \"Updating PermitRootLogin in sshd_config...\"\n  sed -i 's/^PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config\nelse\n  echo \"Adding PermitRootLogin to sshd_config...\"\n  echo \"PermitRootLogin no\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"Banner\"] == \"/etc/issue.net\"\n",
        "mql": "sshd.config.params[\"Banner\"] == \"/etc/issue.net\"\n",
        "code_id": "vk6ysFUKJtI=",
        "checksum": "pM+Dj8zowhk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-warning-banner-is-configured",
        "type": "\u0004",
        "title": "Ensure SSH warning banner is configured",
        "docs": {
          "desc": "This check ensures that the `Banner` parameter in the SSH configuration is set to display a warning banner to remote users before authentication. The banner file typically contains legal or security notices to inform users of acceptable use policies.\n\n**Why this matters**\n\nDisplaying a warning banner before authentication serves several purposes:\n\n- It informs users of the system's acceptable use policy and legal restrictions.\n- It provides a deterrent to unauthorized access by clearly stating the consequences of misuse.\n- It supports compliance with security standards and regulatory requirements that mandate the use of warning banners.\n\nBy ensuring that the `Banner` parameter is configured, organizations can enhance security awareness, deter unauthorized access, and maintain compliance with security policies.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo set the SSH warning banner, edit the `/etc/ssh/sshd_config` file and add or modify the `Banner` parameter to point to the desired banner file.\n\nExample:\n\n```bash\nBanner /etc/issue.net\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo set the SSH warning banner using Ansible, use the following playbook:\n\n```yaml\n---\n- name: Configure SSH warning banner\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure Banner is set in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^Banner'\n        line: 'Banner /etc/issue.net'\n        create: yes\n        state: present\n    - name: Restart SSH service to apply changes\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that the SSH warning banner is configured, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting SSH warning banner\"\nif grep -q '^Banner' /etc/ssh/sshd_config; then\n  echo \"Updating existing Banner configuration value\"\n  sed -i 's|^Banner.*|Banner /etc/issue.net|' /etc/ssh/sshd_config\nelse\n  echo \"Adding Banner configuration value to SSH config\"\n  echo \"Banner /etc/issue.net\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 30
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"X11Forwarding\"] == \"no\"\n",
        "mql": "sshd.config.params[\"X11Forwarding\"] == \"no\"\n",
        "code_id": "VAMnKimEy50=",
        "checksum": "fFopv3ohrhw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-ssh-x11-forwarding-is-disabled",
        "type": "\u0004",
        "title": "Ensure SSH X11 forwarding is disabled",
        "docs": {
          "desc": "This check ensures that the `X11Forwarding` parameter in the SSH configuration is disabled to prevent tunneling of X11 traffic through the connection, which could expose the system to security risks.\n\n**Why this matters**\n\nThe `X11Forwarding` parameter allows remote graphical connections by tunneling X11 traffic through the SSH connection. If enabled:\n  - It could expose the system to unauthorized access or data leakage through the X11 protocol.\n  - Attackers could exploit this feature to capture sensitive information or compromise the system.\n  - It increases the attack surface of the SSH server, potentially leading to security vulnerabilities.\n\nBy disabling `X11Forwarding`, organizations can reduce the attack surface, enhance system security, and maintain compliance with security best practices.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo disable SSH X11 forwarding, edit the `/etc/ssh/sshd_config` file and add or modify the following line:\n\n```bash\nX11Forwarding no\n```\n\nRestart the SSH service to apply the changes:\n\n```bash\nsystemctl restart sshd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo disable SSH X11 forwarding, use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure SSH X11Forwarding is disabled\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set X11Forwarding to no in sshd_config\n      ansible.builtin.lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^X11Forwarding'\n        line: 'X11Forwarding no'\n      register: ssh_config_change\n\n    - name: Restart SSH service if config changed\n      ansible.builtin.systemd:\n        name: sshd\n        state: restarted\n      when: ssh_config_change.changed\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo disable SSH X11 forwarding, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^X11Forwarding' /etc/ssh/sshd_config; then\n  echo \"Updating X11Forwarding to no in /etc/ssh/sshd_config...\"\n  sed -i 's/^X11Forwarding.*/X11Forwarding no/' /etc/ssh/sshd_config\nelse\n  echo \"Adding X11Forwarding no to /etc/ssh/sshd_config...\"\n  echo \"X11Forwarding no\" \u003e\u003e /etc/ssh/sshd_config\nfi\nsystemctl restart sshd\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {}
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-a\\s+always\\,exit\\s+\\-F\\s+arch\\=b64\\s+\\-S\\s+mount\\s+\\-F\\s+auid\\\u003e\\=1000\\s+\\-F\\s+auid\\!\\=(4294967295|unset|-1)\\s+\\-k\\s+mounts(\\s+)?$/)) || props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-a\\s+always\\,exit\\s+\\-F\\s+arch\\=b32\\s+\\-S\\s+mount\\s+\\-F\\s+auid\\\u003e\\=1000\\s+\\-F\\s+auid\\!\\=(4294967295|unset|-1)\\s+\\-k\\s+mounts(\\s+)?$/))\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-a\\s+always\\,exit\\s+\\-F\\s+arch\\=b64\\s+\\-S\\s+mount\\s+\\-F\\s+auid\\\u003e\\=1000\\s+\\-F\\s+auid\\!\\=(4294967295|unset|-1)\\s+\\-k\\s+mounts(\\s+)?$/)) || props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-a\\s+always\\,exit\\s+\\-F\\s+arch\\=b32\\s+\\-S\\s+mount\\s+\\-F\\s+auid\\\u003e\\=1000\\s+\\-F\\s+auid\\!\\=(4294967295|unset|-1)\\s+\\-k\\s+mounts(\\s+)?$/))\n",
        "code_id": "YOOINWQ8Fwg=",
        "checksum": "Q+qVX6zmQ7Q=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-successful-file-system-mounts-are-collected",
        "type": "\u0004",
        "title": "Ensure successful file system mounts are collected",
        "docs": {
          "desc": "This check verifies that the system is configured to monitor successful file system mount events by auditing the `mount` system call. The audit log will record events where the user is a non-privileged user (auid \u003e= 1000) and is not a daemon event (auid=4294967295). All audit records will be tagged with the identifier \"mounts.\"\n\n**Why this matters**\n\nMonitoring successful file system mounts is critical for maintaining system security. Unauthorized or unexpected mounts can lead to data leakage, privilege escalation, or other malicious activities.\n\nIf these events are not audited:\n  - Unauthorized mounts may go unnoticed, exposing the system to potential threats.\n  - It becomes difficult to trace unauthorized actions or identify the source of configuration drift.\n  - The system may fall out of compliance with security standards requiring audit logging.\n\nBy ensuring that successful file system mount events are monitored, organizations can maintain a secure environment and quickly respond to potential threats.",
          "remediation": [
            {
              "id": "default",
              "desc": "1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-mounts.rules`\n\nAdd the following lines:\n\n```\n-a always,exit -F arch=b64 -S mount -F auid\u003e=1000 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid\u003e=1000 -F auid!=4294967295 -k mounts\n```\n\n2. Load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n3. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "props.mondooLinuxSecuritySudoersFiles\n  .where(_ == /Defaults/)\n  .any(_ == /logfile=\\\"\\/var\\/log\\/sudo\\.log\\\"/)\n",
        "mql": "props.mondooLinuxSecuritySudoersFiles\n  .where(_ == /Defaults/)\n  .any(_ == /logfile=\\\"\\/var\\/log\\/sudo\\.log\\\"/)\n",
        "code_id": "ddRE8tg0OgY=",
        "checksum": "fyA3YbdJZGY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-sudo-logging-is-enabled",
        "type": "\u0004",
        "title": "Ensure sudo logging is enabled",
        "docs": {
          "desc": "This check ensures that sudo logs all events to a dedicated log file instead of the default `/var/log/auth.log` file, which contains all authentication events system-wide. Configuring a dedicated log file for sudo events improves the ability to audit and monitor sudo usage effectively.\n\n**Why this matters**\n\nBy default, sudo logs are mixed with other authentication events in `/var/log/auth.log`, making it difficult to identify and analyze sudo-specific failures or activities. Without a dedicated log file:\n  - Sudo failures may go unnoticed due to the volume of unrelated log entries.\n  - Administrators may face challenges in auditing and investigating sudo usage.\n  - Critical security events related to sudo may be obscured, increasing the risk of unauthorized access or privilege escalation.\n\nConfiguring sudo to log to a dedicated file enhances visibility into sudo activities, supports effective auditing, and strengthens overall system security.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo enable sudo logging to a dedicated file:\n\n1. Edit the `/etc/sudoers` file using the `visudo` command to prevent syntax errors.\n\n2. Add the following line:\n\n```\nDefaults logfile=\"/var/log/sudo.log\"\n```\n\n3. Ensure that the log file exists and has appropriate permissions:\n\n```bash\ntouch /var/log/sudo.log\nchmod 600 /var/log/sudo.log\nchown root:root /var/log/sudo.log\n```"
            }
          ]
        },
        "impact": {
          "value": 80
        },
        "filters": {},
        "props": [
          {
            "mql": "sudoersFiles = files.find(from: \"/etc/sudoers.d/\", type: 'file').list.map(path) + [\"/etc/sudoers\"]\nreturn sudoersFiles.map(file(_).content.lines.where(_ == /^[^#]/)).flat\n",
            "code_id": "Dl2bCnmJTbc=",
            "checksum": "4XNAWt6rRDk=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecuritySudoersFiles",
            "uid": "mondooLinuxSecuritySudoersFiles",
            "type": "\u0019\u0007",
            "title": "Return the files from /etc/sudoers.d"
          }
        ]
      },
      {
        "query": "kernel.parameters['net.ipv4.conf.all.log_martians'] == 1\nkernel.parameters['net.ipv4.conf.default.log_martians'] == 1\n",
        "mql": "kernel.parameters['net.ipv4.conf.all.log_martians'] == 1\nkernel.parameters['net.ipv4.conf.default.log_martians'] == 1\n",
        "code_id": "Hwqs1IZPO4c=",
        "checksum": "OuyA9VH1AGk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-suspicious-packets-are-logged",
        "type": "\u0001",
        "title": "Ensure suspicious packets are logged",
        "docs": {
          "desc": "This check verifies that the system is configured to log suspicious or malformed packets by ensuring the kernel parameters `net.ipv4.conf.all.log_martians` and `net.ipv4.conf.default.log_martians` are set to `1`.\n\n**Why this matters**\n\nMartian packets are packets with impossible or invalid source addresses, such as those that should not appear on the public internet or within specific segments of a private network. Logging these packets helps administrators detect potential misconfigurations or malicious activity, such as spoofed traffic or scanning attempts.\n\nIf logging of suspicious packets is not enabled:\n  - Unusual or invalid network traffic may go undetected, reducing visibility into potential reconnaissance or attack attempts.\n  - Misconfigured hosts or routing issues may persist without notice, leading to degraded performance or security gaps.\n  - Incident response and forensic analysis capabilities are weakened due to lack of log data.\n\nEnabling logging for martian packets provides valuable insights into unusual traffic patterns and supports early detection of threats or misconfigurations. This improves network observability and supports a proactive security posture.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.default.log_martians = 1\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.conf.all.log_martians=1\nsysctl -w net.ipv4.conf.default.log_martians=1\nsysctl -w net.ipv4.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Enable logging of suspicious packets\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure suspicious packets are logged in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-log-suspicious-packets.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.conf.all.log_martians', value: '1' }\n        - { name: 'net.ipv4.conf.default.log_martians', value: '1' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to enable logging of suspicious packets.\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^net.ipv4.conf.all.log_martians' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.all.log_martians to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.all.log_martians.*/net.ipv4.conf.all.log_martians = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.all.log_martians to 1 in /etc/sysctl.d/99-log-martians.conf\"\n  echo \"net.ipv4.conf.all.log_martians = 1\" \u003e\u003e /etc/sysctl.d/99-log-martians.conf\nfi\n\nif grep -q '^net.ipv4.conf.default.log_martians' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.conf.default.log_martians to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.conf.default.log_martians.*/net.ipv4.conf.default.log_martians = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.conf.default.log_martians to 1 in /etc/sysctl.d/99-log-martians.conf\"\n  echo \"net.ipv4.conf.default.log_martians = 1\" \u003e\u003e /etc/sysctl.d/99-log-martians.conf\nfi\n\nsysctl -w net.ipv4.conf.all.log_martians=1\nsysctl -w net.ipv4.conf.default.log_martians=1\nsysctl -w net.ipv4.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "users.where( name != \"root\" \u0026\u0026 name != \"sync\" \u0026\u0026 name != \"shutdown\" \u0026\u0026 name != \"halt\" ).where( uid \u003c 1000 ).list {\n  shell == \"/usr/bin/nologin\" || shell == \"/sbin/nologin\" || shell == \"/usr/sbin/nologin\"\n}\n",
        "mql": "users.where( name != \"root\" \u0026\u0026 name != \"sync\" \u0026\u0026 name != \"shutdown\" \u0026\u0026 name != \"halt\" ).where( uid \u003c 1000 ).list {\n  shell == \"/usr/bin/nologin\" || shell == \"/sbin/nologin\" || shell == \"/usr/sbin/nologin\"\n}\n",
        "code_id": "usnsqpdfgm4=",
        "checksum": "MQ7xZ8n2G30=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-accounts-are-non-login",
        "type": "\u0019\f",
        "title": "Ensure system accounts are non-login",
        "docs": {
          "desc": "This check ensures that system accounts, which are used to manage applications and services, are configured as non-login accounts. These accounts do not require a shell for interactive use.\n\n**Why this matters**\n\nSystem accounts are intended for managing applications and services, not for interactive user access. If these accounts are configured with login shells:\n\n- Unauthorized users could exploit these accounts to gain access to the system.\n- Malicious actors could use these accounts to escalate privileges or compromise system security.\n- System integrity and compliance with security policies could be jeopardized.\n\nBy ensuring that system accounts are non-login, organizations can reduce the attack surface and maintain a secure system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. To ensure that system accounts are non-login, you can run the following command to set the shell for each system account to `/sbin/nologin`:\n\n```bash\nusermod -s /sbin/nologin \u003cuser\u003e\n```\n\n2. Lock the `sync`, `shutdown`, and `halt` users to prevent login:\n\n```bash\nusermod -L sync\nusermod -L shutdown\nusermod -L halt\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo ensure that system accounts are non-login, you can use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure system accounts are non-login\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set shell for system accounts to /sbin/nologin\n      ansible.builtin.user:\n        name: \"{{ item }}\"\n        shell: /sbin/nologin\n      loop: \"{{ ansible_users | selectattr('uid', 'lt', 1000) | map(attribute='name') | list }}\"\n\n    - name: Lock sync, shutdown, and halt users\n      ansible.builtin.user:\n        name: \"{{ item }}\"\n        state: locked\n      loop:\n        - sync\n        - shutdown\n        - halt\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that all system accounts are non-login, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting shell for system accounts to /sbin/nologin\"\nfor user in $(awk -F: '($3 \u003c 1000 \u0026\u0026 $1 != \"root\") {print $1}' /etc/passwd); do\n  echo \"Setting nologin shell for user: $user\"\n  usermod -s /sbin/nologin $user\ndone\n\necho \"Locking sync, shutdown, and halt users\"\nusermod -L sync\nusermod -L shutdown\nusermod -L halt\n```"
            }
          ]
        },
        "impact": {
          "value": 70
        },
        "filters": {}
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/log\\/sudo\\.log\\s+\\-p\\s+wa\\s+\\-k\\s+actions(\\s+)?$/))\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/^(\\s+)?\\-w\\s+\\/var\\/log\\/sudo\\.log\\s+\\-p\\s+wa\\s+\\-k\\s+actions(\\s+)?$/))\n",
        "code_id": "f8x+lNDx0ao=",
        "checksum": "1WjUW5aMH/Y=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-administrator-actions-sudolog-are-collected",
        "type": "\u0004",
        "title": "Ensure system administrator actions (sudolog) are collected",
        "docs": {
          "desc": "This check ensures that the `sudo` log file is monitored to track all privileged commands executed by administrators. Properly configured systems disable the use of the `su` command, requiring administrators to log in and use `sudo` for privileged actions. This setup ensures that all administrator commands are logged to `/var/log/sudo.log`.\n\n**Why this matters**\n\nMonitoring the `sudo` log file provides visibility into administrative actions, ensuring accountability and enhancing security. If the `sudo` log file is not monitored:\n  - Unauthorized or malicious actions by administrators may go undetected.\n  - Critical audit trails may be incomplete, complicating incident response and forensic investigations.\n  - Compliance with security policies requiring detailed logging of administrative actions may be compromised.\n\nBy monitoring the `sudo` log file, organizations can ensure that all privileged commands are logged, supporting accountability, security, and compliance efforts.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nEdit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/actions.rules`\n\nAdd the following line:\n\n```\n-w /var/log/sudo.log -p wa -k actions\n```\n\nTo load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\nCheck if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for sudo log monitoring:\n\n```yaml\n---\n- name: Configure audit rule for sudo actions\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure audit rule for /var/log/sudo.log is present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/actions.rules\n        block: |\n          -w /var/log/sudo.log -p wa -k actions\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: sudo_audit_rule_updated\n\n    - name: Reload audit rules if updated\n      ansible.builtin.command: augenrules --load\n      when: sudo_audit_rule_updated.changed\n\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the audit rule for sudo actions, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting audit rule for sudo actions...\"\necho \"-w /var/log/sudo.log -p wa -k actions\" \u003e /etc/audit/rules.d/actions.rules\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "file(\"/etc/audit/auditd.conf\").exists\nauditd.config.params.space_left_action == /email|exec|single|halt/\nauditd.config.params.action_mail_acct == \"root\"\nauditd.config.params.admin_space_left_action == /halt|single/\n",
        "mql": "file(\"/etc/audit/auditd.conf\").exists\nauditd.config.params.space_left_action == /email|exec|single|halt/\nauditd.config.params.action_mail_acct == \"root\"\nauditd.config.params.admin_space_left_action == /halt|single/\n",
        "code_id": "QXi9pqUHCaI=",
        "checksum": "1cJuyg8bv5Y=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-is-disabled-when-audit-logs-are-full",
        "type": "\u0001",
        "title": "Ensure system is disabled when audit logs are full",
        "docs": {
          "desc": "This check verifies that the system is configured to disable itself when audit logs are full by ensuring the `space_left_action` and `admin_space_left_action` parameters in `/etc/audit/auditd.conf` are set to appropriate values.\n\n**Why this matters**\n\nThe `space_left_action` setting determines what action auditd takes when disk space for audit logs is low. The `admin_space_left_action` setting specifies the action when space is critically low. Setting these to halt or single ensures that the system does not continue operating with potentially compromised logging capabilities.\n\nIf the system does not disable itself when audit logs are full:\n  - Crucial audit data may be lost, leading to gaps in security monitoring.\n  - The system may continue to operate without proper oversight, increasing the risk of undetected malicious activity.\n  - Compliance with regulatory requirements for audit logging may be jeopardized.\n\nConfiguring these parameters helps ensure that the system maintains a secure state and that audit logging remains functional, even under adverse conditions.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameters in `/etc/audit/auditd.conf`:\n\n```\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt\n```\n\n2. Restart the service to load the new configuration values:\n\n```bash\nsystemctl restart auditd\n```\n\n3. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the auditd parameters:\n\n```yaml\n---\n- name: Configure auditd parameters\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure auditd parameters are configured in auditd.conf\n      ansible.builtin.blockinfile:\n        path: /etc/audit/auditd.conf\n        block: |\n          space_left_action = email\n          action_mail_acct = root\n          admin_space_left_action = halt\n        create: yes\n        state: present\n      register: auditd_params_changed\n\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n\n    - name: Restart auditd service to apply changes if not immutable and config changed\n      ansible.builtin.systemd:\n        name: auditd\n        state: restarted\n      when:\n        - immutable_check.rc != 0\n        - auditd_params_changed.changed\n\n    - name: Warn if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to configure the auditd parameters for handling full audit logs.\n\n```bash\n#!/bin/bash\nset -e\n\nif grep -q '^space_left_action' /etc/audit/auditd.conf; then\n  echo \"Updating space_left_action to email in /etc/audit/auditd.conf\"\n  sed -i 's/^space_left_action.*/space_left_action = email/' /etc/audit/auditd.conf\nelse\n  echo \"Adding space_left_action = email to /etc/audit/auditd.conf\"\n  echo \"space_left_action = email\" \u003e\u003e /etc/audit/auditd.conf\nfi\n\nif grep -q '^action_mail_acct' /etc/audit/auditd.conf; then\n  echo \"Updating action_mail_acct to root in /etc/audit/auditd.conf\"\n  sed -i 's/^action_mail_acct.*/action_mail_acct = root/' /etc/audit/auditd.conf\nelse\n  echo \"Adding action_mail_acct = root to /etc/audit/auditd.conf\"\n  echo \"action_mail_acct = root\" \u003e\u003e /etc/audit/auditd.conf\nfi\n\nif grep -q '^admin_space_left_action' /etc/audit/auditd.conf; then\n  echo \"Updating admin_space_left_action to halt in /etc/audit/auditd.conf\"\n  sed -i 's/^admin_space_left_action.*/admin_space_left_action = halt/' /etc/audit/auditd.conf\nelse\n  echo \"Adding admin_space_left_action = halt to /etc/audit/auditd.conf\"\n  echo \"admin_space_left_action = halt\" \u003e\u003e /etc/audit/auditd.conf\nfi\n\necho \"Restarting auditd service to apply changes\"\nsystemctl restart auditd\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 40
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "service(\"ntalk\").enabled == false\nservice(\"ntalk\").running == false\nservice(\"talkd\").enabled == false\nservice(\"talkd\").running == false\n",
        "mql": "service(\"ntalk\").enabled == false\nservice(\"ntalk\").running == false\nservice(\"talkd\").enabled == false\nservice(\"talkd\").running == false\n",
        "code_id": "6jLyEM69g6Y=",
        "checksum": "eNn4w4mbJSI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-talk-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure talk server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the talk server (talkd or ntalk) is disabled to prevent the use of an outdated and insecure communication protocol.\n\n**Why this matters**\n\nThe talk protocol enables real-time text-based communication between users on UNIX systems. However, it lacks encryption and strong authentication mechanisms, making it unsuitable for modern environments.\n\nIf the talk server is enabled:\n  - It exposes the system to network-based attacks through an unnecessary and insecure service.\n  - Messages are transmitted in plaintext, allowing for potential interception and eavesdropping.\n  - The service increases the system's attack surface and may be abused for denial-of-service attacks or unauthorized user messaging.\n\nDisabling the talk server minimizes risk, reduces the system's attack surface, and enforces a minimal, hardened system configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable `ntalk` and `talkd`:\n\n```bash\nsystemctl stop ntalk\nsystemctl stop talkd\n\nsystemctl disable ntalk\nsystemctl disable talkd\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable `ntalk` and `talkd`:\n\n```yaml\n---\n- name: Stop and disable talk server services\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure talk server services are stopped and disabled\n      ansible.builtin.systemd:\n        name: \"{{ item }}\"\n        state: stopped\n        enabled: no\n      loop:\n        - ntalk\n        - talkd\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable talk server services.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling talk server services...\"\nsystemctl stop ntalk\nsystemctl stop talkd\nsystemctl disable ntalk\nsystemctl disable talkd\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.parameters['net.ipv4.tcp_syncookies'] == 1\n",
        "mql": "kernel.parameters['net.ipv4.tcp_syncookies'] == 1\n",
        "code_id": "w44ayUe5r2M=",
        "checksum": "bEuLLKLLb2o=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-tcp-syn-cookies-is-enabled",
        "type": "\u0004",
        "title": "Ensure TCP SYN Cookies is enabled",
        "docs": {
          "desc": "This check verifies that the system is configured to use TCP SYN cookies by ensuring the kernel parameter `net.ipv4.tcp_syncookies` is set to `1`.\n\n**Why this matters**\n\nTCP SYN cookies are a defense mechanism against SYN flood attacks, a type of denial-of-service (DoS) attack where an attacker sends a large number of TCP connection requests without completing the handshake. This consumes server resources and can prevent legitimate users from establishing connections.\n\nWhen SYN cookies are enabled:\n  - The system avoids allocating memory for incomplete TCP handshakes by encoding connection information into the TCP sequence number.\n  - It allows the server to continue responding to new connection requests even when the SYN backlog is full.\n  - It helps maintain availability and resilience under high connection request loads or malicious activity.\n\nWithout SYN cookies, systems are more susceptible to resource exhaustion during a SYN flood. Enabling this feature strengthens the host's ability to withstand network-based denial-of-service attempts and helps ensure reliable TCP service availability.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\n1. Set the following parameter in `/etc/sysctl.conf` or a `/etc/sysctl.d/` file:\n\n```\nnet.ipv4.tcp_syncookies = 1\n```\n\n2. Run these commands to set the active kernel parameters:\n\n```bash\nsysctl -w net.ipv4.tcp_syncookies=1\nsysctl -w net.ipv4.route.flush=1\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the kernel parameters:\n\n```yaml\n---\n- name: Enable TCP SYN Cookies\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure TCP SYN Cookies is enabled in sysctl configuration\n      ansible.builtin.sysctl:\n        name: \"{{ item.name }}\"\n        value: \"{{ item.value }}\"\n        sysctl_file: /etc/sysctl.d/99-enable-tcp-syncookies.conf\n        state: present\n        sysctl_set: true\n        reload: yes\n      loop:\n        - { name: 'net.ipv4.tcp_syncookies', value: '1' }\n        - { name: 'net.ipv4.route.flush', value: '1' }\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to enable TCP SYN Cookies and persist the setting.\n\n```bash\n#!/bin/bash\nset -e\n\n# Set net.ipv4.tcp_syncookies\nif grep -q '^net.ipv4.tcp_syncookies' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.tcp_syncookies to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.tcp_syncookies.*/net.ipv4.tcp_syncookies = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.tcp_syncookies to 1 in /etc/sysctl.d/99-enable-tcp-syncookies.conf\"\n  echo \"net.ipv4.tcp_syncookies = 1\" \u003e\u003e /etc/sysctl.d/99-enable-tcp-syncookies.conf\nfi\n\n# Set net.ipv4.route.flush\nif grep -q '^net.ipv4.route.flush' /etc/sysctl.conf 2\u003e/dev/null; then\n  echo \"Setting net.ipv4.route.flush to 1 in /etc/sysctl.conf\"\n  sed -i 's/^net.ipv4.route.flush.*/net.ipv4.route.flush = 1/' /etc/sysctl.conf\nelse\n  echo \"Setting net.ipv4.route.flush to 1 in /etc/sysctl.d/99-enable-tcp-syncookies.conf\"\n  echo \"net.ipv4.route.flush = 1\" \u003e\u003e /etc/sysctl.d/99-enable-tcp-syncookies.conf\nfi\n\nsysctl -w net.ipv4.tcp_syncookies=1\nsysctl -w net.ipv4.route.flush=1\n```"
            }
          ]
        },
        "impact": {
          "value": 75
        },
        "filters": {
          "items": {
            "TCpHG32eMbg=": {
              "mql": "asset.kind != \"container-image\"\nasset.runtime != \"docker-container\"\n",
              "code_id": "TCpHG32eMbg=",
              "checksum": "g0oUr+827Y0=",
              "mrn": "//policy.api.mondoo.app/filter/TCpHG32eMbg=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "service(\"telnet.socket\").enabled == false\nservice(\"telnet.socket\").running == false\n",
        "mql": "service(\"telnet.socket\").enabled == false\nservice(\"telnet.socket\").running == false\n",
        "code_id": "727yzVm9jYQ=",
        "checksum": "W/JE5R4RBFs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-telnet-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure Telnet server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the Telnet server service (telnet.socket) is not running and is disabled on the system.\n\n**Why this matters**\n\nTelnet is an older protocol used for remote command-line access over a network. It transmits all data—including usernames and passwords—in plaintext, making it highly insecure for modern environments. Any system using Telnet is vulnerable to eavesdropping, session hijacking, and credential theft.\n\nIf the Telnet server is enabled:\n  - It exposes the system to man-in-the-middle attacks due to the lack of encryption.\n  - Credentials and session data can be intercepted by any attacker with network access.\n  - It creates a significant attack surface that can be exploited by automated tools or targeted threats.\n\nModern systems should use secure alternatives such as SSH, which encrypt all communications. Disabling Telnet services on systems where they are not explicitly required strengthens the host's security posture and reduces the risk of unauthorized access.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these command to stop and disable telnet:\n\n```bash\nsystemctl stop telnet.socket\nsystemctl disable telnet.socket\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable telnet:\n\n```yaml\n---\n- name: Stop and disable Telnet server\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure Telnet server is stopped and disabled\n      ansible.builtin.systemd:\n        name: telnet.socket\n        state: stopped\n        enabled: no\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the Telnet server.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling telnet service...\"\nsystemctl stop telnet.socket\nsystemctl disable telnet.socket\n```"
            }
          ]
        },
        "impact": {
          "value": 90
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "service(\"tftp.socket\").enabled == false\nservice(\"tftp.socket\").running == false\n",
        "mql": "service(\"tftp.socket\").enabled == false\nservice(\"tftp.socket\").running == false\n",
        "code_id": "AjsJ60JDOuU=",
        "checksum": "NTJS4WaPCvQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-tftp-server-is-not-enabled",
        "type": "\u0001",
        "title": "Ensure TFTP server is stopped and not enabled",
        "docs": {
          "desc": "This check verifies that the Trivial File Transfer Protocol (TFTP) server service (tftp.socket) is not running and is disabled on the system.\n\n**Why this matters**\n\nTFTP is a simple, lightweight file transfer protocol typically used for tasks such as bootstrapping diskless workstations or network appliances. It lacks authentication, encryption, and access control mechanisms, making it highly insecure for general-purpose or internet-connected systems.\n\nIf the TFTP server is enabled:\n  - Files can be read or written without authentication, leading to data leakage or unauthorized modification.\n  - Attackers can use TFTP to upload malicious payloads or exfiltrate sensitive files.\n  - It may serve as an entry point for lateral movement in network-based attacks, especially in environments with legacy devices.\n\nUnless TFTP is explicitly required for a specific, isolated use case, the service should be stopped and disabled. Removing unnecessary TFTP services reduces the system's attack surface and aligns with best practices for minimizing unauthenticated network protocols.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using CLI**\n\nRun these commands to stop and disable tftp:\n\n```bash\nsystemctl stop tftp.socket\nsystemctl disable tftp.socket\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to stop and disable tftp:\n\n```yaml\n---\n- name: Stop and disable TFTP server\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure TFTP server is stopped and disabled\n      ansible.builtin.systemd:\n        name: tftp.socket\n        state: stopped\n        enabled: no\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to stop and disable the TFTP server.\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Stopping and disabling TFTP service...\"\nsystemctl stop tftp.socket\nsystemctl disable tftp.socket\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/(\\s+)?\\-e\\s+2(\\s+)?$/))\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.any(_.contains(/(\\s+)?\\-e\\s+2(\\s+)?$/))\n",
        "code_id": "HLLc52kZRQg=",
        "checksum": "CvOCogK4xG8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-the-audit-configuration-is-immutable",
        "type": "\u0004",
        "title": "Ensure the audit configuration is immutable",
        "docs": {
          "desc": "This check ensures that the audit system is configured to operate in immutable mode by setting the `-e 2` flag. Immutable mode prevents any modifications to audit rules using `auditctl`, ensuring that audit configurations remain secure and consistent.\n\n**Why this matters**\n\nImmutable mode is a critical security feature for the audit system:\n  - It prevents unauthorized or accidental changes to audit rules, maintaining the integrity of audit logs.\n  - It ensures that audit configurations cannot be tampered with during runtime, reducing the risk of malicious activity going undetected.\n  - It supports compliance with security standards that require robust and unalterable audit logging mechanisms.\n\nOnce the audit system is set to immutable mode, changes to audit rules can only be made by rebooting the system, providing an additional layer of protection against unauthorized modifications.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nTo ensure the audit configuration is immutable, follow these steps:\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`.\n\n   Example:\n\n   ```\n   vi /etc/audit/rules.d/50-immutable.rules\n   ```\n\n2. Add the following line to the file:\n\n   ```\n   -e 2\n   ```\n\n3. Load the newly added rules into the running configuration:\n\n   ```bash\n   augenrules --load\n   ```\n\n4. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n  ```bash\n  if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n  ```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit configuration to immutable mode:\n\n```yaml\n---\n- name: Ensure audit configuration is set to immutable mode (-e 2)\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Ensure immutable audit rule is present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-immutable.rules\n        block: |\n          -e 2\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: immutable_rule_updated\n\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: immutable_rule_updated.changed\n\n    - name: Check if auditd is already in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      changed_when: false\n      failed_when: false\n\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo set the audit configuration to immutable mode, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting audit configuration to immutable mode...\"\necho \"-e 2\" \u003e /etc/audit/rules.d/50-immutable.rules\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "logindefs.params{ _['UID_MIN'] == 1000 }\n",
        "mql": "logindefs.params{ _['UID_MIN'] == 1000 }\n",
        "code_id": "ZydIs1lDnr8=",
        "checksum": "5wH8qVah3vw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-uid-min-is-set-to-1000",
        "type": "\f",
        "title": "Ensure UID_MIN is set to 1000",
        "docs": {
          "desc": "This check ensures that the `UID_MIN` parameter in the `/etc/login.defs` file is set to 1000, which defines the starting UID for newly created user accounts. This configuration ensures consistency and proper user management on the system.\n\n**Why this matters**\n\nThe `UID_MIN` parameter determines the range of UIDs assigned to regular user accounts. If this value is not set correctly:\n\n- User accounts may overlap with system accounts, leading to potential security and operational issues.\n- System utilities and applications may behave unpredictably due to conflicts in UID assignments.\n- Compliance with security policies requiring separation of system and user accounts may be compromised.\n\nBy ensuring that `UID_MIN` is set to 1000, organizations can maintain a secure and consistent user management configuration.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nEdit the `login.defs` file and set UID_MIN.\n\n```\nvim /etc/login.defs\n\n\nUID_MIN                  1000\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nTo ensure that `UID_MIN` is set to 1000, you can use the following Ansible playbook:\n\n```yaml\n---\n- name: Ensure UID_MIN is set to 1000\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Set UID_MIN in /etc/login.defs\n      ansible.builtin.lineinfile:\n        path: /etc/login.defs\n        regexp: '^UID_MIN'\n        line: 'UID_MIN                  1000'"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nTo ensure that `UID_MIN` is set to 1000, you can run the following bash script:\n\n```bash\n#!/bin/bash\nset -e\n\necho \"Setting UID_MIN to 1000 in /etc/login.defs\"\nif grep -q '^UID_MIN' /etc/login.defs; then\n  sed -i 's/^UID_MIN.*/UID_MIN                  1000/' /etc/login.defs\nelse\n  echo 'UID_MIN                  1000' \u003e\u003e /etc/login.defs\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 60
        },
        "filters": {
          "items": {
            "+L0fuFhHeDQ=": {
              "mql": "asset.kind != \"container-image\"\n",
              "code_id": "+L0fuFhHeDQ=",
              "checksum": "RCBtFprB+No=",
              "mrn": "//policy.api.mondoo.app/filter/+L0fuFhHeDQ=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / creat /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / open /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / openat /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / truncate /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / ftruncate /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == / creat | open | openat | truncate | ftruncate /).all(\n  split(\"=\").any(split(\" \").any(_ == logindefs.params.UID_MIN))\n    \u0026\u0026 split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F auid!=\",\"1 \"])\n      || split(\"-\").containsAll([\"F auid!=unset \"])\n      || split(\"-\").containsAll([\"F auid!=4294967295 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F exit=\",\"EPERM \"])\n      || split(\"-\").containsAll([\"F exit=\",\"EACCES \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F key=access\"])\n      || split(\"-\").containsAll([\"k access\"])\n      || split(\"-\").containsAll([\"F key=perm_mod\"])\n      || split(\"-\").containsAll([\"k perm_mod\"])\n)\n",
        "mql": "props.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / creat /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / open /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / openat /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / truncate /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.any(_ == / ftruncate /)\nprops.mondooLinuxSecurityAuditFiles.flat.unique.where(_ == / creat | open | openat | truncate | ftruncate /).all(\n  split(\"=\").any(split(\" \").any(_ == logindefs.params.UID_MIN))\n    \u0026\u0026 split(\"-\").containsAll([\"a always,exit \",])\n    \u0026\u0026 split(\"-\").containsAll([\"F auid!=\",\"1 \"])\n      || split(\"-\").containsAll([\"F auid!=unset \"])\n      || split(\"-\").containsAll([\"F auid!=4294967295 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F arch=b64 \"])\n      || split(\"-\").containsAll([\"F arch=b32 \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F exit=\",\"EPERM \"])\n      || split(\"-\").containsAll([\"F exit=\",\"EACCES \"])\n    \u0026\u0026 split(\"-\").containsAll([\"F key=access\"])\n      || split(\"-\").containsAll([\"k access\"])\n      || split(\"-\").containsAll([\"F key=perm_mod\"])\n      || split(\"-\").containsAll([\"k perm_mod\"])\n)\n",
        "code_id": "RrDA90/HV9w=",
        "checksum": "udVAsWqNPNk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-unsuccessful-unauthorized-file-access-attempts-are-collected",
        "type": "\u0001",
        "title": "Ensure unsuccessful unauthorized file access attempts are collected",
        "docs": {
          "desc": "This check verifies that the system is configured to monitor unsuccessful attempts to access files by auditing system calls such as `creat`, `open`, `openat`, `truncate`, and `ftruncate`. These system calls control the creation, opening, and truncation of files. The audit log will record events where the user is a non-privileged user (auid \u003e= 1000), is not a daemon event (auid=4294967295), and the system call returned EACCES (permission denied) or EPERM (operation not permitted). All audit records will be tagged with the identifier \"access.\"\n\n**Why this matters**\n\nMonitoring unsuccessful file access attempts helps detect potential unauthorized access or misconfigurations. It provides visibility into failed attempts to create, open, or modify files, which may indicate malicious activity or user errors.\n\nIf these events are not audited:\n  - Unauthorized access attempts may go unnoticed, increasing the risk of data breaches.\n  - Misconfigurations or permission issues may persist without detection.\n  - The system may fall out of compliance with security standards requiring audit logging.\n\nBy auditing these system calls, administrators can identify and respond to unauthorized access attempts, ensuring the integrity and security of the system.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\n1. Edit or create a file in the `/etc/audit/rules.d/` directory ending in `.rules`\n\nExample: `vi /etc/audit/rules.d/50-access.rules`\n\n2. Add the following lines:\n\n```\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=4294967295 -k access\n```\n\n3. To load the newly added rules into the running configuration:\n\n```bash\naugenrules --load\n```\n\nThis command will generate a new `/etc/audit/audit.rules` file containing the newly added rules.\n\n4. Check if a reboot is required, in case the running configuration is set to be immutable:\n\n```bash\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to set the audit rules for unsuccessful unauthorized file access attempts:\n\n```yaml\n---\n- name: Configure audit rules for unsuccessful unauthorized file access attempts\n  hosts: all\n  become: true\n  tasks:\n    - name: Ensure access audit rules are present\n      ansible.builtin.blockinfile:\n        path: /etc/audit/rules.d/50-access.rules\n        block: |\n          -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=4294967295 -k access\n          -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=4294967295 -k access\n          -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=4294967295 -k access\n          -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=4294967295 -k access\n        create: yes\n        owner: root\n        group: root\n        mode: '0640'\n      register: access_audit_rules_updated\n    - name: Reload audit rules if file was updated\n      ansible.builtin.command: augenrules --load\n      when: access_audit_rules_updated.changed\n    - name: Check if auditd is in immutable mode\n      ansible.builtin.shell: |\n        auditctl -s | grep -q '^enabled.*2$'\n      register: immutable_check\n      failed_when: false\n      changed_when: false\n    - name: Notify if reboot is required due to immutable audit config\n      ansible.builtin.debug:\n        msg: \"Reboot required to load audit rules because auditd is in immutable mode\"\n      when: immutable_check.rc == 0\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to ensure unsuccessful unauthorized file access attempts are collected, overwriting any existing content in the rules file.\n\n```bash\n#!/bin/bash\nset -e\n\nRULES_FILE=\"/etc/audit/rules.d/50-access.rules\"\necho \"Ensuring audit rules for unsuccessful unauthorized file access attempts are configured in $RULES_FILE\"\ncat \u003e \"$RULES_FILE\" \u003c\u003cEOF\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=4294967295 -k access\nEOF\n\necho \"Loading audit rules\"\naugenrules --load\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then\n  echo \"Reboot required to load rules because auditd is in immutable mode\"\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 50
        },
        "filters": {},
        "props": [
          {
            "mql": "mondooLinuxSecurityAuditFiles = files.find(from: \"/etc/audit/rules.d\",regex:'.*\\.rules$', type: \"file\").list.map(path) + [\"/etc/audit/audit.rules\"]\nreturn mondooLinuxSecurityAuditFiles.map(file(_).content.lines.where( _ == /^[^#]/ ))\n",
            "code_id": "S5YXMz1p93Y=",
            "checksum": "eIwXCN7KzrQ=",
            "mrn": "//policy.api.mondoo.app/queries/mondooLinuxSecurityAuditFiles",
            "uid": "mondooLinuxSecurityAuditFiles",
            "type": "\u0019\u0019\u0007",
            "title": "Return the content from all /etc/audit/rules.d and /etc/audit/audit.rules"
          }
        ]
      },
      {
        "query": "packages.none(name == /^xserver-xorg.*/ || name == /^xorg-x11/ || name == /^xserver/)\n",
        "mql": "packages.none(name == /^xserver-xorg.*/ || name == /^xorg-x11/ || name == /^xserver/)\n",
        "code_id": "ceocEcP6Hmo=",
        "checksum": "4V3W1xVrhZg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-security-window-system-is-not-installed",
        "type": "\u0004",
        "title": "Ensure X Window System is not installed",
        "docs": {
          "desc": "This check verifies that the X Window System is not installed on the host. It scans for common packages associated with X, such as xserver-xorg, xorg-x11, and other display server components.\n\n**Why this matters**\n\nThe X Window System provides a graphical user interface (GUI) that enables users to interact with applications through windows, menus, and graphical controls. While useful for desktop environments, it is generally unnecessary—and potentially risky—on servers or hardened systems that do not require graphical interfaces.\n\nKeeping the X Window System installed on a server can:\n  - Introduce unnecessary software components and services, increasing the system's attack surface.\n  - Add network-facing daemons that may not be actively monitored or patched, creating potential entry points for attackers.\n  - Consume additional system resources that could otherwise be allocated to critical services.\n\nOn headless or server-class Linux systems, the X Window System should be removed unless explicitly required. Removing it aligns with the principle of least functionality, ensuring only essential software is installed and reducing the opportunity for exploitation.",
          "remediation": [
            {
              "id": "cli",
              "desc": "**Using the CLI**\n\nRun this command to remove the X Windows System packages:\n\n### RHEL/Fedora/Amazon Linux and derivatives\n\n```bash\nyum remove xorg-x11*\n```\n\n### Debian/Ubuntu and derivatives\n\n```bash\napt-get purge xserver-xorg\n```\n\n### SLES and openSUSE\n\n```bash\nzypper remove xorg-x11-server\n```"
            },
            {
              "id": "ansible",
              "desc": "**Using Ansible**\n\nUse this Ansible playbook to remove the X Windows System packages:\n\n```yaml\n---\n- name: Remove X Window System packages\n  hosts: all\n  become: true\n\n  tasks:\n    - name: Remove X Window System packages on RHEL/Fedora/Amazon Linux\n      ansible.builtin.yum:\n        name: xorg-x11*\n        state: absent\n      when: ansible_os_family == \"RedHat\"\n\n    - name: Remove X Window System packages on Debian/Ubuntu\n      ansible.builtin.apt:\n        name: xserver-xorg\n        state: absent\n      when: ansible_os_family == \"Debian\"\n\n    - name: Remove X Window System packages on SLES/openSUSE\n      ansible.builtin.zypper:\n        name: xorg-x11-server\n        state: absent\n      when: ansible_os_family == \"Suse\"\n```"
            },
            {
              "id": "bash",
              "desc": "**Using a Bash Script**\n\nUse this Bash script to remove the X Window System packages. It will auto-detect the package manager and remove relevant X packages if installed.\n\n```bash\n#!/bin/bash\nset -e\n\nif command -v yum \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected yum-based system. Removing X Window System packages...\"\n  yum remove -y xorg-x11*\nelif command -v dnf \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected dnf-based system. Removing X Window System packages...\"\n  dnf remove -y xorg-x11*\nelif command -v apt-get \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected apt-based system. Removing X Window System packages...\"\n  apt-get purge -y xserver-xorg\nelif command -v zypper \u003e/dev/null 2\u003e\u00261; then\n  echo \"Detected zypper-based system. Removing X Window System packages...\"\n  zypper remove -y xorg-x11-server\nelse\n  echo \"No supported package manager found. Please remove X Window System packages manually.\"\n  exit 1\nfi\n```"
            }
          ]
        },
        "impact": {
          "value": 100
        },
        "filters": {}
      },
      {
        "query": "machine.baseboard { manufacturer version serial assetTag product }",
        "mql": "machine.baseboard { manufacturer version serial assetTag product }",
        "code_id": "mpBx19SqXqo=",
        "checksum": "POqQwLcjCkU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-baseboard",
        "type": "\f",
        "title": "SMBIOS baseboard (or module) information",
        "filters": {}
      },
      {
        "query": "machine.bios { vendor version releaseDate }",
        "mql": "machine.bios { vendor version releaseDate }",
        "code_id": "n2Oxd+mY57E=",
        "checksum": "r1O3sxA1pjY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-bios",
        "type": "\f",
        "title": "SMBIOS BIOS information",
        "filters": {}
      },
      {
        "query": "machine.chassis { manufacturer serial version assetTag }",
        "mql": "machine.chassis { manufacturer serial version assetTag }",
        "code_id": "3d75ZaJW3Vw=",
        "checksum": "LLA1Nuhd3Nc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-chassis",
        "type": "\f",
        "title": "SMBIOS Chassis information",
        "filters": {}
      },
      {
        "query": "machine.system { sku serial family version product uuid manufacturer }",
        "mql": "machine.system { sku serial family version product uuid manufacturer }",
        "code_id": "l8G0PTcuvmM=",
        "checksum": "HuVeRRHsG7s=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-system",
        "type": "\f",
        "title": "SMBIOS System information",
        "filters": {}
      },
      {
        "query": "machine.baseboard.manufacturer",
        "mql": "machine.baseboard.manufacturer",
        "code_id": "kv1OUBUCnBA=",
        "checksum": "tM7zxjqGNac=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-system-manufacturer",
        "type": "\u0007",
        "title": "System manufacturer",
        "filters": {}
      },
      {
        "query": "machine.baseboard.product",
        "mql": "machine.baseboard.product",
        "code_id": "F7bdJ3U4G0g=",
        "checksum": "hxYF384Xty8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-system-product-name",
        "type": "\u0007",
        "title": "System product name",
        "filters": {}
      },
      {
        "query": "os.uptime",
        "mql": "os.uptime",
        "code_id": "dTMk4H4V270=",
        "checksum": "s+svULXTgz4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-uptime",
        "type": "\t",
        "title": "Operating system uptime",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "users.where(shell != \"/sbin/nologin\" \u0026\u0026 uid \u003e= 1000 \u0026\u0026 name != \"root\") { name sid uid gid shell authorizedkeys.list sshkeys home group }",
        "mql": "users.where(shell != \"/sbin/nologin\" \u0026\u0026 uid \u003e= 1000 \u0026\u0026 name != \"root\") { name sid uid gid shell authorizedkeys.list sshkeys home group }",
        "code_id": "NsQ1E+4hzxs=",
        "checksum": "lhu0sm8adHo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-users",
        "type": "\u0019\f",
        "title": "Regular users with shell access",
        "filters": {}
      },
      {
        "query": "lsblk.list.where(fstype == /crypt/) {parse.json(content: command('cryptsetup --dump-json-metadata luksDump /dev/' + name).stdout).params}\n",
        "mql": "lsblk.list.where(fstype == /crypt/) {parse.json(content: command('cryptsetup --dump-json-metadata luksDump /dev/' + name).stdout).params}\n",
        "code_id": "187y4zuwxTs=",
        "checksum": "xTM+99p2eIg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-aes-encryption-algo-metadata",
        "type": "\u0019\f",
        "title": "Disk encryption cipher suite",
        "filters": {
          "items": {
            "tgbnxVI1e9A=": {
              "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
              "code_id": "tgbnxVI1e9A=",
              "checksum": "GblDUSvztL8=",
              "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "lsblk { name label uuid fstype mountpoints }\n",
        "mql": "lsblk { name label uuid fstype mountpoints }\n",
        "code_id": "W1bK7WVyuvg=",
        "checksum": "dZFXlF9rqwk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-disk-encryption-metadata",
        "type": "\u0019\f",
        "title": "Disk encryption metadata",
        "filters": {
          "items": {
            "tgbnxVI1e9A=": {
              "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
              "code_id": "tgbnxVI1e9A=",
              "checksum": "GblDUSvztL8=",
              "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "if (file(\"/boot/grub/grub.cfg\").exists) {file(\"/boot/grub/grub.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub2/grub.cfg\").exists) {file(\"/boot/grub2/grub.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub/user.cfg\").exists) {file(\"/boot/grub/user.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub2/user.cfg\").exists) {file(\"/boot/grub2/user.cfg\") {dirname basename permissions}}\n",
        "mql": "if (file(\"/boot/grub/grub.cfg\").exists) {file(\"/boot/grub/grub.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub2/grub.cfg\").exists) {file(\"/boot/grub2/grub.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub/user.cfg\").exists) {file(\"/boot/grub/user.cfg\") {dirname basename permissions}}\nif (file(\"/boot/grub2/user.cfg\").exists) {file(\"/boot/grub2/user.cfg\") {dirname basename permissions}}\n",
        "code_id": "6BMRuwX+QBQ=",
        "checksum": "nyLqhmPnLXc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-permissions-on-bootloader-config-metadata",
        "type": "\u0001",
        "title": "Bootloader configuration metadata",
        "filters": {
          "items": {
            "tgbnxVI1e9A=": {
              "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
              "code_id": "tgbnxVI1e9A=",
              "checksum": "GblDUSvztL8=",
              "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "command('mokutil --sb-state').stdout\n",
        "mql": "command('mokutil --sb-state').stdout\n",
        "code_id": "q6yfmKHh8oQ=",
        "checksum": "FURciorJamU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-linux-workstation-security-secure-boot-is-enabled-metadata",
        "type": "\u0007",
        "title": "Secure Boot status",
        "filters": {
          "items": {
            "tgbnxVI1e9A=": {
              "mql": "asset.family.contains('linux')\npackages.where(name == /xorg|xserver|wayland/i).any(installed)\n",
              "code_id": "tgbnxVI1e9A=",
              "checksum": "GblDUSvztL8=",
              "mrn": "//policy.api.mondoo.app/filter/tgbnxVI1e9A=",
              "type": "\u0001"
            }
          }
        }
      },
      {
        "query": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "code_id": "GHihoQG+Q/Y=",
        "checksum": "c32XHvkp/S4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-active-connections",
        "type": "\u0019\f",
        "title": "Active network connections",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['chip_type']\n",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['chip_type']\n",
        "code_id": "ljXrlbjJUsM=",
        "checksum": "uF4RTJV/qsM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-cpu-type",
        "type": "\n",
        "title": "CPU type",
        "filters": {}
      },
      {
        "query": "command(\"ifconfig\").stdout",
        "mql": "command(\"ifconfig\").stdout",
        "code_id": "5UMVP+xd+1M=",
        "checksum": "O1K90MQwISs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-interface-configuration",
        "type": "\u0007",
        "title": "Network interface configuration",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "kernel.modules { name loaded }",
        "mql": "kernel.modules { name loaded }",
        "code_id": "onEYxXTUj2k=",
        "checksum": "O8g0goUPv4A=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-kernel-modules",
        "type": "\u0019\f",
        "title": "Kernel modules",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "command('w -h').stdout",
        "mql": "command('w -h').stdout",
        "code_id": "VDW0zuKNTNA=",
        "checksum": "fNtXgRQepmg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-logged-in-users",
        "type": "\u0007",
        "title": "Logged-in users",
        "filters": {}
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['machine_model']\n",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['machine_model']\n",
        "code_id": "32dA9oG/ra4=",
        "checksum": "ccacguDYbTk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-machine-model-identifier",
        "type": "\n",
        "title": "Machine model identifier",
        "filters": {}
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['machine_name']\n",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['machine_name']\n",
        "code_id": "T5lCA0ST7Gg=",
        "checksum": "yZD447MhdmE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-machine-model-name",
        "type": "\n",
        "title": "Machine model name",
        "filters": {}
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['model_number']\n",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['model_number']\n",
        "code_id": "UaI2L7fcgBc=",
        "checksum": "7xKIFP9rClg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-model-part-number",
        "type": "\n",
        "title": "Model part number",
        "filters": {}
      },
      {
        "query": "mount.list { path fstype device options }",
        "mql": "mount.list { path fstype device options }",
        "code_id": "5pm2mmNGelY=",
        "checksum": "UZOpAK9zJGs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-mounts",
        "type": "\u0019\f",
        "title": "Mounted devices",
        "filters": {}
      },
      {
        "query": "parse.json(content: command('system_profiler SPNetworkDataType -json').stdout).params\n",
        "mql": "parse.json(content: command('system_profiler SPNetworkDataType -json').stdout).params\n",
        "code_id": "xAoHldFuZko=",
        "checksum": "tXaaxIVg0XI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-network",
        "type": "\n",
        "title": "Network Data",
        "filters": {}
      },
      {
        "query": "packages { name version arch installed epoch origin purl }",
        "mql": "packages { name version arch installed epoch origin purl }",
        "code_id": "XAoGqylTzOA=",
        "checksum": "rRNPMIy+P20=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-packages",
        "type": "\u0019\f",
        "title": "Installed packages",
        "filters": {}
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['physical_memory']\n",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['physical_memory']\n",
        "code_id": "UaIu/LgmuxA=",
        "checksum": "U9Endc1udM4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-physical-memory",
        "type": "\n",
        "title": "Physical memory size",
        "filters": {}
      },
      {
        "query": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "code_id": "GHihoQG+Q/Y=",
        "checksum": "y3hc3QRDjcI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-ports-listening",
        "type": "\u0019\f",
        "title": "Listening ports",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "parse.json(content: command('system_profiler SPPowerDataType -json').stdout).params\n",
        "mql": "parse.json(content: command('system_profiler SPPowerDataType -json').stdout).params\n",
        "code_id": "3DLKelOTlKU=",
        "checksum": "Q3BOLgyepSQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-power",
        "type": "\n",
        "title": "Power Data",
        "filters": {}
      },
      {
        "query": "processes { pid command flags }",
        "mql": "processes { pid command flags }",
        "code_id": "pB9cpZY/Uy0=",
        "checksum": "tPvUt3AO4jc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-processes",
        "type": "\u0019\f",
        "title": "Running processes",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "parse.json(content: command('system_profiler SPConfigurationProfileDataType -json').stdout).params\n",
        "mql": "parse.json(content: command('system_profiler SPConfigurationProfileDataType -json').stdout).params\n",
        "code_id": "y98LMJWBisU=",
        "checksum": "sr0akxGadCw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-profile",
        "type": "\n",
        "title": "Configuration Profile Data",
        "filters": {}
      },
      {
        "query": "parse.plist('/Library/Preferences/com.apple.SoftwareUpdate.plist').params['RecommendedUpdates']",
        "mql": "parse.plist('/Library/Preferences/com.apple.SoftwareUpdate.plist').params['RecommendedUpdates']",
        "code_id": "sOkUofgxekk=",
        "checksum": "KhEkBWGjXAA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-recommended-software-updates",
        "type": "\n",
        "title": "Recommended software updates",
        "filters": {}
      },
      {
        "query": "services.where(running == true) { name running enabled masked type }",
        "mql": "services.where(running == true) { name running enabled masked type }",
        "code_id": "qWE8ALBsqTE=",
        "checksum": "LJvd9Uz4dUw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-running-services",
        "type": "\u0019\f",
        "title": "Running services",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['serial_number']\n",
        "mql": "parse.json(content: command('system_profiler SPHardwareDataType -json').stdout).params['SPHardwareDataType'].first['serial_number']\n",
        "code_id": "X+ZPyamdd48=",
        "checksum": "CTUkBGUFaXo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-serial-number",
        "type": "\n",
        "title": "System serial number",
        "filters": {}
      },
      {
        "query": "machine.system { sku serial family version product uuid manufacturer }",
        "mql": "machine.system { sku serial family version product uuid manufacturer }",
        "code_id": "l8G0PTcuvmM=",
        "checksum": "sann1vP5Z9w=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-smbios-system",
        "type": "\f",
        "title": "SMBIOS System information",
        "filters": {}
      },
      {
        "query": "sshd.config.params",
        "mql": "sshd.config.params",
        "code_id": "eteO7RzprLM=",
        "checksum": "lagyLDtJph4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-sshd-interface-configuration",
        "type": "\u001a\u0007\u0007",
        "title": "sshd configuration",
        "filters": {}
      },
      {
        "query": "parse.json(content: command('system_profiler SPStorageDataType -json').stdout).params\n",
        "mql": "parse.json(content: command('system_profiler SPStorageDataType -json').stdout).params\n",
        "code_id": "rj05GUYyQn0=",
        "checksum": "7deID3uJDLk=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-storage",
        "type": "\n",
        "title": "Storage Data",
        "filters": {}
      },
      {
        "query": "macos.systemExtensions { active enabled identifier state version }",
        "mql": "macos.systemExtensions { active enabled identifier state version }",
        "code_id": "dtebBdjPOXE=",
        "checksum": "sHHHqOJ6spw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-system-extensions",
        "type": "\u0019\f",
        "title": "macOS System Extensions",
        "filters": {}
      },
      {
        "query": "os.uptime",
        "mql": "os.uptime",
        "code_id": "dTMk4H4V270=",
        "checksum": "MkEK1ikiW8E=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-uptime",
        "type": "\t",
        "title": "Operating system uptime",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "users.where( name != /^_/ \u0026\u0026 shell != \"/usr/bin/false\" \u0026\u0026 name != \"root\")",
        "mql": "users.where( name != /^_/ \u0026\u0026 shell != \"/usr/bin/false\" \u0026\u0026 name != \"root\")",
        "code_id": "icL33n4hZEA=",
        "checksum": "Pkix5MUSSMc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-macos-users",
        "type": "\u0019\f",
        "title": "Regular users",
        "filters": {}
      },
      {
        "query": "arista.eos.hostname",
        "mql": "arista.eos.hostname",
        "code_id": "bIx5/IWqTvc=",
        "checksum": "2u+NBAY3hD0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-platform-overview-arista-hostname",
        "type": "\u0007",
        "title": "arista.eos.hostname",
        "filters": {
          "items": {
            "EaABSliBEFU=": {
              "mql": "asset.platform == \"arista-eos\"",
              "code_id": "EaABSliBEFU=",
              "checksum": "bl4d4XL5WoQ=",
              "mrn": "//policy.api.mondoo.app/filter/EaABSliBEFU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "asset { platform version build family title platformMetadata }",
        "mql": "asset { platform version build family title platformMetadata }",
        "code_id": "jx6ZnSyFr0o=",
        "checksum": "GROHYgrWRd4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-asset",
        "type": "\f",
        "title": "Asset summary information",
        "filters": {}
      },
      {
        "query": "kernel.installed",
        "mql": "kernel.installed",
        "code_id": "oyTxcyFFxp0=",
        "checksum": "ouXtVoL8tMs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-kernel-installed",
        "type": "\u0019\n",
        "title": "Installed kernel",
        "filters": {}
      },
      {
        "query": "packages { name version origin format arch purl status }",
        "mql": "packages { name version origin format arch purl status }",
        "code_id": "NX7Fhn2QkMk=",
        "checksum": "CQlMbf+aZ9g=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-packages",
        "type": "\u0019\f",
        "title": "Installed packages",
        "filters": {}
      },
      {
        "query": "npm.packages { name version purl }",
        "mql": "npm.packages { name version purl }",
        "code_id": "TtjnwMN2RWY=",
        "checksum": "qzqkpu4KZCE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-npm-packages",
        "type": "\u0019\f",
        "title": "NodeJS Packages",
        "filters": {}
      },
      {
        "query": "python.packages { name version purl }",
        "mql": "python.packages { name version purl }",
        "code_id": "WIu9j8nCbRo=",
        "checksum": "qmVbyCdHzAw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-sbom-python-packages",
        "type": "\u0019\f",
        "title": "Python Packages",
        "filters": {}
      },
      {
        "query": "sshd.config.params",
        "mql": "sshd.config.params",
        "code_id": "eteO7RzprLM=",
        "checksum": "8MtL0GyhQVo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-sshd-interface-configuration",
        "type": "\u001a\u0007\u0007",
        "title": "sshd configuration",
        "filters": {
          "items": {
            "/+KCjve1urM=": {
              "mql": "package('openssh-server').installed || package('openssh').installed",
              "code_id": "/+KCjve1urM=",
              "checksum": "C/dDiSF0fQo=",
              "mrn": "//policy.api.mondoo.app/filter//+KCjve1urM=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "shodan.host.vulnerabilities {\n  vulnerability.exchange(id: _, source: 'shodan')\n}\n",
        "mql": "shodan.host.vulnerabilities {\n  vulnerability.exchange(id: _, source: 'shodan')\n}\n",
        "code_id": "l1UaM2ZSnQY=",
        "checksum": "4ZAtMfr90ng=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-vex-shodan-vulnerabilities",
        "type": "\u0019\f",
        "title": "Shodan host vulnerabilities",
        "filters": {}
      },
      {
        "query": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "mql": "ports.where(state != \"close\") { user state port address protocol process remoteAddress remotePort }",
        "code_id": "GHihoQG+Q/Y=",
        "checksum": "fqPhafr3Y/Y=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-active-connections",
        "type": "\u0019\f",
        "title": "Active connections of the system",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "asset { kind title platform name arch runtime version }",
        "mql": "asset { kind title platform name arch runtime version }",
        "code_id": "Hl4/DeiN8wc=",
        "checksum": "8X0cCKIqjP8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-asset-info",
        "type": "\f",
        "title": "Asset information",
        "filters": {}
      },
      {
        "query": "windows.bitlocker.volumes { deviceID driveLetter encryptionMethod version persistentVolumeID protectionStatus lockStatus conversionStatus }",
        "mql": "windows.bitlocker.volumes { deviceID driveLetter encryptionMethod version persistentVolumeID protectionStatus lockStatus conversionStatus }",
        "code_id": "xDQ2x2TGnsw=",
        "checksum": "NAWthUvMQl8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-bitlocker-volumes",
        "type": "\u0019\f",
        "title": "BitLocker Volumes",
        "filters": {
          "items": {
            "rSl2EbAIW7E=": {
              "mql": "windows.computerInfo['OsProductType'] == 1\n",
              "code_id": "rSl2EbAIW7E=",
              "checksum": "tTjIZqf9Suw=",
              "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "windows.computerInfo",
        "mql": "windows.computerInfo",
        "code_id": "xGgH/3MNnBw=",
        "checksum": "x2hRN4dhHww=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-computer-info",
        "type": "\n",
        "title": "Windows Computer/ System information",
        "filters": {}
      },
      {
        "query": "powershell('(Get-Command ExSetup.exe | ForEach-Object { $_.FileVersionInfo } | Select-Object -First 1).FileVersion').stdout\n",
        "mql": "powershell('(Get-Command ExSetup.exe | ForEach-Object { $_.FileVersionInfo } | Select-Object -First 1).FileVersion').stdout\n",
        "code_id": "Ju1swmQcxfA=",
        "checksum": "KL4LlmH8o2c=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-exchange-server-version",
        "type": "\u0007",
        "title": "Exchange Server Version",
        "filters": {
          "items": {
            "ejKNUyEFvfU=": {
              "mql": "package('Microsoft Exchange Server').installed\n",
              "code_id": "ejKNUyEFvfU=",
              "checksum": "cpMyYTF9fXY=",
              "mrn": "//policy.api.mondoo.app/filter/ejKNUyEFvfU=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "windows.features.where(installed == true) { path name displayName }",
        "mql": "windows.features.where(installed == true) { path name displayName }",
        "code_id": "Uu1m3R02EU0=",
        "checksum": "q0sxmHSmia0=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-features",
        "type": "\u0019\f",
        "title": "Installed Windows features",
        "filters": {}
      },
      {
        "query": "os.hostname",
        "mql": "os.hostname",
        "code_id": "aRSd7vfjN/s=",
        "checksum": "vkuc2RswhTg=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-hostname",
        "type": "\u0007",
        "title": "Hostname",
        "filters": {}
      },
      {
        "query": "windows.hotfixes { hotfixId installedOn }",
        "mql": "windows.hotfixes { hotfixId installedOn }",
        "code_id": "C/7BpXIi2O8=",
        "checksum": "vaXP3Fg7aXs=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-hotfixes",
        "type": "\u0019\f",
        "title": "All installed Windows hotfixes",
        "filters": {}
      },
      {
        "query": "windows.computerInfo['CsNetworkAdapters']",
        "mql": "windows.computerInfo['CsNetworkAdapters']",
        "code_id": "1rAfRASPrBE=",
        "checksum": "DjDsWU65fUo=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-interface-configuration",
        "type": "\n",
        "title": "Network interfaces",
        "filters": {}
      },
      {
        "query": "parse.json(content: powershell(\"Get-Process -IncludeUserName explorer | Select-Object Username | ConvertTo-Json\").stdout).params\n",
        "mql": "parse.json(content: powershell(\"Get-Process -IncludeUserName explorer | Select-Object Username | ConvertTo-Json\").stdout).params\n",
        "code_id": "9+BkxBGdRVY=",
        "checksum": "ukkO9wTyrTE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-logged-in-users",
        "type": "\n",
        "title": "Logged-in users",
        "filters": {}
      },
      {
        "query": "packages { name version arch installed epoch origin purl }",
        "mql": "packages { name version arch installed epoch origin purl }",
        "code_id": "XAoGqylTzOA=",
        "checksum": "TWijpRAqeqY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-packages",
        "type": "\u0019\f",
        "title": "Installed packages",
        "filters": {}
      },
      {
        "query": "ports.listening { user state port address protocol process remoteAddress remotePort }",
        "mql": "ports.listening { user state port address protocol process remoteAddress remotePort }",
        "code_id": "Ms4tg4zNmLg=",
        "checksum": "qRSvZUmQU+c=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-ports-listening",
        "type": "\u0019\f",
        "title": "Listening ports",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "secpol.privilegerights",
        "mql": "secpol.privilegerights",
        "code_id": "xScHfmcLDFA=",
        "checksum": "11/3NadgObA=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-privilege-rights-policy",
        "type": "\u001a\u0007\u0019\u0007",
        "title": "Windows local Privilege Rights security policy",
        "filters": {}
      },
      {
        "query": "processes { pid executable }",
        "mql": "processes { pid executable }",
        "code_id": "sV59XCBfEzc=",
        "checksum": "Cjnv87BqhVM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-processes",
        "type": "\u0019\f",
        "title": "Running processes",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "secpol.registryvalues",
        "mql": "secpol.registryvalues",
        "code_id": "fCWZPM8wuZA=",
        "checksum": "piroXYHsWrU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-registry-values-policy",
        "type": "\u001a\u0007\u0007",
        "title": "Windows local Registry Values security policy",
        "filters": {}
      },
      {
        "query": "services.where(running == true) { name running enabled masked type }",
        "mql": "services.where(running == true) { name running enabled masked type }",
        "code_id": "qWE8ALBsqTE=",
        "checksum": "HNwxGezk/D8=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-running-services",
        "type": "\u0019\f",
        "title": "Running services",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "parse.json(content: powershell(\"Get-ScheduledTask | ConvertTo-Json\").stdout).params\n",
        "mql": "parse.json(content: powershell(\"Get-ScheduledTask | ConvertTo-Json\").stdout).params\n",
        "code_id": "GkAL92FuER0=",
        "checksum": "VmLKQrUzeE4=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-scheduled-tasks",
        "type": "\n",
        "title": "Scheduled tasks",
        "filters": {}
      },
      {
        "query": "windows.security.health { autoUpdate internetSettings securityCenterService firewall uac antiVirus antiSpyware }",
        "mql": "windows.security.health { autoUpdate internetSettings securityCenterService firewall uac antiVirus antiSpyware }",
        "code_id": "tK1z98HP6uo=",
        "checksum": "1Sfp7YhKJTQ=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-security-center-health",
        "type": "\f",
        "title": "Windows Security Health Information",
        "filters": {
          "items": {
            "rSl2EbAIW7E=": {
              "mql": "windows.computerInfo['OsProductType'] == 1\n",
              "code_id": "rSl2EbAIW7E=",
              "checksum": "tTjIZqf9Suw=",
              "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "windows.security.products { guid state type name productState signatureState timestamp }",
        "mql": "windows.security.products { guid state type name productState signatureState timestamp }",
        "code_id": "/KP0iojJn88=",
        "checksum": "8ZEsFp87vCU=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-security-products",
        "type": "\u0019\f",
        "title": "Installed Security Products",
        "filters": {
          "items": {
            "rSl2EbAIW7E=": {
              "mql": "windows.computerInfo['OsProductType'] == 1\n",
              "code_id": "rSl2EbAIW7E=",
              "checksum": "tTjIZqf9Suw=",
              "mrn": "//policy.api.mondoo.app/filter/rSl2EbAIW7E=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "machine.baseboard { manufacturer version serial assetTag product }",
        "mql": "machine.baseboard { manufacturer version serial assetTag product }",
        "code_id": "mpBx19SqXqo=",
        "checksum": "c19suYwIpgc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-baseboard",
        "type": "\f",
        "title": "SMBIOS baseboard (or module) information",
        "filters": {}
      },
      {
        "query": "machine.bios { vendor version releaseDate }",
        "mql": "machine.bios { vendor version releaseDate }",
        "code_id": "n2Oxd+mY57E=",
        "checksum": "ILYtYu5itbw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-bios",
        "type": "\f",
        "title": "SMBIOS BIOS information",
        "filters": {}
      },
      {
        "query": "machine.chassis { manufacturer serial version assetTag }",
        "mql": "machine.chassis { manufacturer serial version assetTag }",
        "code_id": "3d75ZaJW3Vw=",
        "checksum": "SxzvNX+zYKw=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-chassis",
        "type": "\f",
        "title": "SMBIOS Chassis information",
        "filters": {}
      },
      {
        "query": "machine.system { sku serial family version product uuid manufacturer }",
        "mql": "machine.system { sku serial family version product uuid manufacturer }",
        "code_id": "l8G0PTcuvmM=",
        "checksum": "QTEB6SDFUbY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-smbios-system",
        "type": "\f",
        "title": "SMBIOS System information",
        "filters": {}
      },
      {
        "query": "os.uptime",
        "mql": "os.uptime",
        "code_id": "dTMk4H4V270=",
        "checksum": "2ttDeD79Rjc=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-uptime",
        "type": "\t",
        "title": "Operating system uptime",
        "filters": {
          "items": {
            "MJjSS+TKC/k=": {
              "mql": "mondoo.capabilities.contains(\"run-command\")",
              "code_id": "MJjSS+TKC/k=",
              "checksum": "EtcRmREp5K8=",
              "mrn": "//policy.api.mondoo.app/filter/MJjSS+TKC/k=",
              "type": "\u0004"
            }
          }
        }
      },
      {
        "query": "users",
        "mql": "users",
        "code_id": "+WO1rPLNsI0=",
        "checksum": "KEEeYNfgJSM=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-users",
        "type": "\u0019\f",
        "title": "Regular users",
        "filters": {}
      },
      {
        "query": "auditpol { exclusionsetting machinename policytarget subcategory inclusionsetting subcategoryguid }",
        "mql": "auditpol { exclusionsetting machinename policytarget subcategory inclusionsetting subcategoryguid }",
        "code_id": "jHaLgKkdxR4=",
        "checksum": "Al+6dnjM/ZI=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-audit-policies",
        "type": "\u0019\f",
        "title": "Windows audit policies",
        "filters": {}
      },
      {
        "query": "secpol.eventaudit",
        "mql": "secpol.eventaudit",
        "code_id": "PoCxzrBMxFc=",
        "checksum": "ZvEINplpv7Q=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-event-audit-policy",
        "type": "\u001a\u0007\u0007",
        "title": "Windows local Event Audit security policy",
        "filters": {}
      },
      {
        "query": "windows.firewall.rules { edgeTraversalPolicy status instanceID enabled looseSourceMapping displayGroup policyStoreSource name enforcementStatus description direction displayName policyStoreSourceType primaryStatus localOnlyMapping action }",
        "mql": "windows.firewall.rules { edgeTraversalPolicy status instanceID enabled looseSourceMapping displayGroup policyStoreSource name enforcementStatus description direction displayName policyStoreSourceType primaryStatus localOnlyMapping action }",
        "code_id": "jiMv4+1LJ8M=",
        "checksum": "Vz5F477WGRY=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-firewall-rules",
        "type": "\u0019\f",
        "title": "Windows Firewall rules",
        "filters": {}
      },
      {
        "query": "windows.firewall { settings profiles { allowUnicastResponseToMulticast logIgnored enabled allowLocalFirewallRules allowLocalIPsecRules logAllowed logBlocked allowUserApps instanceID allowUserPorts name notifyOnListen logFileName enableStealthModeForIPsec defaultInboundAction logMaxSizeKilobytes defaultOutboundAction allowInboundRules } }",
        "mql": "windows.firewall { settings profiles { allowUnicastResponseToMulticast logIgnored enabled allowLocalFirewallRules allowLocalIPsecRules logAllowed logBlocked allowUserApps instanceID allowUserPorts name notifyOnListen logFileName enableStealthModeForIPsec defaultInboundAction logMaxSizeKilobytes defaultOutboundAction allowInboundRules } }",
        "code_id": "MxQKtX+F8Ac=",
        "checksum": "Zg2qVYvZktE=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-firewall-settings",
        "type": "\f",
        "title": "Windows Firewall settings",
        "filters": {}
      },
      {
        "query": "secpol.systemaccess",
        "mql": "secpol.systemaccess",
        "code_id": "HLWKIpHiOI0=",
        "checksum": "5p/6eHAmL3Q=",
        "mrn": "//policy.api.mondoo.app/queries/mondoo-windows-windows-system-access-policy",
        "type": "\u001a\u0007\u0007",
        "title": "Windows local System Access security policy",
        "filters": {}
      },
      {
        "query": "sshd.config.ciphers == props.sshdTestCiphers",
        "refs": [
          {
            "title": "CIS RHEL 7",
            "url": "http://www.itsecure.hu/library/image/CIS_Red_Hat_Enterprise_Linux_7_Benchmark_v2.1.1.pdf"
          }
        ],
        "mql": "sshd.config.ciphers == props.sshdTestCiphers",
        "code_id": "Jd+Gypq2iUU=",
        "checksum": "w2yl16DGxNs=",
        "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-01",
        "type": "\u0004",
        "title": "Only use strong Ciphers",
        "docs": {
          "desc": "There are a lot of ciphers available in SSH, but you don't want to use all of them.\nSome are added for compatibility with older systems and may not be the best\npractice from a security standpoint. Limit the list of available ciphers\nto the highly secure ones.",
          "audit": "Open your `/etc/ssh/sshd_config` and look for the `Ciphers` setting",
          "remediation": [
            {
              "id": "default",
              "desc": "Open your `/etc/ssh/sshd_config` and set `Ciphers` to `${props.sshdTestCiphers}`.\nDo **not** add any other ciphers please, these are the most secure ones.\nYou can decide to remove ciphers to further restrict it."
            }
          ]
        },
        "filters": {},
        "props": [
          {
            "mql": "ciphers53 = [\n  'aes256-ctr',\n  'aes192-ctr',\n  'aes128-ctr',\n]\n\nciphers66 = [\n  'chacha20-poly1305@openssh.com',\n  'aes256-gcm@openssh.com',\n  'aes128-gcm@openssh.com',\n  'aes256-ctr',\n  'aes192-ctr',\n  'aes128-ctr',\n]\n\nif(asset.platform == \"debian\" \u0026\u0026 asset.version == /^(7|8)\\./) {\n  return ['aes256-ctr', 'aes192-ctr', 'aes128-ctr']\n}\n\nreturn ['chacha20-poly1305@openssh.com','aes256-gcm@openssh.com','aes128-gcm@openssh.com','aes256-ctr','aes192-ctr','aes128-ctr']\n",
            "code_id": "JI+Ky/q3WUo=",
            "checksum": "J7tP/Ed8cU0=",
            "mrn": "//policy.api.mondoo.app/queries/sshdTestCiphers",
            "uid": "sshdTestCiphers",
            "type": "\u0019\u0007",
            "title": "Define the hardened ciphers for all SSH configurations"
          }
        ]
      },
      {
        "query": "sshd.config.params[\"Port\"] == 22",
        "refs": [
          {
            "title": "CIS RHEL 7",
            "url": "http://www.itsecure.hu/library/image/CIS_Red_Hat_Enterprise_Linux_7_Benchmark_v2.1.1.pdf"
          }
        ],
        "mql": "sshd.config.params[\"Port\"] == 22",
        "code_id": "3/6XnKp0RJM=",
        "checksum": "j6pxufbwrZo=",
        "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-07",
        "type": "\u0004",
        "title": "Set the port to 22",
        "docs": {
          "desc": "Port should be set to 22 for SSH Server",
          "audit": "Try `netstat` or connect via `ssh` client",
          "remediation": [
            {
              "id": "default",
              "desc": "Open your `/etc/ssh/sshd_config` and set `Port 22`"
            }
          ]
        },
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"Protocol\"] == 2",
        "mql": "sshd.config.params[\"Protocol\"] == 2",
        "code_id": "wM8ZVC/LDTg=",
        "checksum": "5AZ45nRiz7c=",
        "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-10",
        "type": "\u0004",
        "title": "Set the protocol to 2",
        "filters": {}
      },
      {
        "query": "sshd.config.params[\"StrictModes\"] == \"yes\"",
        "mql": "sshd.config.params[\"StrictModes\"] == \"yes\"",
        "code_id": "tLW4zUJij+I=",
        "checksum": "jlTW0TqXRFk=",
        "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-11",
        "type": "\u0004",
        "title": "Enable strict mode",
        "filters": {}
      },
      {
        "query": "sshd.config.params",
        "mql": "sshd.config.params",
        "code_id": "eteO7RzprLM=",
        "checksum": "eHCuOaU5RjA=",
        "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-d-1",
        "type": "\u001a\u0007\u0007",
        "title": "Gather SSH config params",
        "filters": {}
      },
      {
        "query": "sshd.config.file.path",
        "mql": "sshd.config.file.path",
        "code_id": "RYuR9x9ICNA=",
        "checksum": "na80eKa1ChM=",
        "mrn": "//policy.api.mondoo.app/queries/sshd-sshd-d-3",
        "type": "\u0007",
        "title": "Gather SSH Config Path",
        "filters": {}
      }
    ],
    "frameworks": [
      {
        "mrn": "//captain.api.mondoo.app/spaces/test-infallible-taussig-796596",
        "owner_mrn": "//captain.api.mondoo.app/spaces/test-infallible-taussig-796596",
        "local_content_checksum": "clRGvRtTWJw=",
        "graph_content_checksum": "iO5Lt412GBM=",
        "local_execution_checksum": "GExINu9JieY=",
        "graph_execution_checksum": "BPDkviGue7M="
      }
    ]
  },
  "reports": {
    "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc": {
      "scoring_mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc",
      "entity_mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc",
      "score": {
        "risk_score": 9,
        "qr_id": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc",
        "type": 2,
        "weight": 20,
        "score_completion": 100,
        "data_total": 40,
        "data_completion": 100,
        "value_modified_time": 1754671347,
        "failure_time": 1754671347,
        "risk_factors": {
          "items": [
            {
              "mrn": "//policy.api.mondoo.app/risks/open-ports",
              "risk": -0.05
            },
            {
              "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
              "risk": -0.05
            }
          ]
        }
      },
      "scores": {
        "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc": {
          "risk_score": 9,
          "qr_id": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc",
          "type": 2,
          "weight": 20,
          "score_completion": 100,
          "data_total": 40,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "failure_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//captain.api.mondoo.app/spaces/test-infallible-taussig-796596": {
          "risk_score": 9,
          "qr_id": "//captain.api.mondoo.app/spaces/test-infallible-taussig-796596",
          "type": 2,
          "weight": 20,
          "score_completion": 100,
          "data_total": 40,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "failure_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/policies/asset-overview": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/policies/asset-overview",
          "type": 16,
          "score_completion": 100,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/policies/mondoo-linux-inventory": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/policies/mondoo-linux-inventory",
          "type": 16,
          "score_completion": 100,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/policies/mondoo-linux-security": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/policies/mondoo-linux-security",
          "type": 2,
          "weight": 20,
          "score_completion": 100,
          "data_total": 31,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "failure_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/policies/mondoo-sbom": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/policies/mondoo-sbom",
          "type": 16,
          "score_completion": 100,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/policies/risk-factors": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/policies/risk-factors",
          "type": 16,
          "score_completion": 100,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/policies/sshd-policy": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/policies/sshd-policy",
          "type": 4,
          "score_completion": 100,
          "data_total": 9,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/asset-overview-assetarch": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assetarch",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/asset-overview-assetkind": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assetkind",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/asset-overview-assettitle": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/asset-overview-assetversion": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/asset-overview-clientversion": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/asset-overview-clientversion",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-asset-info": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-asset-info",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-cpu-type": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-cpu-type",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/proc/cpuinfo' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-groups-wheel": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-groups-wheel",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-hostname": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-hostname",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-installed-packages": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-installed-packages",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-logged-in-users": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-logged-in-users",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-mounts": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-mounts",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-physical-memory": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-physical-memory",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/proc/meminfo' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-platform": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-platform",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-root-volume": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-root-volume",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-default-group-for-the-root-account-is-gid-0": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-default-group-for-the-root-account-is-gid-0",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-each-user-member-of-a-group": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-each-user-member-of-a-group",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-gid-in-passwd-exists-in-group": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-gid-in-passwd-exists-in-group",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-gids-exist": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-gids-exist",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-group-names-exist": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-group-names-exist",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-uids-exist": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-uids-exist",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-user-names-exist": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-user-names-exist",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup--are-configured": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup--are-configured",
          "type": 2,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "failure_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup-are-configured": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup-are-configured",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow--are-configured": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow--are-configured",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow-are-configured": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow-are-configured",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd--are-configured": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd--are-configured",
          "type": 2,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "failure_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd-are-configured": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd-are-configured",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow--are-configured": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow--are-configured",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow-are-configured": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow-are-configured",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-prelink-is-disabled": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-prelink-is-disabled",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-root-group-is-empty": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-root-group-is-empty",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-shadow-group-is-empty": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-shadow-group-is-empty",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-system-accounts-are-non-login": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-accounts-are-non-login",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-security-window-system-is-not-installed": {
          "risk_score": 100,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-window-system-is-not-installed",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-smbios-baseboard": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-baseboard",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-smbios-bios": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-bios",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-smbios-chassis": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-chassis",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-smbios-system": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-system",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-system-manufacturer": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-system-manufacturer",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-system-product-name": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-system-product-name",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-linux-users": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-users",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-sbom-internal-asset": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-asset",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-sbom-internal-packages": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-packages",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-sbom-npm-packages": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-npm-packages",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/mondoo-sbom-python-packages": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-python-packages",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/sshd-sshd-01": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-01",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 3,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/sshd-sshd-07": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-07",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/sshd-sshd-10": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-10",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/sshd-sshd-11": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-11",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/sshd-sshd-d-1": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-d-1",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "//policy.api.mondoo.app/queries/sshd-sshd-d-3": {
          "risk_score": 9,
          "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-d-3",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "/Kj/I7IqKvY=": {
          "risk_score": 100,
          "qr_id": "/Kj/I7IqKvY=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "/tUd3Rzfo5c=": {
          "risk_score": 9,
          "qr_id": "/tUd3Rzfo5c=",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/proc/cpuinfo' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "/xtAflG+77k=": {
          "risk_score": 100,
          "qr_id": "/xtAflG+77k=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "003uGoeCJx8=": {
          "risk_score": 100,
          "qr_id": "003uGoeCJx8=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "12kX/uYrBPU=": {
          "risk_score": 9,
          "qr_id": "12kX/uYrBPU=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "3/6XnKp0RJM=": {
          "risk_score": 9,
          "qr_id": "3/6XnKp0RJM=",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "3d75ZaJW3Vw=": {
          "risk_score": 9,
          "qr_id": "3d75ZaJW3Vw=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "5pm2mmNGelY=": {
          "risk_score": 9,
          "qr_id": "5pm2mmNGelY=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "8KD9vCPQy4E=": {
          "risk_score": 100,
          "qr_id": "8KD9vCPQy4E=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "8PjpfkfABtA=": {
          "risk_score": 9,
          "qr_id": "8PjpfkfABtA=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "F7bdJ3U4G0g=": {
          "risk_score": 9,
          "qr_id": "F7bdJ3U4G0g=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "FrdMe+1q6Bc=": {
          "risk_score": 100,
          "qr_id": "FrdMe+1q6Bc=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "Gjm+13rDf3o=": {
          "risk_score": 9,
          "qr_id": "Gjm+13rDf3o=",
          "type": 2,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "failure_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "Hl4/DeiN8wc=": {
          "risk_score": 9,
          "qr_id": "Hl4/DeiN8wc=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "HnD55hbNskM=": {
          "risk_score": 9,
          "qr_id": "HnD55hbNskM=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "Jd+Gypq2iUU=": {
          "risk_score": 9,
          "qr_id": "Jd+Gypq2iUU=",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 3,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "Kd0nC0U7dfs=": {
          "risk_score": 9,
          "qr_id": "Kd0nC0U7dfs=",
          "type": 2,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "failure_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "MMPvbEnxkzM=": {
          "risk_score": 9,
          "qr_id": "MMPvbEnxkzM=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "NX7Fhn2QkMk=": {
          "risk_score": 9,
          "qr_id": "NX7Fhn2QkMk=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "NsQ1E+4hzxs=": {
          "risk_score": 9,
          "qr_id": "NsQ1E+4hzxs=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "OFWIXTzBv00=": {
          "risk_score": 100,
          "qr_id": "OFWIXTzBv00=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "QS1431IjXdM=": {},
        "RYuR9x9ICNA=": {
          "risk_score": 9,
          "qr_id": "RYuR9x9ICNA=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "SHeBTCW066c=": {},
        "TtjnwMN2RWY=": {
          "risk_score": 9,
          "qr_id": "TtjnwMN2RWY=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "VDW0zuKNTNA=": {
          "risk_score": 9,
          "qr_id": "VDW0zuKNTNA=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "WIu9j8nCbRo=": {
          "risk_score": 9,
          "qr_id": "WIu9j8nCbRo=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "Weu8LLZyY6g=": {
          "risk_score": 100,
          "qr_id": "Weu8LLZyY6g=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "WmxWYi4ILtg=": {
          "risk_score": 9,
          "qr_id": "WmxWYi4ILtg=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "XAoGqylTzOA=": {
          "risk_score": 100,
          "qr_id": "XAoGqylTzOA=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "Xs984txmLXk=": {
          "risk_score": 100,
          "qr_id": "Xs984txmLXk=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "YNN6XbHEMSg=": {
          "risk_score": 100,
          "qr_id": "YNN6XbHEMSg=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "Yw5maGeSxtI=": {
          "risk_score": 9,
          "qr_id": "Yw5maGeSxtI=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "aRSd7vfjN/s=": {
          "risk_score": 9,
          "qr_id": "aRSd7vfjN/s=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "aS95c8UVV00=": {
          "risk_score": 100,
          "qr_id": "aS95c8UVV00=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "ceocEcP6Hmo=": {
          "risk_score": 100,
          "qr_id": "ceocEcP6Hmo=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "eteO7RzprLM=": {
          "risk_score": 9,
          "qr_id": "eteO7RzprLM=",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "g7SQRtln0e0=": {
          "risk_score": 9,
          "qr_id": "g7SQRtln0e0=",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/proc/meminfo' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "htUqKZYa860=": {
          "risk_score": 100,
          "qr_id": "htUqKZYa860=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "jx6ZnSyFr0o=": {
          "risk_score": 9,
          "qr_id": "jx6ZnSyFr0o=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "kv1OUBUCnBA=": {
          "risk_score": 9,
          "qr_id": "kv1OUBUCnBA=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "l8G0PTcuvmM=": {
          "risk_score": 9,
          "qr_id": "l8G0PTcuvmM=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "m7DAOFbL9Qg=": {
          "risk_score": 100,
          "qr_id": "m7DAOFbL9Qg=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "mpBx19SqXqo=": {
          "risk_score": 9,
          "qr_id": "mpBx19SqXqo=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "n2Oxd+mY57E=": {
          "risk_score": 9,
          "qr_id": "n2Oxd+mY57E=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "nTE51L+DiAo=": {
          "risk_score": 100,
          "qr_id": "nTE51L+DiAo=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "pIimpRGhyBc=": {
          "risk_score": 9,
          "qr_id": "pIimpRGhyBc=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "qXLiKKJcpv8=": {
          "risk_score": 9,
          "qr_id": "qXLiKKJcpv8=",
          "type": 8,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "tLW4zUJij+I=": {
          "risk_score": 9,
          "qr_id": "tLW4zUJij+I=",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "usnsqpdfgm4=": {
          "risk_score": 100,
          "qr_id": "usnsqpdfgm4=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "vdDFAY9Qxko=": {
          "risk_score": 100,
          "qr_id": "vdDFAY9Qxko=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 1,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "vf3LKN6rpLg=": {
          "risk_score": 100,
          "qr_id": "vf3LKN6rpLg=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "wE8/X4w6/GQ=": {
          "risk_score": 100,
          "qr_id": "wE8/X4w6/GQ=",
          "type": 2,
          "value": 100,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "value_modified_time": 1754671347,
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        },
        "wM8ZVC/LDTg=": {
          "risk_score": 9,
          "qr_id": "wM8ZVC/LDTg=",
          "type": 4,
          "weight": 1,
          "score_completion": 100,
          "data_total": 2,
          "data_completion": 100,
          "message": "1 error occurred:\n\t* file '/etc/ssh/sshd_config' not found\n",
          "risk_factors": {
            "items": [
              {
                "mrn": "//policy.api.mondoo.app/risks/open-ports",
                "risk": -0.05
              },
              {
                "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
                "risk": -0.05
              }
            ]
          }
        }
      },
      "data": {
        "+TuSckCE/rICzK1m2A6GAGpm/EqMe3Oj/iwAJtd4G1gravRD6neZiYL+70dSlBCdvDv5rWOKOoNeLQTYvMv2Dw==": {
          "data": {
            "type": "\f",
            "map": {
              "1yl946TOPhS7tbXYCoP4KSDzJCzooVtlkhDXxqY9SY76G1xuuG8szmcX0G9lI+pkBGyGCdpgTZXkFssoebYpMA==": {
                "type": "\u0007"
              },
              "CvcscIBssltk5U7cQn3JOnjgIG651xqXWwsnnhVqe/KGb4slUmJ0PvsMLkV+JMjE4ZTciVm+vgN6GBWOQNh55A==": {
                "type": "\u0007"
              },
              "WxsMDmNLC+wZoAzuHuDrJTGdfWoXx7tSDPl/n962fMMfIPHtVApRqwVRCJIYOSP44Jbi/3aeopLR67obOLee8Q==": {
                "type": "\u0007"
              },
              "YMY2pR3dpwdsVxiIJCrW8zmbdAp/gBglInSmEgHiD5Vl8PUE26JyPqtgHsAL43Yz0NWFczBUN02pN0Fwc6Crvw==": {
                "type": "\u0007"
              },
              "_": {
                "type": "\u001bmachine.chassis"
              },
              "__s": {
                "type": "\u0002"
              },
              "__t": {
                "type": "\u0004",
                "value": "AA=="
              }
            }
          },
          "code_id": "+TuSckCE/rICzK1m2A6GAGpm/EqMe3Oj/iwAJtd4G1gravRD6neZiYL+70dSlBCdvDv5rWOKOoNeLQTYvMv2Dw=="
        },
        "+kCnzP6P15iffB7fsSLxopgvKnvzgc/3r+tVJKi0/jXOuzSiB+kuL07/4iiiJJcQuwSzmD8ERaS7ivitzXV7FA==": {
          "data": {},
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "+kCnzP6P15iffB7fsSLxopgvKnvzgc/3r+tVJKi0/jXOuzSiB+kuL07/4iiiJJcQuwSzmD8ERaS7ivitzXV7FA=="
        },
        "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q=="
        },
        "1bJiVdNJy+oHfcFSfCtRhI1LR5igKR07aS98tqbUe+biod6mugYAv4lxijplx4S0rxSi9M8Z0wYuFSxickckNA==": {
          "data": {},
          "error": "file '/proc/meminfo' not found",
          "code_id": "1bJiVdNJy+oHfcFSfCtRhI1LR5igKR07aS98tqbUe+biod6mugYAv4lxijplx4S0rxSi9M8Z0wYuFSxickckNA=="
        },
        "2hZ3z+3H/QD+mlekH8q+XJI8LKLWCorG6amoVQPvfWzaq07JXZgflggDlzI/ysKXy1pKUdzt+483lluQXxsJ4Q==": {
          "data": {
            "type": "\u0004",
            "value": "AA=="
          },
          "code_id": "2hZ3z+3H/QD+mlekH8q+XJI8LKLWCorG6amoVQPvfWzaq07JXZgflggDlzI/ysKXy1pKUdzt+483lluQXxsJ4Q=="
        },
        "3dOFooH1gr1YosAmtEfQsyCvPDAkblqinIpavjPxu888CvjcGms1x5M7lhrJeMiQ3YeVxTpt0OLEDNUWaJVrsQ==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "3dOFooH1gr1YosAmtEfQsyCvPDAkblqinIpavjPxu888CvjcGms1x5M7lhrJeMiQ3YeVxTpt0OLEDNUWaJVrsQ=="
        },
        "4FTu8UX2yMVeEc5N/Ouz0BE6bDRPuZ/7ZuriB9Y3C2baQ1MHggGswbvcjtBxOJc+b5QzE7VSE6wEmmmnkcpubg==": {
          "data": {
            "type": "\u0007",
            "value": "Q29udGFpbmVyIGltYWdl"
          },
          "code_id": "4FTu8UX2yMVeEc5N/Ouz0BE6bDRPuZ/7ZuriB9Y3C2baQ1MHggGswbvcjtBxOJc+b5QzE7VSE6wEmmmnkcpubg=="
        },
        "4qO2/DvCJcr+mzdEAL+xbDRjZ4YGY27+Oko2KZa8zA1tEnNYMoQv1loDgRpoWbTWKxVfaz04F9YcSmORhvAH4w==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "4qO2/DvCJcr+mzdEAL+xbDRjZ4YGY27+Oko2KZa8zA1tEnNYMoQv1loDgRpoWbTWKxVfaz04F9YcSmORhvAH4w=="
        },
        "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg=="
        },
        "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": {
          "data": {
            "type": "\u0007",
            "value": "MjQuMDQ="
          },
          "code_id": "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q=="
        },
        "5tcBgzPZQz8/zm7UDznoBcP9St4ycw7/V4O91ZoA+XW9Vk1/amP/ow2gP8VKh0XV+fx1IaRBbfzoOT0OQ2pvWw==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "5tcBgzPZQz8/zm7UDznoBcP9St4ycw7/V4O91ZoA+XW9Vk1/amP/ow2gP8VKh0XV+fx1IaRBbfzoOT0OQ2pvWw=="
        },
        "6GV7OiQSU1fwRwmB2MtE0u8IG8j6PQJTDKj3GqbPCWek07rjs0E4nE2JNttpY+0OuGo2gk8KUE/saFGxeq2gYQ==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "6GV7OiQSU1fwRwmB2MtE0u8IG8j6PQJTDKj3GqbPCWek07rjs0E4nE2JNttpY+0OuGo2gk8KUE/saFGxeq2gYQ=="
        },
        "6Jmw4SvWNGUQWnNEC6bYKQtODzyw2fVYAss537ffZOtGT3P0gME7PU8eHmTp9RZ7gesPlRwl6DuMQUxI7WLLJw==": {
          "data": {
            "type": "\f",
            "map": {
              "3TWYjgHHwPsENByNa3TMI6Yb5TmgnAXWBMjU99wh/xbEjtdSGEqochTHTaKMOup9fRlgfqhPf1FosKhT8YEy2g==": {
                "type": "\u0007"
              },
              "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": {
                "type": "\u0007",
                "value": "MjQuMDQ="
              },
              "9ftWfBaocfcm3AB+e5nM1PYcYTMDGxzqcghJYUCyf6ycN97mmwwVHBSKiwRo33XRItL2mhf/JdfDO9ynBHlUHw==": {
                "type": "\u001a\u0007\u0007",
                "map": {
                  "distro-id": {
                    "type": "\u0007",
                    "value": "dWJ1bnR1"
                  }
                }
              },
              "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": {
                "type": "\u0007",
                "value": "VWJ1bnR1IDI0LjA0LjIgTFRTLCBEb2NrZXIgSW1hZ2U="
              },
              "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": {
                "type": "\u0007",
                "value": "dWJ1bnR1"
              },
              "_": {
                "type": "\u001basset"
              },
              "__s": {
                "type": "\u0002"
              },
              "__t": {
                "type": "\u0004",
                "value": "AA=="
              },
              "l/aGjrixdNHvCxu5ib4NwkYb0Qrh3sKzcrGTkm7VxNWfWaaVbOxOEoGEMnjGJTo31jhYNeRm39/zpepZaSbUIw==": {
                "type": "\u0019\u0007",
                "array": [
                  {
                    "type": "\u0007",
                    "value": "ZGViaWFu"
                  },
                  {
                    "type": "\u0007",
                    "value": "bGludXg="
                  },
                  {
                    "type": "\u0007",
                    "value": "dW5peA=="
                  },
                  {
                    "type": "\u0007",
                    "value": "b3M="
                  }
                ]
              }
            }
          },
          "code_id": "6Jmw4SvWNGUQWnNEC6bYKQtODzyw2fVYAss537ffZOtGT3P0gME7PU8eHmTp9RZ7gesPlRwl6DuMQUxI7WLLJw=="
        },
        "7j2j9tDKzkFhSbsr8SPpFRpuOv8WV66N7eN5pH1HVUQ6fmFTHoPEqtgETb4LzUuiNl8TFBn4DxX2sciznRYxjw==": {
          "data": {
            "type": "\u0004",
            "value": "AA=="
          },
          "code_id": "7j2j9tDKzkFhSbsr8SPpFRpuOv8WV66N7eN5pH1HVUQ6fmFTHoPEqtgETb4LzUuiNl8TFBn4DxX2sciznRYxjw=="
        },
        "7wsOp4YGaSjHvRvBmFaAZ0PIPxNKcO6DjOochPbOJKUhzMH/pVkkQO0Ziw+hFT2hMePykJHfBtrzr0uzpNKzcw==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "7wsOp4YGaSjHvRvBmFaAZ0PIPxNKcO6DjOochPbOJKUhzMH/pVkkQO0Ziw+hFT2hMePykJHfBtrzr0uzpNKzcw=="
        },
        "7zMfskozHqhiScbU2kNsfYC2uQ0B1f+XOtt3Q2+qCfjPNBkxtKNoKM707TK6ctUb4TfHI6tuQlIO34S4RBfOsw==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "7zMfskozHqhiScbU2kNsfYC2uQ0B1f+XOtt3Q2+qCfjPNBkxtKNoKM707TK6ctUb4TfHI6tuQlIO34S4RBfOsw=="
        },
        "8UFMaOXC4SMhWK+Vx/3T7dr6xt0crU2tSRurKy4l3M/pETdqnDy2+5XZAVoyskOku7hIGVb7HJ06XzuQhgvjMQ==": {
          "data": {
            "type": "\f",
            "map": {
              "6xZ89WVFuqscxnATOLIf93cAiphgXQm3aFRplZQdBKNsN0+1bGQRqSG+1GQSi+d/W65JGC4jaOLkL7oMwyr7KQ==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "T6kVTKTUvH0kjW+0kDeqTJTGJWILlpfw3sxAIroDmYm+OgirCMfAzsHyM8lBkfG0pw9B4KBua8mQOseeDSa7Ew==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "_": {
                "type": "\u001bfile",
                "value": "L2V0Yy9ncm91cA=="
              },
              "__s": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "czp3D0B37jHqcHlbZKW2DYWYZzL905MPXgIha6oFjvv/pZIdZ3ir4voQLdWCrrACm2ufUKPNOmXt18mQ8dDOWQ==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "eJl6q+RojEp/oX7PfaKudFsvb8nEpO53+CSN4V2hXsE1Zlk1rl40eGlGPzZJ9ZpRGpwOo95zkhD/zRzNerPZTQ==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "n1Y5HxvVA9Di2gH3v9VAr9xdvpkZyCrLwj955fjcqfkY9rOXyo2wuYQRiH7CuQ77ZOmZgHDixTFrGXXworT2jw==": {
                "type": "\u0004",
                "value": "AQ=="
              }
            }
          },
          "code_id": "8UFMaOXC4SMhWK+Vx/3T7dr6xt0crU2tSRurKy4l3M/pETdqnDy2+5XZAVoyskOku7hIGVb7HJ06XzuQhgvjMQ=="
        },
        "9JRnRD0qcwHdUJtCGMTAJe3H1iY2xdZ5QNY+Bji5zt7EG1rgcxmWYBO6pOuPOvrDsHa8dnSx9hbE92vZlnyJQg==": {
          "data": {
            "type": "\f",
            "map": {
              "__s": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "n4KRoHNl8xqOuyifPurxhLP5QsLCNcTlMZ0U4dSeeR+4yp8qZoMYKxxsmU7gjewTvfHbXhNOU4jR4K0KqtKM6w==": {
                "type": "\f",
                "map": {
                  "/Kc60GU9syUEKHHmwJhFtiMLTYVF8h5zuvQ4JJ6FRc+ewxjALxDWp5INzonjnhbjoJgE4pcRYk2rw3/Kv0Fowg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "2PISPaY9Uv/h/6bWIzaOCPZuNXOWm8h4ABDmViLOG63YzZY4u2XtbVVm2B0RRTtx00beK5hPg/g+gxPfCekYsg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "2gTIdScsz/z/cI8rVNqrquYzF736LBDvofiD6oegZcqudNlSp3dXKpOQ0EGoI9GphjcvIfETqiR6pse30oM2ng==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "47Q+jq9hct6ndHS9YMHNeIZqHlSAzS1M2hkKbcwqfRxEO8oeec8OE2a78oc2mAEl+5n6o59/+1uh93iqk7Qr+A==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "RumXTcMvN9dHtJVMf4m7JoxrM9gvdqn5vv29bm4X+P5MIiox6oWzC3T+rJM3fqWV+g0Sn4KJaSa/9R5wlMJqBw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "_": {
                    "type": "\u001bfile",
                    "value": "L2V0Yy9zaGFkb3ct"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "m5y0p0bVYz7XxVWgXUaxPqZxy9PAtjuwoSNsr3YjZaPyXs+d9PKjEvXsBKikGOB5KBQc+7GIbWkUdWUs0BNLgw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              }
            }
          },
          "code_id": "9JRnRD0qcwHdUJtCGMTAJe3H1iY2xdZ5QNY+Bji5zt7EG1rgcxmWYBO6pOuPOvrDsHa8dnSx9hbE92vZlnyJQg=="
        },
        "9YkvN1Tog2VFrCsfbkt7WCb0Uju/0Co8g3qlC724FFJbejgL1VpD8EXWg+hZHbNePFOUaSB4gsH8n7Xk3qNSeg==": {
          "data": {
            "type": "\u0005",
            "value": "AA=="
          },
          "code_id": "9YkvN1Tog2VFrCsfbkt7WCb0Uju/0Co8g3qlC724FFJbejgL1VpD8EXWg+hZHbNePFOUaSB4gsH8n7Xk3qNSeg=="
        },
        "ANF22c2hJk/VGnp1zb6eP1uRao9RejTrGTHE4u8pfNBhdj5M2K/6O8ScVyAfzjc1ve2fMMwXtDpmOVBuCQQXUA==": {
          "data": {
            "type": "\f",
            "map": {
              "+Rpiw+y95pve6NdmfwMAkIBO5ll/BaWQFjU+qZptiB8AIOdD/mw57InEW4uFeiPeVhmC/BaM+zHn1IGkH4jHIg==": {
                "type": "\u0007"
              },
              "3c86iSf939fZ+ADosOSR227fyZj6oDaLpH4jGd2w99aQ4uQRP1rAYBK01F7JeEyX2TtdfwEO4Ru5nIxjt6muYw==": {
                "type": "\u0007"
              },
              "85jQV9l4ExsN+0ntxkZxGPtvQ9+as3H1p5Rv6V50AdoO5ei7OG/JV7RIZgyyUaxxDglQOTaL9SFv/OaFtJVQYg==": {
                "type": "\u0007"
              },
              "QjjfARZUYE8miuZG9hLV4g5US4DkpDQQzWZi30pNyWEm2xf0Y4oBg02jf1jhxeKQEvEU29USnHCJ4dO9B6AgFg==": {
                "type": "\u0007"
              },
              "U13WXTZIgKwQOQzKR9I9P0YJhL4Kv8cL3n+8XX7DWYhtVjjhbij44GSqdvRREQY5K6Hh6+T7cXynWuQ5UGx9dA==": {
                "type": "\u0007"
              },
              "_": {
                "type": "\u001bmachine.system"
              },
              "__s": {
                "type": "\u0002"
              },
              "__t": {
                "type": "\u0004",
                "value": "AA=="
              },
              "wFZcIr3BFgqDo1oPXzkKRkVXQPF9+m/xn7qFpESbjWCLpZI311FDZ4BiGWZ+jkS4MjUJcjm0l/rOsvVqjUSHww==": {
                "type": "\u0007"
              },
              "ye3VeUThd9cTsrMEcTvHm/WeSCA+WZKSml7S+QlvRD1FoNiRABxOdCMEmzPSDDpXaD9q6O6ytb/KVCz+hgKrqQ==": {
                "type": "\u0007"
              }
            }
          },
          "code_id": "ANF22c2hJk/VGnp1zb6eP1uRao9RejTrGTHE4u8pfNBhdj5M2K/6O8ScVyAfzjc1ve2fMMwXtDpmOVBuCQQXUA=="
        },
        "ANVso+zEuxoUfM2V+LC0ZsKhhuGV4NkxnwM6tBChYQtESc1xymFyRH96dzy0qaEl+n0a6iFsEihCwlxIU+4d3g==": {
          "data": {
            "type": "\u0004",
            "value": "AA=="
          },
          "code_id": "ANVso+zEuxoUfM2V+LC0ZsKhhuGV4NkxnwM6tBChYQtESc1xymFyRH96dzy0qaEl+n0a6iFsEihCwlxIU+4d3g=="
        },
        "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g=="
        },
        "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": {
          "data": {
            "type": "\u0007",
            "value": "VWJ1bnR1IDI0LjA0LjIgTFRTLCBEb2NrZXIgSW1hZ2U="
          },
          "code_id": "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ=="
        },
        "CQXUv/QbKcO1F5LvHFZ2NWFYNovHloaexe9lAEkpEll9s03HI4ecB5bwGd/DasLoHdaNambHL/g4zkz1siZb7w==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "CQXUv/QbKcO1F5LvHFZ2NWFYNovHloaexe9lAEkpEll9s03HI4ecB5bwGd/DasLoHdaNambHL/g4zkz1siZb7w=="
        },
        "CqLfIuM83K6QnYqrOADKAF9mFRzPIrtPZcx3DNIevpXojwGW9nDM8JKdx6LF69F5sWATva7cBRDwNgiDT0dM9Q==": {
          "data": {},
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "CqLfIuM83K6QnYqrOADKAF9mFRzPIrtPZcx3DNIevpXojwGW9nDM8JKdx6LF69F5sWATva7cBRDwNgiDT0dM9Q=="
        },
        "Du9pIpUoqm70Hbkk8MN4QKib35zuHmPRHjPC99qQyzN/WyImA+6x4gpaODsnDQNp545XqXx/EjY1vSWhYwIrOw==": {
          "data": {
            "type": "\f",
            "map": {
              "Z7yy8WEpZNXv+MN3IfLXfzDV6VNdI7G+hnCtf9kABXbMVw/TPe76uYbqYWN0661+tGZgV3rJOngT/DAu6cT6tA==": {
                "type": "\f",
                "map": {
                  "GFbwLVOxQMOCwP9vI4mj+437bIHi1jEihUM0LC+/51CMFlpuZ1dsIFQQMZrxJEdqUdLvHlD4W1YCreqRP1PPYg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "_": {
                    "type": "\u001bfile",
                    "value": "L2V0Yy9nc2hhZG93LQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "dsn9lk+Kw0cUH2+LTVZZ4ofmkzY4EBcKcYDgAQj8Rd+U0IJ+bTdDKPPrG9r4m+iIQ3v5s78IwxY11jxdwi+QRA==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kXoTf3+4XxQt80h3j0zXw3BRjgmGWMxZHZ7Yz/CIN4wgmTYg17DGCyVD/3L+vr0tPBenzomspkLkWjCq3u+67g==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "tJpX5XEphcQLluFTJIbRp12uGSJtPIxjMaoIwi++EJjQcEtWPmqTRlIfR+yq7WoO70jFXwTkEdrZrDIFKJH5ig==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "usfVVcXyLjhf3+zaGAFt2qqIVA4y0m0RzTHBvOUhPWhRzWl63LMWb+l5RxbJ+MiwNQb77QkQrODM2trAoKl5+g==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "vhwRx1EzASN38Sf53EbfXebyqrsciV02siM3eXPcfl6StjAY6Lq2F4b7Uwbbhdu9A+F3MVpEjH4BuvsH7v7lpw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              "__s": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AQ=="
              }
            }
          },
          "code_id": "Du9pIpUoqm70Hbkk8MN4QKib35zuHmPRHjPC99qQyzN/WyImA+6x4gpaODsnDQNp545XqXx/EjY1vSWhYwIrOw=="
        },
        "Ft7Jxk6egFeEfekzy9up3kbujKcTudJA6dcsS5nmUN5/GA5GWgvEPNW6BirbXZ10qgWuP8T3ILrx4WGESSNi7w==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "Ft7Jxk6egFeEfekzy9up3kbujKcTudJA6dcsS5nmUN5/GA5GWgvEPNW6BirbXZ10qgWuP8T3ILrx4WGESSNi7w=="
        },
        "G0bUwMGEwUqkQiCcj4R04tMFYAp3dSRhbU6dBPoLeX2lyTqPVGvreUvu5qov/OCoWc/Q5eaLopy2nQF9xeDEHw==": {
          "data": {
            "type": "\f",
            "map": {
              "5TG5GEKblq+ttGkiE1lMOQxjulbMyDggsG3PWnpIhQIj68oVLuRMmFe5EYmopK0/wz3CkekBuu2c1kgFDXHaZg==": {
                "type": "\f",
                "map": {
                  "0pxJeDkriyq9idLPJaqRTP9bfa1ViMGu7KVAOpZMY1CNKofnlhJQCT2grvMCwbPz4acH4taX5g8M9M/DO44AZA==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "A/Kxpo2No6qHIK8y3iyan/kBdTZmAtQPBOrf1JgoGBqjMHuZ/FLlWE5Sk9FBtGQnJnPuskggUGe7t3elQqELow==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "_": {
                    "type": "\u001bfile",
                    "value": "L2V0Yy9zaGFkb3c="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "fPxp9r43dRMA5Y3s7lp6FRgBD5THqzKEpnQYwU8BKrV+cIO3z4qfj1/GXyphKESuj1Psk8DW0O3eKTGFqaAg0Q==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kWbgQFfIrpQaDEj3+XSBLZGUPG/eB6GtxaYCf4YlRl/hddqo4vHaCdMY+WZ2otW3R8tvUELqQayN4aipFshQog==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "p8o6NFZzHcIj97gcUggk5dVy/wcEr+2QX0uzWWDykcqjLwWOMGXg6pRnx7OnDi0kA4vWCOuZRUQ8Ks8WDo9dsw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "qpqUt1t7A3jv4MD7gaUkjvH8uvEEAYRPAGMynYAnhIjrisJbxqURv+87cPlbv7oOhgkORMJLw26vkm5IEuz0Og==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              "__s": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AQ=="
              }
            }
          },
          "code_id": "G0bUwMGEwUqkQiCcj4R04tMFYAp3dSRhbU6dBPoLeX2lyTqPVGvreUvu5qov/OCoWc/Q5eaLopy2nQF9xeDEHw=="
        },
        "H7H0YG5evkzzLDZSd6Ayb6abAXcrzwkoCcfUXx1AmiAOybkTo7ujzAM6rwO63/MF8k+IkPNQz4cLNqT/1KnYnw==": {
          "data": {
            "type": "\f",
            "map": {
              "__s": {
                "type": "\u0004",
                "value": "AA=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AA=="
              },
              "nejEMwnyzoC+DWwlUCNzNFDDHajwUeUUGwR+EozGbRxV8cRAFhdjAMrZgiZyf4eKK6qh6/vt1HUkHG77NeP2yQ==": {
                "type": "\f",
                "map": {
                  "CeR3ALOhQCiPEZUyBpm8HsBcuoPuzRff77XEG4Qy2ABc7kH+p08QoyTWllM++rQ8gj560p+J/jUnsBJDxJZ87w==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "JCwHI5yV/EcpG2Q+uwOhdQROlBDwFM4815yNUXfhZHes+4oaiXseSzH7Pjv2dvj9/udENUhOQopFlzFWsj6Q7A==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "U0z00NpVJB4jfdP6xnW7hMbuemGcPtEEa7ezr4HWzsst64Y/TOLifvgTVku6H7xPovz8L3DFolXOA/bty0zdsw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "_": {
                    "type": "\u001bfile",
                    "value": "L2V0Yy9ncm91cC0="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "mJjdh3msCoEM6whx4fB8q6weex1iAyJRCYsuV2U/Ko5ByYVnA7pInX0LLPnbcaAlpg1+0N20Afh3B5ZcTH3XPw==": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "sXY88/8z6GFGA+APMdzkmeGonHgoyyAdQfIJspyPnLyLMyLynMr9Umom/mBzs+lH5Ujfr6kY5qm8OP5n7YRwzg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "w51bPOWfXCFdsYMzBzclLic89nbXKN63iKbFxUxDF+AacpUmPOTxusDN/836WzmmYmK9KK1KvIKFBJf5YtOl9A==": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "zYc3XCZ5mTROndMS4qMgClHpfQ9dsWss/4VvNVNmqBkyTZUetIhdkGiWvDB81xGOn8Gag2q4Rqbty9t8QUNy4A==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              }
            }
          },
          "code_id": "H7H0YG5evkzzLDZSd6Ayb6abAXcrzwkoCcfUXx1AmiAOybkTo7ujzAM6rwO63/MF8k+IkPNQz4cLNqT/1KnYnw=="
        },
        "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA=="
        },
        "J4anmJ+mXJX380Qslh563U7Bs5d6fiD2ghVxV9knAU0iy/P+IVNZsDhBbCmbpJch3Tm0NliAMiaY47lmw887Jw==": {
          "data": {
            "type": "\u0007",
            "value": "dW5zdGFibGU="
          },
          "code_id": "J4anmJ+mXJX380Qslh563U7Bs5d6fiD2ghVxV9knAU0iy/P+IVNZsDhBbCmbpJch3Tm0NliAMiaY47lmw887Jw=="
        },
        "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw=="
        },
        "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ=="
        },
        "L1uVAC1Xk4VwI/Qi2VdbZmacln2sPsRupgEa+wu3tZMkFHQl/raDrrtmmhXpPial8vIcCqRvPSX0oh2iZDuASA==": {
          "data": {
            "type": "\u0019\u0007"
          },
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "L1uVAC1Xk4VwI/Qi2VdbZmacln2sPsRupgEa+wu3tZMkFHQl/raDrrtmmhXpPial8vIcCqRvPSX0oh2iZDuASA=="
        },
        "N6OGcsq2186ftBhko1yfnn6Dgbmd+R5SvlBcylRBdep3Dg+KDFT2L0HiBnXJZ1jK/yTtTQ3PFBtevIs0jYmloQ==": {
          "data": {
            "type": "\u0019\f",
            "array": [
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              }
            ]
          },
          "code_id": "N6OGcsq2186ftBhko1yfnn6Dgbmd+R5SvlBcylRBdep3Dg+KDFT2L0HiBnXJZ1jK/yTtTQ3PFBtevIs0jYmloQ=="
        },
        "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ==": {
          "data": {
            "type": "\u0007"
          },
          "code_id": "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ=="
        },
        "NoAJV6/zn4XKsJILgugtSNBjw59X84Ynkrep3rpQe/frNdQMeG1O+KNawC+McOt8RU9UQErAbHspg7H0R2dhSA==": {
          "data": {
            "type": "\u0019\u0007",
            "array": [
              {
                "type": "\u0007",
                "value": "YWVzMjU2LWN0cg=="
              },
              {
                "type": "\u0007",
                "value": "YWVzMTkyLWN0cg=="
              },
              {
                "type": "\u0007",
                "value": "YWVzMTI4LWN0cg=="
              }
            ]
          },
          "code_id": "NoAJV6/zn4XKsJILgugtSNBjw59X84Ynkrep3rpQe/frNdQMeG1O+KNawC+McOt8RU9UQErAbHspg7H0R2dhSA=="
        },
        "OSG/mAQsQ08cruLamBggOYG8t2LKZwGF9iVNcSn1u8IAlfikLhKrZSYpDYAzm/4mfiIwbjrI1Q+Cw/8fzfcLPA==": {
          "data": {},
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "OSG/mAQsQ08cruLamBggOYG8t2LKZwGF9iVNcSn1u8IAlfikLhKrZSYpDYAzm/4mfiIwbjrI1Q+Cw/8fzfcLPA=="
        },
        "OcxjyMNzPsQob5d23efk6/D/qbV2XftiD+stAvXITuJOOmdoVb4hcGjt+IT0AldkoHCFowQ2mx+Yhdj0ktI5AA==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "OcxjyMNzPsQob5d23efk6/D/qbV2XftiD+stAvXITuJOOmdoVb4hcGjt+IT0AldkoHCFowQ2mx+Yhdj0ktI5AA=="
        },
        "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ==": {
          "data": {
            "type": "\u0007",
            "value": "YW1kNjQ="
          },
          "code_id": "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ=="
        },
        "PtunGFObCqSZRTCGP7b3oq6W69r5SfxHvJ9xQhO4bCUu/fK6KMIIo9ur5/0WhLQ6+ZEMhdlHhyz9DsP805sDnQ==": {
          "data": {
            "type": "\u0019\f",
            "array": [
              {
                "type": "\f",
                "map": {
                  "0wfrDILUo7ULv7WPxaaf7a3Urg17rvBTe9lBD4NqqLUrFaXhgdmjV0zsNWl0hM/eq1ewOgXRVHI0eHfnnTR9xA==": {
                    "type": "\u0007",
                    "value": "bm9ib2R5"
                  },
                  "2iAsOVsB94Tv3G0kaNgiyLF4E6RCuxypotuI1gWpaiuQin1V3Ac+gnNeMc74hajs+UCnnTXaf5hkIroiU7yr1g==": {
                    "type": "\u0005",
                    "value": "/P8H"
                  },
                  "9RTJqN28Iz35UKjYJgzyuXomAQgFIn7GKqQ5Pp1DTu+ydzZMRNbaThkLhmvoz1YD1TIk19nfIp/zj2fRmLdS1g==": {
                    "type": "\u0005",
                    "value": "/P8H"
                  },
                  "EtNwZ3aNrdU7nMiimuC6jslkPHl3T6fd2hEXgcApOs6HaoboaZPophzmmdJegofeYnrG+1zSly4l6eZa9PdQBA==": {
                    "type": "\u0007",
                    "value": "L25vbmV4aXN0ZW50"
                  },
                  "KDEanckG1ybs+sqUfFk4xIUUxBZzHzmezScePUNIB+CHs6uxdAywYkNBR5mMN5kagSk4iw6ukquMkPbrzmav/g==": {
                    "type": "\u0019\u001bprivatekey"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "b9DOnVS8epqSXr2+KABhWcxJE5+n6H3SRRcxhVd7BV55Po42JNI9HGG3SBYPu5ubbaUk8gRkxsIp7qUyd62nJA==": {
                    "type": "\u0007",
                    "value": "L3Vzci9zYmluL25vbG9naW4="
                  },
                  "mvX66NV1wB8ycQHbP2mPLkn5fD4LobE7cm5YzIZwgkJyFzVcSznH4CEgY/WNb9m/DBwIKEiGstKQNdTQ4Wpbcw==": {
                    "type": "\u0007"
                  },
                  "rwynLnol9bb2quHG2fOXAxqkeFnUDSA4nsZo5wPVKsYZVUJaig4lafqd08Uw6JgPvET+eDDTS5g1h30DPdATNg==": {
                    "type": "\u0019\f"
                  },
                  "wAWhxvS3AiZ07gMV7jadikOeaj9r4tfJoTXuCflHSQ0A0+Xy2TGZGTSnqzpx2W6gC6w72Y8hYPimRn9G54Sx6Q==": {
                    "type": "\f",
                    "map": {
                      "MrUYi385z4TlzXZeqKpmtGCeTlu5ACckPRvNhujQCfCaEFVw8bK5PF4Lic9BeLRHHRGwtbxNWhGZ9HOy+25uqw==": {
                        "type": "\u0007",
                        "value": "bm9ncm91cA=="
                      },
                      "_": {
                        "type": "\u001bgroup",
                        "value": "Z3JvdXAvNjU1MzQvbm9ncm91cA=="
                      },
                      "__s": {
                        "type": "\u0002"
                      },
                      "__t": {
                        "type": "\u0004",
                        "value": "AQ=="
                      },
                      "gTLRBtPlRJDmcSzAR3gDeZRA6KF8wAm4A7heeN/jsoa11LeLFsXwKtn3w7U9joykz1m8G6w1UhnofSsKgMSY6Q==": {
                        "type": "\u0005",
                        "value": "/P8H"
                      }
                    }
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "0wfrDILUo7ULv7WPxaaf7a3Urg17rvBTe9lBD4NqqLUrFaXhgdmjV0zsNWl0hM/eq1ewOgXRVHI0eHfnnTR9xA==": {
                    "type": "\u0007",
                    "value": "dWJ1bnR1"
                  },
                  "2iAsOVsB94Tv3G0kaNgiyLF4E6RCuxypotuI1gWpaiuQin1V3Ac+gnNeMc74hajs+UCnnTXaf5hkIroiU7yr1g==": {
                    "type": "\u0005",
                    "value": "0A8="
                  },
                  "9RTJqN28Iz35UKjYJgzyuXomAQgFIn7GKqQ5Pp1DTu+ydzZMRNbaThkLhmvoz1YD1TIk19nfIp/zj2fRmLdS1g==": {
                    "type": "\u0005",
                    "value": "0A8="
                  },
                  "EtNwZ3aNrdU7nMiimuC6jslkPHl3T6fd2hEXgcApOs6HaoboaZPophzmmdJegofeYnrG+1zSly4l6eZa9PdQBA==": {
                    "type": "\u0007",
                    "value": "L2hvbWUvdWJ1bnR1"
                  },
                  "KDEanckG1ybs+sqUfFk4xIUUxBZzHzmezScePUNIB+CHs6uxdAywYkNBR5mMN5kagSk4iw6ukquMkPbrzmav/g==": {
                    "type": "\u0019\u001bprivatekey"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "b9DOnVS8epqSXr2+KABhWcxJE5+n6H3SRRcxhVd7BV55Po42JNI9HGG3SBYPu5ubbaUk8gRkxsIp7qUyd62nJA==": {
                    "type": "\u0007",
                    "value": "L2Jpbi9iYXNo"
                  },
                  "mvX66NV1wB8ycQHbP2mPLkn5fD4LobE7cm5YzIZwgkJyFzVcSznH4CEgY/WNb9m/DBwIKEiGstKQNdTQ4Wpbcw==": {
                    "type": "\u0007"
                  },
                  "rwynLnol9bb2quHG2fOXAxqkeFnUDSA4nsZo5wPVKsYZVUJaig4lafqd08Uw6JgPvET+eDDTS5g1h30DPdATNg==": {
                    "type": "\u0019\f"
                  },
                  "wAWhxvS3AiZ07gMV7jadikOeaj9r4tfJoTXuCflHSQ0A0+Xy2TGZGTSnqzpx2W6gC6w72Y8hYPimRn9G54Sx6Q==": {
                    "type": "\f",
                    "map": {
                      "MrUYi385z4TlzXZeqKpmtGCeTlu5ACckPRvNhujQCfCaEFVw8bK5PF4Lic9BeLRHHRGwtbxNWhGZ9HOy+25uqw==": {
                        "type": "\u0007",
                        "value": "dWJ1bnR1"
                      },
                      "_": {
                        "type": "\u001bgroup",
                        "value": "Z3JvdXAvMTAwMC91YnVudHU="
                      },
                      "__s": {
                        "type": "\u0002"
                      },
                      "__t": {
                        "type": "\u0004",
                        "value": "AQ=="
                      },
                      "gTLRBtPlRJDmcSzAR3gDeZRA6KF8wAm4A7heeN/jsoa11LeLFsXwKtn3w7U9joykz1m8G6w1UhnofSsKgMSY6Q==": {
                        "type": "\u0005",
                        "value": "0A8="
                      }
                    }
                  }
                }
              }
            ]
          },
          "code_id": "PtunGFObCqSZRTCGP7b3oq6W69r5SfxHvJ9xQhO4bCUu/fK6KMIIo9ur5/0WhLQ6+ZEMhdlHhyz9DsP805sDnQ=="
        },
        "R1EtIO0IHYcNITt63nhdkbe+zbZw9l9TG5fmOGZWTycdIbQUB3zh3hSMHTlo9dpdId0Os1CQF4cSyWayMhHslA==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "R1EtIO0IHYcNITt63nhdkbe+zbZw9l9TG5fmOGZWTycdIbQUB3zh3hSMHTlo9dpdId0Os1CQF4cSyWayMhHslA=="
        },
        "S0pi0XR2kSuGxhNT7T1roRClJpvyWDf2tbqf4WiaICdLeN4J+5clf8CQzREt32vqpf9puBNedCGXo27OvRaflw==": {
          "data": {
            "type": "\f",
            "map": {
              "Cf2l7PDCC2h4yANCi73Lfy11aKE3EhXk69X/5E5ZqfCWgej1s8VN4FAAK7e55EZi8veCvNOIMSUcT7DOMsp0Dg==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "X7psqDI09AB+V2NjUgsb9EfD6mkz7QxYph6eCCG9Ccf6QcWdm3Kgn9d8pwi5cZFpRM7BjmoGISDutHNpXnz7wQ==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "_": {
                "type": "\u001bfile",
                "value": "L2V0Yy9wYXNzd2Q="
              },
              "__s": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "osNGhRH+o4glAV1iiPZSi+JDPrQfbzWrzkjU0CUaP0nCQE/DLK/1Ndc11iw2OOeOrBP/npXLSypVS4KKcHEgLA==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "vkTIPy/xlXHkOXH+XuQujtNwKsPEx+wLDiTq8bfvYjpNAYqachWVVWOiAPkmw/3zZA3CyDbY8az0wL291URTDA==": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "vvwHpgwmhqZdnvo/P/PE8hClY21iJZJsnplXbz+WkLfruLlzjzZSpVrSxBvTDcEloRTzniNLhraMi4xo+tZNkQ==": {
                "type": "\u0004",
                "value": "AQ=="
              }
            }
          },
          "code_id": "S0pi0XR2kSuGxhNT7T1roRClJpvyWDf2tbqf4WiaICdLeN4J+5clf8CQzREt32vqpf9puBNedCGXo27OvRaflw=="
        },
        "TBJjOKtZT1BQwIMS0l5Z3hbtRx/A8zOmfy1HsmroznS1SMQupwq0ed8VXfh9zIlQEH8MmsCiM5EXkWhvHU/v5w==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "TBJjOKtZT1BQwIMS0l5Z3hbtRx/A8zOmfy1HsmroznS1SMQupwq0ed8VXfh9zIlQEH8MmsCiM5EXkWhvHU/v5w=="
        },
        "VYvXd9DoeA22juTEFywXJb89sXLsOc7eHhrCj6WwJqVtuEUXvgQeEsFXaVhe72J+NBCOk9tV3F4BZ4g67moVHA==": {
          "data": {
            "type": "\u0007",
            "value": "bG9jYWxob3N0LmxvY2FsZG9tYWlu"
          },
          "code_id": "VYvXd9DoeA22juTEFywXJb89sXLsOc7eHhrCj6WwJqVtuEUXvgQeEsFXaVhe72J+NBCOk9tV3F4BZ4g67moVHA=="
        },
        "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": {
          "data": {
            "type": "\u0007",
            "value": "dWJ1bnR1"
          },
          "code_id": "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ=="
        },
        "XTYgIWSTRTxQRAJEqKLCeHUeuTRLgVTPNG5mG21Ma5nj2HbCyC/HGelkOUBaakbRsYyKopLSow8A2xmRz0jpGA==": {
          "data": {},
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "XTYgIWSTRTxQRAJEqKLCeHUeuTRLgVTPNG5mG21Ma5nj2HbCyC/HGelkOUBaakbRsYyKopLSow8A2xmRz0jpGA=="
        },
        "XmES4jlqYB9VGoEFhptxhc2aEc8dqob2jjig2/vA50M5Gyo6YZGtxRlM8tZRMWFuXs7YxZ1kYsq6YNcoHYaixw==": {
          "data": {},
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "XmES4jlqYB9VGoEFhptxhc2aEc8dqob2jjig2/vA50M5Gyo6YZGtxRlM8tZRMWFuXs7YxZ1kYsq6YNcoHYaixw=="
        },
        "aG7oUlIyH0BK4klvDQqsSbeRERfPhyfR1CvToYn4IPcrWZ2bsEkv4nTkHsDHTXrpQmqJRX4jye0IibRgTFLbCg==": {
          "data": {
            "type": "\f",
            "map": {
              "__s": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "ifp9Oy2txSgf83mD3FLqCsGOe7VxiWsnarmDmSIPpxkIqPdii54Apl5aoJ4SCESxTUyhAxnxrHtZ2GeGvsMQfA==": {
                "type": "\f",
                "map": {
                  "GBU9R8Ym/GyFLF+1f+mfvA5gwZNQlyycfdFZKJxkDtv2Md6DxZHDvlFFgwWsIUHy/PA5LDk0c5I5PUFuoCo1Rw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "GeCVZqQA+yvyXH7SRzjhJzdzoXrsJ9pJiUcquKKnXCadr9Y6qSy6ullFgx4/wINba2tJe/72wSNdsmVA47DaTg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "MzZC2uAEtImax9N96uDzfTsdvvs43XOvHoTpDHl0X7NUFuCkDeYCbb7YwWYLOdOtyGJUSuKN8tvTgZBOToZsug==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "X9YH3CGS2BOipTc7pxRAaJGJivLhKA0IiBkU1bnBRAHn+8jHv0uYWni8j0N0TJ40iFLyvsvaSmKbZFKtgchxjQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "_": {
                    "type": "\u001bfile",
                    "value": "L2V0Yy9nc2hhZG93"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "s0Oz0HkByctrSaRZaisAt4j5RiIzxuXSWgoTm7rfZhh8mR8L/BBM/7eQ64Y9VRzS3nU2hcJ36ZwrGwV0fTiMDQ==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "uFgtM4VqHdGZrtL04zcQ+QZRo74Q+RZlPs1veWuZunMNPsMExVN+NG+qJ35VkPmxrT7GAoE6dukWqFjNWgVSFg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              }
            }
          },
          "code_id": "aG7oUlIyH0BK4klvDQqsSbeRERfPhyfR1CvToYn4IPcrWZ2bsEkv4nTkHsDHTXrpQmqJRX4jye0IibRgTFLbCg=="
        },
        "aPd1sU0622HV0ZtikUUO281iDvW8IUZ98MxVZJ9u5XA5GcEWFdYk4ghEuC278CrJaisTkYNYgQCrtW4EPUjjDQ==": {
          "data": {
            "type": "\u0007"
          },
          "code_id": "aPd1sU0622HV0ZtikUUO281iDvW8IUZ98MxVZJ9u5XA5GcEWFdYk4ghEuC278CrJaisTkYNYgQCrtW4EPUjjDQ=="
        },
        "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A=="
        },
        "cePaHhIQT0r/Q/uOnqJiCe2fzy+jKj8vKmZMzte8HkLbxCFtAB88sJxgEk7pM7dF5yt1jNfaqRuUgcLxAuajww==": {
          "data": {
            "type": "\u0019\f",
            "array": [
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYXB0QDIuOC4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi44LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YXB0"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYmFzZS1maWxlc0AxM3VidW50dTEwLjI/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTN1YnVudHUxMC4y"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YmFzZS1maWxlcw=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYmFzZS1wYXNzd2RAMy42LjNidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My42LjNidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YmFzZS1wYXNzd2Q="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYmFzaEA1LjIuMjEtMnVidW50dTQ/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4yLjIxLTJ1YnVudHU0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YmFzaA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYnNkdXRpbHNAMSUzQTIuMzkuMy05dWJ1bnR1Ni4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToyLjM5LjMtOXVidW50dTYuMw=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YnNkdXRpbHM="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eCAoMi4zOS4zLTl1YnVudHU2LjMp"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvY29yZXV0aWxzQDkuNC0zdWJ1bnR1Nj9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "OS40LTN1YnVudHU2"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Y29yZXV0aWxz"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGFzaEAwLjUuMTItNnVidW50dTU/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC41LjEyLTZ1YnVudHU1"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGFzaA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGViY29uZkAxLjUuODZ1YnVudHUxP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41Ljg2dWJ1bnR1MQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGViY29uZg=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGViaWFudXRpbHNANS4xN2J1aWxkMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4xN2J1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGViaWFudXRpbHM="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGlmZnV0aWxzQDElM0EzLjEwLTFidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTozLjEwLTFidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGlmZnV0aWxz"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZHBrZ0AxLjIyLjZ1YnVudHU2LjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4yMi42dWJ1bnR1Ni4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZHBrZw=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZTJmc3Byb2dzQDEuNDcuMC0yLjR+ZXhwMXVidW50dTQuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZmluZHV0aWxzQDQuOS4wLTVidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NC45LjAtNWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZmluZHV0aWxz"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ2NjLTE0LWJhc2VAMTQuMi4wLTR1YnVudHUyfjI0LjA0P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTQuMi4wLTR1YnVudHUyfjI0LjA0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0LWJhc2U="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ3BndkAyLjQuNC0ydWJ1bnR1MTcuMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi40LjQtMnVidW50dTE3LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z3Bndg=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z251cGcy"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ3JlcEAzLjExLTRidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4xMS00YnVpbGQx"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z3JlcA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ3ppcEAxLjEyLTF1YnVudHUzLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xMi0xdWJ1bnR1My4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z3ppcA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvaG9zdG5hbWVAMy4yMyUyQm5tdTJ1YnVudHUyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4yMytubXUydWJ1bnR1Mg=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "aG9zdG5hbWU="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvaW5pdC1zeXN0ZW0taGVscGVyc0AxLjY2dWJ1bnR1MT9hcmNoPWFsbCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS42NnVidW50dTE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "aW5pdC1zeXN0ZW0taGVscGVycw=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYWNsMUAyLjMuMi0xYnVpbGQxLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zLjItMWJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYWNsMQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YWNs"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXB0LXBrZzYuMHQ2NEAyLjguMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi44LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXB0LXBrZzYuMHQ2NA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXB0"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXNzdWFuMEAyLjUuNi0xYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi41LjYtMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXNzdWFuMA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliYXNzdWFu"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXR0cjFAMSUzQTIuNS4yLTFidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToyLjUuMi0xYnVpbGQxLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXR0cjE="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXR0cg=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXVkaXQtY29tbW9uQDElM0EzLjEuMi0yLjFidWlsZDEuMT9hcmNoPWFsbCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTozLjEuMi0yLjFidWlsZDEuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXVkaXQtY29tbW9u"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXVkaXQ="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXVkaXQxQDElM0EzLjEuMi0yLjFidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTozLjEuMi0yLjFidWlsZDEuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXVkaXQx"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXVkaXQ="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYmxraWQxQDIuMzkuMy05dWJ1bnR1Ni4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYmxraWQx"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYnoyLTEuMEAxLjAuOC01LjFidWlsZDAuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4wLjgtNS4xYnVpbGQwLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYnoyLTEuMA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YnppcDI="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYy1iaW5AMi4zOS0wdWJ1bnR1OC41P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS0wdWJ1bnR1OC41"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYy1iaW4="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2xpYmM="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYzZAMi4zOS0wdWJ1bnR1OC41P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS0wdWJ1bnR1OC41"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYzY="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2xpYmM="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY2FwLW5nMEAwLjguNC0yYnVpbGQyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC44LjQtMmJ1aWxkMg=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY2FwLW5nMA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliY2FwLW5n"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY2FwMkAxJTNBMi42Ni01dWJ1bnR1Mi4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToyLjY2LTV1YnVudHUyLjI="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY2FwMg=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY29tLWVycjJAMS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY29tLWVycjI="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY3J5cHQxQDElM0E0LjQuMzYtNGJ1aWxkMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTo0LjQuMzYtNGJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY3J5cHQx"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlieGNyeXB0"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZGI1LjN0NjRANS4zLjI4JTJCZGZzZzItNz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4zLjI4K2Rmc2cyLTc="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZGI1LjN0NjQ="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZGI1LjM="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZGViY29uZmNsaWVudDBAMC4yNzF1YnVudHUzP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4yNzF1YnVudHUz"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZGViY29uZmNsaWVudDA="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Y2RlYmNvbmY="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZXh0MmZzMnQ2NEAxLjQ3LjAtMi40fmV4cDF1YnVudHU0LjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZXh0MmZzMnQ2NA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZmZpOEAzLjQuNi0xYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My40LjYtMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZmZpOA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliZmZp"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ2NjLXMxQDE0LjIuMC00dWJ1bnR1Mn4yNC4wND9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTQuMi4wLTR1YnVudHUyfjI0LjA0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ2NjLXMx"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ2NyeXB0MjBAMS4xMC4zLTJidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xMC4zLTJidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ2NyeXB0MjA="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ21wMTBAMiUzQTYuMy4wJTJCZGZzZy0ydWJ1bnR1Ni4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mjo2LjMuMCtkZnNnLTJ1YnVudHU2LjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ21wMTA="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z21w"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ251dGxzMzB0NjRAMy44LjMtMS4xdWJ1bnR1My40P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My44LjMtMS4xdWJ1bnR1My40"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ251dGxzMzB0NjQ="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z251dGxzMjg="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ3BnLWVycm9yMEAxLjQ3LTNidWlsZDIuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny0zYnVpbGQyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ3BnLWVycm9yMA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliZ3BnLWVycm9y"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliaG9nd2VlZDZ0NjRAMy45LjEtMi4yYnVpbGQxLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My45LjEtMi4yYnVpbGQxLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliaG9nd2VlZDZ0NjQ="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmV0dGxl"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliaWRuMi0wQDIuMy43LTJidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zLjctMmJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliaWRuMi0w"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliaWRuMg=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibHo0LTFAMS45LjQtMWJ1aWxkMS4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS45LjQtMWJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibHo0LTE="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bHo0"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibHptYTVANS42LjElMkJyZWFsbHk1LjQuNS0xdWJ1bnR1MC4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS42LjErcmVhbGx5NS40LjUtMXVidW50dTAuMg=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibHptYTU="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "eHotdXRpbHM="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibWQwQDEuMS4wLTJidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xLjAtMmJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibWQw"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlibWQ="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibW91bnQxQDIuMzkuMy05dWJ1bnR1Ni4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibW91bnQx"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibmN1cnNlc3c2QDYuNCUyQjIwMjQwMTEzLTF1YnVudHUyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibmN1cnNlc3c2"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibmV0dGxlOHQ2NEAzLjkuMS0yLjJidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My45LjEtMi4yYnVpbGQxLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibmV0dGxlOHQ2NA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmV0dGxl"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibnB0aDB0NjRAMS42LTMuMWJ1aWxkMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS42LTMuMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibnB0aDB0NjQ="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bnB0aA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicDExLWtpdDBAMC4yNS4zLTR1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4yNS4zLTR1YnVudHUyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicDExLWtpdDA="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cDExLWtpdA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtLW1vZHVsZXNAMS41LjMtNXVidW50dTUuND9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtLW1vZHVsZXM="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtLW1vZHVsZXMtYmluQDEuNS4zLTV1YnVudHU1LjQ/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtLW1vZHVsZXMtYmlu"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtLXJ1bnRpbWVAMS41LjMtNXVidW50dTUuND9hcmNoPWFsbCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtLXJ1bnRpbWU="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtMGdAMS41LjMtNXVidW50dTUuND9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtMGc="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGNyZTItOC0wQDEwLjQyLTR1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTAuNDItNHVidW50dTIuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGNyZTItOC0w"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGNyZTI="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicHJvYzItMEAyJTNBNC4wLjQtNHVidW50dTMuMj9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mjo0LjAuNC00dWJ1bnR1My4y"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicHJvYzItMA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cHJvY3Bz"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VjY29tcDJAMi41LjUtMXVidW50dTMuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi41LjUtMXVidW50dTMuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VjY29tcDI="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VjY29tcA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VsaW51eDFAMy41LTJ1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTJ1YnVudHUyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VsaW51eDE="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VsaW51eA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VtYW5hZ2UtY29tbW9uQDMuNS0xYnVpbGQ1P2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTFidWlsZDU="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2UtY29tbW9u"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2U="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VtYW5hZ2UyQDMuNS0xYnVpbGQ1P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTFidWlsZDU="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2Uy"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2U="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2Vwb2wyQDMuNS0yYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTJidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2Vwb2wy"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2Vwb2w="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic21hcnRjb2xzMUAyLjM5LjMtOXVidW50dTYuMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic21hcnRjb2xzMQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3MyQDEuNDcuMC0yLjR+ZXhwMXVidW50dTQuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3My"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3NsM3Q2NEAzLjAuMTMtMHVidW50dTMuNT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4wLjEzLTB1YnVudHUzLjU="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3NsM3Q2NA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "b3BlbnNzbA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3RkYyUyQiUyQjZAMTQuMi4wLTR1YnVudHUyfjI0LjA0P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTQuMi4wLTR1YnVudHUyfjI0LjA0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3RkYysrNg=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3lzdGVtZDBAMjU1LjQtMXVidW50dTguOD9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MjU1LjQtMXVidW50dTguOA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3lzdGVtZDA="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c3lzdGVtZA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidGFzbjEtNkA0LjE5LjAtM3VidW50dTAuMjQuMDQuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NC4xOS4wLTN1YnVudHUwLjI0LjA0LjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidGFzbjEtNg=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidGluZm82QDYuNCUyQjIwMjQwMTEzLTF1YnVudHUyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidGluZm82"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidWRldjFAMjU1LjQtMXVidW50dTguOD9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MjU1LjQtMXVidW50dTguOA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidWRldjE="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c3lzdGVtZA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidW5pc3RyaW5nNUAxLjEtMmJ1aWxkMS4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xLTJidWlsZDEuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidW5pc3RyaW5nNQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlidW5pc3RyaW5n"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidXVpZDFAMi4zOS4zLTl1YnVudHU2LjM/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidXVpZDE="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlieHhoYXNoMEAwLjguMi0yYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC44LjItMmJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlieHhoYXNoMA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "eHhoYXNo"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlienN0ZDFAMS41LjUlMkJkZnNnMi0yYnVpbGQxLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjUrZGZzZzItMmJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlienN0ZDE="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlienN0ZA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbG9naW5AMSUzQTQuMTMlMkJkZnNnMS00dWJ1bnR1My4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTo0LjEzK2Rmc2cxLTR1YnVudHUzLjI="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bG9naW4="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c2hhZG93"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbG9nc2F2ZUAxLjQ3LjAtMi40fmV4cDF1YnVudHU0LjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bG9nc2F2ZQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbWF3a0AxLjMuNC4yMDI0MDEyMy0xYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4zLjQuMjAyNDAxMjMtMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bWF3aw=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbW91bnRAMi4zOS4zLTl1YnVudHU2LjM/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bW91bnQ="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbmN1cnNlcy1iYXNlQDYuNCUyQjIwMjQwMTEzLTF1YnVudHUyP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcy1iYXNl"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbmN1cnNlcy1iaW5ANi40JTJCMjAyNDAxMTMtMXVidW50dTI/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcy1iaW4="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvcGFzc3dkQDElM0E0LjEzJTJCZGZzZzEtNHVidW50dTMuMj9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTo0LjEzK2Rmc2cxLTR1YnVudHUzLjI="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "cGFzc3dk"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c2hhZG93"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvcGVybC1iYXNlQDUuMzguMi0zLjJ1YnVudHUwLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4zOC4yLTMuMnVidW50dTAuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "cGVybC1iYXNl"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGVybA=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvcHJvY3BzQDIlM0E0LjAuNC00dWJ1bnR1My4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mjo0LjAuNC00dWJ1bnR1My4y"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "cHJvY3Bz"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvc2VkQDQuOS0yYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NC45LTJidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "c2Vk"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvc2Vuc2libGUtdXRpbHNAMC4wLjIyP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4wLjIy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "c2Vuc2libGUtdXRpbHM="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvc3lzdmluaXQtdXRpbHNAMy4wOC02dWJ1bnR1Mz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4wOC02dWJ1bnR1Mw=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "c3lzdmluaXQtdXRpbHM="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c3lzdmluaXQ="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdGFyQDEuMzUlMkJkZnNnLTNidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4zNStkZnNnLTNidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dGFy"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdWJ1bnR1LWtleXJpbmdAMjAyMy4xMS4yOC4xP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MjAyMy4xMS4yOC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dWJ1bnR1LWtleXJpbmc="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdW5taW5pbWl6ZUAwLjIuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4yLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dW5taW5pbWl6ZQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdXRpbC1saW51eEAyLjM5LjMtOXVidW50dTYuMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvemxpYjFnQDElM0ExLjMuZGZzZy0zLjF1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": {
                    "type": "\u0007",
                    "value": "aW5zdGFsbCBvayBpbnN0YWxsZWQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToxLjMuZGZzZy0zLjF1YnVudHUyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "emxpYjFn"
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "emxpYg=="
                  },
                  "__s": {
                    "type": "\u0002"
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": {
                    "type": "\u0007",
                    "value": "ZGVi"
                  }
                }
              }
            ]
          },
          "code_id": "cePaHhIQT0r/Q/uOnqJiCe2fzy+jKj8vKmZMzte8HkLbxCFtAB88sJxgEk7pM7dF5yt1jNfaqRuUgcLxAuajww=="
        },
        "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg=="
        },
        "f6zruMb0IvG6WXtG+K5yuHnlZWNaDvVxwhETUa3C31JKY/uN/FTNwIRm3mU8VTUy2cL4BfTenisUBBbzXBThzQ==": {
          "data": {
            "type": "\u0007"
          },
          "code_id": "f6zruMb0IvG6WXtG+K5yuHnlZWNaDvVxwhETUa3C31JKY/uN/FTNwIRm3mU8VTUy2cL4BfTenisUBBbzXBThzQ=="
        },
        "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ=="
        },
        "gnQzZeSAHrQV35V8XMTtz9hHVuRLLkmvsgmgVe93eDzEWW9NrV/hP7Wu409x5z0m+ZibsdLlck3xAamyu7arLw==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "gnQzZeSAHrQV35V8XMTtz9hHVuRLLkmvsgmgVe93eDzEWW9NrV/hP7Wu409x5z0m+ZibsdLlck3xAamyu7arLw=="
        },
        "h9mRqgC6ItFuY4nxvN3oY5U+wr3b3Kj0SyAhXFRF33zQ6r+VsDt47ca8OUp6XwvInz88f9QiRHS7dp3Ch0zkhw==": {
          "data": {
            "type": "\u0019\f",
            "array": [
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYXB0QDIuOC4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi44LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YXB0"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYmFzZS1maWxlc0AxM3VidW50dTEwLjI/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTN1YnVudHUxMC4y"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YmFzZS1maWxlcw=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYmFzZS1wYXNzd2RAMy42LjNidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My42LjNidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YmFzZS1wYXNzd2Q="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYmFzaEA1LjIuMjEtMnVidW50dTQ/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4yLjIxLTJ1YnVudHU0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YmFzaA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvYnNkdXRpbHNAMSUzQTIuMzkuMy05dWJ1bnR1Ni4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToyLjM5LjMtOXVidW50dTYuMw=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "YnNkdXRpbHM="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eCAoMi4zOS4zLTl1YnVudHU2LjMp"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvY29yZXV0aWxzQDkuNC0zdWJ1bnR1Nj9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "OS40LTN1YnVudHU2"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Y29yZXV0aWxz"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGFzaEAwLjUuMTItNnVidW50dTU/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC41LjEyLTZ1YnVudHU1"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGFzaA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGViY29uZkAxLjUuODZ1YnVudHUxP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41Ljg2dWJ1bnR1MQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGViY29uZg=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGViaWFudXRpbHNANS4xN2J1aWxkMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4xN2J1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGViaWFudXRpbHM="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZGlmZnV0aWxzQDElM0EzLjEwLTFidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTozLjEwLTFidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZGlmZnV0aWxz"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZHBrZ0AxLjIyLjZ1YnVudHU2LjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4yMi42dWJ1bnR1Ni4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZHBrZw=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZTJmc3Byb2dzQDEuNDcuMC0yLjR+ZXhwMXVidW50dTQuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZmluZHV0aWxzQDQuOS4wLTVidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NC45LjAtNWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "ZmluZHV0aWxz"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ2NjLTE0LWJhc2VAMTQuMi4wLTR1YnVudHUyfjI0LjA0P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTQuMi4wLTR1YnVudHUyfjI0LjA0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0LWJhc2U="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ3BndkAyLjQuNC0ydWJ1bnR1MTcuMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi40LjQtMnVidW50dTE3LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z3Bndg=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z251cGcy"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ3JlcEAzLjExLTRidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4xMS00YnVpbGQx"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z3JlcA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvZ3ppcEAxLjEyLTF1YnVudHUzLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xMi0xdWJ1bnR1My4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "Z3ppcA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvaG9zdG5hbWVAMy4yMyUyQm5tdTJ1YnVudHUyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4yMytubXUydWJ1bnR1Mg=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "aG9zdG5hbWU="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvaW5pdC1zeXN0ZW0taGVscGVyc0AxLjY2dWJ1bnR1MT9hcmNoPWFsbCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS42NnVidW50dTE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "aW5pdC1zeXN0ZW0taGVscGVycw=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYWNsMUAyLjMuMi0xYnVpbGQxLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zLjItMWJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYWNsMQ=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YWNs"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXB0LXBrZzYuMHQ2NEAyLjguMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi44LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXB0LXBrZzYuMHQ2NA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXB0"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXNzdWFuMEAyLjUuNi0xYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi41LjYtMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXNzdWFuMA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliYXNzdWFu"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXR0cjFAMSUzQTIuNS4yLTFidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToyLjUuMi0xYnVpbGQxLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXR0cjE="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXR0cg=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXVkaXQtY29tbW9uQDElM0EzLjEuMi0yLjFidWlsZDEuMT9hcmNoPWFsbCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTozLjEuMi0yLjFidWlsZDEuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXVkaXQtY29tbW9u"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXVkaXQ="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYXVkaXQxQDElM0EzLjEuMi0yLjFidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTozLjEuMi0yLjFidWlsZDEuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYXVkaXQx"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YXVkaXQ="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYmxraWQxQDIuMzkuMy05dWJ1bnR1Ni4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYmxraWQx"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYnoyLTEuMEAxLjAuOC01LjFidWlsZDAuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4wLjgtNS4xYnVpbGQwLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYnoyLTEuMA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "YnppcDI="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYy1iaW5AMi4zOS0wdWJ1bnR1OC41P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS0wdWJ1bnR1OC41"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYy1iaW4="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2xpYmM="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliYzZAMi4zOS0wdWJ1bnR1OC41P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS0wdWJ1bnR1OC41"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliYzY="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2xpYmM="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY2FwLW5nMEAwLjguNC0yYnVpbGQyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC44LjQtMmJ1aWxkMg=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY2FwLW5nMA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliY2FwLW5n"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY2FwMkAxJTNBMi42Ni01dWJ1bnR1Mi4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToyLjY2LTV1YnVudHUyLjI="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY2FwMg=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY29tLWVycjJAMS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY29tLWVycjI="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliY3J5cHQxQDElM0E0LjQuMzYtNGJ1aWxkMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTo0LjQuMzYtNGJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliY3J5cHQx"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlieGNyeXB0"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZGI1LjN0NjRANS4zLjI4JTJCZGZzZzItNz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4zLjI4K2Rmc2cyLTc="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZGI1LjN0NjQ="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZGI1LjM="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZGViY29uZmNsaWVudDBAMC4yNzF1YnVudHUzP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4yNzF1YnVudHUz"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZGViY29uZmNsaWVudDA="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Y2RlYmNvbmY="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZXh0MmZzMnQ2NEAxLjQ3LjAtMi40fmV4cDF1YnVudHU0LjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZXh0MmZzMnQ2NA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZmZpOEAzLjQuNi0xYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My40LjYtMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZmZpOA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliZmZp"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ2NjLXMxQDE0LjIuMC00dWJ1bnR1Mn4yNC4wND9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTQuMi4wLTR1YnVudHUyfjI0LjA0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ2NjLXMx"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ2NyeXB0MjBAMS4xMC4zLTJidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xMC4zLTJidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ2NyeXB0MjA="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ21wMTBAMiUzQTYuMy4wJTJCZGZzZy0ydWJ1bnR1Ni4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mjo2LjMuMCtkZnNnLTJ1YnVudHU2LjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ21wMTA="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z21w"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ251dGxzMzB0NjRAMy44LjMtMS4xdWJ1bnR1My40P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My44LjMtMS4xdWJ1bnR1My40"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ251dGxzMzB0NjQ="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z251dGxzMjg="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliZ3BnLWVycm9yMEAxLjQ3LTNidWlsZDIuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny0zYnVpbGQyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliZ3BnLWVycm9yMA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliZ3BnLWVycm9y"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliaG9nd2VlZDZ0NjRAMy45LjEtMi4yYnVpbGQxLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My45LjEtMi4yYnVpbGQxLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliaG9nd2VlZDZ0NjQ="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmV0dGxl"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGliaWRuMi0wQDIuMy43LTJidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zLjctMmJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGliaWRuMi0w"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGliaWRuMg=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibHo0LTFAMS45LjQtMWJ1aWxkMS4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS45LjQtMWJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibHo0LTE="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bHo0"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibHptYTVANS42LjElMkJyZWFsbHk1LjQuNS0xdWJ1bnR1MC4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS42LjErcmVhbGx5NS40LjUtMXVidW50dTAuMg=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibHptYTU="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "eHotdXRpbHM="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibWQwQDEuMS4wLTJidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xLjAtMmJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibWQw"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlibWQ="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibW91bnQxQDIuMzkuMy05dWJ1bnR1Ni4zP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibW91bnQx"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibmN1cnNlc3c2QDYuNCUyQjIwMjQwMTEzLTF1YnVudHUyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibmN1cnNlc3c2"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibmV0dGxlOHQ2NEAzLjkuMS0yLjJidWlsZDEuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My45LjEtMi4yYnVpbGQxLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibmV0dGxlOHQ2NA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmV0dGxl"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlibnB0aDB0NjRAMS42LTMuMWJ1aWxkMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS42LTMuMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlibnB0aDB0NjQ="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bnB0aA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicDExLWtpdDBAMC4yNS4zLTR1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4yNS4zLTR1YnVudHUyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicDExLWtpdDA="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cDExLWtpdA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtLW1vZHVsZXNAMS41LjMtNXVidW50dTUuND9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtLW1vZHVsZXM="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtLW1vZHVsZXMtYmluQDEuNS4zLTV1YnVudHU1LjQ/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtLW1vZHVsZXMtYmlu"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtLXJ1bnRpbWVAMS41LjMtNXVidW50dTUuND9hcmNoPWFsbCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtLXJ1bnRpbWU="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGFtMGdAMS41LjMtNXVidW50dTUuND9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjMtNXVidW50dTUuNA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGFtMGc="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGFt"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicGNyZTItOC0wQDEwLjQyLTR1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTAuNDItNHVidW50dTIuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicGNyZTItOC0w"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGNyZTI="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlicHJvYzItMEAyJTNBNC4wLjQtNHVidW50dTMuMj9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mjo0LjAuNC00dWJ1bnR1My4y"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlicHJvYzItMA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cHJvY3Bz"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VjY29tcDJAMi41LjUtMXVidW50dTMuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi41LjUtMXVidW50dTMuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VjY29tcDI="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VjY29tcA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VsaW51eDFAMy41LTJ1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTJ1YnVudHUyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VsaW51eDE="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VsaW51eA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VtYW5hZ2UtY29tbW9uQDMuNS0xYnVpbGQ1P2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTFidWlsZDU="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2UtY29tbW9u"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2U="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2VtYW5hZ2UyQDMuNS0xYnVpbGQ1P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTFidWlsZDU="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2Uy"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2VtYW5hZ2U="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic2Vwb2wyQDMuNS0yYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My41LTJidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic2Vwb2wy"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlic2Vwb2w="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic21hcnRjb2xzMUAyLjM5LjMtOXVidW50dTYuMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic21hcnRjb2xzMQ=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3MyQDEuNDcuMC0yLjR+ZXhwMXVidW50dTQuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3My"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3NsM3Q2NEAzLjAuMTMtMHVidW50dTMuNT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4wLjEzLTB1YnVudHUzLjU="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3NsM3Q2NA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "b3BlbnNzbA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3RkYyUyQiUyQjZAMTQuMi4wLTR1YnVudHUyfjI0LjA0P2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTQuMi4wLTR1YnVudHUyfjI0LjA0"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3RkYysrNg=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "Z2NjLTE0"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlic3lzdGVtZDBAMjU1LjQtMXVidW50dTguOD9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MjU1LjQtMXVidW50dTguOA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlic3lzdGVtZDA="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c3lzdGVtZA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidGFzbjEtNkA0LjE5LjAtM3VidW50dTAuMjQuMDQuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NC4xOS4wLTN1YnVudHUwLjI0LjA0LjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidGFzbjEtNg=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidGluZm82QDYuNCUyQjIwMjQwMTEzLTF1YnVudHUyP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidGluZm82"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidWRldjFAMjU1LjQtMXVidW50dTguOD9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MjU1LjQtMXVidW50dTguOA=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidWRldjE="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c3lzdGVtZA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidW5pc3RyaW5nNUAxLjEtMmJ1aWxkMS4xP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4xLTJidWlsZDEuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidW5pc3RyaW5nNQ=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlidW5pc3RyaW5n"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlidXVpZDFAMi4zOS4zLTl1YnVudHU2LjM/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlidXVpZDE="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlieHhoYXNoMEAwLjguMi0yYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC44LjItMmJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlieHhoYXNoMA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "eHhoYXNo"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbGlienN0ZDFAMS41LjUlMkJkZnNnMi0yYnVpbGQxLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS41LjUrZGZzZzItMmJ1aWxkMS4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bGlienN0ZDE="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bGlienN0ZA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbG9naW5AMSUzQTQuMTMlMkJkZnNnMS00dWJ1bnR1My4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTo0LjEzK2Rmc2cxLTR1YnVudHUzLjI="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bG9naW4="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c2hhZG93"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbG9nc2F2ZUAxLjQ3LjAtMi40fmV4cDF1YnVudHU0LjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS40Ny4wLTIuNH5leHAxdWJ1bnR1NC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bG9nc2F2ZQ=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "ZTJmc3Byb2dz"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbWF3a0AxLjMuNC4yMDI0MDEyMy0xYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4zLjQuMjAyNDAxMjMtMWJ1aWxkMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bWF3aw=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbW91bnRAMi4zOS4zLTl1YnVudHU2LjM/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bW91bnQ="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbmN1cnNlcy1iYXNlQDYuNCUyQjIwMjQwMTEzLTF1YnVudHUyP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcy1iYXNl"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvbmN1cnNlcy1iaW5ANi40JTJCMjAyNDAxMTMtMXVidW50dTI/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Ni40KzIwMjQwMTEzLTF1YnVudHUy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcy1iaW4="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "bmN1cnNlcw=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvcGFzc3dkQDElM0E0LjEzJTJCZGZzZzEtNHVidW50dTMuMj9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MTo0LjEzK2Rmc2cxLTR1YnVudHUzLjI="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "cGFzc3dk"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c2hhZG93"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvcGVybC1iYXNlQDUuMzguMi0zLjJ1YnVudHUwLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NS4zOC4yLTMuMnVidW50dTAuMQ=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "cGVybC1iYXNl"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "cGVybA=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvcHJvY3BzQDIlM0E0LjAuNC00dWJ1bnR1My4yP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mjo0LjAuNC00dWJ1bnR1My4y"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "cHJvY3Bz"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvc2VkQDQuOS0yYnVpbGQxP2FyY2g9YW1kNjQmZGlzdHJvPXVidW50dS0yNC4wNA=="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "NC45LTJidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "c2Vk"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvc2Vuc2libGUtdXRpbHNAMC4wLjIyP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4wLjIy"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "c2Vuc2libGUtdXRpbHM="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvc3lzdmluaXQtdXRpbHNAMy4wOC02dWJ1bnR1Mz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "My4wOC02dWJ1bnR1Mw=="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "c3lzdmluaXQtdXRpbHM="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "c3lzdmluaXQ="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdGFyQDEuMzUlMkJkZnNnLTNidWlsZDE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MS4zNStkZnNnLTNidWlsZDE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dGFy"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdWJ1bnR1LWtleXJpbmdAMjAyMy4xMS4yOC4xP2FyY2g9YWxsJmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YWxs"
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MjAyMy4xMS4yOC4x"
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dWJ1bnR1LWtleXJpbmc="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdW5taW5pbWl6ZUAwLjIuMT9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MC4yLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dW5taW5pbWl6ZQ=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvdXRpbC1saW51eEAyLjM5LjMtOXVidW50dTYuMz9hcmNoPWFtZDY0JmRpc3Rybz11YnVudHUtMjQuMDQ="
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "Mi4zOS4zLTl1YnVudHU2LjM="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "dXRpbC1saW51eA=="
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              },
              {
                "type": "\f",
                "map": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": {
                    "type": "\u0007",
                    "value": "cGtnOmRlYi91YnVudHUvemxpYjFnQDElM0ExLjMuZGZzZy0zLjF1YnVudHUyLjE/YXJjaD1hbWQ2NCZkaXN0cm89dWJ1bnR1LTI0LjA0"
                  },
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": {
                    "type": "\u0007",
                    "value": "YW1kNjQ="
                  },
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": {
                    "type": "\u0007",
                    "value": "MToxLjMuZGZzZy0zLjF1YnVudHUyLjE="
                  },
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": {
                    "type": "\u0007",
                    "value": "emxpYjFn"
                  },
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": {
                    "type": "\u0007",
                    "value": "emxpYg=="
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": {
                    "type": "\u0007"
                  }
                }
              }
            ]
          },
          "code_id": "h9mRqgC6ItFuY4nxvN3oY5U+wr3b3Kj0SyAhXFRF33zQ6r+VsDt47ca8OUp6XwvInz88f9QiRHS7dp3Ch0zkhw=="
        },
        "ib2pfAMXIQISTa5wN7PCTp8xzRB+RdPOJplleR021jwn7eaBc/LMfl3f1svA4Njp50r9CW4XchPxEqfDUWBA0g==": {
          "data": {
            "type": "\f",
            "map": {
              "1oxYPIhW1eZ+14s234VsQ0Q7p9JSmUaT/RTWBtDRG1ZwKr8YjMcXz76x10J9iu13AcMmGZd43M1NNqPXZtTuKQ==": {
                "type": "\u0007",
                "value": "Y29udGFpbmVyLWltYWdl"
              },
              "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": {
                "type": "\u0007",
                "value": "MjQuMDQ="
              },
              "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": {
                "type": "\u0007",
                "value": "VWJ1bnR1IDI0LjA0LjIgTFRTLCBEb2NrZXIgSW1hZ2U="
              },
              "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ==": {
                "type": "\u0007",
                "value": "YW1kNjQ="
              },
              "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": {
                "type": "\u0007",
                "value": "dWJ1bnR1"
              },
              "_": {
                "type": "\u001basset"
              },
              "__s": {
                "type": "\u0002"
              },
              "__t": {
                "type": "\u0004",
                "value": "AQ=="
              },
              "a3RMPjrhk+jqkeXIISqDSi7EEP8QybcXCeefqNJYVUNcaDGcVDdONFvcTM2Wts8qTRXL3akVxpskitXWuI/gdA==": {
                "type": "\u0007",
                "value": "ZG9ja2VyLWltYWdl"
              },
              "dfc6mvEo04hkhtJJiFc22KX6/AMf6Fy2kQhrtpTW4TxGWTtwNH19ATbrfbhWlXSxx0BBFCRU4emVM/LsxJdhhw==": {
                "type": "\u0007",
                "value": "dWJ1bnR1OjI0LjA0"
              }
            }
          },
          "code_id": "ib2pfAMXIQISTa5wN7PCTp8xzRB+RdPOJplleR021jwn7eaBc/LMfl3f1svA4Njp50r9CW4XchPxEqfDUWBA0g=="
        },
        "j3I61cJvMNTVhZ14xpxulHfTgqmTJOWxgoAl0zGo9Osrk2b8p9ZxD+rugv2N7Hs34dVi1hb+m+7R4F4g+FyC5Q==": {
          "data": {
            "type": "\u0005",
            "value": "AA=="
          },
          "code_id": "j3I61cJvMNTVhZ14xpxulHfTgqmTJOWxgoAl0zGo9Osrk2b8p9ZxD+rugv2N7Hs34dVi1hb+m+7R4F4g+FyC5Q=="
        },
        "k6rlXoYpV48Qd19gKeNl+/IiPnkI5VNQBiqZBca3gDKsIRiLcpXQUlDv52x9sscIWiqOMpC7+x/aBpY0IUq0ww==": {
          "data": {
            "type": "\u0007",
            "value": "L2V0Yy9zc2gvc3NoZF9jb25maWc="
          },
          "code_id": "k6rlXoYpV48Qd19gKeNl+/IiPnkI5VNQBiqZBca3gDKsIRiLcpXQUlDv52x9sscIWiqOMpC7+x/aBpY0IUq0ww=="
        },
        "kLnVPjiZ6SHX22uG9vP3Dj5LzONhJGq5lSimtav8imr+diU48/XH0aFixUB4REzwB7t9I0508qiEEb2JJvX/9A==": {
          "data": {},
          "error": "file '/proc/cpuinfo' not found",
          "code_id": "kLnVPjiZ6SHX22uG9vP3Dj5LzONhJGq5lSimtav8imr+diU48/XH0aFixUB4REzwB7t9I0508qiEEb2JJvX/9A=="
        },
        "kvbn2Yj+Sqcv41rX1QLr8Pa/wcxZC+dyiDl9KUYv7F8q4jGETZ749fSrFV7Mm2qgK3fM/84Woxb0ni1c/rn2ow==": {
          "data": {
            "type": "\f",
            "map": {
              "MeEs7Gt3YEthahZXHgTqCSCyo7cnmZyDeZDGzaRLsxctZETzvEooOgyIqHLUU9SuPLnLehlYtHhuzaUTY8xEeA==": {
                "type": "\u0007"
              },
              "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ==": {
                "type": "\u0007"
              },
              "_": {
                "type": "\u001bmachine.baseboard"
              },
              "__s": {
                "type": "\u0002"
              },
              "__t": {
                "type": "\u0004",
                "value": "AA=="
              },
              "sHfTFR7F4kW3Wi0z8y2JwMy0oRqYLe6QmBrjua6C7V9ixU1Enhk+cQu2qHCrXejMhc81v0GEZPVUBfE50nThhg==": {
                "type": "\u0007"
              },
              "uVg+w3Gjpb//HxRp2UN6oAPsOTND8s2+InwLisg6K5CWxUoFkqCAf3CMUaAoJCE7XNFaI35i0OoMpudOtvz3Iw==": {
                "type": "\u0007"
              },
              "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw==": {
                "type": "\u0007"
              }
            }
          },
          "code_id": "kvbn2Yj+Sqcv41rX1QLr8Pa/wcxZC+dyiDl9KUYv7F8q4jGETZ749fSrFV7Mm2qgK3fM/84Woxb0ni1c/rn2ow=="
        },
        "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA=="
        },
        "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw==": {
          "data": {
            "type": "\u001a\u0007\u0007"
          },
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw=="
        },
        "nYiOaK8tGSbYFIljYNbWufmM2j0W7DAjhGcj7x8fShWOz3K5F+/+Q1g+T0pIvMYNQfQd/Pv2ljQfm3N7x/KGuw==": null,
        "o79/eN5svDRVY7PTXsEyQaRNTF+XwKLUq1qTtO7WPq68D/oVRbsp6xjp/w5pbRWdd3pcPAZp/wNTSfaTtP6fcw==": {
          "data": {
            "type": "\f",
            "map": {
              "8qvxP1ZL9QvPGvj4L+dBGixosz/gY+VODi3AKt2K1vOjlqcPudwgNNchOHG2fZsCw3i8aoTdAfGorf3DD+narQ==": {
                "type": "\u0007"
              },
              "HqJN2MGnBGm9LVxLnTmEmYfDf6Jwj6VTn/4wHYhABDOM9CSg9nz4DYzGrO+eWv0ywiBaQ3noeJV4z3Cts8ZQiw==": {
                "type": "\u0007"
              },
              "TqHMnC/G9hQ1jfVOdF6Wx4bFGV3ICT7rSmXZ1fOQFZJxMFEAVUNHpt3PI0BZNaBmOyfnoU7ED4QUbH8YGVFhTA==": {
                "type": "\u0007"
              },
              "_": {
                "type": "\u001bmachine.bios"
              },
              "__s": {
                "type": "\u0002"
              },
              "__t": {
                "type": "\u0004",
                "value": "AA=="
              }
            }
          },
          "code_id": "o79/eN5svDRVY7PTXsEyQaRNTF+XwKLUq1qTtO7WPq68D/oVRbsp6xjp/w5pbRWdd3pcPAZp/wNTSfaTtP6fcw=="
        },
        "oRvSYIoFygbNmc7Hg3IaXhHOt4EwyTTzarxgx0Sp6y+Zho2hbs2qyZYrPAyFsuemLy6Uk+CQ+aXY4xM9UzS4xA==": {
          "data": {
            "type": "\u0019\f"
          },
          "code_id": "oRvSYIoFygbNmc7Hg3IaXhHOt4EwyTTzarxgx0Sp6y+Zho2hbs2qyZYrPAyFsuemLy6Uk+CQ+aXY4xM9UzS4xA=="
        },
        "si5aO2CnDJDGjvjZg+zIvTfCuB9mnXsh8IJG0wn96t1JdXEXr+K50k3qLLXGw700pXAocIyFuwtOqxU4K/Vm/A==": {
          "data": {},
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "si5aO2CnDJDGjvjZg+zIvTfCuB9mnXsh8IJG0wn96t1JdXEXr+K50k3qLLXGw700pXAocIyFuwtOqxU4K/Vm/A=="
        },
        "t5XFdpQHRCGELcCtnRUjV6RqTpctewjWT5fmt7B/G+hFfI9ow/bh6Wy/rvuxakj3ehFXKAK8MSnDp7tw5kQ4iQ==": {
          "data": {},
          "error": "file '/etc/ssh/sshd_config' not found",
          "code_id": "t5XFdpQHRCGELcCtnRUjV6RqTpctewjWT5fmt7B/G+hFfI9ow/bh6Wy/rvuxakj3ehFXKAK8MSnDp7tw5kQ4iQ=="
        },
        "ti7hCRw84/H2JY4BAPf7DEkA2PjQyb47e/xmjNi47NX245E/xIVlpGdsyd6KeuNAhAnmSaDCpxpxt3Z+aapULg==": {
          "data": {
            "type": "\f",
            "map": {
              "ZuVRB29jWeNb/lVtouZzqe68zaAFNLlBDfJ5Ds78VBA4fo7etRb15/bF+dXPnFI+UM+5djNEWhJw2j1d8YcgsA==": {
                "type": "\f",
                "map": {
                  "ADxZ6Ef0QR4Nl1QrLeuHlXVwLkCZkQgi4QrqrUhtqNhmxpufVydt6z94I0JjfrtehEe2V1/xIBTNAk3j54NtKg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "F+beOvkTkg1/aI7g+OqS2edsgIJWZsfv8EOT8reqXthVtoTiFkHd0WALUHTgINviGnROydYwBqRxluAUaxODmg==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "GIIl7IreWfE/D6Vn4mj52rIJjPcUTWewWP/ErAJyzB0IUhbsUJPsEt7t137uHzZ9yzKasckoyaVx38BGw7J0Sw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "HOK3Bss2DP91LBon0YoSPT/aE6UU9r03Hdvdwqc/QVboy3Kk1vLOVXmQB7XyYUtYSvcJ8J0roQaXwf0FV1lwHw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  },
                  "_": {
                    "type": "\u001bfile",
                    "value": "L2V0Yy9wYXNzd2Qt"
                  },
                  "__s": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "__t": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "fnW/PyESVitHy8orJg+G1QSK4R7itynS1h0cjAgcISgnJFTkc/Rg+hAYcYdnyOkRtufxlHZomcRcpCIS++Yb6Q==": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "i8ACRicbdRL/5KuJ56Jl5CkKSg1On7fdlKvMTzknFxI9NFJWySwPCbmHaPDE0D1uO1Jk7KSbCfOvhOB0ZIE+VQ==": {
                    "type": "\u0004",
                    "value": "AA=="
                  },
                  "mfkNI8OTRDvYTCa2VnLqzxZKxPU28+Z/Rv0zdSRTrlv0gTWdFEi/RTSmhTFSNhcYdpIYVizLi6TGVxIHv9GBbw==": {
                    "type": "\u0004",
                    "value": "AQ=="
                  }
                }
              },
              "__s": {
                "type": "\u0004",
                "value": "AA=="
              },
              "__t": {
                "type": "\u0004",
                "value": "AA=="
              }
            }
          },
          "code_id": "ti7hCRw84/H2JY4BAPf7DEkA2PjQyb47e/xmjNi47NX245E/xIVlpGdsyd6KeuNAhAnmSaDCpxpxt3Z+aapULg=="
        },
        "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw==": {
          "data": {
            "type": "\u0007"
          },
          "code_id": "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw=="
        },
        "wqBMlXbmQSD5agbjcVBO765mJg9Fzk/jOE/5PQtEu4HX/IOZ/DbSqCkml6Gb16wcJn0O3ePnfI/AqgtJz0nWbg==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "wqBMlXbmQSD5agbjcVBO765mJg9Fzk/jOE/5PQtEu4HX/IOZ/DbSqCkml6Gb16wcJn0O3ePnfI/AqgtJz0nWbg=="
        },
        "zkQO5VqK4KADLajxTmptIOrP5ngwLGNY+FhS/h9qIJdZBxBNQwFoT0xZZgHBU5r9Lq9PuMOnhzb9PdGhVvha+w==": {
          "data": {
            "type": "\u0004",
            "value": "AQ=="
          },
          "code_id": "zkQO5VqK4KADLajxTmptIOrP5ngwLGNY+FhS/h9qIJdZBxBNQwFoT0xZZgHBU5r9Lq9PuMOnhzb9PdGhVvha+w=="
        }
      },
      "risks": {
        "items": [
          {
            "mrn": "//policy.api.mondoo.app/risks/open-ports",
            "risk": -0.05
          },
          {
            "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
            "risk": -0.05
          }
        ]
      },
      "resolved_policy_version": "v2"
    }
  },
  "resolved_policies": {
    "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc": {
      "execution_job": {
        "checksum": "7l7MJN0DtS4=",
        "queries": {
          "/Kj/I7IqKvY=": {
            "query": "users.list.all(group != empty)\n",
            "checksum": "uiYrGnyP1kI=",
            "datapoints": [
              "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg==",
              "3dOFooH1gr1YosAmtEfQsyCvPDAkblqinIpavjPxu888CvjcGms1x5M7lhrJeMiQ3YeVxTpt0OLEDNUWaJVrsQ=="
            ],
            "code": {
              "code_v2": {
                "id": "/Kj/I7IqKvY=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "$whereNot",
                        "function": {
                          "type": "\u0019\u001buser",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "$all",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "group",
                        "function": {
                          "type": "\u001bgroup",
                          "binding": 8589934593
                        }
                      },
                      {
                        "primitive": {
                          "type": "\r"
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\r",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hoCAgEA="
                            }
                          ],
                          "binding": 8589934594
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934596
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group",
                        "function": {
                          "type": "\u001bgroup",
                          "binding": 12884901889
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891,
                      12884901892,
                      12884901893
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "MRsaGt+XNN3+L6wmWnuzqsaqLSWmLP17KRrdU1egRav+IoNSxlDW9PddTdMPyQZ5S93iNYptwjVw48PKYRfS8A==",
                  "12884901890": "PTPQgDY6JWIffxLgWMxEti5GhhQTX06J75iDCqwM+a/6yGhQevgTT4GRJqPamPG9cow2Pr4dEAazlD0Db1X2iA==",
                  "12884901891": "9BkTfMm11lJ+q3EwaO3BotjmMJ0lUYLqra8EYJARrMQka3RuJlPf2ar/fIzoOB3bn5OkLhzf8HZvRyv16tLNrg==",
                  "12884901892": "N2+GU3aUf/8lM9UQ24kX2XLM7wV/kndMEVrsmPVZMGSambni2UbPO+25AVE8T5CNemL83ubOr7Y/YC8GfQ8ZOQ==",
                  "12884901893": "l3sgMHSTK1b86gaxzi6K7sUyjVJ/gxpbHgTAoVaEN1KOqzyWnhnvgNnZsvlSO3X4eUkoZyppwhNqCwPvMAu32Q==",
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "MRsaGt+XNN3+L6wmWnuzqsaqLSWmLP17KRrdU1egRav+IoNSxlDW9PddTdMPyQZ5S93iNYptwjVw48PKYRfS8A==",
                  "4294967300": "3dOFooH1gr1YosAmtEfQsyCvPDAkblqinIpavjPxu888CvjcGms1x5M7lhrJeMiQ3YeVxTpt0OLEDNUWaJVrsQ==",
                  "4294967301": "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg==",
                  "8589934593": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "8589934594": "NYIenh+Gmd0LZMT9t6lLmb/zQbSakyO+GgoKt97a6MnqQdxxUVejZD6CHlcfqsYuKVbUM683V0x7MhTFltVbHQ==",
                  "8589934595": "OmQHeP8iu2hHspjQMG3tNnggEq4g+2MM4mp1qMPRZTKDsjDqYILqFSuK8+chgflQK+qFv0Zr9VsvS5h/D3uDUg==",
                  "8589934596": "717sFpC7TPsQg45DOHHnczLlRpV9XIJp1wg8FEVpYDZwdsykjw1KVK7vlY+J24Q+ZeWZDLEoO4h7APtGbXaxbQ=="
                }
              },
              "source": "users.list.all(group != empty)\n",
              "labels": {
                "labels": {
                  "3dOFooH1gr1YosAmtEfQsyCvPDAkblqinIpavjPxu888CvjcGms1x5M7lhrJeMiQ3YeVxTpt0OLEDNUWaJVrsQ==": "[].all()",
                  "717sFpC7TPsQg45DOHHnczLlRpV9XIJp1wg8FEVpYDZwdsykjw1KVK7vlY+J24Q+ZeWZDLEoO4h7APtGbXaxbQ==": "group != \u003cref\u003e",
                  "9BkTfMm11lJ+q3EwaO3BotjmMJ0lUYLqra8EYJARrMQka3RuJlPf2ar/fIzoOB3bn5OkLhzf8HZvRyv16tLNrg==": "uid",
                  "N2+GU3aUf/8lM9UQ24kX2XLM7wV/kndMEVrsmPVZMGSambni2UbPO+25AVE8T5CNemL83ubOr7Y/YC8GfQ8ZOQ==": "gid",
                  "PTPQgDY6JWIffxLgWMxEti5GhhQTX06J75iDCqwM+a/6yGhQevgTT4GRJqPamPG9cow2Pr4dEAazlD0Db1X2iA==": "name",
                  "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg==": "users.list.$whereNot",
                  "l3sgMHSTK1b86gaxzi6K7sUyjVJ/gxpbHgTAoVaEN1KOqzyWnhnvgNnZsvlSO3X4eUkoZyppwhNqCwPvMAu32Q==": "group"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg==": 12884901888
              }
            }
          },
          "/tUd3Rzfo5c=": {
            "query": "file(\"/proc/cpuinfo\").content.lines.where(_.contains(\"model name\")).first().split(\":\").last().trim()\n",
            "checksum": "CKQ/26OFjEk=",
            "datapoints": [
              "kLnVPjiZ6SHX22uG9vP3Dj5LzONhJGq5lSimtav8imr+diU48/XH0aFixUB4REzwB7t9I0508qiEEb2JJvX/9A=="
            ],
            "code": {
              "code_v2": {
                "id": "/tUd3Rzfo5c=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L3Byb2MvY3B1aW5mbw=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "content",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "lines",
                        "function": {
                          "type": "\u0019\u0007",
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u0019\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hoCAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "first",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967300
                        }
                      },
                      {
                        "call": 1,
                        "id": "split",
                        "function": {
                          "type": "\u0019\u0007",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Og=="
                            }
                          ],
                          "binding": 4294967301
                        }
                      },
                      {
                        "call": 1,
                        "id": "last",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967302
                        }
                      },
                      {
                        "call": 1,
                        "id": "trim",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967303
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967304
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0007"
                        }
                      },
                      {
                        "call": 1,
                        "id": "contains\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "bW9kZWwgbmFtZQ=="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "mrEtAWY08X+mOxl2qWNHDB5gVjwTWPjm3z0gUKgqPx9Ee/EJcknuokEnBfiVL7UEntVVwlJSda8uyJmKMXDemA==",
                  "4294967298": "4GA2oKeprFb6NK6HtgNTBT0JFy15NBjpir/sykWePokHHXLkrHPoFVVwBx4gr89AsGB1Cf3ny0xs80BbyjU9WA==",
                  "4294967299": "1VGFkjnaorKs8XcdlIRe8b820ffGCW1LAGNsLuOp2ND8y0AoIrNxHdGh8l3DdyPkx1jvprSbDMTbBVj9VTmWbQ==",
                  "4294967300": "WPoAitQ9Kpr1ibyV5SxLWI8gH4fvdCAL2YMVAxO5yfl2ccWKbTf+cFcBEiPnh+y91S302O7lVG9V28+fcHxi9Q==",
                  "4294967301": "shJLtefPD+PAGjL/JDkut/QIWQ/9uAnfhiCTyffaFXwkKFJW9UlAYp2epK6M0RfLhngx7PnzO/yHYwYAIPu43w==",
                  "4294967302": "o51uXb6rUJGNoBPqKJWoq0DR5mHYydQeg54xFbqdFkAAS4uCGx7Ap730pnKUqSTO6o+sIe12tdt6IBuyG2LE2w==",
                  "4294967303": "VWvQrYK6fqaX9rpXMAtQz+Eul+7Qg0Le4zYzKHrb7qS2i65yxRt2pNiyQEDQSOfZmFQMS56e6hUA2N3F5/FGjw==",
                  "4294967304": "kLnVPjiZ6SHX22uG9vP3Dj5LzONhJGq5lSimtav8imr+diU48/XH0aFixUB4REzwB7t9I0508qiEEb2JJvX/9A==",
                  "8589934593": "1VGFkjnaorKs8XcdlIRe8b820ffGCW1LAGNsLuOp2ND8y0AoIrNxHdGh8l3DdyPkx1jvprSbDMTbBVj9VTmWbQ==",
                  "8589934594": "c9rBkNX5FlKeICttmVBkMu+kmQT4lJlo1jQIX9VRU6DA2oRMjaepQ8WjPLl1uMJ3ALgCrLLFjFuSHIo3Q0li1A=="
                }
              },
              "source": "file(\"/proc/cpuinfo\").content.lines.where(_.contains(\"model name\")).first().split(\":\").last().trim()\n",
              "labels": {
                "labels": {
                  "c9rBkNX5FlKeICttmVBkMu+kmQT4lJlo1jQIX9VRU6DA2oRMjaepQ8WjPLl1uMJ3ALgCrLLFjFuSHIo3Q0li1A==": "contains",
                  "kLnVPjiZ6SHX22uG9vP3Dj5LzONhJGq5lSimtav8imr+diU48/XH0aFixUB4REzwB7t9I0508qiEEb2JJvX/9A==": "file.content.lines.where.first.split.last.trim"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.0.0"
            }
          },
          "/xtAflG+77k=": {
            "query": "users.list.duplicates(uid).none()\n",
            "checksum": "CPlaJleY3Z8=",
            "datapoints": [
              "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ==",
              "CQXUv/QbKcO1F5LvHFZ2NWFYNovHloaexe9lAEkpEll9s03HI4ecB5bwGd/DasLoHdaNambHL/g4zkz1siZb7w=="
            ],
            "code": {
              "code_v2": {
                "id": "/xtAflG+77k=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "fieldDuplicates",
                        "function": {
                          "type": "\u0019\u001buser",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "$none",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891,
                      12884901892
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "P04l/SVZ8q37LNV+3S23i++GVfIIERbWiu/BQ3eO/YMAj61XnujoRqFwn7ewWNYyGGaQWln/A4nS0QysMJemIQ==",
                  "12884901890": "T7ihLCMP9JA10jZeFnC4swGQUKSQCoO0tM2RjnlC888diYLMPw4DFGpYk9btOvN7VBURMPxYP5NVHJhHmvsnvw==",
                  "12884901891": "sYZO9ps0Y4tx2p0TkrAn73WTQx83QIQu70uPtNukYNnVAzaer3Pf6xe7vAplB+cAgPbteXzizlUioUMnNJr5sg==",
                  "12884901892": "lGDrWOzvmKmCnOZaHUr4AYkHpDS/UcjnWzV+jfWVbGvdXZnCmw099i9DLIvA/9+XEYs/rqAtw4J3MYZV2XpwWg==",
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "P04l/SVZ8q37LNV+3S23i++GVfIIERbWiu/BQ3eO/YMAj61XnujoRqFwn7ewWNYyGGaQWln/A4nS0QysMJemIQ==",
                  "4294967300": "CQXUv/QbKcO1F5LvHFZ2NWFYNovHloaexe9lAEkpEll9s03HI4ecB5bwGd/DasLoHdaNambHL/g4zkz1siZb7w==",
                  "4294967301": "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ==",
                  "8589934593": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "8589934594": "kijfKPV0fU/MBdcby4ng65mWcsH/kOn5PcVmYvbDBfUlSSSqGKiyhy1Qte+BO/GqMfL62iaaIRP8LgfRZ0/3pg=="
                }
              },
              "source": "users.list.duplicates(uid).none()\n",
              "labels": {
                "labels": {
                  "CQXUv/QbKcO1F5LvHFZ2NWFYNovHloaexe9lAEkpEll9s03HI4ecB5bwGd/DasLoHdaNambHL/g4zkz1siZb7w==": "[].none()",
                  "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ==": "users.list.fieldDuplicates",
                  "T7ihLCMP9JA10jZeFnC4swGQUKSQCoO0tM2RjnlC888diYLMPw4DFGpYk9btOvN7VBURMPxYP5NVHJhHmvsnvw==": "name",
                  "kijfKPV0fU/MBdcby4ng65mWcsH/kOn5PcVmYvbDBfUlSSSqGKiyhy1Qte+BO/GqMfL62iaaIRP8LgfRZ0/3pg==": "uid",
                  "lGDrWOzvmKmCnOZaHUr4AYkHpDS/UcjnWzV+jfWVbGvdXZnCmw099i9DLIvA/9+XEYs/rqAtw4J3MYZV2XpwWg==": "gid",
                  "sYZO9ps0Y4tx2p0TkrAn73WTQx83QIQu70uPtNukYNnVAzaer3Pf6xe7vAplB+cAgPbteXzizlUioUMnNJr5sg==": "uid"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ==": 12884901888
              }
            }
          },
          "003uGoeCJx8=": {
            "query": "users.list.duplicates(name).none()\n",
            "checksum": "/sAAGm5+Z5s=",
            "datapoints": [
              "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA==",
              "OcxjyMNzPsQob5d23efk6/D/qbV2XftiD+stAvXITuJOOmdoVb4hcGjt+IT0AldkoHCFowQ2mx+Yhdj0ktI5AA=="
            ],
            "code": {
              "code_v2": {
                "id": "003uGoeCJx8=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "fieldDuplicates",
                        "function": {
                          "type": "\u0019\u001buser",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "$none",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891,
                      12884901892
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "0zrmJvG2MXakh2YxerlEkLULyOXTHiqK5C3/HGBueJg0MpCGGQwD1dEwh04xZcZt3gDrCRBR/JMx/yePP6OWIA==",
                  "12884901890": "Ekaiugf6yWZSFGf2qBCyRypoafg7v8OY5Yej7fpjaxRtaFpPamGcAa1BYonmYp5TBG0mm/GYioQAY+2goOSjig==",
                  "12884901891": "k8bqXW0OtwMF6qqukRcx2Lt6JAYClyfnjLYcb6RvsA/e7eZhS4J0ygs/r3n9oqJvM2Jzq5P9jAUPjLlK75yuhQ==",
                  "12884901892": "gXvmSwDEYO3dag5klfXmG2q8K417YjMvGKp5wlD23+WX1a0DzgVZaVXcZYczNvhu6Za5sGLNOOBXUt98b15Tcg==",
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "0zrmJvG2MXakh2YxerlEkLULyOXTHiqK5C3/HGBueJg0MpCGGQwD1dEwh04xZcZt3gDrCRBR/JMx/yePP6OWIA==",
                  "4294967300": "OcxjyMNzPsQob5d23efk6/D/qbV2XftiD+stAvXITuJOOmdoVb4hcGjt+IT0AldkoHCFowQ2mx+Yhdj0ktI5AA==",
                  "4294967301": "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA==",
                  "8589934593": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "8589934594": "qdXufI4W1NH2SB78Ngad9uuKPIAOM24lCWCUXORutf/gCVmcHwaLmj9joEWHYHbCB2hVjDPvXGrw4U4qtUwWDQ=="
                }
              },
              "source": "users.list.duplicates(name).none()\n",
              "labels": {
                "labels": {
                  "Ekaiugf6yWZSFGf2qBCyRypoafg7v8OY5Yej7fpjaxRtaFpPamGcAa1BYonmYp5TBG0mm/GYioQAY+2goOSjig==": "name",
                  "OcxjyMNzPsQob5d23efk6/D/qbV2XftiD+stAvXITuJOOmdoVb4hcGjt+IT0AldkoHCFowQ2mx+Yhdj0ktI5AA==": "[].none()",
                  "gXvmSwDEYO3dag5klfXmG2q8K417YjMvGKp5wlD23+WX1a0DzgVZaVXcZYczNvhu6Za5sGLNOOBXUt98b15Tcg==": "gid",
                  "k8bqXW0OtwMF6qqukRcx2Lt6JAYClyfnjLYcb6RvsA/e7eZhS4J0ygs/r3n9oqJvM2Jzq5P9jAUPjLlK75yuhQ==": "uid",
                  "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA==": "users.list.fieldDuplicates",
                  "qdXufI4W1NH2SB78Ngad9uuKPIAOM24lCWCUXORutf/gCVmcHwaLmj9joEWHYHbCB2hVjDPvXGrw4U4qtUwWDQ==": "name"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA==": 12884901888
              }
            }
          },
          "12kX/uYrBPU=": {
            "query": "asset.arch",
            "checksum": "r22QAdN6Xzs=",
            "datapoints": [
              "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ=="
            ],
            "code": {
              "code_v2": {
                "id": "12kX/uYrBPU=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "asset"
                      },
                      {
                        "call": 1,
                        "id": "arch",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "4294967298": "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ=="
                }
              },
              "source": "asset.arch",
              "labels": {
                "labels": {
                  "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ==": "asset.arch"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "6.13.0"
            }
          },
          "3/6XnKp0RJM=": {
            "query": "sshd.config.params[\"Port\"] == 22",
            "checksum": "j6pxufbwrZo=",
            "datapoints": [
              "t5XFdpQHRCGELcCtnRUjV6RqTpctewjWT5fmt7B/G+hFfI9ow/bh6Wy/rvuxakj3ehFXKAK8MSnDp7tw5kQ4iQ==",
              "XTYgIWSTRTxQRAJEqKLCeHUeuTRLgVTPNG5mG21Ma5nj2HbCyC/HGelkOUBaakbRsYyKopLSow8A2xmRz0jpGA=="
            ],
            "code": {
              "code_v2": {
                "id": "3/6XnKp0RJM=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "sshd.config"
                      },
                      {
                        "call": 1,
                        "id": "params",
                        "function": {
                          "type": "\u001a\u0007\u0007",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "[]",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "UG9ydA=="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "LA=="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967299
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "h1EPuzo5A02wYUOeDzbzv9YfwPO5Km0r1tmJ0UOceHGyO+M2vrEpnF3/XVJu0hOtyAITe0M4O6XOjLOTc8i8lA==",
                  "4294967298": "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw==",
                  "4294967299": "t5XFdpQHRCGELcCtnRUjV6RqTpctewjWT5fmt7B/G+hFfI9ow/bh6Wy/rvuxakj3ehFXKAK8MSnDp7tw5kQ4iQ==",
                  "4294967300": "XTYgIWSTRTxQRAJEqKLCeHUeuTRLgVTPNG5mG21Ma5nj2HbCyC/HGelkOUBaakbRsYyKopLSow8A2xmRz0jpGA=="
                }
              },
              "source": "sshd.config.params[\"Port\"] == 22",
              "labels": {
                "labels": {
                  "XTYgIWSTRTxQRAJEqKLCeHUeuTRLgVTPNG5mG21Ma5nj2HbCyC/HGelkOUBaakbRsYyKopLSow8A2xmRz0jpGA==": "sshd.config.params[Port] == 22",
                  "t5XFdpQHRCGELcCtnRUjV6RqTpctewjWT5fmt7B/G+hFfI9ow/bh6Wy/rvuxakj3ehFXKAK8MSnDp7tw5kQ4iQ==": "sshd.config.params[Port]"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "3d75ZaJW3Vw=": {
            "query": "machine.chassis { manufacturer serial version assetTag }",
            "checksum": "LLA1Nuhd3Nc=",
            "datapoints": [
              "+TuSckCE/rICzK1m2A6GAGpm/EqMe3Oj/iwAJtd4G1gravRD6neZiYL+70dSlBCdvDv5rWOKOoNeLQTYvMv2Dw=="
            ],
            "code": {
              "code_v2": {
                "id": "3d75ZaJW3Vw=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "machine.chassis"
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bmachine.chassis"
                        }
                      },
                      {
                        "call": 1,
                        "id": "manufacturer",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "serial",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "assetTag",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "kCZNPg4nuNwRKkeY/acjyuWrGNxsZdU9AXF3FqyHbp2gSfflVNrJ44s7+JG9jLK2pBgv2Ar/XgZ3XhToO5OFJA==",
                  "4294967298": "+TuSckCE/rICzK1m2A6GAGpm/EqMe3Oj/iwAJtd4G1gravRD6neZiYL+70dSlBCdvDv5rWOKOoNeLQTYvMv2Dw==",
                  "8589934593": "kCZNPg4nuNwRKkeY/acjyuWrGNxsZdU9AXF3FqyHbp2gSfflVNrJ44s7+JG9jLK2pBgv2Ar/XgZ3XhToO5OFJA==",
                  "8589934594": "1yl946TOPhS7tbXYCoP4KSDzJCzooVtlkhDXxqY9SY76G1xuuG8szmcX0G9lI+pkBGyGCdpgTZXkFssoebYpMA==",
                  "8589934595": "CvcscIBssltk5U7cQn3JOnjgIG651xqXWwsnnhVqe/KGb4slUmJ0PvsMLkV+JMjE4ZTciVm+vgN6GBWOQNh55A==",
                  "8589934596": "WxsMDmNLC+wZoAzuHuDrJTGdfWoXx7tSDPl/n962fMMfIPHtVApRqwVRCJIYOSP44Jbi/3aeopLR67obOLee8Q==",
                  "8589934597": "YMY2pR3dpwdsVxiIJCrW8zmbdAp/gBglInSmEgHiD5Vl8PUE26JyPqtgHsAL43Yz0NWFczBUN02pN0Fwc6Crvw=="
                }
              },
              "source": "machine.chassis { manufacturer serial version assetTag }",
              "labels": {
                "labels": {
                  "+TuSckCE/rICzK1m2A6GAGpm/EqMe3Oj/iwAJtd4G1gravRD6neZiYL+70dSlBCdvDv5rWOKOoNeLQTYvMv2Dw==": "machine.chassis",
                  "1yl946TOPhS7tbXYCoP4KSDzJCzooVtlkhDXxqY9SY76G1xuuG8szmcX0G9lI+pkBGyGCdpgTZXkFssoebYpMA==": "manufacturer",
                  "CvcscIBssltk5U7cQn3JOnjgIG651xqXWwsnnhVqe/KGb4slUmJ0PvsMLkV+JMjE4ZTciVm+vgN6GBWOQNh55A==": "serial",
                  "WxsMDmNLC+wZoAzuHuDrJTGdfWoXx7tSDPl/n962fMMfIPHtVApRqwVRCJIYOSP44Jbi/3aeopLR67obOLee8Q==": "version",
                  "YMY2pR3dpwdsVxiIJCrW8zmbdAp/gBglInSmEgHiD5Vl8PUE26JyPqtgHsAL43Yz0NWFczBUN02pN0Fwc6Crvw==": "assetTag"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "5pm2mmNGelY=": {
            "query": "mount.list { path fstype device options }",
            "checksum": "uvAZSAiEYXM=",
            "datapoints": [
              "7wsOp4YGaSjHvRvBmFaAZ0PIPxNKcO6DjOochPbOJKUhzMH/pVkkQO0Ziw+hFT2hMePykJHfBtrzr0uzpNKzcw=="
            ],
            "code": {
              "code_v2": {
                "id": "5pm2mmNGelY=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "mount"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bmount.point",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bmount.point"
                        }
                      },
                      {
                        "call": 1,
                        "id": "path",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "fstype",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "device",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "options",
                        "function": {
                          "type": "\u001a\u0007\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "g+4Z0HgXpD5g5YKoxhVKjnDIPAlIDGx1NeQEFrrk9XoUf2bsIU5zoaaKNntqI6spvMZcxb4DAItO85nd05EzAQ==",
                  "4294967298": "r6eR/2cSEkANb+0Po1aOp5tLSzjXqI/Q3+HbggCk78VydQatOHX8L5mt4pH4t8XDCs/eLSg4BFjIhPGwvqimXg==",
                  "4294967299": "7wsOp4YGaSjHvRvBmFaAZ0PIPxNKcO6DjOochPbOJKUhzMH/pVkkQO0Ziw+hFT2hMePykJHfBtrzr0uzpNKzcw==",
                  "8589934593": "r6eR/2cSEkANb+0Po1aOp5tLSzjXqI/Q3+HbggCk78VydQatOHX8L5mt4pH4t8XDCs/eLSg4BFjIhPGwvqimXg==",
                  "8589934594": "4yC/GKJ+KTHelJBgQ43lUqki1GVqiM0BbZ2TBYgTvgWpkyMx0dSuMb0eOHfrRtVWJewa4laZApENohYU7qL3hg==",
                  "8589934595": "NPZCFTzwUlWRdDacfQHdGUcGWRv19IZn/QlHzmt6vQba5B1z2DS7V4L8mTvFxEytvksfpVlgkzAWGaYbY7Cl1w==",
                  "8589934596": "XIfEvKFzWTlnPxHABOJSNoW63o2YcBiIQYl4JSTmFU0px+7Iq95AbvBjyWWnBVwM0jL/Yl5GFV4oT8KJsQKb/A==",
                  "8589934597": "rYmMQ8BOAFObe33q8EiC3qJhvhKKWVoke/y/PUeFCXF9Z7JD/metO6FiyplH6Iwc5iDYfTBzfT5mB3A4lknIow=="
                }
              },
              "source": "mount.list { path fstype device options }",
              "labels": {
                "labels": {
                  "4yC/GKJ+KTHelJBgQ43lUqki1GVqiM0BbZ2TBYgTvgWpkyMx0dSuMb0eOHfrRtVWJewa4laZApENohYU7qL3hg==": "path",
                  "7wsOp4YGaSjHvRvBmFaAZ0PIPxNKcO6DjOochPbOJKUhzMH/pVkkQO0Ziw+hFT2hMePykJHfBtrzr0uzpNKzcw==": "mount.list",
                  "NPZCFTzwUlWRdDacfQHdGUcGWRv19IZn/QlHzmt6vQba5B1z2DS7V4L8mTvFxEytvksfpVlgkzAWGaYbY7Cl1w==": "fstype",
                  "XIfEvKFzWTlnPxHABOJSNoW63o2YcBiIQYl4JSTmFU0px+7Iq95AbvBjyWWnBVwM0jL/Yl5GFV4oT8KJsQKb/A==": "device",
                  "rYmMQ8BOAFObe33q8EiC3qJhvhKKWVoke/y/PUeFCXF9Z7JD/metO6FiyplH6Iwc5iDYfTBzfT5mB3A4lknIow==": "options"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "8KD9vCPQy4E=": {
            "query": "groups.where(name == \"shadow\").all(members.length == 0)\n",
            "checksum": "0bNhDoub+B4=",
            "datapoints": [
              "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A==",
              "4qO2/DvCJcr+mzdEAL+xbDRjZ4YGY27+Oko2KZa8zA1tEnNYMoQv1loDgRpoWbTWKxVfaz04F9YcSmORhvAH4w=="
            ],
            "code": {
              "code_v2": {
                "id": "8KD9vCPQy4E=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "groups"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001bgroups",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "$whereNot",
                        "function": {
                          "type": "\u001bgroups",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "iICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967301
                        }
                      },
                      {
                        "call": 1,
                        "id": "$all",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967302
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgIAB"
                            }
                          ],
                          "binding": 4294967302
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967303
                    ],
                    "datapoints": [
                      4294967304
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "c2hhZG93"
                            }
                          ],
                          "binding": 8589934594
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934595
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "members",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "length",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901891
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901892
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "members",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "length",
                        "function": {
                          "type": "\u0005",
                          "binding": 17179869188
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      17179869186,
                      17179869187,
                      17179869188,
                      17179869189
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "XcX5zD04LpU2vPJlQYWKElWRxS8mg1mSOkSE/gWcJ6hMr8sAmosnTZXIGgUF0jXsdpbiPi7oVBTrCdItTS9upw==",
                  "12884901890": "B/+mxRMdiaXZrA4l7wSZ5eral6LhPE6+/ZUbzoB5oUgs6zN9SsJdUxNyoj6s5fQUo92GZiwVd63BdCP/LvVaTA==",
                  "12884901891": "TxCtMb8sExApRCsCHe8RLE82BWgTNu9xzzCufIz30E3alfCseJzNCxKyU0szGmnygtxeGKitogLhXAkIKxrOCg==",
                  "12884901892": "FuYwBXQhGxU4G0L3iDLYC0drxG2bMPmvCkx3Z0pAAqcCPlP8xI1tXefvvWtLOyOaS5xksD6rxvv9bo6sHCjGlw==",
                  "17179869185": "YDgwxilsaiwGNmDZhsDwncS9kPqaXUGvGij+y1wnpoq0eW7iUF4Jmz6bjutk0joyDuXV3xl7sRjLIrsHvzskZQ==",
                  "17179869186": "wbzhYYIkrF0xsvKaHC0prEPLgiJR1dRcy731uzKkxGqKItF3D68D7h68vFXKcXNspWWVUcp9x/XP2Ty1s/0MlQ==",
                  "17179869187": "HXpy1s71pkFA4G8NaStSY0UqadCwCo4YVoRhUYQA1uZqpq8OfEtJTq8uFZ1RZe8N8nosgswi1DifxXxtN4sfiw==",
                  "17179869188": "0e8FSO0uAMagM7JIGm4aT5eOEIeHGKQ0qk+RNLlt4rqluwrIoh5uuUweYmX2PQOCjcNyllr/8NvySoeU+/6ufQ==",
                  "17179869189": "3tseZWiRz5NvokuluIyOo/g4oqJnZgwkgTTzLRhn/gsPTM7OUfb0FKT0TKlK44z3Kg6L7Afi0d/CQQVWL9EXFg==",
                  "4294967297": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "4294967298": "NIEHm9kmH9Dzz0fqfrQWcSNNntroglgakmg+r5TZd2szBtUd/n1TukpBYKYy6vBd3w4umvEVa4gPlkHyeldBNw==",
                  "4294967299": "XcX5zD04LpU2vPJlQYWKElWRxS8mg1mSOkSE/gWcJ6hMr8sAmosnTZXIGgUF0jXsdpbiPi7oVBTrCdItTS9upw==",
                  "4294967300": "S7XyeOfBMM0E+mnJ/bQ5Sbwc+kk83DVMDU3bzZlp9Md2x2RyezO71T0Gx2j42aoy7AxRulj1puKUMkx3+LW+Ng==",
                  "4294967301": "7A5BMk7A7/wXKc0k/X60OLXy9J/0A3gJD+VxPgK4oxjjUKM+9s8yWuOK02O+SNPJe4yhtin36Je1vcIJCf3n/w==",
                  "4294967302": "YDgwxilsaiwGNmDZhsDwncS9kPqaXUGvGij+y1wnpoq0eW7iUF4Jmz6bjutk0joyDuXV3xl7sRjLIrsHvzskZQ==",
                  "4294967303": "4qO2/DvCJcr+mzdEAL+xbDRjZ4YGY27+Oko2KZa8zA1tEnNYMoQv1loDgRpoWbTWKxVfaz04F9YcSmORhvAH4w==",
                  "4294967304": "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A==",
                  "8589934593": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "8589934594": "TB+NQaeDBXcImznyzXliCCTj/JeiWkz/CvSKyjTKGsC3tbheYJUt5GRuIrpXw0z5LJMQzj+QJplF1RgaAcrrww==",
                  "8589934595": "UrqZTWXaHiE/QHi1lKzR8G7HY26+DCaMZkeiGxzErSFhmQv+xHhXuHCeacpy1vC5tvhPGa00TG6yDnJMaxG9lg=="
                }
              },
              "source": "groups.where(name == \"shadow\").all(members.length == 0)\n",
              "labels": {
                "labels": {
                  "0e8FSO0uAMagM7JIGm4aT5eOEIeHGKQ0qk+RNLlt4rqluwrIoh5uuUweYmX2PQOCjcNyllr/8NvySoeU+/6ufQ==": "members",
                  "3tseZWiRz5NvokuluIyOo/g4oqJnZgwkgTTzLRhn/gsPTM7OUfb0FKT0TKlK44z3Kg6L7Afi0d/CQQVWL9EXFg==": "members.length",
                  "4qO2/DvCJcr+mzdEAL+xbDRjZ4YGY27+Oko2KZa8zA1tEnNYMoQv1loDgRpoWbTWKxVfaz04F9YcSmORhvAH4w==": "groups.all()",
                  "FuYwBXQhGxU4G0L3iDLYC0drxG2bMPmvCkx3Z0pAAqcCPlP8xI1tXefvvWtLOyOaS5xksD6rxvv9bo6sHCjGlw==": "members.length == 0",
                  "HXpy1s71pkFA4G8NaStSY0UqadCwCo4YVoRhUYQA1uZqpq8OfEtJTq8uFZ1RZe8N8nosgswi1DifxXxtN4sfiw==": "gid",
                  "UrqZTWXaHiE/QHi1lKzR8G7HY26+DCaMZkeiGxzErSFhmQv+xHhXuHCeacpy1vC5tvhPGa00TG6yDnJMaxG9lg==": "name == \"shadow\"",
                  "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A==": "groups.where.$whereNot.list",
                  "wbzhYYIkrF0xsvKaHC0prEPLgiJR1dRcy731uzKkxGqKItF3D68D7h68vFXKcXNspWWVUcp9x/XP2Ty1s/0MlQ==": "name"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A==": 17179869184
              }
            }
          },
          "8PjpfkfABtA=": {
            "query": "mondoo.version",
            "checksum": "r1dx86o8rf0=",
            "datapoints": [
              "J4anmJ+mXJX380Qslh563U7Bs5d6fiD2ghVxV9knAU0iy/P+IVNZsDhBbCmbpJch3Tm0NliAMiaY47lmw887Jw=="
            ],
            "code": {
              "code_v2": {
                "id": "8PjpfkfABtA=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "mondoo"
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "us0KibGykMCbdBhLtA3fC6F5hcvNz1vZRfFIPcit53W9d35n+P2AvhRrWgzjFxqRfB8VlFW4nwBeFDu4gzkDQA==",
                  "4294967298": "J4anmJ+mXJX380Qslh563U7Bs5d6fiD2ghVxV9knAU0iy/P+IVNZsDhBbCmbpJch3Tm0NliAMiaY47lmw887Jw=="
                }
              },
              "source": "mondoo.version",
              "labels": {
                "labels": {
                  "J4anmJ+mXJX380Qslh563U7Bs5d6fiD2ghVxV9knAU0iy/P+IVNZsDhBbCmbpJch3Tm0NliAMiaY47lmw887Jw==": "mondoo.version"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "F7bdJ3U4G0g=": {
            "query": "machine.baseboard.product",
            "checksum": "hxYF384Xty8=",
            "datapoints": [
              "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw=="
            ],
            "code": {
              "code_v2": {
                "id": "F7bdJ3U4G0g=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "machine.baseboard"
                      },
                      {
                        "call": 1,
                        "id": "product",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "SLkHw1QRP/d4HdSXhty6SQJEXHTHl4NayWFNsQfwpThs6Dz86/FwJY50OdYMWJKFkXpWMDmQ15sxyU5zTwIbdQ==",
                  "4294967298": "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw=="
                }
              },
              "source": "machine.baseboard.product",
              "labels": {
                "labels": {
                  "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw==": "machine.baseboard.product"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "FrdMe+1q6Bc=": {
            "query": "if (file(\"/etc/gshadow\").exists) {\n  file(\"/etc/gshadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
            "checksum": "CIErHmCRVcE=",
            "datapoints": [
              "aG7oUlIyH0BK4klvDQqsSbeRERfPhyfR1CvToYn4IPcrWZ2bsEkv4nTkHsDHTXrpQmqJRX4jye0IibRgTFLbCg=="
            ],
            "code": {
              "code_v2": {
                "id": "FrdMe+1q6Bc=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9nc2hhZG93"
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "exists",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "if",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            },
                            {
                              "type": "\u0019\u0003"
                            }
                          ]
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9nc2hhZG93"
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901891
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901893
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901894
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901896
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901897
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901899
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901900
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901902
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901903
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901905
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901906
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901892,
                      12884901895,
                      12884901898,
                      12884901901,
                      12884901904,
                      12884901907
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "27yj1h+sIjvDhAlnEcneMmbS9uEK01npYAa5c96ye4ZeQP1IUQeWvlqgNy1ystGKS6H5dcbXATPvu7YoQylAwQ==",
                  "12884901890": "nwTRwd9l1oKN5tB1++OkOWZ9JwGMw2umIWXYtD3c5bFQ3uRzoCLEDB5RZ0TeJ7DuOWdd8IECQj7noBxL6Dib9g==",
                  "12884901891": "LCeNHHkv9SNp4kBT+osLihoL/Ycbgu2KkIevZ8F2lR9GyOARH3mULivP99ibp512UR0R1QhX1V7+qyA42SOr8w==",
                  "12884901892": "X9YH3CGS2BOipTc7pxRAaJGJivLhKA0IiBkU1bnBRAHn+8jHv0uYWni8j0N0TJ40iFLyvsvaSmKbZFKtgchxjQ==",
                  "12884901893": "nwTRwd9l1oKN5tB1++OkOWZ9JwGMw2umIWXYtD3c5bFQ3uRzoCLEDB5RZ0TeJ7DuOWdd8IECQj7noBxL6Dib9g==",
                  "12884901894": "PBsj62qaqlmZGoOfZkh0iAN00L0GGF5jDbKOntO5xmvF7xHJikM/48ZJBmpqEbDHlDTiQjzgbOiJvueNqgFraw==",
                  "12884901895": "MzZC2uAEtImax9N96uDzfTsdvvs43XOvHoTpDHl0X7NUFuCkDeYCbb7YwWYLOdOtyGJUSuKN8tvTgZBOToZsug==",
                  "12884901896": "nwTRwd9l1oKN5tB1++OkOWZ9JwGMw2umIWXYtD3c5bFQ3uRzoCLEDB5RZ0TeJ7DuOWdd8IECQj7noBxL6Dib9g==",
                  "12884901897": "mGHpeHJfGco6qFUXT19BfxsSNfUVdY7iNwsYeGFHSVrkJH6AarQEhJP5qJXR9JIkoMV+T1v/+6lKd1BgqUk3XQ==",
                  "12884901898": "GBU9R8Ym/GyFLF+1f+mfvA5gwZNQlyycfdFZKJxkDtv2Md6DxZHDvlFFgwWsIUHy/PA5LDk0c5I5PUFuoCo1Rw==",
                  "12884901899": "nwTRwd9l1oKN5tB1++OkOWZ9JwGMw2umIWXYtD3c5bFQ3uRzoCLEDB5RZ0TeJ7DuOWdd8IECQj7noBxL6Dib9g==",
                  "12884901900": "0y3/vje9T9rLulAmiAZzcScDyuZRvm4iRrmyDGb+WaVf+6sm6KpTIiFrH10tiBjHHZVw4Z+8slaqXtGYSa95lQ==",
                  "12884901901": "uFgtM4VqHdGZrtL04zcQ+QZRo74Q+RZlPs1veWuZunMNPsMExVN+NG+qJ35VkPmxrT7GAoE6dukWqFjNWgVSFg==",
                  "12884901902": "nwTRwd9l1oKN5tB1++OkOWZ9JwGMw2umIWXYtD3c5bFQ3uRzoCLEDB5RZ0TeJ7DuOWdd8IECQj7noBxL6Dib9g==",
                  "12884901903": "YCs7gX1LC7Szahq9JuaQM/AEV63K1hMd/RdRtIxPIIO0zsTebZzOjuc8wXMop12oEyoPDeXKD0mM/Lae/5FcfA==",
                  "12884901904": "s0Oz0HkByctrSaRZaisAt4j5RiIzxuXSWgoTm7rfZhh8mR8L/BBM/7eQ64Y9VRzS3nU2hcJ36ZwrGwV0fTiMDQ==",
                  "12884901905": "nwTRwd9l1oKN5tB1++OkOWZ9JwGMw2umIWXYtD3c5bFQ3uRzoCLEDB5RZ0TeJ7DuOWdd8IECQj7noBxL6Dib9g==",
                  "12884901906": "d/OqUBiXBq9LzQ/MblhEuUA/SDORcBQgXXrPQjL1Gv/D/IVMgMBgCA/ytnWex9/w/1pJJftm6+Weozs+U4WdAA==",
                  "12884901907": "GeCVZqQA+yvyXH7SRzjhJzdzoXrsJ9pJiUcquKKnXCadr9Y6qSy6ullFgx4/wINba2tJe/72wSNdsmVA47DaTg==",
                  "4294967297": "27yj1h+sIjvDhAlnEcneMmbS9uEK01npYAa5c96ye4ZeQP1IUQeWvlqgNy1ystGKS6H5dcbXATPvu7YoQylAwQ==",
                  "4294967298": "1tda+FTxTrJCfsDjV6EHFoa4A9T3Yl7gMW987xoNPi/Jy/j84XeIqbcF3FkULbiKWjkCaXneAzNK8o1ZUZwraA==",
                  "4294967299": "aG7oUlIyH0BK4klvDQqsSbeRERfPhyfR1CvToYn4IPcrWZ2bsEkv4nTkHsDHTXrpQmqJRX4jye0IibRgTFLbCg==",
                  "8589934593": "27yj1h+sIjvDhAlnEcneMmbS9uEK01npYAa5c96ye4ZeQP1IUQeWvlqgNy1ystGKS6H5dcbXATPvu7YoQylAwQ==",
                  "8589934594": "ifp9Oy2txSgf83mD3FLqCsGOe7VxiWsnarmDmSIPpxkIqPdii54Apl5aoJ4SCESxTUyhAxnxrHtZ2GeGvsMQfA=="
                }
              },
              "source": "if (file(\"/etc/gshadow\").exists) {\n  file(\"/etc/gshadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
              "labels": {
                "labels": {
                  "GBU9R8Ym/GyFLF+1f+mfvA5gwZNQlyycfdFZKJxkDtv2Md6DxZHDvlFFgwWsIUHy/PA5LDk0c5I5PUFuoCo1Rw==": "permissions.group_executable == false",
                  "GeCVZqQA+yvyXH7SRzjhJzdzoXrsJ9pJiUcquKKnXCadr9Y6qSy6ullFgx4/wINba2tJe/72wSNdsmVA47DaTg==": "permissions.other_executable == false",
                  "MzZC2uAEtImax9N96uDzfTsdvvs43XOvHoTpDHl0X7NUFuCkDeYCbb7YwWYLOdOtyGJUSuKN8tvTgZBOToZsug==": "permissions.group_writeable == false",
                  "X9YH3CGS2BOipTc7pxRAaJGJivLhKA0IiBkU1bnBRAHn+8jHv0uYWni8j0N0TJ40iFLyvsvaSmKbZFKtgchxjQ==": "permissions.user_executable == false",
                  "aG7oUlIyH0BK4klvDQqsSbeRERfPhyfR1CvToYn4IPcrWZ2bsEkv4nTkHsDHTXrpQmqJRX4jye0IibRgTFLbCg==": "if",
                  "ifp9Oy2txSgf83mD3FLqCsGOe7VxiWsnarmDmSIPpxkIqPdii54Apl5aoJ4SCESxTUyhAxnxrHtZ2GeGvsMQfA==": "file",
                  "s0Oz0HkByctrSaRZaisAt4j5RiIzxuXSWgoTm7rfZhh8mR8L/BBM/7eQ64Y9VRzS3nU2hcJ36ZwrGwV0fTiMDQ==": "permissions.other_writeable == false",
                  "uFgtM4VqHdGZrtL04zcQ+QZRo74Q+RZlPs1veWuZunMNPsMExVN+NG+qJ35VkPmxrT7GAoE6dukWqFjNWgVSFg==": "permissions.other_readable == false"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "Gjm+13rDf3o=": {
            "query": "if (file(\"/etc/passwd-\").exists) {\n  file(\"/etc/passwd-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
            "checksum": "qEDAEhGkPHY=",
            "datapoints": [
              "ti7hCRw84/H2JY4BAPf7DEkA2PjQyb47e/xmjNi47NX245E/xIVlpGdsyd6KeuNAhAnmSaDCpxpxt3Z+aapULg=="
            ],
            "code": {
              "code_v2": {
                "id": "Gjm+13rDf3o=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9wYXNzd2Qt"
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "exists",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "if",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            },
                            {
                              "type": "\u0019\u0003"
                            }
                          ]
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9wYXNzd2Qt"
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901891
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901893
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901894
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901896
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901897
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901899
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901900
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901902
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901903
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901905
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901906
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901908
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901909
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901892,
                      12884901895,
                      12884901898,
                      12884901901,
                      12884901904,
                      12884901907,
                      12884901910
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "iTjmLCIgd6eNCoUIK/4fCCGDrPbEYkviuACFOKGvbsbuND0fQmM+DncdThQnhhtTk1ncIzqIYa1dr9Dv1hFbNg==",
                  "12884901890": "/lT6UC5LVyD2u0/7yT1OZHsduv56OOBGLjrRZR0lFQ0nxO46Rc3r1z5i/Cm4mZMd+PaL+RAWIAdmmiO3rsIV/g==",
                  "12884901891": "uQdV36fsHDe+1afNTN4pwpQJTF8zdParOl3WGg/B2G6ZMnumsvsc5z0/ot1FqIlbhI0kwt3hugPZtvzXn1TDQw==",
                  "12884901892": "F+beOvkTkg1/aI7g+OqS2edsgIJWZsfv8EOT8reqXthVtoTiFkHd0WALUHTgINviGnROydYwBqRxluAUaxODmg==",
                  "12884901893": "/lT6UC5LVyD2u0/7yT1OZHsduv56OOBGLjrRZR0lFQ0nxO46Rc3r1z5i/Cm4mZMd+PaL+RAWIAdmmiO3rsIV/g==",
                  "12884901894": "+1qRtx9kFko8zs0Bbc7O03wstVmkK4iDDnW5FMHJMZRjZA8T//KPUEBWK4h9e6Zs46Pf8RyAype4Hu29krAdNA==",
                  "12884901895": "i8ACRicbdRL/5KuJ56Jl5CkKSg1On7fdlKvMTzknFxI9NFJWySwPCbmHaPDE0D1uO1Jk7KSbCfOvhOB0ZIE+VQ==",
                  "12884901896": "/lT6UC5LVyD2u0/7yT1OZHsduv56OOBGLjrRZR0lFQ0nxO46Rc3r1z5i/Cm4mZMd+PaL+RAWIAdmmiO3rsIV/g==",
                  "12884901897": "Hpunw14isjrYl/8T+Q+luQXL7g4qKGZ1utsVgX7sJRiTw/mzPozGhTnbg6KKwxhZfLD7/qPIV/k0ACneu7jBVQ==",
                  "12884901898": "mfkNI8OTRDvYTCa2VnLqzxZKxPU28+Z/Rv0zdSRTrlv0gTWdFEi/RTSmhTFSNhcYdpIYVizLi6TGVxIHv9GBbw==",
                  "12884901899": "/lT6UC5LVyD2u0/7yT1OZHsduv56OOBGLjrRZR0lFQ0nxO46Rc3r1z5i/Cm4mZMd+PaL+RAWIAdmmiO3rsIV/g==",
                  "12884901900": "fTyHIWUX+stNc7O+VNmVvGnXK/dy1Px4ETXpMpP5HneAONKVkzGn354IcjyjB1ATIEl0Lwa2tlRM1WLsmGqJhA==",
                  "12884901901": "ADxZ6Ef0QR4Nl1QrLeuHlXVwLkCZkQgi4QrqrUhtqNhmxpufVydt6z94I0JjfrtehEe2V1/xIBTNAk3j54NtKg==",
                  "12884901902": "/lT6UC5LVyD2u0/7yT1OZHsduv56OOBGLjrRZR0lFQ0nxO46Rc3r1z5i/Cm4mZMd+PaL+RAWIAdmmiO3rsIV/g==",
                  "12884901903": "xHUIx0KSyf3iADBrRiq+C8y/KAnLZMXiys4nBSkg91jKl8uDxTUXLbRgtWp5KGZu+1kQEmunfPx14ZoDBb9AUA==",
                  "12884901904": "fnW/PyESVitHy8orJg+G1QSK4R7itynS1h0cjAgcISgnJFTkc/Rg+hAYcYdnyOkRtufxlHZomcRcpCIS++Yb6Q==",
                  "12884901905": "/lT6UC5LVyD2u0/7yT1OZHsduv56OOBGLjrRZR0lFQ0nxO46Rc3r1z5i/Cm4mZMd+PaL+RAWIAdmmiO3rsIV/g==",
                  "12884901906": "TtkI4uJ+68OHkeR39WTl7sgPmSQMTv/PH3EL+oR8h3IR1EQzgii6/9uMvZqzP798SSZ+Xs87ekcfIBsg+wOq6A==",
                  "12884901907": "HOK3Bss2DP91LBon0YoSPT/aE6UU9r03Hdvdwqc/QVboy3Kk1vLOVXmQB7XyYUtYSvcJ8J0roQaXwf0FV1lwHw==",
                  "12884901908": "/lT6UC5LVyD2u0/7yT1OZHsduv56OOBGLjrRZR0lFQ0nxO46Rc3r1z5i/Cm4mZMd+PaL+RAWIAdmmiO3rsIV/g==",
                  "12884901909": "+qHp9Cg8nmtICCtJGViDjpJmAs56bU13WHeBPlF0SqO+dKSUVafJnt4PN8j5zlYRjSg+Sg19cnPyK04K+F3jxQ==",
                  "12884901910": "GIIl7IreWfE/D6Vn4mj52rIJjPcUTWewWP/ErAJyzB0IUhbsUJPsEt7t137uHzZ9yzKasckoyaVx38BGw7J0Sw==",
                  "4294967297": "iTjmLCIgd6eNCoUIK/4fCCGDrPbEYkviuACFOKGvbsbuND0fQmM+DncdThQnhhtTk1ncIzqIYa1dr9Dv1hFbNg==",
                  "4294967298": "Gc7kZ4NKcK/z5eUJATH1zwoR8KoeZOO2cVQDXT5QXKPZ1Nyc2zu5FLZctVMGai06wkG6GK6IsW7QpZ4LC41/6g==",
                  "4294967299": "ti7hCRw84/H2JY4BAPf7DEkA2PjQyb47e/xmjNi47NX245E/xIVlpGdsyd6KeuNAhAnmSaDCpxpxt3Z+aapULg==",
                  "8589934593": "iTjmLCIgd6eNCoUIK/4fCCGDrPbEYkviuACFOKGvbsbuND0fQmM+DncdThQnhhtTk1ncIzqIYa1dr9Dv1hFbNg==",
                  "8589934594": "ZuVRB29jWeNb/lVtouZzqe68zaAFNLlBDfJ5Ds78VBA4fo7etRb15/bF+dXPnFI+UM+5djNEWhJw2j1d8YcgsA=="
                }
              },
              "source": "if (file(\"/etc/passwd-\").exists) {\n  file(\"/etc/passwd-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
              "labels": {
                "labels": {
                  "ADxZ6Ef0QR4Nl1QrLeuHlXVwLkCZkQgi4QrqrUhtqNhmxpufVydt6z94I0JjfrtehEe2V1/xIBTNAk3j54NtKg==": "permissions.group_executable == false",
                  "F+beOvkTkg1/aI7g+OqS2edsgIJWZsfv8EOT8reqXthVtoTiFkHd0WALUHTgINviGnROydYwBqRxluAUaxODmg==": "permissions.user_executable == false",
                  "GIIl7IreWfE/D6Vn4mj52rIJjPcUTWewWP/ErAJyzB0IUhbsUJPsEt7t137uHzZ9yzKasckoyaVx38BGw7J0Sw==": "permissions.other_executable == false",
                  "HOK3Bss2DP91LBon0YoSPT/aE6UU9r03Hdvdwqc/QVboy3Kk1vLOVXmQB7XyYUtYSvcJ8J0roQaXwf0FV1lwHw==": "permissions.other_writeable == false",
                  "ZuVRB29jWeNb/lVtouZzqe68zaAFNLlBDfJ5Ds78VBA4fo7etRb15/bF+dXPnFI+UM+5djNEWhJw2j1d8YcgsA==": "file",
                  "fnW/PyESVitHy8orJg+G1QSK4R7itynS1h0cjAgcISgnJFTkc/Rg+hAYcYdnyOkRtufxlHZomcRcpCIS++Yb6Q==": "permissions.other_readable == false",
                  "i8ACRicbdRL/5KuJ56Jl5CkKSg1On7fdlKvMTzknFxI9NFJWySwPCbmHaPDE0D1uO1Jk7KSbCfOvhOB0ZIE+VQ==": "permissions.group_readable == false",
                  "mfkNI8OTRDvYTCa2VnLqzxZKxPU28+Z/Rv0zdSRTrlv0gTWdFEi/RTSmhTFSNhcYdpIYVizLi6TGVxIHv9GBbw==": "permissions.group_writeable == false",
                  "ti7hCRw84/H2JY4BAPf7DEkA2PjQyb47e/xmjNi47NX245E/xIVlpGdsyd6KeuNAhAnmSaDCpxpxt3Z+aapULg==": "if"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "Hl4/DeiN8wc=": {
            "query": "asset { kind title platform name arch runtime version }",
            "checksum": "7FdH3PxFAQ8=",
            "datapoints": [
              "ib2pfAMXIQISTa5wN7PCTp8xzRB+RdPOJplleR021jwn7eaBc/LMfl3f1svA4Njp50r9CW4XchPxEqfDUWBA0g=="
            ],
            "code": {
              "code_v2": {
                "id": "Hl4/DeiN8wc=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "asset"
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001basset"
                        }
                      },
                      {
                        "call": 1,
                        "id": "kind",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "title",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "platform",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "arch",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "runtime",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597,
                      8589934598,
                      8589934599,
                      8589934600
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "4294967298": "ib2pfAMXIQISTa5wN7PCTp8xzRB+RdPOJplleR021jwn7eaBc/LMfl3f1svA4Njp50r9CW4XchPxEqfDUWBA0g==",
                  "8589934593": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "8589934594": "1oxYPIhW1eZ+14s234VsQ0Q7p9JSmUaT/RTWBtDRG1ZwKr8YjMcXz76x10J9iu13AcMmGZd43M1NNqPXZtTuKQ==",
                  "8589934595": "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==",
                  "8589934596": "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==",
                  "8589934597": "dfc6mvEo04hkhtJJiFc22KX6/AMf6Fy2kQhrtpTW4TxGWTtwNH19ATbrfbhWlXSxx0BBFCRU4emVM/LsxJdhhw==",
                  "8589934598": "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ==",
                  "8589934599": "a3RMPjrhk+jqkeXIISqDSi7EEP8QybcXCeefqNJYVUNcaDGcVDdONFvcTM2Wts8qTRXL3akVxpskitXWuI/gdA==",
                  "8589934600": "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q=="
                }
              },
              "source": "asset { kind title platform name arch runtime version }",
              "labels": {
                "labels": {
                  "1oxYPIhW1eZ+14s234VsQ0Q7p9JSmUaT/RTWBtDRG1ZwKr8YjMcXz76x10J9iu13AcMmGZd43M1NNqPXZtTuKQ==": "kind",
                  "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": "version",
                  "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": "title",
                  "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ==": "arch",
                  "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": "platform",
                  "a3RMPjrhk+jqkeXIISqDSi7EEP8QybcXCeefqNJYVUNcaDGcVDdONFvcTM2Wts8qTRXL3akVxpskitXWuI/gdA==": "runtime",
                  "dfc6mvEo04hkhtJJiFc22KX6/AMf6Fy2kQhrtpTW4TxGWTtwNH19ATbrfbhWlXSxx0BBFCRU4emVM/LsxJdhhw==": "name",
                  "ib2pfAMXIQISTa5wN7PCTp8xzRB+RdPOJplleR021jwn7eaBc/LMfl3f1svA4Njp50r9CW4XchPxEqfDUWBA0g==": "asset"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "6.13.0"
            }
          },
          "HnD55hbNskM=": {
            "query": "groups.where(name == \"wheel\") { members }",
            "checksum": "kA6mhmA/wYw=",
            "datapoints": [
              "R1EtIO0IHYcNITt63nhdkbe+zbZw9l9TG5fmOGZWTycdIbQUB3zh3hSMHTlo9dpdId0Os1CQF4cSyWayMhHslA=="
            ],
            "code": {
              "code_v2": {
                "id": "HnD55hbNskM=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "groups"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001bgroups",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967300
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "d2hlZWw="
                            }
                          ],
                          "binding": 8589934594
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934595
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "members",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgIAB"
                            }
                          ],
                          "binding": 12884901890
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901891
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 17179869185
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      17179869186,
                      17179869187,
                      17179869188
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "p3F/KpWS4xZ6/b2tTruTSlkzuCMB3Eb4eczHjyBRhos3UkUgCACpXsERvMsLR6VXN+87I/OuPDcHYOrspmWqvw==",
                  "12884901890": "fLikDuPp8Y5/ZnZ5U/vUwSFIoImYcYmI+rbJa7BkHECgAfqRI1orbW7TLX/qzOB8WN0MVv1uculwNeFWkbjfNA==",
                  "12884901891": "3wW/RY2DKnIVIX1Ytj3pCXM9lWJZfCQJ939n/lJIQCN86iNO3CDDmpZca9Mqdtk89B3jMol9I0QYQJnF6KanuA==",
                  "17179869185": "fLikDuPp8Y5/ZnZ5U/vUwSFIoImYcYmI+rbJa7BkHECgAfqRI1orbW7TLX/qzOB8WN0MVv1uculwNeFWkbjfNA==",
                  "17179869186": "Wn4RjbkUW0KSh3NXlLS4ErrfpSM4xTjUejFxwfIXgJemYj/Pw+CZZcCfnNVLZWYYtSa2WJvV43cekHUmoPpNtw==",
                  "17179869187": "2uNNctRO9RFxH36pwQNWtahof8KLdFtzrZJ8TCAWSBC7a3AeMpwUg25cWEogy4cq528OroUUSbjlwjlBf3twtg==",
                  "17179869188": "PX15CoyZdCM3rzrwkckcRjKl6gJ8NHIPEfGMV3doFitcxyHHtdq3I4nB+iJVuG4yd47E2btBHCnc6TAeOnOXxA==",
                  "4294967297": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "4294967298": "NIEHm9kmH9Dzz0fqfrQWcSNNntroglgakmg+r5TZd2szBtUd/n1TukpBYKYy6vBd3w4umvEVa4gPlkHyeldBNw==",
                  "4294967299": "Dz445J1lxYao8AgWtnBAr/79H+B6Xj+uUBpAiuRyoGU+nXqj7rriTnLjfKC65NCnKJeRAsUyWNqmNNZHB68ZkA==",
                  "4294967300": "p3F/KpWS4xZ6/b2tTruTSlkzuCMB3Eb4eczHjyBRhos3UkUgCACpXsERvMsLR6VXN+87I/OuPDcHYOrspmWqvw==",
                  "4294967301": "R1EtIO0IHYcNITt63nhdkbe+zbZw9l9TG5fmOGZWTycdIbQUB3zh3hSMHTlo9dpdId0Os1CQF4cSyWayMhHslA==",
                  "8589934593": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "8589934594": "TB+NQaeDBXcImznyzXliCCTj/JeiWkz/CvSKyjTKGsC3tbheYJUt5GRuIrpXw0z5LJMQzj+QJplF1RgaAcrrww==",
                  "8589934595": "i7qdse6XArieZjALSqeqIGkRE81xuD4L/DIL8HLOFA8hOiqBf7rPE332X13INvZPE3GQ5Cl5H5Dqw/0UaFELdw=="
                }
              },
              "source": "groups.where(name == \"wheel\") { members }",
              "labels": {
                "labels": {
                  "2uNNctRO9RFxH36pwQNWtahof8KLdFtzrZJ8TCAWSBC7a3AeMpwUg25cWEogy4cq528OroUUSbjlwjlBf3twtg==": "uid",
                  "3wW/RY2DKnIVIX1Ytj3pCXM9lWJZfCQJ939n/lJIQCN86iNO3CDDmpZca9Mqdtk89B3jMol9I0QYQJnF6KanuA==": "members",
                  "PX15CoyZdCM3rzrwkckcRjKl6gJ8NHIPEfGMV3doFitcxyHHtdq3I4nB+iJVuG4yd47E2btBHCnc6TAeOnOXxA==": "gid",
                  "R1EtIO0IHYcNITt63nhdkbe+zbZw9l9TG5fmOGZWTycdIbQUB3zh3hSMHTlo9dpdId0Os1CQF4cSyWayMhHslA==": "groups.where.list",
                  "Wn4RjbkUW0KSh3NXlLS4ErrfpSM4xTjUejFxwfIXgJemYj/Pw+CZZcCfnNVLZWYYtSa2WJvV43cekHUmoPpNtw==": "name",
                  "i7qdse6XArieZjALSqeqIGkRE81xuD4L/DIL8HLOFA8hOiqBf7rPE332X13INvZPE3GQ5Cl5H5Dqw/0UaFELdw==": "name == \"wheel\""
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "3wW/RY2DKnIVIX1Ytj3pCXM9lWJZfCQJ939n/lJIQCN86iNO3CDDmpZca9Mqdtk89B3jMol9I0QYQJnF6KanuA==": 17179869184
              }
            }
          },
          "Jd+Gypq2iUU=": {
            "query": "sshd.config.ciphers == props.sshdTestCiphers",
            "checksum": "w2yl16DGxNs=",
            "properties": {
              "sshdTestCiphers": "nYiOaK8tGSbYFIljYNbWufmM2j0W7DAjhGcj7x8fShWOz3K5F+/+Q1g+T0pIvMYNQfQd/Pv2ljQfm3N7x/KGuw=="
            },
            "datapoints": [
              "L1uVAC1Xk4VwI/Qi2VdbZmacln2sPsRupgEa+wu3tZMkFHQl/raDrrtmmhXpPial8vIcCqRvPSX0oh2iZDuASA==",
              "NoAJV6/zn4XKsJILgugtSNBjw59X84Ynkrep3rpQe/frNdQMeG1O+KNawC+McOt8RU9UQErAbHspg7H0R2dhSA==",
              "XmES4jlqYB9VGoEFhptxhc2aEc8dqob2jjig2/vA50M5Gyo6YZGtxRlM8tZRMWFuXs7YxZ1kYsq6YNcoHYaixw=="
            ],
            "code": {
              "code_v2": {
                "id": "Jd+Gypq2iUU=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "sshd.config"
                      },
                      {
                        "call": 1,
                        "id": "ciphers",
                        "function": {
                          "type": "\u0019\u0007",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 2,
                        "id": "sshdTestCiphers",
                        "primitive": {
                          "type": "\u0019\u0007"
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0007==\u0019\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hoCAgCA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967298,
                      4294967299
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "h1EPuzo5A02wYUOeDzbzv9YfwPO5Km0r1tmJ0UOceHGyO+M2vrEpnF3/XVJu0hOtyAITe0M4O6XOjLOTc8i8lA==",
                  "4294967298": "L1uVAC1Xk4VwI/Qi2VdbZmacln2sPsRupgEa+wu3tZMkFHQl/raDrrtmmhXpPial8vIcCqRvPSX0oh2iZDuASA==",
                  "4294967299": "NoAJV6/zn4XKsJILgugtSNBjw59X84Ynkrep3rpQe/frNdQMeG1O+KNawC+McOt8RU9UQErAbHspg7H0R2dhSA==",
                  "4294967300": "XmES4jlqYB9VGoEFhptxhc2aEc8dqob2jjig2/vA50M5Gyo6YZGtxRlM8tZRMWFuXs7YxZ1kYsq6YNcoHYaixw=="
                }
              },
              "source": "sshd.config.ciphers == props.sshdTestCiphers",
              "labels": {
                "labels": {
                  "L1uVAC1Xk4VwI/Qi2VdbZmacln2sPsRupgEa+wu3tZMkFHQl/raDrrtmmhXpPial8vIcCqRvPSX0oh2iZDuASA==": "sshd.config.ciphers",
                  "NoAJV6/zn4XKsJILgugtSNBjw59X84Ynkrep3rpQe/frNdQMeG1O+KNawC+McOt8RU9UQErAbHspg7H0R2dhSA==": "sshdTestCiphers",
                  "XmES4jlqYB9VGoEFhptxhc2aEc8dqob2jjig2/vA50M5Gyo6YZGtxRlM8tZRMWFuXs7YxZ1kYsq6YNcoHYaixw==": "sshd.config.ciphers == \u003cref\u003e"
                }
              },
              "props": {
                "sshdTestCiphers": "\u0019\u0007"
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "Kd0nC0U7dfs=": {
            "query": "if (file(\"/etc/group-\").exists) {\n  file(\"/etc/group-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
            "checksum": "2TZJCRa9v0o=",
            "datapoints": [
              "H7H0YG5evkzzLDZSd6Ayb6abAXcrzwkoCcfUXx1AmiAOybkTo7ujzAM6rwO63/MF8k+IkPNQz4cLNqT/1KnYnw=="
            ],
            "code": {
              "code_v2": {
                "id": "Kd0nC0U7dfs=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9ncm91cC0="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "exists",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "if",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            },
                            {
                              "type": "\u0019\u0003"
                            }
                          ]
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9ncm91cC0="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901891
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901893
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901894
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901896
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901897
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901899
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901900
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901902
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901903
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901905
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901906
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901908
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901909
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901892,
                      12884901895,
                      12884901898,
                      12884901901,
                      12884901904,
                      12884901907,
                      12884901910
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "lMwGAQBDcE4AaOkJSGDEIim9laiZNnT5tlySheKsDDzi0n5flFidmKWAlj1DHvmoSgrRS3mF1UOGu7u9z06RCg==",
                  "12884901890": "gA7uU0hFzga8YTdepuc3a7HYZbhAynVAjUoHBI6F6VC4UWz5fib/TEBsIT3pp9LRNoUoV0X5SdryvXaOCOzSyA==",
                  "12884901891": "Df76xaVD+GFSxBkELrgRCRPmC8dGYKZ2a0G6xOr9QgP6L2UcRceUDjevYypxDL8yHV+OJv/YUd5PeucdBH8/kQ==",
                  "12884901892": "sXY88/8z6GFGA+APMdzkmeGonHgoyyAdQfIJspyPnLyLMyLynMr9Umom/mBzs+lH5Ujfr6kY5qm8OP5n7YRwzg==",
                  "12884901893": "gA7uU0hFzga8YTdepuc3a7HYZbhAynVAjUoHBI6F6VC4UWz5fib/TEBsIT3pp9LRNoUoV0X5SdryvXaOCOzSyA==",
                  "12884901894": "ulxglDOxsJX2VX0QK8GkAQDe9Q6JqhkYaFjUatsswGe3NdK7pXIhwU0zWn7ueXUUnNLSagdP6JVHvLwG/KBD5A==",
                  "12884901895": "mJjdh3msCoEM6whx4fB8q6weex1iAyJRCYsuV2U/Ko5ByYVnA7pInX0LLPnbcaAlpg1+0N20Afh3B5ZcTH3XPw==",
                  "12884901896": "gA7uU0hFzga8YTdepuc3a7HYZbhAynVAjUoHBI6F6VC4UWz5fib/TEBsIT3pp9LRNoUoV0X5SdryvXaOCOzSyA==",
                  "12884901897": "E600qpnwvQv7JqSPMook4to3ifmk8Yv+RC8ej/qquDZywkrBArsLZOXs+9Xt7+3zwmYcvz94HcTmA153UWiI7g==",
                  "12884901898": "CeR3ALOhQCiPEZUyBpm8HsBcuoPuzRff77XEG4Qy2ABc7kH+p08QoyTWllM++rQ8gj560p+J/jUnsBJDxJZ87w==",
                  "12884901899": "gA7uU0hFzga8YTdepuc3a7HYZbhAynVAjUoHBI6F6VC4UWz5fib/TEBsIT3pp9LRNoUoV0X5SdryvXaOCOzSyA==",
                  "12884901900": "DPIcY9Gwp14cliRF5ZX2uUu6LZBKB6gwclhfjxqgoMGmaAwmaSkMIK9Wl5VCfwZ6/7Pf6xaniRHCaCP9EFU3oQ==",
                  "12884901901": "JCwHI5yV/EcpG2Q+uwOhdQROlBDwFM4815yNUXfhZHes+4oaiXseSzH7Pjv2dvj9/udENUhOQopFlzFWsj6Q7A==",
                  "12884901902": "gA7uU0hFzga8YTdepuc3a7HYZbhAynVAjUoHBI6F6VC4UWz5fib/TEBsIT3pp9LRNoUoV0X5SdryvXaOCOzSyA==",
                  "12884901903": "vNz/SbciWriPGYNiMxLp6lOxgIaiFG7+NekLs17Nng7YlDsLgxJlADT14xZBpauZCf/V9wqDTE7iq6I7BUu2ZA==",
                  "12884901904": "w51bPOWfXCFdsYMzBzclLic89nbXKN63iKbFxUxDF+AacpUmPOTxusDN/836WzmmYmK9KK1KvIKFBJf5YtOl9A==",
                  "12884901905": "gA7uU0hFzga8YTdepuc3a7HYZbhAynVAjUoHBI6F6VC4UWz5fib/TEBsIT3pp9LRNoUoV0X5SdryvXaOCOzSyA==",
                  "12884901906": "MF5F9AzapMELQibHcx5vddVUdrURzbdUoIWmZO5B5fk6tRL3j6tznfA9skHj3MVKkjk9ykMIsKE9M2NvSbMUCA==",
                  "12884901907": "zYc3XCZ5mTROndMS4qMgClHpfQ9dsWss/4VvNVNmqBkyTZUetIhdkGiWvDB81xGOn8Gag2q4Rqbty9t8QUNy4A==",
                  "12884901908": "gA7uU0hFzga8YTdepuc3a7HYZbhAynVAjUoHBI6F6VC4UWz5fib/TEBsIT3pp9LRNoUoV0X5SdryvXaOCOzSyA==",
                  "12884901909": "QN460uWP4S//0iDDoSIRTf3Nx8H+aHor1SSttfGL+chRSwzpKrxDS2KTRnjhLdZhjHbuOlGxbV061EFYFiLGrg==",
                  "12884901910": "U0z00NpVJB4jfdP6xnW7hMbuemGcPtEEa7ezr4HWzsst64Y/TOLifvgTVku6H7xPovz8L3DFolXOA/bty0zdsw==",
                  "4294967297": "lMwGAQBDcE4AaOkJSGDEIim9laiZNnT5tlySheKsDDzi0n5flFidmKWAlj1DHvmoSgrRS3mF1UOGu7u9z06RCg==",
                  "4294967298": "8i2gIQ90RZD0R/m4hCypdhkJHuw2eyJOTswzMriZ/ruhNHpUVhVk3JxtAuZVUyuE4Q7xyiM/nfCQYBtn2LeDIA==",
                  "4294967299": "H7H0YG5evkzzLDZSd6Ayb6abAXcrzwkoCcfUXx1AmiAOybkTo7ujzAM6rwO63/MF8k+IkPNQz4cLNqT/1KnYnw==",
                  "8589934593": "lMwGAQBDcE4AaOkJSGDEIim9laiZNnT5tlySheKsDDzi0n5flFidmKWAlj1DHvmoSgrRS3mF1UOGu7u9z06RCg==",
                  "8589934594": "nejEMwnyzoC+DWwlUCNzNFDDHajwUeUUGwR+EozGbRxV8cRAFhdjAMrZgiZyf4eKK6qh6/vt1HUkHG77NeP2yQ=="
                }
              },
              "source": "if (file(\"/etc/group-\").exists) {\n  file(\"/etc/group-\") {\n    permissions.user_executable == false\n    permissions.group_readable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
              "labels": {
                "labels": {
                  "CeR3ALOhQCiPEZUyBpm8HsBcuoPuzRff77XEG4Qy2ABc7kH+p08QoyTWllM++rQ8gj560p+J/jUnsBJDxJZ87w==": "permissions.group_writeable == false",
                  "H7H0YG5evkzzLDZSd6Ayb6abAXcrzwkoCcfUXx1AmiAOybkTo7ujzAM6rwO63/MF8k+IkPNQz4cLNqT/1KnYnw==": "if",
                  "JCwHI5yV/EcpG2Q+uwOhdQROlBDwFM4815yNUXfhZHes+4oaiXseSzH7Pjv2dvj9/udENUhOQopFlzFWsj6Q7A==": "permissions.group_executable == false",
                  "U0z00NpVJB4jfdP6xnW7hMbuemGcPtEEa7ezr4HWzsst64Y/TOLifvgTVku6H7xPovz8L3DFolXOA/bty0zdsw==": "permissions.other_executable == false",
                  "mJjdh3msCoEM6whx4fB8q6weex1iAyJRCYsuV2U/Ko5ByYVnA7pInX0LLPnbcaAlpg1+0N20Afh3B5ZcTH3XPw==": "permissions.group_readable == false",
                  "nejEMwnyzoC+DWwlUCNzNFDDHajwUeUUGwR+EozGbRxV8cRAFhdjAMrZgiZyf4eKK6qh6/vt1HUkHG77NeP2yQ==": "file",
                  "sXY88/8z6GFGA+APMdzkmeGonHgoyyAdQfIJspyPnLyLMyLynMr9Umom/mBzs+lH5Ujfr6kY5qm8OP5n7YRwzg==": "permissions.user_executable == false",
                  "w51bPOWfXCFdsYMzBzclLic89nbXKN63iKbFxUxDF+AacpUmPOTxusDN/836WzmmYmK9KK1KvIKFBJf5YtOl9A==": "permissions.other_readable == false",
                  "zYc3XCZ5mTROndMS4qMgClHpfQ9dsWss/4VvNVNmqBkyTZUetIhdkGiWvDB81xGOn8Gag2q4Rqbty9t8QUNy4A==": "permissions.other_writeable == false"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "MMPvbEnxkzM=": {
            "query": "asset.version",
            "checksum": "nARQ1JrIdj0=",
            "datapoints": [
              "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q=="
            ],
            "code": {
              "code_v2": {
                "id": "MMPvbEnxkzM=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "asset"
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "4294967298": "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q=="
                }
              },
              "source": "asset.version",
              "labels": {
                "labels": {
                  "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": "asset.version"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "6.13.0"
            }
          },
          "NX7Fhn2QkMk=": {
            "query": "packages { name version origin format arch purl status }",
            "checksum": "CQlMbf+aZ9g=",
            "datapoints": [
              "cePaHhIQT0r/Q/uOnqJiCe2fzy+jKj8vKmZMzte8HkLbxCFtAB88sJxgEk7pM7dF5yt1jNfaqRuUgcLxAuajww=="
            ],
            "code": {
              "code_v2": {
                "id": "NX7Fhn2QkMk=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "packages"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bpackage",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bpackage"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "origin",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "format",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "arch",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "purl",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "status",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597,
                      8589934598,
                      8589934599,
                      8589934600
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "nc5UOrIapsVDWsNQPi9UMROkMUjnpIzanSxQGmqWP9qnzmreR9txrbattEM8aUVnbbzt/cLaFCXnFnrSNz3b7w==",
                  "4294967298": "TRoNpEaXdtENGclai17vNxVsY5Y2DG6WB500iCLFm2lF/0iMyyzJWGTkXDZ1E+swwxmwH+/NFofQYmgV/SPPeg==",
                  "4294967299": "cePaHhIQT0r/Q/uOnqJiCe2fzy+jKj8vKmZMzte8HkLbxCFtAB88sJxgEk7pM7dF5yt1jNfaqRuUgcLxAuajww==",
                  "8589934593": "TRoNpEaXdtENGclai17vNxVsY5Y2DG6WB500iCLFm2lF/0iMyyzJWGTkXDZ1E+swwxmwH+/NFofQYmgV/SPPeg==",
                  "8589934594": "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==",
                  "8589934595": "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==",
                  "8589934596": "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==",
                  "8589934597": "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==",
                  "8589934598": "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==",
                  "8589934599": "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==",
                  "8589934600": "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg=="
                }
              },
              "source": "packages { name version origin format arch purl status }",
              "labels": {
                "labels": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": "purl",
                  "5VdPdvoJ/ovFGw6UShLWaPX+nI9mQqMfnbA+b+tTsbehAie6gwEVxwPzjt7f1PsaFIb8M0QyCbX2fdqidFzBMg==": "status",
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": "arch",
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": "version",
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": "name",
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": "origin",
                  "cePaHhIQT0r/Q/uOnqJiCe2fzy+jKj8vKmZMzte8HkLbxCFtAB88sJxgEk7pM7dF5yt1jNfaqRuUgcLxAuajww==": "packages.list",
                  "kRD6k3t+wWFPJzarIpgxnu5QPswms/vA0wnnVSozVJt/dKIqBcaadgpxa8lOXezK4xm2v4/w3xSliXdz87/fhw==": "format"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "NsQ1E+4hzxs=": {
            "query": "users.where(shell != \"/sbin/nologin\" \u0026\u0026 uid \u003e= 1000 \u0026\u0026 name != \"root\") { name sid uid gid shell authorizedkeys.list sshkeys home group }",
            "checksum": "lhu0sm8adHo=",
            "datapoints": [
              "PtunGFObCqSZRTCGP7b3oq6W69r5SfxHvJ9xQhO4bCUu/fK6KMIIo9ur5/0WhLQ6+ZEMhdlHhyz9DsP805sDnQ=="
            ],
            "code": {
              "code_v2": {
                "id": "NsQ1E+4hzxs=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001busers",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967300
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "shell",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "L3NiaW4vbm9sb2dpbg=="
                            }
                          ],
                          "binding": 8589934594
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u003e=\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "0A8="
                            }
                          ],
                          "binding": 8589934596
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0026\u0026\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "ioCAgEA="
                            }
                          ],
                          "binding": 8589934595
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cm9vdA=="
                            }
                          ],
                          "binding": 8589934599
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0026\u0026\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "kICAgEA="
                            }
                          ],
                          "binding": 8589934598
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934601
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "sid",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "shell",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "authorizedkeys",
                        "function": {
                          "type": "\u001bauthorizedkeys",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bauthorizedkeys.entry",
                          "binding": 12884901895
                        }
                      },
                      {
                        "call": 1,
                        "id": "sshkeys",
                        "function": {
                          "type": "\u0019\u001bprivatekey",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "home",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group",
                        "function": {
                          "type": "\u001bgroup",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgIAB"
                            }
                          ],
                          "binding": 12884901896
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgKAB"
                            }
                          ],
                          "binding": 12884901899
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891,
                      12884901892,
                      12884901893,
                      12884901894,
                      12884901900,
                      12884901897,
                      12884901898,
                      12884901901
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bauthorizedkeys.entry"
                        }
                      },
                      {
                        "call": 1,
                        "id": "key",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      17179869186
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 21474836481
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 21474836481
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      21474836482,
                      21474836483
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "n8sUXWCd2etesWla5roLsCSWJsECrQV9HE2oOnf3zF/BZQefFn92Qe9CqwqrRor0lmbhDht9bLOP0XzHd41t5A==",
                  "12884901890": "0wfrDILUo7ULv7WPxaaf7a3Urg17rvBTe9lBD4NqqLUrFaXhgdmjV0zsNWl0hM/eq1ewOgXRVHI0eHfnnTR9xA==",
                  "12884901891": "mvX66NV1wB8ycQHbP2mPLkn5fD4LobE7cm5YzIZwgkJyFzVcSznH4CEgY/WNb9m/DBwIKEiGstKQNdTQ4Wpbcw==",
                  "12884901892": "9RTJqN28Iz35UKjYJgzyuXomAQgFIn7GKqQ5Pp1DTu+ydzZMRNbaThkLhmvoz1YD1TIk19nfIp/zj2fRmLdS1g==",
                  "12884901893": "2iAsOVsB94Tv3G0kaNgiyLF4E6RCuxypotuI1gWpaiuQin1V3Ac+gnNeMc74hajs+UCnnTXaf5hkIroiU7yr1g==",
                  "12884901894": "b9DOnVS8epqSXr2+KABhWcxJE5+n6H3SRRcxhVd7BV55Po42JNI9HGG3SBYPu5ubbaUk8gRkxsIp7qUyd62nJA==",
                  "12884901895": "XThnB+M/rIO50kyDHEBV1jGhn9UQB7QWxW621cDGPf+1s7X0EM29r/Jz3mBDkgV9LxS9E7p8ahIoyzzpXqEzAA==",
                  "12884901896": "cTOLh1dsull4cR+PFVEVJ3dupIbFjeceoY041XYVV94KtyYm1Jl+yTe1GAaDithnbD4FuuuLM9RWi24j4IKztQ==",
                  "12884901897": "KDEanckG1ybs+sqUfFk4xIUUxBZzHzmezScePUNIB+CHs6uxdAywYkNBR5mMN5kagSk4iw6ukquMkPbrzmav/g==",
                  "12884901898": "EtNwZ3aNrdU7nMiimuC6jslkPHl3T6fd2hEXgcApOs6HaoboaZPophzmmdJegofeYnrG+1zSly4l6eZa9PdQBA==",
                  "12884901899": "ia9hqwkOqtITs7yLSHdDuHALCFTookHpac1o+JdHq5GNJL51MNp0tn13Hsav0VgNuLu8HyMTLcxA2sUZDsybJg==",
                  "12884901900": "rwynLnol9bb2quHG2fOXAxqkeFnUDSA4nsZo5wPVKsYZVUJaig4lafqd08Uw6JgPvET+eDDTS5g1h30DPdATNg==",
                  "12884901901": "wAWhxvS3AiZ07gMV7jadikOeaj9r4tfJoTXuCflHSQ0A0+Xy2TGZGTSnqzpx2W6gC6w72Y8hYPimRn9G54Sx6Q==",
                  "17179869185": "cTOLh1dsull4cR+PFVEVJ3dupIbFjeceoY041XYVV94KtyYm1Jl+yTe1GAaDithnbD4FuuuLM9RWi24j4IKztQ==",
                  "17179869186": "FfUIxO+OZVFw5jYNW07QKiavkx170D13F6NkX09Hq1DG1/c0BLtl4v5zavGQjB62RNkaZjNotK/Xbzqy+XuL+w==",
                  "21474836481": "ia9hqwkOqtITs7yLSHdDuHALCFTookHpac1o+JdHq5GNJL51MNp0tn13Hsav0VgNuLu8HyMTLcxA2sUZDsybJg==",
                  "21474836482": "MrUYi385z4TlzXZeqKpmtGCeTlu5ACckPRvNhujQCfCaEFVw8bK5PF4Lic9BeLRHHRGwtbxNWhGZ9HOy+25uqw==",
                  "21474836483": "gTLRBtPlRJDmcSzAR3gDeZRA6KF8wAm4A7heeN/jsoa11LeLFsXwKtn3w7U9joykz1m8G6w1UhnofSsKgMSY6Q==",
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "rM2kMZPs61LV7aC8D/3hMCR6KyV2P5uHAZ/xmfedhaD25wqYa2PLXy2XrP4nBDhN4nqyeu0TL8YjLanRZ1WJOw==",
                  "4294967300": "n8sUXWCd2etesWla5roLsCSWJsECrQV9HE2oOnf3zF/BZQefFn92Qe9CqwqrRor0lmbhDht9bLOP0XzHd41t5A==",
                  "4294967301": "PtunGFObCqSZRTCGP7b3oq6W69r5SfxHvJ9xQhO4bCUu/fK6KMIIo9ur5/0WhLQ6+ZEMhdlHhyz9DsP805sDnQ==",
                  "8589934593": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "8589934594": "a0S8nVcdBAExFGlISTMxYIPde1NktCpxiUw//pxmEJbs49vhf9jVLtExTX7aDvdL5cEJIj6JcbDMFBUy58B18Q==",
                  "8589934595": "/DpuDQiYABXdC7RbBD2aKJ2UWaJYDwtq7/RyidAHQwDgBZ5lxiSE2ZRHFe6eUtEYfAeCnCIuF6Kg888X1zJhHg==",
                  "8589934596": "6pYdWM3k7GoUYAIbVLIrQo0uS1l3gJF8CPYy1tFkNDESXbpL5tY4haNqySPElbBIg3jLNfwzHCo7JpoVdTiP6A==",
                  "8589934597": "AeTu+MEwByv5A8v/phn+XQ31vRp2E/OJI+t8gs9I4qTVaZZkjE8sMpYYDyUPNP+R52EYbrKT/Lm+y4wBnkRdzw==",
                  "8589934598": "W2fGLHq9utq+AWCj9dQR6HBaVOwb5LYwvYa6Qrr8VFdpYGPPV7cYNIn3ljaLAhDI9t5CZYV7p0k3ZA5+whpj8w==",
                  "8589934599": "aLOs60Bp+9XAh+qeKj3wkHCOG2MJ1sctbsELR4mqoTDIaWwIL8mpSwMxgZw73uVkh6FiV12I/8sT9UJdyIvNXA==",
                  "8589934600": "vvgloGIoYrYP+6zMENGl8naDUGgxiHuxNKTWFvP4CAtNC98XRYHVZwBFkf0Kulm1oV45RlVHm1oTT2GOhpzYFw==",
                  "8589934601": "a3+OOKkces9sJJ2s7Edsug/E0UG5jNtIfsXfgAySxu/U8FXaRD7zMmNSDVDLcDOmaofIlbq+cre0YwyNm+wxRA=="
                }
              },
              "source": "users.where(shell != \"/sbin/nologin\" \u0026\u0026 uid \u003e= 1000 \u0026\u0026 name != \"root\") { name sid uid gid shell authorizedkeys.list sshkeys home group }",
              "labels": {
                "labels": {
                  "0wfrDILUo7ULv7WPxaaf7a3Urg17rvBTe9lBD4NqqLUrFaXhgdmjV0zsNWl0hM/eq1ewOgXRVHI0eHfnnTR9xA==": "name",
                  "2iAsOVsB94Tv3G0kaNgiyLF4E6RCuxypotuI1gWpaiuQin1V3Ac+gnNeMc74hajs+UCnnTXaf5hkIroiU7yr1g==": "gid",
                  "9RTJqN28Iz35UKjYJgzyuXomAQgFIn7GKqQ5Pp1DTu+ydzZMRNbaThkLhmvoz1YD1TIk19nfIp/zj2fRmLdS1g==": "uid",
                  "EtNwZ3aNrdU7nMiimuC6jslkPHl3T6fd2hEXgcApOs6HaoboaZPophzmmdJegofeYnrG+1zSly4l6eZa9PdQBA==": "home",
                  "FfUIxO+OZVFw5jYNW07QKiavkx170D13F6NkX09Hq1DG1/c0BLtl4v5zavGQjB62RNkaZjNotK/Xbzqy+XuL+w==": "key",
                  "KDEanckG1ybs+sqUfFk4xIUUxBZzHzmezScePUNIB+CHs6uxdAywYkNBR5mMN5kagSk4iw6ukquMkPbrzmav/g==": "sshkeys",
                  "MrUYi385z4TlzXZeqKpmtGCeTlu5ACckPRvNhujQCfCaEFVw8bK5PF4Lic9BeLRHHRGwtbxNWhGZ9HOy+25uqw==": "name",
                  "PtunGFObCqSZRTCGP7b3oq6W69r5SfxHvJ9xQhO4bCUu/fK6KMIIo9ur5/0WhLQ6+ZEMhdlHhyz9DsP805sDnQ==": "users.where.list",
                  "a3+OOKkces9sJJ2s7Edsug/E0UG5jNtIfsXfgAySxu/U8FXaRD7zMmNSDVDLcDOmaofIlbq+cre0YwyNm+wxRA==": "shell != \"/sbin/nologin\" \u0026\u0026 \u003cref\u003e \u0026\u0026 \u003cref\u003e",
                  "b9DOnVS8epqSXr2+KABhWcxJE5+n6H3SRRcxhVd7BV55Po42JNI9HGG3SBYPu5ubbaUk8gRkxsIp7qUyd62nJA==": "shell",
                  "gTLRBtPlRJDmcSzAR3gDeZRA6KF8wAm4A7heeN/jsoa11LeLFsXwKtn3w7U9joykz1m8G6w1UhnofSsKgMSY6Q==": "gid",
                  "mvX66NV1wB8ycQHbP2mPLkn5fD4LobE7cm5YzIZwgkJyFzVcSznH4CEgY/WNb9m/DBwIKEiGstKQNdTQ4Wpbcw==": "sid",
                  "rwynLnol9bb2quHG2fOXAxqkeFnUDSA4nsZo5wPVKsYZVUJaig4lafqd08Uw6JgPvET+eDDTS5g1h30DPdATNg==": "authorizedkeys.list",
                  "wAWhxvS3AiZ07gMV7jadikOeaj9r4tfJoTXuCflHSQ0A0+Xy2TGZGTSnqzpx2W6gC6w72Y8hYPimRn9G54Sx6Q==": "group"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "rwynLnol9bb2quHG2fOXAxqkeFnUDSA4nsZo5wPVKsYZVUJaig4lafqd08Uw6JgPvET+eDDTS5g1h30DPdATNg==": 17179869184,
                "wAWhxvS3AiZ07gMV7jadikOeaj9r4tfJoTXuCflHSQ0A0+Xy2TGZGTSnqzpx2W6gC6w72Y8hYPimRn9G54Sx6Q==": 21474836480
              }
            }
          },
          "OFWIXTzBv00=": {
            "query": "file(\"/etc/passwd\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
            "checksum": "wDCwyiaJOSM=",
            "datapoints": [
              "S0pi0XR2kSuGxhNT7T1roRClJpvyWDf2tbqf4WiaICdLeN4J+5clf8CQzREt32vqpf9puBNedCGXo27OvRaflw=="
            ],
            "code": {
              "code_v2": {
                "id": "OFWIXTzBv00=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9wYXNzd2Q="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934594
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934595
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934597
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934598
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934600
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934601
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934603
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934604
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934606
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934607
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934596,
                      8589934599,
                      8589934602,
                      8589934605,
                      8589934608
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "hq+8nsUopPSslTPhFkeaeHt7+iJ10UZfLgRGGqdk+679fZInWSr6Q1bqqAGolAfLW/FtZTd+/aRsWXztkoWmUQ==",
                  "4294967298": "S0pi0XR2kSuGxhNT7T1roRClJpvyWDf2tbqf4WiaICdLeN4J+5clf8CQzREt32vqpf9puBNedCGXo27OvRaflw==",
                  "8589934593": "hq+8nsUopPSslTPhFkeaeHt7+iJ10UZfLgRGGqdk+679fZInWSr6Q1bqqAGolAfLW/FtZTd+/aRsWXztkoWmUQ==",
                  "8589934594": "WIARMVbtYMZ5/c9wb94Mpf5np7WqFBrhsIscnWYSYp9p2ShGbdOy8euKQZ9IfOrMvPX1Pitzlh5r5y751h7eLQ==",
                  "8589934595": "9+k2WMrjUGFKc4TT/BqUCTlPxo0nlnfRX3SNKxHDpY+Sqs85Ipfher9fceWMNXNIcut4pyRyqKtplA+AMPJh4g==",
                  "8589934596": "Cf2l7PDCC2h4yANCi73Lfy11aKE3EhXk69X/5E5ZqfCWgej1s8VN4FAAK7e55EZi8veCvNOIMSUcT7DOMsp0Dg==",
                  "8589934597": "WIARMVbtYMZ5/c9wb94Mpf5np7WqFBrhsIscnWYSYp9p2ShGbdOy8euKQZ9IfOrMvPX1Pitzlh5r5y751h7eLQ==",
                  "8589934598": "vQXtIxqdVDvdDbBU7IRWaKOsxsRWrwwSiJLxCTqsVquFJM+8wg03xZ40qrl/vhSRdXtvgBiPoCZ50cF17zG3Yg==",
                  "8589934599": "X7psqDI09AB+V2NjUgsb9EfD6mkz7QxYph6eCCG9Ccf6QcWdm3Kgn9d8pwi5cZFpRM7BjmoGISDutHNpXnz7wQ==",
                  "8589934600": "WIARMVbtYMZ5/c9wb94Mpf5np7WqFBrhsIscnWYSYp9p2ShGbdOy8euKQZ9IfOrMvPX1Pitzlh5r5y751h7eLQ==",
                  "8589934601": "UCVqFEw9trC5EMnTDMvNexUJh0zNrwonPE3dEmGXRa5pa/M74eTsT6leC1JQ5WRjhr9XhkchRNAq8o+T1jPRKA==",
                  "8589934602": "vkTIPy/xlXHkOXH+XuQujtNwKsPEx+wLDiTq8bfvYjpNAYqachWVVWOiAPkmw/3zZA3CyDbY8az0wL291URTDA==",
                  "8589934603": "WIARMVbtYMZ5/c9wb94Mpf5np7WqFBrhsIscnWYSYp9p2ShGbdOy8euKQZ9IfOrMvPX1Pitzlh5r5y751h7eLQ==",
                  "8589934604": "H2XtGja1ecK5KMQSPh/hk4fzt0a8dZWX28ZYjOSSUpMcd93pkCPVjuDmSCSXNCPWqj9m6C6WAJuxRiiJsxFW9w==",
                  "8589934605": "osNGhRH+o4glAV1iiPZSi+JDPrQfbzWrzkjU0CUaP0nCQE/DLK/1Ndc11iw2OOeOrBP/npXLSypVS4KKcHEgLA==",
                  "8589934606": "WIARMVbtYMZ5/c9wb94Mpf5np7WqFBrhsIscnWYSYp9p2ShGbdOy8euKQZ9IfOrMvPX1Pitzlh5r5y751h7eLQ==",
                  "8589934607": "uep5srE90hzklyJ1J2MrT0tCrcJLG8f8ZuHXXopNx+s2eNlVm3eLyMbi5A3mnatMeGyfb9R0ssqB7aS51/RTwg==",
                  "8589934608": "vvwHpgwmhqZdnvo/P/PE8hClY21iJZJsnplXbz+WkLfruLlzjzZSpVrSxBvTDcEloRTzniNLhraMi4xo+tZNkQ=="
                }
              },
              "source": "file(\"/etc/passwd\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
              "labels": {
                "labels": {
                  "Cf2l7PDCC2h4yANCi73Lfy11aKE3EhXk69X/5E5ZqfCWgej1s8VN4FAAK7e55EZi8veCvNOIMSUcT7DOMsp0Dg==": "permissions.user_executable == false",
                  "S0pi0XR2kSuGxhNT7T1roRClJpvyWDf2tbqf4WiaICdLeN4J+5clf8CQzREt32vqpf9puBNedCGXo27OvRaflw==": "file",
                  "X7psqDI09AB+V2NjUgsb9EfD6mkz7QxYph6eCCG9Ccf6QcWdm3Kgn9d8pwi5cZFpRM7BjmoGISDutHNpXnz7wQ==": "permissions.group_writeable == false",
                  "osNGhRH+o4glAV1iiPZSi+JDPrQfbzWrzkjU0CUaP0nCQE/DLK/1Ndc11iw2OOeOrBP/npXLSypVS4KKcHEgLA==": "permissions.other_writeable == false",
                  "vkTIPy/xlXHkOXH+XuQujtNwKsPEx+wLDiTq8bfvYjpNAYqachWVVWOiAPkmw/3zZA3CyDbY8az0wL291URTDA==": "permissions.group_executable == false",
                  "vvwHpgwmhqZdnvo/P/PE8hClY21iJZJsnplXbz+WkLfruLlzjzZSpVrSxBvTDcEloRTzniNLhraMi4xo+tZNkQ==": "permissions.other_executable == false"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "QS1431IjXdM=": {
            "query": "users.contains(sshkeys != empty)",
            "checksum": "AueQXnq2gZs=",
            "datapoints": [
              "9YkvN1Tog2VFrCsfbkt7WCb0Uju/0Co8g3qlC724FFJbejgL1VpD8EXWg+hZHbNePFOUaSB4gsH8n7Xk3qNSeg==",
              "ANVso+zEuxoUfM2V+LC0ZsKhhuGV4NkxnwM6tBChYQtESc1xymFyRH96dzy0qaEl+n0a6iFsEihCwlxIU+4d3g=="
            ],
            "code": {
              "code_v2": {
                "id": "QS1431IjXdM=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001busers",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "length",
                        "function": {
                          "type": "\u0005",
                          "binding": 4294967300
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u003e\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "AA=="
                            }
                          ],
                          "binding": 4294967301
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967302
                    ],
                    "datapoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "sshkeys",
                        "function": {
                          "type": "\u0019\u001bprivatekey",
                          "binding": 8589934593
                        }
                      },
                      {
                        "primitive": {
                          "type": "\r"
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\r",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hoCAgEA="
                            }
                          ],
                          "binding": 8589934594
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934596
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "K1JrbYBTWTjIC6IZ1cbvaKXUQmzQcf3I3lAOyc5OQFsnyVJku+UWZ+MKHlStoNX72M5PyogMmCU3Y18oeXnATg==",
                  "4294967300": "PdrR14MqhlO4IhGfId31HtzQQSLM9fhpcwfVAXZogMvS/DyMRYzsaBbhSGAZMCUkMUurIUVmU3XRFlynQjKiIQ==",
                  "4294967301": "9YkvN1Tog2VFrCsfbkt7WCb0Uju/0Co8g3qlC724FFJbejgL1VpD8EXWg+hZHbNePFOUaSB4gsH8n7Xk3qNSeg==",
                  "4294967302": "ANVso+zEuxoUfM2V+LC0ZsKhhuGV4NkxnwM6tBChYQtESc1xymFyRH96dzy0qaEl+n0a6iFsEihCwlxIU+4d3g==",
                  "8589934593": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "8589934594": "pVscfc0dTi48lFFlfTJOrBIPDN3ir6760l4O+X9lZ/e9MjGiZP3LEUoOAnejWaQwhyAl8mz9upCmuYMqEVH0Rw==",
                  "8589934595": "OmQHeP8iu2hHspjQMG3tNnggEq4g+2MM4mp1qMPRZTKDsjDqYILqFSuK8+chgflQK+qFv0Zr9VsvS5h/D3uDUg==",
                  "8589934596": "qum9tJ9VkZ3rn7Fho21JU2aDtP1G9JJMuF968MAD29sPYflmh5NqQkD0GTLMlfrQLFmeVw3a/OUMlUViqahlLA=="
                }
              },
              "source": "users.contains(sshkeys != empty)",
              "labels": {
                "labels": {
                  "9YkvN1Tog2VFrCsfbkt7WCb0Uju/0Co8g3qlC724FFJbejgL1VpD8EXWg+hZHbNePFOUaSB4gsH8n7Xk3qNSeg==": "users.where.list.length",
                  "ANVso+zEuxoUfM2V+LC0ZsKhhuGV4NkxnwM6tBChYQtESc1xymFyRH96dzy0qaEl+n0a6iFsEihCwlxIU+4d3g==": "users.contains()",
                  "qum9tJ9VkZ3rn7Fho21JU2aDtP1G9JJMuF968MAD29sPYflmh5NqQkD0GTLMlfrQLFmeVw3a/OUMlUViqahlLA==": "sshkeys != \u003cref\u003e"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "RYuR9x9ICNA=": {
            "query": "sshd.config.file.path",
            "checksum": "na80eKa1ChM=",
            "datapoints": [
              "k6rlXoYpV48Qd19gKeNl+/IiPnkI5VNQBiqZBca3gDKsIRiLcpXQUlDv52x9sscIWiqOMpC7+x/aBpY0IUq0ww=="
            ],
            "code": {
              "code_v2": {
                "id": "RYuR9x9ICNA=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "sshd.config"
                      },
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "path",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "h1EPuzo5A02wYUOeDzbzv9YfwPO5Km0r1tmJ0UOceHGyO+M2vrEpnF3/XVJu0hOtyAITe0M4O6XOjLOTc8i8lA==",
                  "4294967298": "CmKJ8g0o028gCD5jdopFJaD+gA+5w1K1D6BU4sB9zxjUdRM8CIKVlQnYDhVsTrW2I2IDHHk2c3t3ekae5qVckQ==",
                  "4294967299": "k6rlXoYpV48Qd19gKeNl+/IiPnkI5VNQBiqZBca3gDKsIRiLcpXQUlDv52x9sscIWiqOMpC7+x/aBpY0IUq0ww=="
                }
              },
              "source": "sshd.config.file.path",
              "labels": {
                "labels": {
                  "k6rlXoYpV48Qd19gKeNl+/IiPnkI5VNQBiqZBca3gDKsIRiLcpXQUlDv52x9sscIWiqOMpC7+x/aBpY0IUq0ww==": "sshd.config.file.path"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "SHeBTCW066c=": {
            "query": "ports.listening.contains(\n  address != \"127.0.0.1\" \u0026\u0026\n  address != \"[::1]\" \u0026\u0026\n  address != \"[::ffff:127.0.0.1]\"\n)\n",
            "checksum": "BEdOwU3h16g=",
            "datapoints": [
              "j3I61cJvMNTVhZ14xpxulHfTgqmTJOWxgoAl0zGo9Osrk2b8p9ZxD+rugv2N7Hs34dVi1hb+m+7R4F4g+FyC5Q==",
              "7j2j9tDKzkFhSbsr8SPpFRpuOv8WV66N7eN5pH1HVUQ6fmFTHoPEqtgETb4LzUuiNl8TFBn4DxX2sciznRYxjw=="
            ],
            "code": {
              "code_v2": {
                "id": "SHeBTCW066c=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "ports"
                      },
                      {
                        "call": 1,
                        "id": "listening",
                        "function": {
                          "type": "\u0019\u001bport",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u0019\u001bport",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "length",
                        "function": {
                          "type": "\u0005",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u003e\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "AA=="
                            }
                          ],
                          "binding": 4294967300
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967301
                    ],
                    "datapoints": [
                      4294967300
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bport"
                        }
                      },
                      {
                        "call": 1,
                        "id": "address",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "MTI3LjAuMC4x"
                            }
                          ],
                          "binding": 8589934594
                        }
                      },
                      {
                        "call": 1,
                        "id": "address",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Wzo6MV0="
                            }
                          ],
                          "binding": 8589934596
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0026\u0026\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "ioCAgEA="
                            }
                          ],
                          "binding": 8589934595
                        }
                      },
                      {
                        "call": 1,
                        "id": "address",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Wzo6ZmZmZjoxMjcuMC4wLjFd"
                            }
                          ],
                          "binding": 8589934599
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0026\u0026\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "kICAgEA="
                            }
                          ],
                          "binding": 8589934598
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934601
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "Vfq5vte7qhOfYf1zy9WrWPwSCtuiY8zDca2nLbV/SbCZ+r5fVGueGaPxKrozedN6A37lSS64oAd2NSMlrq74kw==",
                  "4294967298": "a4Bo3f8wF744khmfZ/M4JnoQ5zHAHmMGmtuU3Rtcp1khwrObID5Y1Nth0CPi24yAXBbXrBlCWTNTu6UMhpQ+kA==",
                  "4294967299": "iY3wXrGX1PADY6x5+KLl1Lo/qqnPwiVLriByrxTS7RYNKNLKf1jrBUOYcx1CZa33AtZzS6PC76sC3qVP9cQNJg==",
                  "4294967300": "j3I61cJvMNTVhZ14xpxulHfTgqmTJOWxgoAl0zGo9Osrk2b8p9ZxD+rugv2N7Hs34dVi1hb+m+7R4F4g+FyC5Q==",
                  "4294967301": "7j2j9tDKzkFhSbsr8SPpFRpuOv8WV66N7eN5pH1HVUQ6fmFTHoPEqtgETb4LzUuiNl8TFBn4DxX2sciznRYxjw==",
                  "8589934593": "a4Bo3f8wF744khmfZ/M4JnoQ5zHAHmMGmtuU3Rtcp1khwrObID5Y1Nth0CPi24yAXBbXrBlCWTNTu6UMhpQ+kA==",
                  "8589934594": "QHmfoC7fWove4JnUoR5KrzhwsSJ4hwLh77HU392loObTQ7xRKNchdgtyvoq9/xnoZPK3aiYRkGdS8ZllBk8jOg==",
                  "8589934595": "QabigtfXtlmFEDXjfuebPSd0F8hwv0Lsvs23bDe0GFonfwMHpvCJfNoaXTnyqSX8v+tOIP1XfNcuhaBQxU6yug==",
                  "8589934596": "QHmfoC7fWove4JnUoR5KrzhwsSJ4hwLh77HU392loObTQ7xRKNchdgtyvoq9/xnoZPK3aiYRkGdS8ZllBk8jOg==",
                  "8589934597": "jYpWeZEazbrS9IG1S9GcO1WbPYG6d7WIHu1gbojgiZeSeNH6/WdoiZeWPAYVxaBEhU6l8CKBlBynvKzWdUoJ3g==",
                  "8589934598": "w4DLiD4amnX/TVcb0nTKLkKYrFpEQpKUmUTYr0ib4ZR6JR+r1YtqJMqzPIrpEBX81Tds5iM/K9m0HqLqQH2gKg==",
                  "8589934599": "QHmfoC7fWove4JnUoR5KrzhwsSJ4hwLh77HU392loObTQ7xRKNchdgtyvoq9/xnoZPK3aiYRkGdS8ZllBk8jOg==",
                  "8589934600": "uWx35viFvQYiHRqW1VdTmYnlzk5fQJqDseVbl0enep05YuMWsphCxjp6PHOTWJMuwSv8lrOnksBqAnYh2vR+Yg==",
                  "8589934601": "XDc/NVw1Z7mhMQDh4fwobAsNUtOtC6JKDA35ZHu1HZlzOSEONfhF95E7be/AXhqgHQ14MEH58qRQDyGCOwdx5g=="
                }
              },
              "source": "ports.listening.contains(\n  address != \"127.0.0.1\" \u0026\u0026\n  address != \"[::1]\" \u0026\u0026\n  address != \"[::ffff:127.0.0.1]\"\n)\n",
              "labels": {
                "labels": {
                  "7j2j9tDKzkFhSbsr8SPpFRpuOv8WV66N7eN5pH1HVUQ6fmFTHoPEqtgETb4LzUuiNl8TFBn4DxX2sciznRYxjw==": "[].contains()",
                  "XDc/NVw1Z7mhMQDh4fwobAsNUtOtC6JKDA35ZHu1HZlzOSEONfhF95E7be/AXhqgHQ14MEH58qRQDyGCOwdx5g==": "address != \"127.0.0.1\" \u0026\u0026 \u003cref\u003e \u0026\u0026 \u003cref\u003e",
                  "j3I61cJvMNTVhZ14xpxulHfTgqmTJOWxgoAl0zGo9Osrk2b8p9ZxD+rugv2N7Hs34dVi1hb+m+7R4F4g+FyC5Q==": "ports.listening.where.length"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "TtjnwMN2RWY=": {
            "query": "npm.packages { name version purl }",
            "checksum": "qzqkpu4KZCE=",
            "datapoints": [
              "TBJjOKtZT1BQwIMS0l5Z3hbtRx/A8zOmfy1HsmroznS1SMQupwq0ed8VXfh9zIlQEH8MmsCiM5EXkWhvHU/v5w=="
            ],
            "code": {
              "code_v2": {
                "id": "TtjnwMN2RWY=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "npm.packages"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bnpm.package",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bnpm.package"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "purl",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "i0G6uSb2MuOeRDhOZwFR07MoGeUlGLdMFNeGbb+b6AoWjMB6p45vRmoUj3ryfLNJHYuC06+b+yFYAln4db6zOQ==",
                  "4294967298": "bRENZ9+nBj9ZxwgKy4/PVrfHgSHum7fD8LW22soRBMXR2U1shAr5K8LQTdEFrgTd0g/zdDMJmvlGTzcpmcsnng==",
                  "4294967299": "TBJjOKtZT1BQwIMS0l5Z3hbtRx/A8zOmfy1HsmroznS1SMQupwq0ed8VXfh9zIlQEH8MmsCiM5EXkWhvHU/v5w==",
                  "8589934593": "bRENZ9+nBj9ZxwgKy4/PVrfHgSHum7fD8LW22soRBMXR2U1shAr5K8LQTdEFrgTd0g/zdDMJmvlGTzcpmcsnng==",
                  "8589934594": "7ia2MxnXQOPh4tTn8DAFjV5HtMKsUX1g9Z44Z7WfFXtnZpLysoV2y6k4Gx8tLz7zK3LqWcmbd0CBNOYILXNuTQ==",
                  "8589934595": "tSLf8Of05+tH5FVfs5rxQih8p+ky1fW9RANZW03E81ClsFYdnChiU7s9GX4KuG3rAwlmPG3GhHLMAua310j4Hg==",
                  "8589934596": "kUrgIYIN+TRylLKR6bAWep6039pAUUF2vVVOXUopQWuDv7Yi4Q3Ey5EP2O4G0hSjJSjdOYLKNHpY0OSvQVyI5w=="
                }
              },
              "source": "npm.packages { name version purl }",
              "labels": {
                "labels": {
                  "7ia2MxnXQOPh4tTn8DAFjV5HtMKsUX1g9Z44Z7WfFXtnZpLysoV2y6k4Gx8tLz7zK3LqWcmbd0CBNOYILXNuTQ==": "name",
                  "TBJjOKtZT1BQwIMS0l5Z3hbtRx/A8zOmfy1HsmroznS1SMQupwq0ed8VXfh9zIlQEH8MmsCiM5EXkWhvHU/v5w==": "npm.packages.list",
                  "kUrgIYIN+TRylLKR6bAWep6039pAUUF2vVVOXUopQWuDv7Yi4Q3Ey5EP2O4G0hSjJSjdOYLKNHpY0OSvQVyI5w==": "purl",
                  "tSLf8Of05+tH5FVfs5rxQih8p+ky1fW9RANZW03E81ClsFYdnChiU7s9GX4KuG3rAwlmPG3GhHLMAua310j4Hg==": "version"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "latest"
            }
          },
          "VDW0zuKNTNA=": {
            "query": "command('w -h').stdout",
            "checksum": "0/2JecOBwZg=",
            "datapoints": [
              "f6zruMb0IvG6WXtG+K5yuHnlZWNaDvVxwhETUa3C31JKY/uN/FTNwIRm3mU8VTUy2cL4BfTenisUBBbzXBThzQ=="
            ],
            "code": {
              "code_v2": {
                "id": "VDW0zuKNTNA=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "command",
                        "function": {
                          "type": "\u001bcommand",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Y29tbWFuZA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "dyAtaA=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "stdout",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "gaNtnIuYZVDZGul1XUiq3H5PsNiYklhceQQRttdHikpf7Wb8vjzxQ3WYZrRb25Diq5uBRkp6AIoetDtXp/ldFA==",
                  "4294967298": "f6zruMb0IvG6WXtG+K5yuHnlZWNaDvVxwhETUa3C31JKY/uN/FTNwIRm3mU8VTUy2cL4BfTenisUBBbzXBThzQ=="
                }
              },
              "source": "command('w -h').stdout",
              "labels": {
                "labels": {
                  "f6zruMb0IvG6WXtG+K5yuHnlZWNaDvVxwhETUa3C31JKY/uN/FTNwIRm3mU8VTUy2cL4BfTenisUBBbzXBThzQ==": "command.stdout"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "WIu9j8nCbRo=": {
            "query": "python.packages { name version purl }",
            "checksum": "qmVbyCdHzAw=",
            "datapoints": [
              "oRvSYIoFygbNmc7Hg3IaXhHOt4EwyTTzarxgx0Sp6y+Zho2hbs2qyZYrPAyFsuemLy6Uk+CQ+aXY4xM9UzS4xA=="
            ],
            "code": {
              "code_v2": {
                "id": "WIu9j8nCbRo=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "python"
                      },
                      {
                        "call": 1,
                        "id": "packages",
                        "function": {
                          "type": "\u0019\u001bpython.package",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bpython.package"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "purl",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "te01jKwmu8cS3nCtgDf+2X0utoRhdHJhHRxYO/Zg5RtLVnbZJN6xGvnYMZM79xRgqEFQZ5p+Yz+2/h5q3a6bQw==",
                  "4294967298": "CI8+FzH+dJD6tZfpWRZwMUnB9FxeGrhJDq9yFt75D/IaYm2rtCYZqXYrtn9ShcFfzkjN/PeweUGYew2G1nZMuA==",
                  "4294967299": "oRvSYIoFygbNmc7Hg3IaXhHOt4EwyTTzarxgx0Sp6y+Zho2hbs2qyZYrPAyFsuemLy6Uk+CQ+aXY4xM9UzS4xA==",
                  "8589934593": "CI8+FzH+dJD6tZfpWRZwMUnB9FxeGrhJDq9yFt75D/IaYm2rtCYZqXYrtn9ShcFfzkjN/PeweUGYew2G1nZMuA==",
                  "8589934594": "/EFHY8UF+i++ytk4q3LIL9AhdveHx9GHO2ZfXekgIUdo8XkQfvzc8AEOFOiQmoOrp+QXOvw20JrgCLIXqeda8A==",
                  "8589934595": "LPTAFyPqS+zakgaiLr5I9c219wLPXqNuAfQwjopfnJPGVq86TuqZTxT9QXDwJ45bi+aK/skQz1aIGK0+1+QnLA==",
                  "8589934596": "Syhn/eETOlXeRidpWPjD2altpc/OFV/LPWXh40K7HL8wMckZMGENLUKNU3gOm2xLtDJ4v+hL56gHEBE0sKlheA=="
                }
              },
              "source": "python.packages { name version purl }",
              "labels": {
                "labels": {
                  "/EFHY8UF+i++ytk4q3LIL9AhdveHx9GHO2ZfXekgIUdo8XkQfvzc8AEOFOiQmoOrp+QXOvw20JrgCLIXqeda8A==": "name",
                  "LPTAFyPqS+zakgaiLr5I9c219wLPXqNuAfQwjopfnJPGVq86TuqZTxT9QXDwJ45bi+aK/skQz1aIGK0+1+QnLA==": "version",
                  "Syhn/eETOlXeRidpWPjD2altpc/OFV/LPWXh40K7HL8wMckZMGENLUKNU3gOm2xLtDJ4v+hL56gHEBE0sKlheA==": "purl",
                  "oRvSYIoFygbNmc7Hg3IaXhHOt4EwyTTzarxgx0Sp6y+Zho2hbs2qyZYrPAyFsuemLy6Uk+CQ+aXY4xM9UzS4xA==": "python.packages"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "latest"
            }
          },
          "Weu8LLZyY6g=": {
            "query": "groups.where(name == \"root\").all(members == empty || members.all(name == 'root'))\n",
            "checksum": "caP1T/EfYKA=",
            "datapoints": [
              "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA==",
              "zkQO5VqK4KADLajxTmptIOrP5ngwLGNY+FhS/h9qIJdZBxBNQwFoT0xZZgHBU5r9Lq9PuMOnhzb9PdGhVvha+w=="
            ],
            "code": {
              "code_v2": {
                "id": "Weu8LLZyY6g=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "groups"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001bgroups",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "$whereNot",
                        "function": {
                          "type": "\u001bgroups",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "iICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967301
                        }
                      },
                      {
                        "call": 1,
                        "id": "$all",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967302
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgKAB"
                            }
                          ],
                          "binding": 4294967302
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967303
                    ],
                    "datapoints": [
                      4294967304
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cm9vdA=="
                            }
                          ],
                          "binding": 8589934594
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934595
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "members",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 12884901889
                        }
                      },
                      {
                        "primitive": {
                          "type": "\r"
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\r",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hoCAgGA="
                            }
                          ],
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "members",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "$whereNot",
                        "function": {
                          "type": "\u0019\u001buser",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "ioCAgGA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgIAB"
                            }
                          ],
                          "binding": 12884901893
                        }
                      },
                      {
                        "call": 1,
                        "id": "$all",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901894
                        }
                      },
                      {
                        "call": 1,
                        "id": "||\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "joCAgGA="
                            }
                          ],
                          "binding": 12884901892
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901896
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cm9vdA=="
                            }
                          ],
                          "binding": 17179869186
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      17179869187
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 21474836481
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 21474836481
                        }
                      },
                      {
                        "call": 1,
                        "id": "members",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 21474836481
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      21474836482,
                      21474836483,
                      21474836484
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "JOlDtj9le5/HG/IkV1yElHXl3usN9A43NfYSknycSKTd6q55qVMDamhX3Vq9xjqnW46DOu/bddYRsaO9zAAw6w==",
                  "12884901890": "jMYtmDHl/3t63m3OW4lDt+vmWhljCBUiybBebY64ttqNNpKBCMGeMCd/K03vzFf/bTcgUoR4nj71NKwiEoi9fg==",
                  "12884901891": "OmQHeP8iu2hHspjQMG3tNnggEq4g+2MM4mp1qMPRZTKDsjDqYILqFSuK8+chgflQK+qFv0Zr9VsvS5h/D3uDUg==",
                  "12884901892": "WxVv7uA2h1nSFaCXkDNfnpGyyx+I7rUTDm+9V8+La3DtMykOzDsorYPxj9AAPGrej3+HC59YZICQRhdIP0JoLw==",
                  "12884901893": "jMYtmDHl/3t63m3OW4lDt+vmWhljCBUiybBebY64ttqNNpKBCMGeMCd/K03vzFf/bTcgUoR4nj71NKwiEoi9fg==",
                  "12884901894": "dgnM3PUsZ+Wm4EH2bJ+IqPXPmdz9GR+g2GSMNsgzE3lzOxYsNUbwDhj5RpT1n04FJ06EJ2uYfAfoOpkGkbgnfQ==",
                  "12884901895": "4F5VRszYohLTlUqorjlIGP2Pfc4RQPEsfdnVvaP9TPp6pY/vfiG7wVBBeZ4NRSgqVuStKL9+v5FWTURsspp06Q==",
                  "12884901896": "qIr5GR04J3NuASFZ89eOac0YleDrQOCGL9wuG+d3S1gsNtIV9nvoGDqv21pDQl/2jD4lZjTIqbG1W3TnhpRFVg==",
                  "17179869185": "jMYtmDHl/3t63m3OW4lDt+vmWhljCBUiybBebY64ttqNNpKBCMGeMCd/K03vzFf/bTcgUoR4nj71NKwiEoi9fg==",
                  "17179869186": "J+skPKNgtU5O3lGMBWI2QUtk8lzrf5DY6yhOteuTaki0c30D5Msi1VzuVvY62sUFryus86w/FZ94xKxP5WtJ6Q==",
                  "17179869187": "NkyupEx+NSKlI652whtNMuh18Buf6V3BQgtF4YrUCpujRvVD3iBDyDb1+otM/UCFF8WVa22VUrvut2yi61Hm1g==",
                  "21474836481": "eYfQfDqB3wJnV4DX3CKcvuQ4PVtkRB5Urb8sTi5ExF1GpTazhQOXHWY60/MGa2VNLCT6gUJOPLQVx2qTmIckkg==",
                  "21474836482": "72KOmiZK+Nj4z6lyl7VsRm0uI4YoLLiiIkd29uSs9IjPt3DY3G+smEQCn03yA2TcgberRL5laYOaQKGIfvi11g==",
                  "21474836483": "VYec7lnXlCvwaL7e7LUKWOHwWUERodKM3IcGKcWD81Xqyvkyi0jSBdkhwQi7DQqS0Ghun/t/Lt65zvQfcZAy5A==",
                  "21474836484": "tUNKJKJCZa0GRdL0POTG7XcEWUjhaUCsxYckpOLXult7salKhM9G5nw8GFjDdcJMkVjj19GE/UerFDBXqtTHSA==",
                  "4294967297": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "4294967298": "NIEHm9kmH9Dzz0fqfrQWcSNNntroglgakmg+r5TZd2szBtUd/n1TukpBYKYy6vBd3w4umvEVa4gPlkHyeldBNw==",
                  "4294967299": "JOlDtj9le5/HG/IkV1yElHXl3usN9A43NfYSknycSKTd6q55qVMDamhX3Vq9xjqnW46DOu/bddYRsaO9zAAw6w==",
                  "4294967300": "JQil8RuEAUqvSThHg+w7lLp6IHWKG19VQDB74rhLqzYNbKDLxabsSunEwp+ANtkx2gmW1/eP2CvKap5wcgV+KQ==",
                  "4294967301": "Os74pu4rUS+PImGWMuUh63Ve2tuVMax61PNj0K7ov7bOfGDOLPvWwwiwiydczpCRZS3BOYFltOeZP8vJkT00jA==",
                  "4294967302": "eYfQfDqB3wJnV4DX3CKcvuQ4PVtkRB5Urb8sTi5ExF1GpTazhQOXHWY60/MGa2VNLCT6gUJOPLQVx2qTmIckkg==",
                  "4294967303": "zkQO5VqK4KADLajxTmptIOrP5ngwLGNY+FhS/h9qIJdZBxBNQwFoT0xZZgHBU5r9Lq9PuMOnhzb9PdGhVvha+w==",
                  "4294967304": "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA==",
                  "8589934593": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "8589934594": "TB+NQaeDBXcImznyzXliCCTj/JeiWkz/CvSKyjTKGsC3tbheYJUt5GRuIrpXw0z5LJMQzj+QJplF1RgaAcrrww==",
                  "8589934595": "9fN32Nz+DU8ehZ1F0R4RwYBh5xVS8QH3fz2OPSmq7ICcptZxU2QyzIzdlkKR/+6RdNp+zHtZQUR+l8tdIgiImw=="
                }
              },
              "source": "groups.where(name == \"root\").all(members == empty || members.all(name == 'root'))\n",
              "labels": {
                "labels": {
                  "4F5VRszYohLTlUqorjlIGP2Pfc4RQPEsfdnVvaP9TPp6pY/vfiG7wVBBeZ4NRSgqVuStKL9+v5FWTURsspp06Q==": "[].all()",
                  "72KOmiZK+Nj4z6lyl7VsRm0uI4YoLLiiIkd29uSs9IjPt3DY3G+smEQCn03yA2TcgberRL5laYOaQKGIfvi11g==": "name",
                  "9fN32Nz+DU8ehZ1F0R4RwYBh5xVS8QH3fz2OPSmq7ICcptZxU2QyzIzdlkKR/+6RdNp+zHtZQUR+l8tdIgiImw==": "name == \"root\"",
                  "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA==": "groups.where.$whereNot.list",
                  "NkyupEx+NSKlI652whtNMuh18Buf6V3BQgtF4YrUCpujRvVD3iBDyDb1+otM/UCFF8WVa22VUrvut2yi61Hm1g==": "name == \"root\"",
                  "VYec7lnXlCvwaL7e7LUKWOHwWUERodKM3IcGKcWD81Xqyvkyi0jSBdkhwQi7DQqS0Ghun/t/Lt65zvQfcZAy5A==": "gid",
                  "qIr5GR04J3NuASFZ89eOac0YleDrQOCGL9wuG+d3S1gsNtIV9nvoGDqv21pDQl/2jD4lZjTIqbG1W3TnhpRFVg==": "members == \u003cref\u003e || \u003cref\u003e",
                  "tUNKJKJCZa0GRdL0POTG7XcEWUjhaUCsxYckpOLXult7salKhM9G5nw8GFjDdcJMkVjj19GE/UerFDBXqtTHSA==": "members",
                  "zkQO5VqK4KADLajxTmptIOrP5ngwLGNY+FhS/h9qIJdZBxBNQwFoT0xZZgHBU5r9Lq9PuMOnhzb9PdGhVvha+w==": "groups.all()"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA==": 21474836480
              }
            }
          },
          "WmxWYi4ILtg=": {
            "query": "command(\"df -TH / | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
            "checksum": "zgkk/ifOns4=",
            "datapoints": [
              "aPd1sU0622HV0ZtikUUO281iDvW8IUZ98MxVZJ9u5XA5GcEWFdYk4ghEuC278CrJaisTkYNYgQCrtW4EPUjjDQ=="
            ],
            "code": {
              "code_v2": {
                "id": "WmxWYi4ILtg=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0007",
                          "value": "ZGYgLVRIIC8gfCBhd2sgJ3sgcHJpbnQgJDMg"
                        }
                      },
                      {
                        "call": 1,
                        "id": "+\u0007",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "IiAi"
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "+\u0007",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "ICQyIH0n"
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "command",
                        "function": {
                          "type": "\u001bcommand",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Y29tbWFuZA=="
                            },
                            {
                              "type": "\u0003",
                              "value": "hoCAgCA="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "stdout",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967300
                        }
                      },
                      {
                        "call": 1,
                        "id": "trim",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967301
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967302
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "8RBT7irpgb1+8B4JCVL8N+Wjyaq+R90T8kTVQQIdebbBwApFO23N4rD3g8z+6GcZQtJwzgkpHFKIebnT1mIiuQ==",
                  "4294967298": "7vMN+4H+5Ut7tLjwi/fIRIzgUS/BDlS8ZJnF8prcfNgEuU3R7ny+htXpu3jFMPIAs20nEACEzSfA7i+bqwn9eQ==",
                  "4294967299": "L0ifbElbdHrsUedv3iwsYRoDRocggHoCLtvvPB7bOSeozkhmSytNQCgi3N3mLDg9XTRc2NxeZbSNpyazuEqpiw==",
                  "4294967300": "GnQUTumwBz9iNeDfLbHPLW4a3nqb9MM16YV4XLmm14vR/lR/oM73ycCmt/7iV4vb+8yeDvYfzQPLeKCouNOdRw==",
                  "4294967301": "Eot9VGAoENRd0ON030Lf6od5rBvbpvCkXdsOL2XU4rSG1y1pZfwbGWw3rT3nBaVOQISATPhO3SJmz/97sTSCtQ==",
                  "4294967302": "aPd1sU0622HV0ZtikUUO281iDvW8IUZ98MxVZJ9u5XA5GcEWFdYk4ghEuC278CrJaisTkYNYgQCrtW4EPUjjDQ=="
                }
              },
              "source": "command(\"df -TH / | awk '{ print $3 \"+'\" \"'+\" $2 }'\").stdout.trim\n",
              "labels": {
                "labels": {
                  "aPd1sU0622HV0ZtikUUO281iDvW8IUZ98MxVZJ9u5XA5GcEWFdYk4ghEuC278CrJaisTkYNYgQCrtW4EPUjjDQ==": "command.stdout.trim"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "XAoGqylTzOA=": {
            "query": "packages { name version arch installed epoch origin purl }",
            "checksum": "DRfbaXefvEU=",
            "datapoints": [
              "h9mRqgC6ItFuY4nxvN3oY5U+wr3b3Kj0SyAhXFRF33zQ6r+VsDt47ca8OUp6XwvInz88f9QiRHS7dp3Ch0zkhw=="
            ],
            "code": {
              "code_v2": {
                "id": "XAoGqylTzOA=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "packages"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bpackage",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bpackage"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "arch",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "installed",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "epoch",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "origin",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "purl",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597,
                      8589934598,
                      8589934599,
                      8589934600
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "nc5UOrIapsVDWsNQPi9UMROkMUjnpIzanSxQGmqWP9qnzmreR9txrbattEM8aUVnbbzt/cLaFCXnFnrSNz3b7w==",
                  "4294967298": "TRoNpEaXdtENGclai17vNxVsY5Y2DG6WB500iCLFm2lF/0iMyyzJWGTkXDZ1E+swwxmwH+/NFofQYmgV/SPPeg==",
                  "4294967299": "h9mRqgC6ItFuY4nxvN3oY5U+wr3b3Kj0SyAhXFRF33zQ6r+VsDt47ca8OUp6XwvInz88f9QiRHS7dp3Ch0zkhw==",
                  "8589934593": "TRoNpEaXdtENGclai17vNxVsY5Y2DG6WB500iCLFm2lF/0iMyyzJWGTkXDZ1E+swwxmwH+/NFofQYmgV/SPPeg==",
                  "8589934594": "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==",
                  "8589934595": "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==",
                  "8589934596": "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==",
                  "8589934597": "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==",
                  "8589934598": "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==",
                  "8589934599": "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==",
                  "8589934600": "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A=="
                }
              },
              "source": "packages { name version arch installed epoch origin purl }",
              "labels": {
                "labels": {
                  "5JbZ/QQmJzjbkBnKWK5T6RriWwQScJtwrog7ETNadqnSSVHPxzNFhwlJQnX20PbKghxVR3mNyJ6XhTd5salh8A==": "purl",
                  "QwvqVEdb4/yAi17fOTIt1n/dEji8O+KmXb5/f03aVDE+zx2Mp7yiVZmFUx+1Us3x3VsxLVNrGVLwrmfasNSOAA==": "arch",
                  "RhoXixyasK6UI3UZwsjEGQ2OAozEPvPzeqZcQo3mUNYT/5P2pCVpEdjJEFOu48kS3mEdMURHIg7wfuEUW99U7A==": "version",
                  "SmDPV2K086pYRm4pxisBSKy4H4wVpIIph/nj3b04c09VfmOuypFNsjPA46GAdfk7vT3D8ZDnDoXx+yAkO3LpJA==": "name",
                  "Whqr79eyMbqUBor+qEYITZEqnGmUFMJnlBRHax3fAsnG28GidrnV2YEz/Vl+IcEg3tCxrxb8ll7pwjh1XXRidw==": "installed",
                  "ZW97vOQQ8tDnaALpS0dpM0lPQe2+paqcISrDjoJLezzhj/Wb0bP7taMRAaelMQVwL94ReHfhA0GQ4CHb6RPfRQ==": "origin",
                  "h9mRqgC6ItFuY4nxvN3oY5U+wr3b3Kj0SyAhXFRF33zQ6r+VsDt47ca8OUp6XwvInz88f9QiRHS7dp3Ch0zkhw==": "packages.list",
                  "jjLjHH5AgB9ZlWQrW/5knzULHNQNdy8NMSNQbbe8kCbSwD1Ya1za9o68UoEbzIVi+hkWLjrg6Ouen4Ogtg3gsg==": "epoch"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "latest"
            }
          },
          "Xs984txmLXk=": {
            "query": "if (file(\"/etc/shadow-\").exists) {\n  file(\"/etc/shadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
            "checksum": "q3hib2dKoRg=",
            "datapoints": [
              "9JRnRD0qcwHdUJtCGMTAJe3H1iY2xdZ5QNY+Bji5zt7EG1rgcxmWYBO6pOuPOvrDsHa8dnSx9hbE92vZlnyJQg=="
            ],
            "code": {
              "code_v2": {
                "id": "Xs984txmLXk=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9zaGFkb3ct"
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "exists",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "if",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            },
                            {
                              "type": "\u0019\u0003"
                            }
                          ]
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9zaGFkb3ct"
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901891
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901893
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901894
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901896
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901897
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901899
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901900
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901902
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901903
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901905
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901906
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901892,
                      12884901895,
                      12884901898,
                      12884901901,
                      12884901904,
                      12884901907
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "NV1q5yWPXGLidLG6c/S0X6jNNvfPciD97Z/dBwc3KwYXJL18Hkeh2Rw8hHOg/4/nDPXb272uyPKeAC/jbt8rJg==",
                  "12884901890": "QQ1587asm8MZ0xu0fcT5AK3hSixnpXhnaCKzdlF8fYLys7ReB7bYka4SmZD9XsJ7F8L2tFR/nSSn22EOFMdpFg==",
                  "12884901891": "npnBXr3vh/op7nHyF9ijTDerNdwF2ToHLXKLO/rnokcNCU8hhRBDEYdjWuIxZHCfoI29BGTupDNSP1ENjXtEaQ==",
                  "12884901892": "47Q+jq9hct6ndHS9YMHNeIZqHlSAzS1M2hkKbcwqfRxEO8oeec8OE2a78oc2mAEl+5n6o59/+1uh93iqk7Qr+A==",
                  "12884901893": "QQ1587asm8MZ0xu0fcT5AK3hSixnpXhnaCKzdlF8fYLys7ReB7bYka4SmZD9XsJ7F8L2tFR/nSSn22EOFMdpFg==",
                  "12884901894": "saOFVO4htAVvItkz7Cnxr66im8VId3fLTb1gsL5kWcClVkkPDx5yW9VJMp5+aVj3uHCoZ9/+Oaq+ng0q0Npg9g==",
                  "12884901895": "RumXTcMvN9dHtJVMf4m7JoxrM9gvdqn5vv29bm4X+P5MIiox6oWzC3T+rJM3fqWV+g0Sn4KJaSa/9R5wlMJqBw==",
                  "12884901896": "QQ1587asm8MZ0xu0fcT5AK3hSixnpXhnaCKzdlF8fYLys7ReB7bYka4SmZD9XsJ7F8L2tFR/nSSn22EOFMdpFg==",
                  "12884901897": "5GGFVPFNlUbLWmc+pSsxJCr8Mp7HrLpA29hNcLkMNyIs5pGC2oqxIjZKp74Rdn+OOAQkmIWleMTNPageicUG1w==",
                  "12884901898": "2gTIdScsz/z/cI8rVNqrquYzF736LBDvofiD6oegZcqudNlSp3dXKpOQ0EGoI9GphjcvIfETqiR6pse30oM2ng==",
                  "12884901899": "QQ1587asm8MZ0xu0fcT5AK3hSixnpXhnaCKzdlF8fYLys7ReB7bYka4SmZD9XsJ7F8L2tFR/nSSn22EOFMdpFg==",
                  "12884901900": "G58pftY6Zl/SD9lBbWr0/K8xjZDrQD7kEaUD4m1LtrAgpMZjeJ1vGYPlhVz/tSgbszqExXtOIpxWWd00+EvjKw==",
                  "12884901901": "2PISPaY9Uv/h/6bWIzaOCPZuNXOWm8h4ABDmViLOG63YzZY4u2XtbVVm2B0RRTtx00beK5hPg/g+gxPfCekYsg==",
                  "12884901902": "QQ1587asm8MZ0xu0fcT5AK3hSixnpXhnaCKzdlF8fYLys7ReB7bYka4SmZD9XsJ7F8L2tFR/nSSn22EOFMdpFg==",
                  "12884901903": "W2b4P6NB1PbyxiP0bQjAlA+h78C3cn3hDV+24sWyY5wBM8rPt3rNbK6VbJXXQQrf62ARstftXH7iSRmmMtOA/w==",
                  "12884901904": "/Kc60GU9syUEKHHmwJhFtiMLTYVF8h5zuvQ4JJ6FRc+ewxjALxDWp5INzonjnhbjoJgE4pcRYk2rw3/Kv0Fowg==",
                  "12884901905": "QQ1587asm8MZ0xu0fcT5AK3hSixnpXhnaCKzdlF8fYLys7ReB7bYka4SmZD9XsJ7F8L2tFR/nSSn22EOFMdpFg==",
                  "12884901906": "xV6qIR5Nav8qHRPmEr9s9PwbpE/8tnx+vQ3Ugaz4flT6rTbDg3Mifv9OxuTtVF4Xr9Sj2WXDCQiGRG6rBg0ZJw==",
                  "12884901907": "m5y0p0bVYz7XxVWgXUaxPqZxy9PAtjuwoSNsr3YjZaPyXs+d9PKjEvXsBKikGOB5KBQc+7GIbWkUdWUs0BNLgw==",
                  "4294967297": "NV1q5yWPXGLidLG6c/S0X6jNNvfPciD97Z/dBwc3KwYXJL18Hkeh2Rw8hHOg/4/nDPXb272uyPKeAC/jbt8rJg==",
                  "4294967298": "XPurpygmyn96M3gUExpn/qHHMtB7n+4Q8F06uC3mhsz99IgZINBvqVUEPKyuzkL3FwkV4A7JapRW8DWKkaS8hg==",
                  "4294967299": "9JRnRD0qcwHdUJtCGMTAJe3H1iY2xdZ5QNY+Bji5zt7EG1rgcxmWYBO6pOuPOvrDsHa8dnSx9hbE92vZlnyJQg==",
                  "8589934593": "NV1q5yWPXGLidLG6c/S0X6jNNvfPciD97Z/dBwc3KwYXJL18Hkeh2Rw8hHOg/4/nDPXb272uyPKeAC/jbt8rJg==",
                  "8589934594": "n4KRoHNl8xqOuyifPurxhLP5QsLCNcTlMZ0U4dSeeR+4yp8qZoMYKxxsmU7gjewTvfHbXhNOU4jR4K0KqtKM6w=="
                }
              },
              "source": "if (file(\"/etc/shadow-\").exists) {\n  file(\"/etc/shadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
              "labels": {
                "labels": {
                  "/Kc60GU9syUEKHHmwJhFtiMLTYVF8h5zuvQ4JJ6FRc+ewxjALxDWp5INzonjnhbjoJgE4pcRYk2rw3/Kv0Fowg==": "permissions.other_writeable == false",
                  "2PISPaY9Uv/h/6bWIzaOCPZuNXOWm8h4ABDmViLOG63YzZY4u2XtbVVm2B0RRTtx00beK5hPg/g+gxPfCekYsg==": "permissions.other_readable == false",
                  "2gTIdScsz/z/cI8rVNqrquYzF736LBDvofiD6oegZcqudNlSp3dXKpOQ0EGoI9GphjcvIfETqiR6pse30oM2ng==": "permissions.group_executable == false",
                  "47Q+jq9hct6ndHS9YMHNeIZqHlSAzS1M2hkKbcwqfRxEO8oeec8OE2a78oc2mAEl+5n6o59/+1uh93iqk7Qr+A==": "permissions.user_executable == false",
                  "9JRnRD0qcwHdUJtCGMTAJe3H1iY2xdZ5QNY+Bji5zt7EG1rgcxmWYBO6pOuPOvrDsHa8dnSx9hbE92vZlnyJQg==": "if",
                  "RumXTcMvN9dHtJVMf4m7JoxrM9gvdqn5vv29bm4X+P5MIiox6oWzC3T+rJM3fqWV+g0Sn4KJaSa/9R5wlMJqBw==": "permissions.group_writeable == false",
                  "m5y0p0bVYz7XxVWgXUaxPqZxy9PAtjuwoSNsr3YjZaPyXs+d9PKjEvXsBKikGOB5KBQc+7GIbWkUdWUs0BNLgw==": "permissions.other_executable == false",
                  "n4KRoHNl8xqOuyifPurxhLP5QsLCNcTlMZ0U4dSeeR+4yp8qZoMYKxxsmU7gjewTvfHbXhNOU4jR4K0KqtKM6w==": "file"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "YNN6XbHEMSg=": {
            "query": "groups.list.duplicates(name).none()\n",
            "checksum": "IKHfNacnwzs=",
            "datapoints": [
              "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw==",
              "gnQzZeSAHrQV35V8XMTtz9hHVuRLLkmvsgmgVe93eDzEWW9NrV/hP7Wu409x5z0m+ZibsdLlck3xAamyu7arLw=="
            ],
            "code": {
              "code_v2": {
                "id": "YNN6XbHEMSg=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "groups"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "fieldDuplicates",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "$none",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "0Hw1frr2Ghy1qXs3zWoEYyxXZ8NBDZDORtz2QfV6HpWmUejk+s93KGPaV6vfzs8JnYZQyele1UTt1mJ657W2HQ==",
                  "12884901890": "1MH9IzrAqQaBIT0o/zEjM4y+xRdRag98SA9nosrFTRiG3FVJH9kgFlzISAPNJ5KRhOdqkRYGYZAuI+siKtLyiQ==",
                  "12884901891": "tUkXp1M1Os5gNHCo0m5zOmW9/hAvi2ZfjsY8uHR4CeHEqbdCBQZjrQhnHEx5zDNCWXGo+Qt0gdOqVVne6UfVug==",
                  "4294967297": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "4294967298": "NIEHm9kmH9Dzz0fqfrQWcSNNntroglgakmg+r5TZd2szBtUd/n1TukpBYKYy6vBd3w4umvEVa4gPlkHyeldBNw==",
                  "4294967299": "0Hw1frr2Ghy1qXs3zWoEYyxXZ8NBDZDORtz2QfV6HpWmUejk+s93KGPaV6vfzs8JnYZQyele1UTt1mJ657W2HQ==",
                  "4294967300": "gnQzZeSAHrQV35V8XMTtz9hHVuRLLkmvsgmgVe93eDzEWW9NrV/hP7Wu409x5z0m+ZibsdLlck3xAamyu7arLw==",
                  "4294967301": "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw==",
                  "8589934593": "NIEHm9kmH9Dzz0fqfrQWcSNNntroglgakmg+r5TZd2szBtUd/n1TukpBYKYy6vBd3w4umvEVa4gPlkHyeldBNw==",
                  "8589934594": "FGunmw8dgXyRl+asusKnP7tYFpgi9HYqCPltkMExlMCdugsmQbUwp8Tv8hYWyen3KOZgyCmOwcU57FJzmshUFQ=="
                }
              },
              "source": "groups.list.duplicates(name).none()\n",
              "labels": {
                "labels": {
                  "1MH9IzrAqQaBIT0o/zEjM4y+xRdRag98SA9nosrFTRiG3FVJH9kgFlzISAPNJ5KRhOdqkRYGYZAuI+siKtLyiQ==": "name",
                  "FGunmw8dgXyRl+asusKnP7tYFpgi9HYqCPltkMExlMCdugsmQbUwp8Tv8hYWyen3KOZgyCmOwcU57FJzmshUFQ==": "name",
                  "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw==": "groups.list.fieldDuplicates",
                  "gnQzZeSAHrQV35V8XMTtz9hHVuRLLkmvsgmgVe93eDzEWW9NrV/hP7Wu409x5z0m+ZibsdLlck3xAamyu7arLw==": "[].none()",
                  "tUkXp1M1Os5gNHCo0m5zOmW9/hAvi2ZfjsY8uHR4CeHEqbdCBQZjrQhnHEx5zDNCWXGo+Qt0gdOqVVne6UfVug==": "gid"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw==": 12884901888
              }
            }
          },
          "Yw5maGeSxtI=": {
            "query": "switch(asset.kind) {\ncase _ == \"baremetal\":\n  return \"Bare metal system\"\ncase _ == \"virtualmachine\":\n  return \"Virtual machine\"\ncase _ == \"container-image\":\n  return \"Container image\"\ncase _ == \"container\":\n  return \"Container\"\ndefault:\n  return _\n}\n",
            "checksum": "leh/ACVSTKI=",
            "datapoints": [
              "4FTu8UX2yMVeEc5N/Ouz0BE6bDRPuZ/7ZuriB9Y3C2baQ1MHggGswbvcjtBxOJc+b5QzE7VSE6wEmmmnkcpubg=="
            ],
            "code": {
              "code_v2": {
                "id": "Yw5maGeSxtI=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "asset"
                      },
                      {
                        "call": 1,
                        "id": "kind",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "YmFyZW1ldGFs"
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "dmlydHVhbG1hY2hpbmU="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Y29udGFpbmVyLWltYWdl"
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Y29udGFpbmVy"
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "switch",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u0003",
                              "value": "hoCAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            },
                            {
                              "type": "\u0019\u0003",
                              "array": [
                                {
                                  "type": "\u0003",
                                  "value": "hICAgCA="
                                }
                              ]
                            },
                            {
                              "type": "\u0003",
                              "value": "iICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            },
                            {
                              "type": "\u0019\u0003",
                              "array": [
                                {
                                  "type": "\u0003",
                                  "value": "hICAgCA="
                                }
                              ]
                            },
                            {
                              "type": "\u0003",
                              "value": "ioCAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgIAB"
                            },
                            {
                              "type": "\u0019\u0003",
                              "array": [
                                {
                                  "type": "\u0003",
                                  "value": "hICAgCA="
                                }
                              ]
                            },
                            {
                              "type": "\u0003",
                              "value": "jICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgKAB"
                            },
                            {
                              "type": "\u0019\u0003",
                              "array": [
                                {
                                  "type": "\u0003",
                                  "value": "hICAgCA="
                                }
                              ]
                            },
                            {
                              "type": "\u0004",
                              "value": "AQ=="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgMAB"
                            },
                            {
                              "type": "\u0019\u0003",
                              "array": [
                                {
                                  "type": "\u0003",
                                  "value": "hICAgCA="
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967303
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0007",
                          "value": "QmFyZSBtZXRhbCBzeXN0ZW0="
                        }
                      },
                      {
                        "call": 1,
                        "id": "return",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "goCAgEA="
                            }
                          ]
                        }
                      }
                    ],
                    "singleValue": true,
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0007",
                          "value": "VmlydHVhbCBtYWNoaW5l"
                        }
                      },
                      {
                        "call": 1,
                        "id": "return",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "goCAgGA="
                            }
                          ]
                        }
                      }
                    ],
                    "singleValue": true,
                    "entrypoints": [
                      12884901890
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0007",
                          "value": "Q29udGFpbmVyIGltYWdl"
                        }
                      },
                      {
                        "call": 1,
                        "id": "return",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "goCAgIAB"
                            }
                          ]
                        }
                      }
                    ],
                    "singleValue": true,
                    "entrypoints": [
                      17179869186
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0007",
                          "value": "Q29udGFpbmVy"
                        }
                      },
                      {
                        "call": 1,
                        "id": "return",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "goCAgKAB"
                            }
                          ]
                        }
                      }
                    ],
                    "singleValue": true,
                    "entrypoints": [
                      21474836482
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "return",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            }
                          ]
                        }
                      }
                    ],
                    "singleValue": true,
                    "entrypoints": [
                      25769803777
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "tq6PFtAnZEdpVTRymGFMJuaOPyJm8xB5x6cI33u97QK4q9u6tKsocdZUlmIWfyv4uRm9w5GwPeJSt5K3PcujbA==",
                  "12884901890": "cmH6nZLq+WhBKVH0VNyJcSv8E/4fcyP1niTfueh3fSWxCNLZbJ4pfrNb1nBGvZZ345+VCfrfdrdnuCtmTfPXjg==",
                  "17179869185": "8ZHsgkXYh74YWOjnJAIn5M1+7VZWAxlZZDe4lk+7B3T0wyHTLFnZ28iyhiQBvEd4vlWK9S+cMLyOQ6vzuRxZ5w==",
                  "17179869186": "ErA6+g4nWcuLxiJVj4ZYyTKDuLIqERxj1eEJJBL9DTduWNinPZdbMzGKcmsDf6LHc8MzkN+2QZePtAfHsIKCOA==",
                  "21474836481": "E7d+Gk9j3sUNW3xSdtU1B/B2NeiUqR4ejI3P8UnrUy/HYkomY29QlJLZCqbABauX35D+vaE5epefMssv0zcYdw==",
                  "21474836482": "sjR1An1IIgT+nXyORc3Bg36sQcI4uVi3tLM7WSCUNE6xpKSU3eQaT+gsgHdui1AHxHP5dV53hBkkozaVFlG7mQ==",
                  "25769803777": "mJy3M9LKb3FDBeRXHFIoccvZZ0ubobThqNqdmdI4kS+kBU3rbqBDzCxUepbyEgpJAoikVF5Qb6mUUrupCpRe2Q==",
                  "4294967297": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "4294967298": "1oxYPIhW1eZ+14s234VsQ0Q7p9JSmUaT/RTWBtDRG1ZwKr8YjMcXz76x10J9iu13AcMmGZd43M1NNqPXZtTuKQ==",
                  "4294967299": "J8jOcn+m+VrFBPQBePknV/BhSQfN0xCA5FGcJUvu0EVnsG5qIU43WiMX9+IZK4j9qiaDHVdOImDz3GdfweA98A==",
                  "4294967300": "SD7g9ddPqGuRDGogTfilNOwADSdIN6tnS64Emn00qZLc9/N3M0fGOQRKZuurBLGHseVxImDMbHVSCaWO7PkmiQ==",
                  "4294967301": "2e8n2Ol/C5ST+dwR1XD9s/6NNyK+tnRftFyNaj+PPf+lOOO3HI+Bdf+FZCejSwuvHwPCPH7uG570AAzqc5tevw==",
                  "4294967302": "zFff6MiWRDpGRG5K8UEIUTqd1tMNGdxoATth539lp/clCeLKZQ2eeQmYsqqRcVl/uOgIrlUbUICyTzYd3mXk9Q==",
                  "4294967303": "4FTu8UX2yMVeEc5N/Ouz0BE6bDRPuZ/7ZuriB9Y3C2baQ1MHggGswbvcjtBxOJc+b5QzE7VSE6wEmmmnkcpubg==",
                  "8589934593": "mUTWCjNlKNlfZ4nKqVDC4G+zlvIrvO1y1QjozdwMjaZTO1RHZTckyvCOEdYzoLQQjP1OzA0aQV6WbrcnjhOwjA==",
                  "8589934594": "MEqM6NV1EpCzPISVX0pjlf9PGAqPymMMtDFghx2M0HlCTa48BiIR9Zo36LxMp6DjrDm2/5dZ8uLkawvwXVhr8w=="
                }
              },
              "source": "switch(asset.kind) {\ncase _ == \"baremetal\":\n  return \"Bare metal system\"\ncase _ == \"virtualmachine\":\n  return \"Virtual machine\"\ncase _ == \"container-image\":\n  return \"Container image\"\ncase _ == \"container\":\n  return \"Container\"\ndefault:\n  return _\n}\n",
              "labels": {
                "labels": {
                  "4FTu8UX2yMVeEc5N/Ouz0BE6bDRPuZ/7ZuriB9Y3C2baQ1MHggGswbvcjtBxOJc+b5QzE7VSE6wEmmmnkcpubg==": "switch",
                  "ErA6+g4nWcuLxiJVj4ZYyTKDuLIqERxj1eEJJBL9DTduWNinPZdbMzGKcmsDf6LHc8MzkN+2QZePtAfHsIKCOA==": "return",
                  "MEqM6NV1EpCzPISVX0pjlf9PGAqPymMMtDFghx2M0HlCTa48BiIR9Zo36LxMp6DjrDm2/5dZ8uLkawvwXVhr8w==": "return",
                  "cmH6nZLq+WhBKVH0VNyJcSv8E/4fcyP1niTfueh3fSWxCNLZbJ4pfrNb1nBGvZZ345+VCfrfdrdnuCtmTfPXjg==": "return",
                  "mJy3M9LKb3FDBeRXHFIoccvZZ0ubobThqNqdmdI4kS+kBU3rbqBDzCxUepbyEgpJAoikVF5Qb6mUUrupCpRe2Q==": "return",
                  "sjR1An1IIgT+nXyORc3Bg36sQcI4uVi3tLM7WSCUNE6xpKSU3eQaT+gsgHdui1AHxHP5dV53hBkkozaVFlG7mQ==": "return"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "6.13.0"
            }
          },
          "aRSd7vfjN/s=": {
            "query": "os.hostname",
            "checksum": "zQv8QVG6Lzs=",
            "datapoints": [
              "VYvXd9DoeA22juTEFywXJb89sXLsOc7eHhrCj6WwJqVtuEUXvgQeEsFXaVhe72J+NBCOk9tV3F4BZ4g67moVHA=="
            ],
            "code": {
              "code_v2": {
                "id": "aRSd7vfjN/s=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "os"
                      },
                      {
                        "call": 1,
                        "id": "hostname",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "XspIMqqxJXfdWDKCBL1oCcaIj980iqHQVbJf/hnwz11QrBUM/19otSKKzDhACj9Md1//yEITGdGUwbxk6SLZmg==",
                  "4294967298": "VYvXd9DoeA22juTEFywXJb89sXLsOc7eHhrCj6WwJqVtuEUXvgQeEsFXaVhe72J+NBCOk9tV3F4BZ4g67moVHA=="
                }
              },
              "source": "os.hostname",
              "labels": {
                "labels": {
                  "VYvXd9DoeA22juTEFywXJb89sXLsOc7eHhrCj6WwJqVtuEUXvgQeEsFXaVhe72J+NBCOk9tV3F4BZ4g67moVHA==": "os.hostname"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "aS95c8UVV00=": {
            "query": "package(\"prelink\").installed == false\n",
            "checksum": "A7LLvwvUjGY=",
            "datapoints": [
              "2hZ3z+3H/QD+mlekH8q+XJI8LKLWCorG6amoVQPvfWzaq07JXZgflggDlzI/ysKXy1pKUdzt+483lluQXxsJ4Q==",
              "6GV7OiQSU1fwRwmB2MtE0u8IG8j6PQJTDKj3GqbPCWek07rjs0E4nE2JNttpY+0OuGo2gk8KUE/saFGxeq2gYQ=="
            ],
            "code": {
              "code_v2": {
                "id": "aS95c8UVV00=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "package",
                        "function": {
                          "type": "\u001bpackage",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "bmFtZQ=="
                            },
                            {
                              "type": "\u0007",
                              "value": "cHJlbGluaw=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "installed",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 4294967298
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ],
                    "datapoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "uixMB/TYnjUfKLs+me68h5dJrwQtEhXb5v/LaGzPGyKoF3siLGMRMU1rtzYf98k7Dva/nfpDwfldMrwDvXEANw==",
                  "4294967298": "2hZ3z+3H/QD+mlekH8q+XJI8LKLWCorG6amoVQPvfWzaq07JXZgflggDlzI/ysKXy1pKUdzt+483lluQXxsJ4Q==",
                  "4294967299": "6GV7OiQSU1fwRwmB2MtE0u8IG8j6PQJTDKj3GqbPCWek07rjs0E4nE2JNttpY+0OuGo2gk8KUE/saFGxeq2gYQ=="
                }
              },
              "source": "package(\"prelink\").installed == false\n",
              "labels": {
                "labels": {
                  "2hZ3z+3H/QD+mlekH8q+XJI8LKLWCorG6amoVQPvfWzaq07JXZgflggDlzI/ysKXy1pKUdzt+483lluQXxsJ4Q==": "package.installed",
                  "6GV7OiQSU1fwRwmB2MtE0u8IG8j6PQJTDKj3GqbPCWek07rjs0E4nE2JNttpY+0OuGo2gk8KUE/saFGxeq2gYQ==": "package.installed == false"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "cC61mur3af4=": {
            "query": "return ['aes256-ctr', 'aes192-ctr', 'aes128-ctr']\n\n",
            "checksum": "ZHzSffScrRs=",
            "datapoints": [
              "nYiOaK8tGSbYFIljYNbWufmM2j0W7DAjhGcj7x8fShWOz3K5F+/+Q1g+T0pIvMYNQfQd/Pv2ljQfm3N7x/KGuw=="
            ],
            "code": {
              "code_v2": {
                "id": "cC61mur3af4=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0019\u0007",
                          "array": [
                            {
                              "type": "\u0007",
                              "value": "YWVzMjU2LWN0cg=="
                            },
                            {
                              "type": "\u0007",
                              "value": "YWVzMTkyLWN0cg=="
                            },
                            {
                              "type": "\u0007",
                              "value": "YWVzMTI4LWN0cg=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "return",
                        "function": {
                          "type": "\u0019\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "goCAgCA="
                            }
                          ]
                        }
                      }
                    ],
                    "singleValue": true,
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "C0fhQPzQAJT3qubQZhuA0n5ItFKsh2eoi7RBlWoRqE0uCjbte8esVEkY9Hz89XIIw5tD1hA/jRHnKDJXQvyejg==",
                  "4294967298": "nYiOaK8tGSbYFIljYNbWufmM2j0W7DAjhGcj7x8fShWOz3K5F+/+Q1g+T0pIvMYNQfQd/Pv2ljQfm3N7x/KGuw=="
                }
              },
              "source": "return ['aes256-ctr', 'aes192-ctr', 'aes128-ctr']\n\n",
              "labels": {
                "labels": {
                  "nYiOaK8tGSbYFIljYNbWufmM2j0W7DAjhGcj7x8fShWOz3K5F+/+Q1g+T0pIvMYNQfQd/Pv2ljQfm3N7x/KGuw==": "return"
                }
              },
              "version": "unstable"
            }
          },
          "ceocEcP6Hmo=": {
            "query": "packages.none(name == /^xserver-xorg.*/ || name == /^xorg-x11/ || name == /^xserver/)\n",
            "checksum": "4V3W1xVrhZg=",
            "datapoints": [
              "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q==",
              "7zMfskozHqhiScbU2kNsfYC2uQ0B1f+XOtt3Q2+qCfjPNBkxtKNoKM707TK6ctUb4TfHI6tuQlIO34S4RBfOsw=="
            ],
            "code": {
              "code_v2": {
                "id": "ceocEcP6Hmo=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "packages"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bpackage",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001bpackages",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bpackage",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "$none",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967300
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967300
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967301
                    ],
                    "datapoints": [
                      4294967302
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bpackage"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\b",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\b",
                              "value": "XnhzZXJ2ZXIteG9yZy4q"
                            }
                          ],
                          "binding": 8589934594
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\b",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\b",
                              "value": "XnhvcmcteDEx"
                            }
                          ],
                          "binding": 8589934596
                        }
                      },
                      {
                        "call": 1,
                        "id": "||\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "ioCAgEA="
                            }
                          ],
                          "binding": 8589934595
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\b",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\b",
                              "value": "XnhzZXJ2ZXI="
                            }
                          ],
                          "binding": 8589934599
                        }
                      },
                      {
                        "call": 1,
                        "id": "||\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "kICAgEA="
                            }
                          ],
                          "binding": 8589934598
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934601
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bpackage"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "V03AkmVbiD0VsRt7m6vw7o/EWHs4+OP2/NJvtLsDBdf0KLmHoo/hWHiXF7MI9O8hLg9z6616aVC/CJpcWgWcdw==",
                  "12884901890": "TNWsPXJuv63/nFX9PhshaHaqpI3op1lU7wxbV9Pu/bbY+uBQGJAYlMMW75VSh8hX2a+HWrhw3MJTQ21Zqiv59A==",
                  "12884901891": "se1/YmDukCyjufvbq1xoojKLN+YuDGS3mTM5XsiFH49wTPIX73T86MrU9PmdBmkZO/DRrX9TYpyKFAa3lV/Y2Q==",
                  "4294967297": "nc5UOrIapsVDWsNQPi9UMROkMUjnpIzanSxQGmqWP9qnzmreR9txrbattEM8aUVnbbzt/cLaFCXnFnrSNz3b7w==",
                  "4294967298": "TRoNpEaXdtENGclai17vNxVsY5Y2DG6WB500iCLFm2lF/0iMyyzJWGTkXDZ1E+swwxmwH+/NFofQYmgV/SPPeg==",
                  "4294967299": "G5NKJHCH41HKFBBySGeJq0srAJiwOI7lSbp06fj0rniqom0GES7VNM4GzJHtzNFXbWNQg4FU5Eu+qZNqhuk+KQ==",
                  "4294967300": "V03AkmVbiD0VsRt7m6vw7o/EWHs4+OP2/NJvtLsDBdf0KLmHoo/hWHiXF7MI9O8hLg9z6616aVC/CJpcWgWcdw==",
                  "4294967301": "7zMfskozHqhiScbU2kNsfYC2uQ0B1f+XOtt3Q2+qCfjPNBkxtKNoKM707TK6ctUb4TfHI6tuQlIO34S4RBfOsw==",
                  "4294967302": "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q==",
                  "8589934593": "nc5UOrIapsVDWsNQPi9UMROkMUjnpIzanSxQGmqWP9qnzmreR9txrbattEM8aUVnbbzt/cLaFCXnFnrSNz3b7w==",
                  "8589934594": "1lbUeoc4wCkf5/EjOOHInBxyScsuDIYNUsO47phrYLgv5G3GmJDiUdrcmO3HZ0xNn3lpIHt3p3mkh1h40kGXzg==",
                  "8589934595": "mNZ4zItWsJjNdG7TIebxVyVl8OTnpCzSg1qjnrvcP7YgCeUBSn7Wq0re5opFBHcjiWyGJayv+0EjLjTz4XZu3Q==",
                  "8589934596": "1lbUeoc4wCkf5/EjOOHInBxyScsuDIYNUsO47phrYLgv5G3GmJDiUdrcmO3HZ0xNn3lpIHt3p3mkh1h40kGXzg==",
                  "8589934597": "SfqPDc09PhdAwkNZhYqK7BUaYkJweC2KISIwX2gyiwguZm0DeA0dCSgcMND2bwAOgckSF3BUYj25P6Z6a4GgYw==",
                  "8589934598": "NgVZmLmZmBGxF/PnNVfqqearROsIwAYnLrOMrkKY+Vp4iE8nhzF/0SestQj+sS74BpYOPDxHWl7bDPTcb8+61g==",
                  "8589934599": "1lbUeoc4wCkf5/EjOOHInBxyScsuDIYNUsO47phrYLgv5G3GmJDiUdrcmO3HZ0xNn3lpIHt3p3mkh1h40kGXzg==",
                  "8589934600": "gZTaIFFL/kt7zDaJFtqkmwAAbM6egzUVlB83TAHtHHr+1GKnxLPWFOKFO1w8vR93sFrnsaWw7+jMLil5nZfR4g==",
                  "8589934601": "77fUFM5kREUW5C7EFZ0xllSrCjbupxNWzt+JYo/YrpG6yWtJOcd8ZRP8fTumnxaQra3B6ae+M2EZExQDBXEyKg=="
                }
              },
              "source": "packages.none(name == /^xserver-xorg.*/ || name == /^xorg-x11/ || name == /^xserver/)\n",
              "labels": {
                "labels": {
                  "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q==": "packages.where.list",
                  "77fUFM5kREUW5C7EFZ0xllSrCjbupxNWzt+JYo/YrpG6yWtJOcd8ZRP8fTumnxaQra3B6ae+M2EZExQDBXEyKg==": "name == /^xserver-xorg.*/ || \u003cref\u003e || \u003cref\u003e",
                  "7zMfskozHqhiScbU2kNsfYC2uQ0B1f+XOtt3Q2+qCfjPNBkxtKNoKM707TK6ctUb4TfHI6tuQlIO34S4RBfOsw==": "packages.none()",
                  "TNWsPXJuv63/nFX9PhshaHaqpI3op1lU7wxbV9Pu/bbY+uBQGJAYlMMW75VSh8hX2a+HWrhw3MJTQ21Zqiv59A==": "name",
                  "se1/YmDukCyjufvbq1xoojKLN+YuDGS3mTM5XsiFH49wTPIX73T86MrU9PmdBmkZO/DRrX9TYpyKFAa3lV/Y2Q==": "version"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q==": 12884901888
              }
            }
          },
          "eteO7RzprLM=": {
            "query": "sshd.config.params",
            "checksum": "eHCuOaU5RjA=",
            "datapoints": [
              "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw=="
            ],
            "code": {
              "code_v2": {
                "id": "eteO7RzprLM=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "sshd.config"
                      },
                      {
                        "call": 1,
                        "id": "params",
                        "function": {
                          "type": "\u001a\u0007\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "h1EPuzo5A02wYUOeDzbzv9YfwPO5Km0r1tmJ0UOceHGyO+M2vrEpnF3/XVJu0hOtyAITe0M4O6XOjLOTc8i8lA==",
                  "4294967298": "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw=="
                }
              },
              "source": "sshd.config.params",
              "labels": {
                "labels": {
                  "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw==": "sshd.config.params"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "g7SQRtln0e0=": {
            "query": "file(\"/proc/meminfo\").content.lines.where(_.contains(\"MemTotal\")).first().split(\":\").last().trim()\n",
            "checksum": "WHyE186nIHg=",
            "datapoints": [
              "1bJiVdNJy+oHfcFSfCtRhI1LR5igKR07aS98tqbUe+biod6mugYAv4lxijplx4S0rxSi9M8Z0wYuFSxickckNA=="
            ],
            "code": {
              "code_v2": {
                "id": "g7SQRtln0e0=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L3Byb2MvbWVtaW5mbw=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "content",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "lines",
                        "function": {
                          "type": "\u0019\u0007",
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u0019\u0007",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hoCAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "first",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967300
                        }
                      },
                      {
                        "call": 1,
                        "id": "split",
                        "function": {
                          "type": "\u0019\u0007",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "Og=="
                            }
                          ],
                          "binding": 4294967301
                        }
                      },
                      {
                        "call": 1,
                        "id": "last",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967302
                        }
                      },
                      {
                        "call": 1,
                        "id": "trim",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967303
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967304
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u0007"
                        }
                      },
                      {
                        "call": 1,
                        "id": "contains\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "TWVtVG90YWw="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "z/TbN+2Pe2eZHW0q0mY6pIQ6ZdI1BBRiC1LaPM7022st0CZ3j64hF1u6pH71BK5hBS7TKHAs6ni1HkZSdBF5ew==",
                  "4294967298": "v9voyqGbBVO4fNZJzTdcXBOp5ZaW1UOt7RuDtA+A2TjbmWLRNvVje9urGJhjPt9lWZRMiWvmpw/k4YHTUylZBQ==",
                  "4294967299": "+p6Wq4jKk/xCyzG0u6VvON9ELQih0bb/EmTreHGKCTuRxMMmKgjPc18+mkwBAC6Cfd0mTuv8X48rwNd+mjFj+w==",
                  "4294967300": "PzZ5rynF6LsWPy1bgvbH0Bfkglr59IGLuHP377X/QUysvQ6O+HqraV0+ErqBSQcFy96kKZEoJYJj10SSMaLqzw==",
                  "4294967301": "2vdQotWEVSo1eg4Fd6VFlFfgkJXL9fHJIgNCz7yVMGJcBpoTgfxq1MasfZK5wlIJGYtY0xsqWKUqlGy532st6Q==",
                  "4294967302": "/iFy+h84h3KLXWlR7zZ4cOxSab15f0kd5kQsGBgkfrL4yoXhUKuYixZENLoy3SmmHAW8jaCrdbtr7iaUl90AFQ==",
                  "4294967303": "dam4VgOF2IkLoDw4lNq6s5El2o6sv2hLNUkju+8652bA/Vks3fdG0NssTmXyw4MKmugLm9voLNKZJi+lIv0nbw==",
                  "4294967304": "1bJiVdNJy+oHfcFSfCtRhI1LR5igKR07aS98tqbUe+biod6mugYAv4lxijplx4S0rxSi9M8Z0wYuFSxickckNA==",
                  "8589934593": "+p6Wq4jKk/xCyzG0u6VvON9ELQih0bb/EmTreHGKCTuRxMMmKgjPc18+mkwBAC6Cfd0mTuv8X48rwNd+mjFj+w==",
                  "8589934594": "C4gCS8YUo5pKzuozKdsGC2UJv7APfIZ0eKpQsf70zzEAgE0kd+ipDrhZxIo020toFnHs98XEHYBTjVa/ek4h0Q=="
                }
              },
              "source": "file(\"/proc/meminfo\").content.lines.where(_.contains(\"MemTotal\")).first().split(\":\").last().trim()\n",
              "labels": {
                "labels": {
                  "1bJiVdNJy+oHfcFSfCtRhI1LR5igKR07aS98tqbUe+biod6mugYAv4lxijplx4S0rxSi9M8Z0wYuFSxickckNA==": "file.content.lines.where.first.split.last.trim",
                  "C4gCS8YUo5pKzuozKdsGC2UJv7APfIZ0eKpQsf70zzEAgE0kd+ipDrhZxIo020toFnHs98XEHYBTjVa/ek4h0Q==": "contains"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.0.0"
            }
          },
          "htUqKZYa860=": {
            "query": "if (file(\"/etc/shadow\").exists) {\n  file(\"/etc/shadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
            "checksum": "zOzow6mMpHs=",
            "datapoints": [
              "G0bUwMGEwUqkQiCcj4R04tMFYAp3dSRhbU6dBPoLeX2lyTqPVGvreUvu5qov/OCoWc/Q5eaLopy2nQF9xeDEHw=="
            ],
            "code": {
              "code_v2": {
                "id": "htUqKZYa860=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9zaGFkb3c="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "exists",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "if",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            },
                            {
                              "type": "\u0019\u0003"
                            }
                          ]
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9zaGFkb3c="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901891
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901893
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901894
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901896
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901897
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901899
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901900
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901902
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901903
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901905
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901906
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901892,
                      12884901895,
                      12884901898,
                      12884901901,
                      12884901904,
                      12884901907
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "KP29GeZnm1Au1aBNyMifVKKFnmOzd0QN6yvHFqB/n9vx4Mk3qrJlGg5qitm2nmE5X9wBRyklaq5hS00SF6+X4g==",
                  "12884901890": "M6T1N14pCCdAJV2t2eZRVg0eqZF/fgSC9batJObnfEzyjvCbijzSgLKzbRAhdsBowSxYCUBy/M5NmMBFz2vDuA==",
                  "12884901891": "sThimaticGQ3LM8EJPJ7Og+mMn4Eg0lhE57VfMbcwNZRWyV2js6S0+Lvze1xvus67IQDMQqyHXrrBzJfw4N/1g==",
                  "12884901892": "qpqUt1t7A3jv4MD7gaUkjvH8uvEEAYRPAGMynYAnhIjrisJbxqURv+87cPlbv7oOhgkORMJLw26vkm5IEuz0Og==",
                  "12884901893": "M6T1N14pCCdAJV2t2eZRVg0eqZF/fgSC9batJObnfEzyjvCbijzSgLKzbRAhdsBowSxYCUBy/M5NmMBFz2vDuA==",
                  "12884901894": "zEDstma6VqQ5il6qPRsKZbyWOL8/23sYYCThUsGe9WQwNUhcqbHam0aUuwWrerVrNcGHfMgKUKyW0149GS2FBg==",
                  "12884901895": "p8o6NFZzHcIj97gcUggk5dVy/wcEr+2QX0uzWWDykcqjLwWOMGXg6pRnx7OnDi0kA4vWCOuZRUQ8Ks8WDo9dsw==",
                  "12884901896": "M6T1N14pCCdAJV2t2eZRVg0eqZF/fgSC9batJObnfEzyjvCbijzSgLKzbRAhdsBowSxYCUBy/M5NmMBFz2vDuA==",
                  "12884901897": "dObeCRg/MstAZuEWYB2hvLCLvEC+feZnCCfkEJOaPxA8FDDj7Xe5TxzZ7dOt5MrKunqbrxWe8wxXsdL0JXrxIw==",
                  "12884901898": "0pxJeDkriyq9idLPJaqRTP9bfa1ViMGu7KVAOpZMY1CNKofnlhJQCT2grvMCwbPz4acH4taX5g8M9M/DO44AZA==",
                  "12884901899": "M6T1N14pCCdAJV2t2eZRVg0eqZF/fgSC9batJObnfEzyjvCbijzSgLKzbRAhdsBowSxYCUBy/M5NmMBFz2vDuA==",
                  "12884901900": "nZyRjNj6jJZqhPkUA5+c4+1WJOJboCXTuXNQC55NWhGC7hztLABbBtZjtXUBvrIeOANYZtc/rwHkqrxY5sIdlg==",
                  "12884901901": "A/Kxpo2No6qHIK8y3iyan/kBdTZmAtQPBOrf1JgoGBqjMHuZ/FLlWE5Sk9FBtGQnJnPuskggUGe7t3elQqELow==",
                  "12884901902": "M6T1N14pCCdAJV2t2eZRVg0eqZF/fgSC9batJObnfEzyjvCbijzSgLKzbRAhdsBowSxYCUBy/M5NmMBFz2vDuA==",
                  "12884901903": "L/KrfhrpvYRxX6bGiT0lL6NZDMICREUzG8WuWhGqdLa1UdBFvzrpZT/FmfrMHeqxvaQJhDNOtPkWAn0ff8YdNw==",
                  "12884901904": "fPxp9r43dRMA5Y3s7lp6FRgBD5THqzKEpnQYwU8BKrV+cIO3z4qfj1/GXyphKESuj1Psk8DW0O3eKTGFqaAg0Q==",
                  "12884901905": "M6T1N14pCCdAJV2t2eZRVg0eqZF/fgSC9batJObnfEzyjvCbijzSgLKzbRAhdsBowSxYCUBy/M5NmMBFz2vDuA==",
                  "12884901906": "W1EQ27IdrlJRN/yKo3uvBi0ojcXTPKihG9GMEdwjqu1U83sIYkshlrwR7VYriB7b2sSxoXGiJDXoxbic3kg2Zg==",
                  "12884901907": "kWbgQFfIrpQaDEj3+XSBLZGUPG/eB6GtxaYCf4YlRl/hddqo4vHaCdMY+WZ2otW3R8tvUELqQayN4aipFshQog==",
                  "4294967297": "KP29GeZnm1Au1aBNyMifVKKFnmOzd0QN6yvHFqB/n9vx4Mk3qrJlGg5qitm2nmE5X9wBRyklaq5hS00SF6+X4g==",
                  "4294967298": "Qd7Ujfzo8pgdN7LnieAiVVDt1QDw3QJyqBP5dXX/4PlvQnsnJpGXsr5ynGFgqX+9t67bQA8Eaobf+agIMn+GJg==",
                  "4294967299": "G0bUwMGEwUqkQiCcj4R04tMFYAp3dSRhbU6dBPoLeX2lyTqPVGvreUvu5qov/OCoWc/Q5eaLopy2nQF9xeDEHw==",
                  "8589934593": "KP29GeZnm1Au1aBNyMifVKKFnmOzd0QN6yvHFqB/n9vx4Mk3qrJlGg5qitm2nmE5X9wBRyklaq5hS00SF6+X4g==",
                  "8589934594": "5TG5GEKblq+ttGkiE1lMOQxjulbMyDggsG3PWnpIhQIj68oVLuRMmFe5EYmopK0/wz3CkekBuu2c1kgFDXHaZg=="
                }
              },
              "source": "if (file(\"/etc/shadow\").exists) {\n  file(\"/etc/shadow\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
              "labels": {
                "labels": {
                  "0pxJeDkriyq9idLPJaqRTP9bfa1ViMGu7KVAOpZMY1CNKofnlhJQCT2grvMCwbPz4acH4taX5g8M9M/DO44AZA==": "permissions.group_executable == false",
                  "5TG5GEKblq+ttGkiE1lMOQxjulbMyDggsG3PWnpIhQIj68oVLuRMmFe5EYmopK0/wz3CkekBuu2c1kgFDXHaZg==": "file",
                  "A/Kxpo2No6qHIK8y3iyan/kBdTZmAtQPBOrf1JgoGBqjMHuZ/FLlWE5Sk9FBtGQnJnPuskggUGe7t3elQqELow==": "permissions.other_readable == false",
                  "G0bUwMGEwUqkQiCcj4R04tMFYAp3dSRhbU6dBPoLeX2lyTqPVGvreUvu5qov/OCoWc/Q5eaLopy2nQF9xeDEHw==": "if",
                  "fPxp9r43dRMA5Y3s7lp6FRgBD5THqzKEpnQYwU8BKrV+cIO3z4qfj1/GXyphKESuj1Psk8DW0O3eKTGFqaAg0Q==": "permissions.other_writeable == false",
                  "kWbgQFfIrpQaDEj3+XSBLZGUPG/eB6GtxaYCf4YlRl/hddqo4vHaCdMY+WZ2otW3R8tvUELqQayN4aipFshQog==": "permissions.other_executable == false",
                  "p8o6NFZzHcIj97gcUggk5dVy/wcEr+2QX0uzWWDykcqjLwWOMGXg6pRnx7OnDi0kA4vWCOuZRUQ8Ks8WDo9dsw==": "permissions.group_writeable == false",
                  "qpqUt1t7A3jv4MD7gaUkjvH8uvEEAYRPAGMynYAnhIjrisJbxqURv+87cPlbv7oOhgkORMJLw26vkm5IEuz0Og==": "permissions.user_executable == false"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "jx6ZnSyFr0o=": {
            "query": "asset { platform version build family title platformMetadata }",
            "checksum": "GROHYgrWRd4=",
            "datapoints": [
              "6Jmw4SvWNGUQWnNEC6bYKQtODzyw2fVYAss537ffZOtGT3P0gME7PU8eHmTp9RZ7gesPlRwl6DuMQUxI7WLLJw=="
            ],
            "code": {
              "code_v2": {
                "id": "jx6ZnSyFr0o=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "asset"
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001basset"
                        }
                      },
                      {
                        "call": 1,
                        "id": "platform",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "build",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "family",
                        "function": {
                          "type": "\u0019\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "title",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "platformMetadata",
                        "function": {
                          "type": "\u001a\u0007\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597,
                      8589934598,
                      8589934599
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "4294967298": "6Jmw4SvWNGUQWnNEC6bYKQtODzyw2fVYAss537ffZOtGT3P0gME7PU8eHmTp9RZ7gesPlRwl6DuMQUxI7WLLJw==",
                  "8589934593": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "8589934594": "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==",
                  "8589934595": "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==",
                  "8589934596": "3TWYjgHHwPsENByNa3TMI6Yb5TmgnAXWBMjU99wh/xbEjtdSGEqochTHTaKMOup9fRlgfqhPf1FosKhT8YEy2g==",
                  "8589934597": "l/aGjrixdNHvCxu5ib4NwkYb0Qrh3sKzcrGTkm7VxNWfWaaVbOxOEoGEMnjGJTo31jhYNeRm39/zpepZaSbUIw==",
                  "8589934598": "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==",
                  "8589934599": "9ftWfBaocfcm3AB+e5nM1PYcYTMDGxzqcghJYUCyf6ycN97mmwwVHBSKiwRo33XRItL2mhf/JdfDO9ynBHlUHw=="
                }
              },
              "source": "asset { platform version build family title platformMetadata }",
              "labels": {
                "labels": {
                  "3TWYjgHHwPsENByNa3TMI6Yb5TmgnAXWBMjU99wh/xbEjtdSGEqochTHTaKMOup9fRlgfqhPf1FosKhT8YEy2g==": "build",
                  "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": "version",
                  "6Jmw4SvWNGUQWnNEC6bYKQtODzyw2fVYAss537ffZOtGT3P0gME7PU8eHmTp9RZ7gesPlRwl6DuMQUxI7WLLJw==": "asset",
                  "9ftWfBaocfcm3AB+e5nM1PYcYTMDGxzqcghJYUCyf6ycN97mmwwVHBSKiwRo33XRItL2mhf/JdfDO9ynBHlUHw==": "platformMetadata",
                  "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": "title",
                  "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": "platform",
                  "l/aGjrixdNHvCxu5ib4NwkYb0Qrh3sKzcrGTkm7VxNWfWaaVbOxOEoGEMnjGJTo31jhYNeRm39/zpepZaSbUIw==": "family"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "9.0.0"
            }
          },
          "kv1OUBUCnBA=": {
            "query": "machine.baseboard.manufacturer",
            "checksum": "tM7zxjqGNac=",
            "datapoints": [
              "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ=="
            ],
            "code": {
              "code_v2": {
                "id": "kv1OUBUCnBA=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "machine.baseboard"
                      },
                      {
                        "call": 1,
                        "id": "manufacturer",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "SLkHw1QRP/d4HdSXhty6SQJEXHTHl4NayWFNsQfwpThs6Dz86/FwJY50OdYMWJKFkXpWMDmQ15sxyU5zTwIbdQ==",
                  "4294967298": "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ=="
                }
              },
              "source": "machine.baseboard.manufacturer",
              "labels": {
                "labels": {
                  "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ==": "machine.baseboard.manufacturer"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "l8G0PTcuvmM=": {
            "query": "machine.system { sku serial family version product uuid manufacturer }",
            "checksum": "HuVeRRHsG7s=",
            "datapoints": [
              "ANF22c2hJk/VGnp1zb6eP1uRao9RejTrGTHE4u8pfNBhdj5M2K/6O8ScVyAfzjc1ve2fMMwXtDpmOVBuCQQXUA=="
            ],
            "code": {
              "code_v2": {
                "id": "l8G0PTcuvmM=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "machine.system"
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bmachine.system"
                        }
                      },
                      {
                        "call": 1,
                        "id": "sku",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "serial",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "family",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "product",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "uuid",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "manufacturer",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597,
                      8589934598,
                      8589934599,
                      8589934600
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "zPCFq1xKCwF1utH7AOS+9LIRDGZywZpCXMHybotZLtVfQoZvbeEopNbE+Y9IPh0rgopMDHW4KpLXuvOu1ru+/Q==",
                  "4294967298": "ANF22c2hJk/VGnp1zb6eP1uRao9RejTrGTHE4u8pfNBhdj5M2K/6O8ScVyAfzjc1ve2fMMwXtDpmOVBuCQQXUA==",
                  "8589934593": "zPCFq1xKCwF1utH7AOS+9LIRDGZywZpCXMHybotZLtVfQoZvbeEopNbE+Y9IPh0rgopMDHW4KpLXuvOu1ru+/Q==",
                  "8589934594": "+Rpiw+y95pve6NdmfwMAkIBO5ll/BaWQFjU+qZptiB8AIOdD/mw57InEW4uFeiPeVhmC/BaM+zHn1IGkH4jHIg==",
                  "8589934595": "3c86iSf939fZ+ADosOSR227fyZj6oDaLpH4jGd2w99aQ4uQRP1rAYBK01F7JeEyX2TtdfwEO4Ru5nIxjt6muYw==",
                  "8589934596": "85jQV9l4ExsN+0ntxkZxGPtvQ9+as3H1p5Rv6V50AdoO5ei7OG/JV7RIZgyyUaxxDglQOTaL9SFv/OaFtJVQYg==",
                  "8589934597": "QjjfARZUYE8miuZG9hLV4g5US4DkpDQQzWZi30pNyWEm2xf0Y4oBg02jf1jhxeKQEvEU29USnHCJ4dO9B6AgFg==",
                  "8589934598": "U13WXTZIgKwQOQzKR9I9P0YJhL4Kv8cL3n+8XX7DWYhtVjjhbij44GSqdvRREQY5K6Hh6+T7cXynWuQ5UGx9dA==",
                  "8589934599": "wFZcIr3BFgqDo1oPXzkKRkVXQPF9+m/xn7qFpESbjWCLpZI311FDZ4BiGWZ+jkS4MjUJcjm0l/rOsvVqjUSHww==",
                  "8589934600": "ye3VeUThd9cTsrMEcTvHm/WeSCA+WZKSml7S+QlvRD1FoNiRABxOdCMEmzPSDDpXaD9q6O6ytb/KVCz+hgKrqQ=="
                }
              },
              "source": "machine.system { sku serial family version product uuid manufacturer }",
              "labels": {
                "labels": {
                  "+Rpiw+y95pve6NdmfwMAkIBO5ll/BaWQFjU+qZptiB8AIOdD/mw57InEW4uFeiPeVhmC/BaM+zHn1IGkH4jHIg==": "sku",
                  "3c86iSf939fZ+ADosOSR227fyZj6oDaLpH4jGd2w99aQ4uQRP1rAYBK01F7JeEyX2TtdfwEO4Ru5nIxjt6muYw==": "serial",
                  "85jQV9l4ExsN+0ntxkZxGPtvQ9+as3H1p5Rv6V50AdoO5ei7OG/JV7RIZgyyUaxxDglQOTaL9SFv/OaFtJVQYg==": "family",
                  "ANF22c2hJk/VGnp1zb6eP1uRao9RejTrGTHE4u8pfNBhdj5M2K/6O8ScVyAfzjc1ve2fMMwXtDpmOVBuCQQXUA==": "machine.system",
                  "QjjfARZUYE8miuZG9hLV4g5US4DkpDQQzWZi30pNyWEm2xf0Y4oBg02jf1jhxeKQEvEU29USnHCJ4dO9B6AgFg==": "version",
                  "U13WXTZIgKwQOQzKR9I9P0YJhL4Kv8cL3n+8XX7DWYhtVjjhbij44GSqdvRREQY5K6Hh6+T7cXynWuQ5UGx9dA==": "product",
                  "wFZcIr3BFgqDo1oPXzkKRkVXQPF9+m/xn7qFpESbjWCLpZI311FDZ4BiGWZ+jkS4MjUJcjm0l/rOsvVqjUSHww==": "uuid",
                  "ye3VeUThd9cTsrMEcTvHm/WeSCA+WZKSml7S+QlvRD1FoNiRABxOdCMEmzPSDDpXaD9q6O6ytb/KVCz+hgKrqQ==": "manufacturer"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "m7DAOFbL9Qg=": {
            "query": "file(\"/etc/group\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
            "checksum": "m7Ateb1hgmA=",
            "datapoints": [
              "8UFMaOXC4SMhWK+Vx/3T7dr6xt0crU2tSRurKy4l3M/pETdqnDy2+5XZAVoyskOku7hIGVb7HJ06XzuQhgvjMQ=="
            ],
            "code": {
              "code_v2": {
                "id": "m7DAOFbL9Qg=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9ncm91cA=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934594
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934595
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934597
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934598
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934600
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934601
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934603
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934604
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 8589934606
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 8589934607
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934596,
                      8589934599,
                      8589934602,
                      8589934605,
                      8589934608
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "47lUbMVcohV9T0n0OjMaDM1giwq0yVDE6WeFPDj8KY2bLdAwNvcPV7ALAoKUH6mWHuf3MiGbZEd9KbIiWEqx9g==",
                  "4294967298": "8UFMaOXC4SMhWK+Vx/3T7dr6xt0crU2tSRurKy4l3M/pETdqnDy2+5XZAVoyskOku7hIGVb7HJ06XzuQhgvjMQ==",
                  "8589934593": "47lUbMVcohV9T0n0OjMaDM1giwq0yVDE6WeFPDj8KY2bLdAwNvcPV7ALAoKUH6mWHuf3MiGbZEd9KbIiWEqx9g==",
                  "8589934594": "t0qfAWbHamxxFdhROfxtB19Na0PK9BZ3ir/HuiZAkpLtP4Dumg2BCcPoqIszI1Kwcsb+gcKpHwt59/nyiSNJxA==",
                  "8589934595": "U/0lCzJXhHmlwWA3Yd2VdSdbSD2GqcpgmWMVyGzU99piPzcjLWjzopMFY86h4y4W8K1multe4oaQni3sMvkINQ==",
                  "8589934596": "T6kVTKTUvH0kjW+0kDeqTJTGJWILlpfw3sxAIroDmYm+OgirCMfAzsHyM8lBkfG0pw9B4KBua8mQOseeDSa7Ew==",
                  "8589934597": "t0qfAWbHamxxFdhROfxtB19Na0PK9BZ3ir/HuiZAkpLtP4Dumg2BCcPoqIszI1Kwcsb+gcKpHwt59/nyiSNJxA==",
                  "8589934598": "ftoYhbtKsjW1ZLoWBsvUmiH1hfmuomkWDKX8mIpXLPpBt37Bj4HuoGeked9/xPTk8CEjNOhv0ULZNp2GLVS/Kw==",
                  "8589934599": "6xZ89WVFuqscxnATOLIf93cAiphgXQm3aFRplZQdBKNsN0+1bGQRqSG+1GQSi+d/W65JGC4jaOLkL7oMwyr7KQ==",
                  "8589934600": "t0qfAWbHamxxFdhROfxtB19Na0PK9BZ3ir/HuiZAkpLtP4Dumg2BCcPoqIszI1Kwcsb+gcKpHwt59/nyiSNJxA==",
                  "8589934601": "nZoGbZs9SaPZYGCnxWhQ8Sq8H0hZVUJRIwmIl51zPbnRgU28fRNpS67dUcw28qaN3A2uGrc0hiFOp6A/gkhRqw==",
                  "8589934602": "eJl6q+RojEp/oX7PfaKudFsvb8nEpO53+CSN4V2hXsE1Zlk1rl40eGlGPzZJ9ZpRGpwOo95zkhD/zRzNerPZTQ==",
                  "8589934603": "t0qfAWbHamxxFdhROfxtB19Na0PK9BZ3ir/HuiZAkpLtP4Dumg2BCcPoqIszI1Kwcsb+gcKpHwt59/nyiSNJxA==",
                  "8589934604": "OkLKzMT8hZFVQ9XZah4DLQhOyu7kly0+q2qy0qqA7AzMXgO5D2V4eK1fyP21N5tOmjpZZtYiOT4fpQ78ME0fAg==",
                  "8589934605": "n1Y5HxvVA9Di2gH3v9VAr9xdvpkZyCrLwj955fjcqfkY9rOXyo2wuYQRiH7CuQ77ZOmZgHDixTFrGXXworT2jw==",
                  "8589934606": "t0qfAWbHamxxFdhROfxtB19Na0PK9BZ3ir/HuiZAkpLtP4Dumg2BCcPoqIszI1Kwcsb+gcKpHwt59/nyiSNJxA==",
                  "8589934607": "e7Bm90fa7qsmouQ+GC8Lg+uBIQDXXGOGRjBKP2Jj16bbdf03XB8Y+IwFprvfwHz9rYROCeccHlA47Va74Ywfog==",
                  "8589934608": "czp3D0B37jHqcHlbZKW2DYWYZzL905MPXgIha6oFjvv/pZIdZ3ir4voQLdWCrrACm2ufUKPNOmXt18mQ8dDOWQ=="
                }
              },
              "source": "file(\"/etc/group\") {\n  permissions.user_executable == false\n  permissions.group_writeable == false\n  permissions.group_executable == false\n  permissions.other_writeable == false\n  permissions.other_executable == false\n}\n",
              "labels": {
                "labels": {
                  "6xZ89WVFuqscxnATOLIf93cAiphgXQm3aFRplZQdBKNsN0+1bGQRqSG+1GQSi+d/W65JGC4jaOLkL7oMwyr7KQ==": "permissions.group_writeable == false",
                  "8UFMaOXC4SMhWK+Vx/3T7dr6xt0crU2tSRurKy4l3M/pETdqnDy2+5XZAVoyskOku7hIGVb7HJ06XzuQhgvjMQ==": "file",
                  "T6kVTKTUvH0kjW+0kDeqTJTGJWILlpfw3sxAIroDmYm+OgirCMfAzsHyM8lBkfG0pw9B4KBua8mQOseeDSa7Ew==": "permissions.user_executable == false",
                  "czp3D0B37jHqcHlbZKW2DYWYZzL905MPXgIha6oFjvv/pZIdZ3ir4voQLdWCrrACm2ufUKPNOmXt18mQ8dDOWQ==": "permissions.other_executable == false",
                  "eJl6q+RojEp/oX7PfaKudFsvb8nEpO53+CSN4V2hXsE1Zlk1rl40eGlGPzZJ9ZpRGpwOo95zkhD/zRzNerPZTQ==": "permissions.group_executable == false",
                  "n1Y5HxvVA9Di2gH3v9VAr9xdvpkZyCrLwj955fjcqfkY9rOXyo2wuYQRiH7CuQ77ZOmZgHDixTFrGXXworT2jw==": "permissions.other_writeable == false"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "mpBx19SqXqo=": {
            "query": "machine.baseboard { manufacturer version serial assetTag product }",
            "checksum": "POqQwLcjCkU=",
            "datapoints": [
              "kvbn2Yj+Sqcv41rX1QLr8Pa/wcxZC+dyiDl9KUYv7F8q4jGETZ749fSrFV7Mm2qgK3fM/84Woxb0ni1c/rn2ow=="
            ],
            "code": {
              "code_v2": {
                "id": "mpBx19SqXqo=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "machine.baseboard"
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bmachine.baseboard"
                        }
                      },
                      {
                        "call": 1,
                        "id": "manufacturer",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "serial",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "assetTag",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "product",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596,
                      8589934597,
                      8589934598
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "SLkHw1QRP/d4HdSXhty6SQJEXHTHl4NayWFNsQfwpThs6Dz86/FwJY50OdYMWJKFkXpWMDmQ15sxyU5zTwIbdQ==",
                  "4294967298": "kvbn2Yj+Sqcv41rX1QLr8Pa/wcxZC+dyiDl9KUYv7F8q4jGETZ749fSrFV7Mm2qgK3fM/84Woxb0ni1c/rn2ow==",
                  "8589934593": "SLkHw1QRP/d4HdSXhty6SQJEXHTHl4NayWFNsQfwpThs6Dz86/FwJY50OdYMWJKFkXpWMDmQ15sxyU5zTwIbdQ==",
                  "8589934594": "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ==",
                  "8589934595": "MeEs7Gt3YEthahZXHgTqCSCyo7cnmZyDeZDGzaRLsxctZETzvEooOgyIqHLUU9SuPLnLehlYtHhuzaUTY8xEeA==",
                  "8589934596": "sHfTFR7F4kW3Wi0z8y2JwMy0oRqYLe6QmBrjua6C7V9ixU1Enhk+cQu2qHCrXejMhc81v0GEZPVUBfE50nThhg==",
                  "8589934597": "uVg+w3Gjpb//HxRp2UN6oAPsOTND8s2+InwLisg6K5CWxUoFkqCAf3CMUaAoJCE7XNFaI35i0OoMpudOtvz3Iw==",
                  "8589934598": "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw=="
                }
              },
              "source": "machine.baseboard { manufacturer version serial assetTag product }",
              "labels": {
                "labels": {
                  "MeEs7Gt3YEthahZXHgTqCSCyo7cnmZyDeZDGzaRLsxctZETzvEooOgyIqHLUU9SuPLnLehlYtHhuzaUTY8xEeA==": "version",
                  "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ==": "manufacturer",
                  "kvbn2Yj+Sqcv41rX1QLr8Pa/wcxZC+dyiDl9KUYv7F8q4jGETZ749fSrFV7Mm2qgK3fM/84Woxb0ni1c/rn2ow==": "machine.baseboard",
                  "sHfTFR7F4kW3Wi0z8y2JwMy0oRqYLe6QmBrjua6C7V9ixU1Enhk+cQu2qHCrXejMhc81v0GEZPVUBfE50nThhg==": "serial",
                  "uVg+w3Gjpb//HxRp2UN6oAPsOTND8s2+InwLisg6K5CWxUoFkqCAf3CMUaAoJCE7XNFaI35i0OoMpudOtvz3Iw==": "assetTag",
                  "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw==": "product"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "n2Oxd+mY57E=": {
            "query": "machine.bios { vendor version releaseDate }",
            "checksum": "r1O3sxA1pjY=",
            "datapoints": [
              "o79/eN5svDRVY7PTXsEyQaRNTF+XwKLUq1qTtO7WPq68D/oVRbsp6xjp/w5pbRWdd3pcPAZp/wNTSfaTtP6fcw=="
            ],
            "code": {
              "code_v2": {
                "id": "n2Oxd+mY57E=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "machine.bios"
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bmachine.bios"
                        }
                      },
                      {
                        "call": 1,
                        "id": "vendor",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "version",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "releaseDate",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594,
                      8589934595,
                      8589934596
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "LhaokaPOLUGyfyXQ9whg22BrDwRZsEq75q+d31V3sJNu09N1iICrTakTES+jQnlRCNqRjTW3GVhLphWt+J8hdA==",
                  "4294967298": "o79/eN5svDRVY7PTXsEyQaRNTF+XwKLUq1qTtO7WPq68D/oVRbsp6xjp/w5pbRWdd3pcPAZp/wNTSfaTtP6fcw==",
                  "8589934593": "LhaokaPOLUGyfyXQ9whg22BrDwRZsEq75q+d31V3sJNu09N1iICrTakTES+jQnlRCNqRjTW3GVhLphWt+J8hdA==",
                  "8589934594": "TqHMnC/G9hQ1jfVOdF6Wx4bFGV3ICT7rSmXZ1fOQFZJxMFEAVUNHpt3PI0BZNaBmOyfnoU7ED4QUbH8YGVFhTA==",
                  "8589934595": "8qvxP1ZL9QvPGvj4L+dBGixosz/gY+VODi3AKt2K1vOjlqcPudwgNNchOHG2fZsCw3i8aoTdAfGorf3DD+narQ==",
                  "8589934596": "HqJN2MGnBGm9LVxLnTmEmYfDf6Jwj6VTn/4wHYhABDOM9CSg9nz4DYzGrO+eWv0ywiBaQ3noeJV4z3Cts8ZQiw=="
                }
              },
              "source": "machine.bios { vendor version releaseDate }",
              "labels": {
                "labels": {
                  "8qvxP1ZL9QvPGvj4L+dBGixosz/gY+VODi3AKt2K1vOjlqcPudwgNNchOHG2fZsCw3i8aoTdAfGorf3DD+narQ==": "version",
                  "HqJN2MGnBGm9LVxLnTmEmYfDf6Jwj6VTn/4wHYhABDOM9CSg9nz4DYzGrO+eWv0ywiBaQ3noeJV4z3Cts8ZQiw==": "releaseDate",
                  "TqHMnC/G9hQ1jfVOdF6Wx4bFGV3ICT7rSmXZ1fOQFZJxMFEAVUNHpt3PI0BZNaBmOyfnoU7ED4QUbH8YGVFhTA==": "vendor",
                  "o79/eN5svDRVY7PTXsEyQaRNTF+XwKLUq1qTtO7WPq68D/oVRbsp6xjp/w5pbRWdd3pcPAZp/wNTSfaTtP6fcw==": "machine.bios"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "nTE51L+DiAo=": {
            "query": "users.where(name == \"root\").list.all(gid == 0)\n",
            "checksum": "x8zu7TJIZto=",
            "datapoints": [
              "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ==",
              "5tcBgzPZQz8/zm7UDznoBcP9St4ycw7/V4O91ZoA+XW9Vk1/amP/ow2gP8VKh0XV+fx1IaRBbfzoOT0OQ2pvWw=="
            ],
            "code": {
              "code_v2": {
                "id": "nTE51L+DiAo=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001busers",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "$whereNot",
                        "function": {
                          "type": "\u0019\u001buser",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "iICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967300
                        }
                      },
                      {
                        "call": 1,
                        "id": "$all",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967301
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgIAB"
                            }
                          ],
                          "binding": 4294967301
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967302
                    ],
                    "datapoints": [
                      4294967303
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cm9vdA=="
                            }
                          ],
                          "binding": 8589934594
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934595
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901890
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901891
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 17179869185
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      17179869186,
                      17179869187,
                      17179869188
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "yfhDwkrWsSDQyT0DZR0Gb+WRVF6TlHvZlm5SdIU1YJgSYEERGutcwM1bXnDRGfYRd9zaNJEbuZtapJDYkBJb3Q==",
                  "12884901890": "aBOtIXBPoe9nWUDBl9sr+N5w+QLjyg8Vsr5dDM1hapmEyb4hX9KM2Q87iKM2mFWBHve+BMe/lARHrXwwyfvOxA==",
                  "12884901891": "ytOUfV4UyOjY0C6HKzQ8GcA/hshrh2ahRySNG41RbFt3TNNf+6gBuHvs2hGTNDPUZR/oN8WH0QFIYYm/Vj3pGQ==",
                  "17179869185": "keOIkIFuA67ce1ygqh2M+h8s9+nS7E4+IOiuZQBD3hCGcP5VLPsMTV9ZuqokGh2WwmjpFrXEHaeGAMtfR0160w==",
                  "17179869186": "1HU9IqH76hpnLmS0apeODag8Zhg2bE1E6IRuWlJXltvuLeqAEUq5AA3U2lZzRYHWFnjTMT2i1vRHXtnc0dkrtQ==",
                  "17179869187": "LvKnKRRcnT+P/dNfnYRCSS0MdHWKJXN23s1dZzk3zJZHSq5wrrtkhKvHB7WnURT3m/WBASo3cpH6Ieb+v4JJ8w==",
                  "17179869188": "hAIyH8ueriI1NM9VwRHs+H6ZGuPh8KejO01CLnjAMv7mo1JrSAFESaHeJrORuFykIr5mu/e7vINAAmoS1uES+A==",
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "rd1ECm3SGP7C8IsoIPOsXzDN4uvG7NLAMuDBEYhQ58JBbFd6ZizTVIAO5k/PUtaQ0jhwo26WQpUP2xhAvZ9spQ==",
                  "4294967300": "yfhDwkrWsSDQyT0DZR0Gb+WRVF6TlHvZlm5SdIU1YJgSYEERGutcwM1bXnDRGfYRd9zaNJEbuZtapJDYkBJb3Q==",
                  "4294967301": "keOIkIFuA67ce1ygqh2M+h8s9+nS7E4+IOiuZQBD3hCGcP5VLPsMTV9ZuqokGh2WwmjpFrXEHaeGAMtfR0160w==",
                  "4294967302": "5tcBgzPZQz8/zm7UDznoBcP9St4ycw7/V4O91ZoA+XW9Vk1/amP/ow2gP8VKh0XV+fx1IaRBbfzoOT0OQ2pvWw==",
                  "4294967303": "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ==",
                  "8589934593": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "8589934594": "aLOs60Bp+9XAh+qeKj3wkHCOG2MJ1sctbsELR4mqoTDIaWwIL8mpSwMxgZw73uVkh6FiV12I/8sT9UJdyIvNXA==",
                  "8589934595": "U589bJpf8u7c2pIN5qJ8xXFBubZEtQ0eYU9C6g87/lGZLkVD02X5DgroJF082O0ek5tt6Q05chLymT/4nE8Zfg=="
                }
              },
              "source": "users.where(name == \"root\").list.all(gid == 0)\n",
              "labels": {
                "labels": {
                  "1HU9IqH76hpnLmS0apeODag8Zhg2bE1E6IRuWlJXltvuLeqAEUq5AA3U2lZzRYHWFnjTMT2i1vRHXtnc0dkrtQ==": "name",
                  "5tcBgzPZQz8/zm7UDznoBcP9St4ycw7/V4O91ZoA+XW9Vk1/amP/ow2gP8VKh0XV+fx1IaRBbfzoOT0OQ2pvWw==": "[].all()",
                  "LvKnKRRcnT+P/dNfnYRCSS0MdHWKJXN23s1dZzk3zJZHSq5wrrtkhKvHB7WnURT3m/WBASo3cpH6Ieb+v4JJ8w==": "uid",
                  "U589bJpf8u7c2pIN5qJ8xXFBubZEtQ0eYU9C6g87/lGZLkVD02X5DgroJF082O0ek5tt6Q05chLymT/4nE8Zfg==": "name == \"root\"",
                  "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ==": "users.where.list.$whereNot",
                  "hAIyH8ueriI1NM9VwRHs+H6ZGuPh8KejO01CLnjAMv7mo1JrSAFESaHeJrORuFykIr5mu/e7vINAAmoS1uES+A==": "gid",
                  "ytOUfV4UyOjY0C6HKzQ8GcA/hshrh2ahRySNG41RbFt3TNNf+6gBuHvs2hGTNDPUZR/oN8WH0QFIYYm/Vj3pGQ==": "gid == 0"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ==": 17179869184
              }
            }
          },
          "pIimpRGhyBc=": {
            "query": "asset.title",
            "checksum": "mp6J1CYO2Gs=",
            "datapoints": [
              "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ=="
            ],
            "code": {
              "code_v2": {
                "id": "pIimpRGhyBc=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "asset"
                      },
                      {
                        "call": 1,
                        "id": "title",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "4294967298": "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ=="
                }
              },
              "source": "asset.title",
              "labels": {
                "labels": {
                  "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": "asset.title"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "6.13.0"
            }
          },
          "qXLiKKJcpv8=": {
            "query": "asset.platform",
            "checksum": "Gx1Ew5IEouk=",
            "datapoints": [
              "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ=="
            ],
            "code": {
              "code_v2": {
                "id": "qXLiKKJcpv8=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "asset"
                      },
                      {
                        "call": 1,
                        "id": "platform",
                        "function": {
                          "type": "\u0007",
                          "binding": 4294967297
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967298
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "dF6HAf6V9ja6/qinBEYOqYV1dKAZGbip8+IiGLR6K1yTGNFQLOJrlvJMdXNwfvXDB/HadfalPvS8lW7P285OCw==",
                  "4294967298": "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ=="
                }
              },
              "source": "asset.platform",
              "labels": {
                "labels": {
                  "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": "asset.platform"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "6.13.0"
            }
          },
          "tLW4zUJij+I=": {
            "query": "sshd.config.params[\"StrictModes\"] == \"yes\"",
            "checksum": "jlTW0TqXRFk=",
            "datapoints": [
              "+kCnzP6P15iffB7fsSLxopgvKnvzgc/3r+tVJKi0/jXOuzSiB+kuL07/4iiiJJcQuwSzmD8ERaS7ivitzXV7FA==",
              "OSG/mAQsQ08cruLamBggOYG8t2LKZwGF9iVNcSn1u8IAlfikLhKrZSYpDYAzm/4mfiIwbjrI1Q+Cw/8fzfcLPA=="
            ],
            "code": {
              "code_v2": {
                "id": "tLW4zUJij+I=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "sshd.config"
                      },
                      {
                        "call": 1,
                        "id": "params",
                        "function": {
                          "type": "\u001a\u0007\u0007",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "[]",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "U3RyaWN0TW9kZXM="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "eWVz"
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967299
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "h1EPuzo5A02wYUOeDzbzv9YfwPO5Km0r1tmJ0UOceHGyO+M2vrEpnF3/XVJu0hOtyAITe0M4O6XOjLOTc8i8lA==",
                  "4294967298": "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw==",
                  "4294967299": "+kCnzP6P15iffB7fsSLxopgvKnvzgc/3r+tVJKi0/jXOuzSiB+kuL07/4iiiJJcQuwSzmD8ERaS7ivitzXV7FA==",
                  "4294967300": "OSG/mAQsQ08cruLamBggOYG8t2LKZwGF9iVNcSn1u8IAlfikLhKrZSYpDYAzm/4mfiIwbjrI1Q+Cw/8fzfcLPA=="
                }
              },
              "source": "sshd.config.params[\"StrictModes\"] == \"yes\"",
              "labels": {
                "labels": {
                  "+kCnzP6P15iffB7fsSLxopgvKnvzgc/3r+tVJKi0/jXOuzSiB+kuL07/4iiiJJcQuwSzmD8ERaS7ivitzXV7FA==": "sshd.config.params[StrictModes]",
                  "OSG/mAQsQ08cruLamBggOYG8t2LKZwGF9iVNcSn1u8IAlfikLhKrZSYpDYAzm/4mfiIwbjrI1Q+Cw/8fzfcLPA==": "sshd.config.params[StrictModes] == \"yes\""
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "usnsqpdfgm4=": {
            "query": "users.where( name != \"root\" \u0026\u0026 name != \"sync\" \u0026\u0026 name != \"shutdown\" \u0026\u0026 name != \"halt\" ).where( uid \u003c 1000 ).list {\n  shell == \"/usr/bin/nologin\" || shell == \"/sbin/nologin\" || shell == \"/usr/sbin/nologin\"\n}\n",
            "checksum": "MQ7xZ8n2G30=",
            "datapoints": [
              "N6OGcsq2186ftBhko1yfnn6Dgbmd+R5SvlBcylRBdep3Dg+KDFT2L0HiBnXJZ1jK/yTtTQ3PFBtevIs0jYmloQ=="
            ],
            "code": {
              "code_v2": {
                "id": "usnsqpdfgm4=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001busers",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "where",
                        "function": {
                          "type": "\u001busers",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "iICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967301
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgIAB"
                            }
                          ],
                          "binding": 4294967302
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967303
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cm9vdA=="
                            }
                          ],
                          "binding": 8589934594
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "c3luYw=="
                            }
                          ],
                          "binding": 8589934596
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0026\u0026\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "ioCAgEA="
                            }
                          ],
                          "binding": 8589934595
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "c2h1dGRvd24="
                            }
                          ],
                          "binding": 8589934599
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0026\u0026\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "kICAgEA="
                            }
                          ],
                          "binding": 8589934598
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 8589934593
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "aGFsdA=="
                            }
                          ],
                          "binding": 8589934602
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u0026\u0026\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "loCAgEA="
                            }
                          ],
                          "binding": 8589934601
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934604
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "\u003c\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "0A8="
                            }
                          ],
                          "binding": 12884901890
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901891
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "shell",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "L3Vzci9iaW4vbm9sb2dpbg=="
                            }
                          ],
                          "binding": 17179869186
                        }
                      },
                      {
                        "call": 1,
                        "id": "shell",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "L3NiaW4vbm9sb2dpbg=="
                            }
                          ],
                          "binding": 17179869188
                        }
                      },
                      {
                        "call": 1,
                        "id": "||\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "ioCAgIAB"
                            }
                          ],
                          "binding": 17179869187
                        }
                      },
                      {
                        "call": 1,
                        "id": "shell",
                        "function": {
                          "type": "\u0007",
                          "binding": 17179869185
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0007",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "L3Vzci9zYmluL25vbG9naW4="
                            }
                          ],
                          "binding": 17179869191
                        }
                      },
                      {
                        "call": 1,
                        "id": "||\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "kICAgIAB"
                            }
                          ],
                          "binding": 17179869190
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      17179869193
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "l6DKLClRlu0No1I8jW1mfLntRBlW7Uz0UTtZXATwc9b5GxZamdUOEKjoVUEQ7CEW4N+/490Z8Mv5VGgNJCB2Vg==",
                  "12884901890": "O3/6TccZ1tGzOqKjR9Rib7MR/QrItPtajw4mZ0nwNO/XYNaDpPpp2Qf+qNB/BNn86KSeBB0KdtJNCrCk2rW4Cw==",
                  "12884901891": "xPk5uHkoOcpEltnu7oZMqFsousKcUq/YvTV+o9887t01y+FXF6tUbYJPoyeJlUF0eSqhuhfXlDlJkNHCW7DOOg==",
                  "17179869185": "2xk6ZUiXx3ZFJSwXdKkA8GL2PQwRw/Jv7aFVK3rBC4tlIqA+8BikEe5PK7a0G6smap/CsWqHZsRxrQ1NlqB8nQ==",
                  "17179869186": "EwMj4aGq5ekGGmU5VKoJUX8JMFxgRmHiKW1JKZxSgk5K4J8I0lw4ZcqiufDRoJBF6or27BqCODweoJwqmyTdQw==",
                  "17179869187": "QcAxvLYFnSLafB2FtwOFGGKcIermNyAY/tbsnwoJCLzhctzd9j3rvRMt1KALowunAmeL5awInxZuzWc8SHpR3A==",
                  "17179869188": "EwMj4aGq5ekGGmU5VKoJUX8JMFxgRmHiKW1JKZxSgk5K4J8I0lw4ZcqiufDRoJBF6or27BqCODweoJwqmyTdQw==",
                  "17179869189": "VNUiL8e09Iu0BjWvc1x43bhLryvjGlZ5tv7H0j9099AEKWxxdt7l45wkTVKjgDDfncmdNcXOYqWD+4yohtHjGQ==",
                  "17179869190": "OTITuX2RcXyInC3/0vXULuQY0h7jd2QOBKOK+saQ2yk3mpFaI7SEitPMdODFoRtASynUQUUtgsDo1PuqPfMoGA==",
                  "17179869191": "EwMj4aGq5ekGGmU5VKoJUX8JMFxgRmHiKW1JKZxSgk5K4J8I0lw4ZcqiufDRoJBF6or27BqCODweoJwqmyTdQw==",
                  "17179869192": "J5BnEmsKONF9PCnlHBIYGHbBRZWj8kSXFNLstCUgaCemdZZiCCZvmtq9InGBxNGBd/rEITNA4JTCOxoH9ZvvPw==",
                  "17179869193": "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==",
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "l6DKLClRlu0No1I8jW1mfLntRBlW7Uz0UTtZXATwc9b5GxZamdUOEKjoVUEQ7CEW4N+/490Z8Mv5VGgNJCB2Vg==",
                  "4294967300": "gdi2D5AhNvZHuVEMe04ffReSBynCqp34kBuW7mpXomAuFU+10KMnyVaqDDbOq6X5lFuay5AJHURXJ8xwt9X0yw==",
                  "4294967301": "aHIUr+h2LDmBv2LCoi5lV5WBeO2jDQ76hD/dOkBR7TPb4PgU4vhgDdZD9bGnhaAWW4unymW7uHLv4BadGP/EtQ==",
                  "4294967302": "2xk6ZUiXx3ZFJSwXdKkA8GL2PQwRw/Jv7aFVK3rBC4tlIqA+8BikEe5PK7a0G6smap/CsWqHZsRxrQ1NlqB8nQ==",
                  "4294967303": "N6OGcsq2186ftBhko1yfnn6Dgbmd+R5SvlBcylRBdep3Dg+KDFT2L0HiBnXJZ1jK/yTtTQ3PFBtevIs0jYmloQ==",
                  "8589934593": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "8589934594": "aLOs60Bp+9XAh+qeKj3wkHCOG2MJ1sctbsELR4mqoTDIaWwIL8mpSwMxgZw73uVkh6FiV12I/8sT9UJdyIvNXA==",
                  "8589934595": "vvgloGIoYrYP+6zMENGl8naDUGgxiHuxNKTWFvP4CAtNC98XRYHVZwBFkf0Kulm1oV45RlVHm1oTT2GOhpzYFw==",
                  "8589934596": "aLOs60Bp+9XAh+qeKj3wkHCOG2MJ1sctbsELR4mqoTDIaWwIL8mpSwMxgZw73uVkh6FiV12I/8sT9UJdyIvNXA==",
                  "8589934597": "1p9rDDV3zOYyZI6QJDFV6FYW4+4MjUNMFNLsJ4AvMRalxzu1X5vDIiSDQRq5h4rWXcd1Wv71vuXH+PX+f/dIoQ==",
                  "8589934598": "kJishvWuL81vg2Dr3JP/8MhtSatYkzWR1xQl5aLRkoqRXNAykhxozn7v9aBQM0Zn8RV1p7lwUBWuuLPQiwknhw==",
                  "8589934599": "aLOs60Bp+9XAh+qeKj3wkHCOG2MJ1sctbsELR4mqoTDIaWwIL8mpSwMxgZw73uVkh6FiV12I/8sT9UJdyIvNXA==",
                  "8589934600": "0E71c1Vpc+L4pwkEI5A2QnyzznhWKRhQpDmSTU+0/N/qdbdNGAKt5eA0tqkyyS6VT29amrFQ5woIAD+5sS3nKw==",
                  "8589934601": "FiEs7J0mA3+L05o/5O+q3YL+i9mU2Mv2zxJrf871nvbl0N1alY+qXH6X4qQvG/R0tmcvjWjnai6IO1M9v9LdZQ==",
                  "8589934602": "aLOs60Bp+9XAh+qeKj3wkHCOG2MJ1sctbsELR4mqoTDIaWwIL8mpSwMxgZw73uVkh6FiV12I/8sT9UJdyIvNXA==",
                  "8589934603": "vo08tMyPTonkye/RH09X7fDhU6fl10/qbcXiaCZDBiO+iYyoAEgf1aMTR+mnlljxSZwjHp/rdkh3Ec7yD2krjw==",
                  "8589934604": "cLhn8+EXSdnuD2VvsLp1pG8vsX6IH8t38ys/31B6QTo8Dd1YA9Vi+EdEvvTbPvnpSodAKqlh324drWm7cNXvpw=="
                }
              },
              "source": "users.where( name != \"root\" \u0026\u0026 name != \"sync\" \u0026\u0026 name != \"shutdown\" \u0026\u0026 name != \"halt\" ).where( uid \u003c 1000 ).list {\n  shell == \"/usr/bin/nologin\" || shell == \"/sbin/nologin\" || shell == \"/usr/sbin/nologin\"\n}\n",
              "labels": {
                "labels": {
                  "N6OGcsq2186ftBhko1yfnn6Dgbmd+R5SvlBcylRBdep3Dg+KDFT2L0HiBnXJZ1jK/yTtTQ3PFBtevIs0jYmloQ==": "users.where.where.list",
                  "NKtNJ3PbnjvS0gAhMoKfBMpStZTKqX+glzIHobGtAiaEgoE/FOyN2VLntgHZZuR4XhgW6WxKCefWqLzwbnL3oQ==": "shell == \"/usr/bin/nologin\" || \u003cref\u003e || \u003cref\u003e",
                  "cLhn8+EXSdnuD2VvsLp1pG8vsX6IH8t38ys/31B6QTo8Dd1YA9Vi+EdEvvTbPvnpSodAKqlh324drWm7cNXvpw==": "name != \"root\" \u0026\u0026 \u003cref\u003e \u0026\u0026 \u003cref\u003e \u0026\u0026 \u003cref\u003e",
                  "xPk5uHkoOcpEltnu7oZMqFsousKcUq/YvTV+o9887t01y+FXF6tUbYJPoyeJlUF0eSqhuhfXlDlJkNHCW7DOOg==": "uid \u003c 1000"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "vdDFAY9Qxko=": {
            "query": "if (file(\"/etc/gshadow-\").exists) {\n  file(\"/etc/gshadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
            "checksum": "0AE5fdbzkgA=",
            "datapoints": [
              "Du9pIpUoqm70Hbkk8MN4QKib35zuHmPRHjPC99qQyzN/WyImA+6x4gpaODsnDQNp545XqXx/EjY1vSWhYwIrOw=="
            ],
            "code": {
              "code_v2": {
                "id": "vdDFAY9Qxko=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9nc2hhZG93LQ=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "exists",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "if",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            },
                            {
                              "type": "\u0019\u0003"
                            }
                          ]
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967299
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "file",
                        "function": {
                          "type": "\u001bfile",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "cGF0aA=="
                            },
                            {
                              "type": "\u0007",
                              "value": "L2V0Yy9nc2hhZG93LQ=="
                            }
                          ]
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 8589934593
                        }
                      }
                    ],
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bfile"
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "user_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901890
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901891
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901893
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901894
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "group_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901896
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901897
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_readable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901899
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901900
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_writeable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901902
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901903
                        }
                      },
                      {
                        "call": 1,
                        "id": "permissions",
                        "function": {
                          "type": "\u001bfile.permissions",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "other_executable",
                        "function": {
                          "type": "\u0004",
                          "binding": 12884901905
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0004",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0004",
                              "value": "AA=="
                            }
                          ],
                          "binding": 12884901906
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901892,
                      12884901895,
                      12884901898,
                      12884901901,
                      12884901904,
                      12884901907
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "fpkfDGp61nGYJYARIHZDYSfGKhto1XPbp2ChGzXLCb7wVqIiAw7tmn7rXxr5Vg5XS/FMqs8WSR+xpg1uPA/UfQ==",
                  "12884901890": "0zmkozib3O+K8n7gctyhzIuCV6vNgYUKkrRUiMsjcXhvpROhxCzQQudEH2do5VwbUyjaF7Z1Oa2/OMQXlkJ+Pg==",
                  "12884901891": "JZ9Floko4xuZWaQ6MfJ3UpwFlAheC8XiO0hYCKCGGXa04YxVeUhwYjGfglCRNbmJnZHHVLTLdPUc8KR2lIErIQ==",
                  "12884901892": "GFbwLVOxQMOCwP9vI4mj+437bIHi1jEihUM0LC+/51CMFlpuZ1dsIFQQMZrxJEdqUdLvHlD4W1YCreqRP1PPYg==",
                  "12884901893": "0zmkozib3O+K8n7gctyhzIuCV6vNgYUKkrRUiMsjcXhvpROhxCzQQudEH2do5VwbUyjaF7Z1Oa2/OMQXlkJ+Pg==",
                  "12884901894": "+TKnIXLxiVkYDcrdFH/V/rCu/hwCY2bU3WJWtSKRHR7xxBj/YOI9sFT9k4HE5NBN+oqJ8ur4ojYPVVq4PtrhmA==",
                  "12884901895": "tJpX5XEphcQLluFTJIbRp12uGSJtPIxjMaoIwi++EJjQcEtWPmqTRlIfR+yq7WoO70jFXwTkEdrZrDIFKJH5ig==",
                  "12884901896": "0zmkozib3O+K8n7gctyhzIuCV6vNgYUKkrRUiMsjcXhvpROhxCzQQudEH2do5VwbUyjaF7Z1Oa2/OMQXlkJ+Pg==",
                  "12884901897": "olsuTbO9ZkxN00zLp83ZFULblu+VQWhfq/k/OfP0c3639H5Cbe3QOaBGDeFNNZxYu6UZ20Wh+jLXOsGsSmH5jQ==",
                  "12884901898": "usfVVcXyLjhf3+zaGAFt2qqIVA4y0m0RzTHBvOUhPWhRzWl63LMWb+l5RxbJ+MiwNQb77QkQrODM2trAoKl5+g==",
                  "12884901899": "0zmkozib3O+K8n7gctyhzIuCV6vNgYUKkrRUiMsjcXhvpROhxCzQQudEH2do5VwbUyjaF7Z1Oa2/OMQXlkJ+Pg==",
                  "12884901900": "+Oii9J9Qmgg64zGEFeHWbsH3cextdzt9vZj77B9Pa/m+FJ0OBzPtLteo2KR+q+KDzHrJWuqIZDp3sYyBcfwdJQ==",
                  "12884901901": "vhwRx1EzASN38Sf53EbfXebyqrsciV02siM3eXPcfl6StjAY6Lq2F4b7Uwbbhdu9A+F3MVpEjH4BuvsH7v7lpw==",
                  "12884901902": "0zmkozib3O+K8n7gctyhzIuCV6vNgYUKkrRUiMsjcXhvpROhxCzQQudEH2do5VwbUyjaF7Z1Oa2/OMQXlkJ+Pg==",
                  "12884901903": "vCNuRUL0hAqH3FZ0RAiDfYceWDVtIFkKbzF4/iXXrLPtjIDfqRjhmTo4BKB1CUFYyyrZL9/0y49S6dUjBT+ewg==",
                  "12884901904": "kXoTf3+4XxQt80h3j0zXw3BRjgmGWMxZHZ7Yz/CIN4wgmTYg17DGCyVD/3L+vr0tPBenzomspkLkWjCq3u+67g==",
                  "12884901905": "0zmkozib3O+K8n7gctyhzIuCV6vNgYUKkrRUiMsjcXhvpROhxCzQQudEH2do5VwbUyjaF7Z1Oa2/OMQXlkJ+Pg==",
                  "12884901906": "HCEMReh2eMg/DtGRFziD87SUUCYDO1gv0YY8QQmlkPtipOtfOsK99usIRILBhRa21tqdTl2twcbheD1sYfvjSg==",
                  "12884901907": "dsn9lk+Kw0cUH2+LTVZZ4ofmkzY4EBcKcYDgAQj8Rd+U0IJ+bTdDKPPrG9r4m+iIQ3v5s78IwxY11jxdwi+QRA==",
                  "4294967297": "fpkfDGp61nGYJYARIHZDYSfGKhto1XPbp2ChGzXLCb7wVqIiAw7tmn7rXxr5Vg5XS/FMqs8WSR+xpg1uPA/UfQ==",
                  "4294967298": "yMS+RmTLTYQelRzF3SDe7cng23YFGxh4iBIpvrjMBhgDNYCk8ThCLD1RVMbhzKzJUxHm5wKxV64JIiVXK/nKpA==",
                  "4294967299": "Du9pIpUoqm70Hbkk8MN4QKib35zuHmPRHjPC99qQyzN/WyImA+6x4gpaODsnDQNp545XqXx/EjY1vSWhYwIrOw==",
                  "8589934593": "fpkfDGp61nGYJYARIHZDYSfGKhto1XPbp2ChGzXLCb7wVqIiAw7tmn7rXxr5Vg5XS/FMqs8WSR+xpg1uPA/UfQ==",
                  "8589934594": "Z7yy8WEpZNXv+MN3IfLXfzDV6VNdI7G+hnCtf9kABXbMVw/TPe76uYbqYWN0661+tGZgV3rJOngT/DAu6cT6tA=="
                }
              },
              "source": "if (file(\"/etc/gshadow-\").exists) {\n  file(\"/etc/gshadow-\") {\n    permissions.user_executable == false\n    permissions.group_writeable == false\n    permissions.group_executable == false\n    permissions.other_readable == false\n    permissions.other_writeable == false\n    permissions.other_executable == false\n  }\n}\n",
              "labels": {
                "labels": {
                  "Du9pIpUoqm70Hbkk8MN4QKib35zuHmPRHjPC99qQyzN/WyImA+6x4gpaODsnDQNp545XqXx/EjY1vSWhYwIrOw==": "if",
                  "GFbwLVOxQMOCwP9vI4mj+437bIHi1jEihUM0LC+/51CMFlpuZ1dsIFQQMZrxJEdqUdLvHlD4W1YCreqRP1PPYg==": "permissions.user_executable == false",
                  "Z7yy8WEpZNXv+MN3IfLXfzDV6VNdI7G+hnCtf9kABXbMVw/TPe76uYbqYWN0661+tGZgV3rJOngT/DAu6cT6tA==": "file",
                  "dsn9lk+Kw0cUH2+LTVZZ4ofmkzY4EBcKcYDgAQj8Rd+U0IJ+bTdDKPPrG9r4m+iIQ3v5s78IwxY11jxdwi+QRA==": "permissions.other_executable == false",
                  "kXoTf3+4XxQt80h3j0zXw3BRjgmGWMxZHZ7Yz/CIN4wgmTYg17DGCyVD/3L+vr0tPBenzomspkLkWjCq3u+67g==": "permissions.other_writeable == false",
                  "tJpX5XEphcQLluFTJIbRp12uGSJtPIxjMaoIwi++EJjQcEtWPmqTRlIfR+yq7WoO70jFXwTkEdrZrDIFKJH5ig==": "permissions.group_writeable == false",
                  "usfVVcXyLjhf3+zaGAFt2qqIVA4y0m0RzTHBvOUhPWhRzWl63LMWb+l5RxbJ+MiwNQb77QkQrODM2trAoKl5+g==": "permissions.group_executable == false",
                  "vhwRx1EzASN38Sf53EbfXebyqrsciV02siM3eXPcfl6StjAY6Lq2F4b7Uwbbhdu9A+F3MVpEjH4BuvsH7v7lpw==": "permissions.other_readable == false"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          },
          "vf3LKN6rpLg=": {
            "query": "groups.list.duplicates(gid).none()\n",
            "checksum": "fo6DvYCz3NQ=",
            "datapoints": [
              "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g==",
              "wqBMlXbmQSD5agbjcVBO765mJg9Fzk/jOE/5PQtEu4HX/IOZ/DbSqCkml6Gb16wcJn0O3ePnfI/AqgtJz0nWbg=="
            ],
            "code": {
              "code_v2": {
                "id": "vf3LKN6rpLg=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "groups"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "fieldDuplicates",
                        "function": {
                          "type": "\u0019\u001bgroup",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "$none",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 8589934593
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934594
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001bgroup"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "SK/o4xUKS07SVHcJ8c7HyiveAf3mx66Ch7KCFYBhRndmQNGzRMM0CuSXN3dT9ofnlswBzVn/6N2SbIcfXN6GMg==",
                  "12884901890": "FSDjssH3Tpcmp81WCOD4OLUMY/O+kO7v2yurHWg9AsGN1oW+N7jzTrZIh54m31pi/GA/qJg4GQ6a/lfrtl6RSA==",
                  "12884901891": "ojGqzmX9jvYjYLAgWrj2f/tJS47y985bGa9EPuuVLLDrBuaiZLpzA+Accg+3Y3sZgqCpUSwzg7rNXgkh+ff/wA==",
                  "4294967297": "hN+zdlS1zCr2uSYHuDkFrlkQSlfFEr7Zmtmo19E4oNY7ikyHr/Sib1zktPVfYSEC2503pPKnD3hcWyZm3b/uyQ==",
                  "4294967298": "NIEHm9kmH9Dzz0fqfrQWcSNNntroglgakmg+r5TZd2szBtUd/n1TukpBYKYy6vBd3w4umvEVa4gPlkHyeldBNw==",
                  "4294967299": "SK/o4xUKS07SVHcJ8c7HyiveAf3mx66Ch7KCFYBhRndmQNGzRMM0CuSXN3dT9ofnlswBzVn/6N2SbIcfXN6GMg==",
                  "4294967300": "wqBMlXbmQSD5agbjcVBO765mJg9Fzk/jOE/5PQtEu4HX/IOZ/DbSqCkml6Gb16wcJn0O3ePnfI/AqgtJz0nWbg==",
                  "4294967301": "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g==",
                  "8589934593": "NIEHm9kmH9Dzz0fqfrQWcSNNntroglgakmg+r5TZd2szBtUd/n1TukpBYKYy6vBd3w4umvEVa4gPlkHyeldBNw==",
                  "8589934594": "0BgIsZsix94mgi6S0XWEsTVpEr43Toa23lodR1fMxp8mwaAAiaEx6l6B8nbwZQdka4Jfba21v5U6MATpO0ao0w=="
                }
              },
              "source": "groups.list.duplicates(gid).none()\n",
              "labels": {
                "labels": {
                  "0BgIsZsix94mgi6S0XWEsTVpEr43Toa23lodR1fMxp8mwaAAiaEx6l6B8nbwZQdka4Jfba21v5U6MATpO0ao0w==": "gid",
                  "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g==": "groups.list.fieldDuplicates",
                  "FSDjssH3Tpcmp81WCOD4OLUMY/O+kO7v2yurHWg9AsGN1oW+N7jzTrZIh54m31pi/GA/qJg4GQ6a/lfrtl6RSA==": "name",
                  "ojGqzmX9jvYjYLAgWrj2f/tJS47y985bGa9EPuuVLLDrBuaiZLpzA+Accg+3Y3sZgqCpUSwzg7rNXgkh+ff/wA==": "gid",
                  "wqBMlXbmQSD5agbjcVBO765mJg9Fzk/jOE/5PQtEu4HX/IOZ/DbSqCkml6Gb16wcJn0O3ePnfI/AqgtJz0nWbg==": "[].none()"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g==": 12884901888
              }
            }
          },
          "wE8/X4w6/GQ=": {
            "query": "users.list.all(gid != empty)\n",
            "checksum": "2yZqWk88Hmk=",
            "datapoints": [
              "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg==",
              "Ft7Jxk6egFeEfekzy9up3kbujKcTudJA6dcsS5nmUN5/GA5GWgvEPNW6BirbXZ10qgWuP8T3ILrx4WGESSNi7w=="
            ],
            "code": {
              "code_v2": {
                "id": "wE8/X4w6/GQ=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "users"
                      },
                      {
                        "call": 1,
                        "id": "list",
                        "function": {
                          "type": "\u0019\u001buser",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "$whereNot",
                        "function": {
                          "type": "\u0019\u001buser",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hICAgCA="
                            },
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgEA="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "$all",
                        "function": {
                          "type": "\u0004",
                          "binding": 4294967299
                        }
                      },
                      {
                        "call": 1,
                        "id": "{}",
                        "function": {
                          "type": "\u0019\f",
                          "args": [
                            {
                              "type": "\u001c\u0000",
                              "value": "gICAgGA="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967301
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 8589934593
                        }
                      },
                      {
                        "primitive": {
                          "type": "\r"
                        }
                      },
                      {
                        "call": 1,
                        "id": "!=\r",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0003",
                              "value": "hoCAgEA="
                            }
                          ],
                          "binding": 8589934594
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      8589934596
                    ]
                  },
                  {
                    "chunks": [
                      {
                        "primitive": {
                          "type": "\u001buser"
                        }
                      },
                      {
                        "call": 1,
                        "id": "name",
                        "function": {
                          "type": "\u0007",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "uid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      },
                      {
                        "call": 1,
                        "id": "gid",
                        "function": {
                          "type": "\u0005",
                          "binding": 12884901889
                        }
                      }
                    ],
                    "parameters": 1,
                    "entrypoints": [
                      12884901890,
                      12884901891,
                      12884901892
                    ]
                  }
                ],
                "checksums": {
                  "12884901889": "OzDvRpd12D6007hZg6u4p7HqsZDM20AaX6V/01jAchNgxUGVjn61/us3s4Ze5GGrIEP9xUh7EX/tFlPnCVcM5g==",
                  "12884901890": "jJ21zpBiOQZC/hIhG0ocSE8RbnthRg4BgFYsJlGuw8CRekA2WX/PPyTHxQxeB+KFRMpWOSBGoZUIweonvTT9ew==",
                  "12884901891": "7caY9Uicd+2CphZLfRIcJ9kf5i4Ojtnz3SCrORycK9p1wGQwtUrLpSby0VHVKMBcRFxzoSkhnkNj2ASnhwkM/w==",
                  "12884901892": "znjNSgOLIN42SwYXmnr/r0vZt9UXchzRzVGBMZt7l401Dz43+rR9yuIa6pPKxImb9zdbe3Ru+dDfV+f/VGptoQ==",
                  "4294967297": "MmwyAliLU+YHlkNS5w5jjZaNgU/VFTCxTIM8hMTKVg4MeUJVR6eoJlRuJ79SoVk2seEIK6XTN6Wkm2w9mJMB/A==",
                  "4294967298": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "4294967299": "OzDvRpd12D6007hZg6u4p7HqsZDM20AaX6V/01jAchNgxUGVjn61/us3s4Ze5GGrIEP9xUh7EX/tFlPnCVcM5g==",
                  "4294967300": "Ft7Jxk6egFeEfekzy9up3kbujKcTudJA6dcsS5nmUN5/GA5GWgvEPNW6BirbXZ10qgWuP8T3ILrx4WGESSNi7w==",
                  "4294967301": "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg==",
                  "8589934593": "PgyAmAEuGG6aKDiVDz6niqDRQ0oRYJ7OSUroU9u1Svkt2xD3WOPS8uE5sXPO5K3Miy+MAEt8VWHWKZ58RPV+Kw==",
                  "8589934594": "SHPCRJncDncAy3v77tMRWltHfskikaMCqzncLl89tLCmd1UHNLkvrNCvY2i+7AhNh31pndexgVonthQf/EM6zQ==",
                  "8589934595": "OmQHeP8iu2hHspjQMG3tNnggEq4g+2MM4mp1qMPRZTKDsjDqYILqFSuK8+chgflQK+qFv0Zr9VsvS5h/D3uDUg==",
                  "8589934596": "CF4xjSbCVQflYFmP6dz0IzVsbRmMN3JU5qX2q2eZvOvmuuZa0NLLsZH6DDnvRuCVgjaR2XUAZ3e/Cxv8HkUzXA=="
                }
              },
              "source": "users.list.all(gid != empty)\n",
              "labels": {
                "labels": {
                  "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg==": "users.list.$whereNot",
                  "7caY9Uicd+2CphZLfRIcJ9kf5i4Ojtnz3SCrORycK9p1wGQwtUrLpSby0VHVKMBcRFxzoSkhnkNj2ASnhwkM/w==": "uid",
                  "CF4xjSbCVQflYFmP6dz0IzVsbRmMN3JU5qX2q2eZvOvmuuZa0NLLsZH6DDnvRuCVgjaR2XUAZ3e/Cxv8HkUzXA==": "gid != \u003cref\u003e",
                  "Ft7Jxk6egFeEfekzy9up3kbujKcTudJA6dcsS5nmUN5/GA5GWgvEPNW6BirbXZ10qgWuP8T3ILrx4WGESSNi7w==": "[].all()",
                  "jJ21zpBiOQZC/hIhG0ocSE8RbnthRg4BgFYsJlGuw8CRekA2WX/PPyTHxQxeB+KFRMpWOSBGoZUIweonvTT9ew==": "name",
                  "znjNSgOLIN42SwYXmnr/r0vZt9UXchzRzVGBMZt7l401Dz43+rR9yuIa6pPKxImb9zdbe3Ru+dDfV+f/VGptoQ==": "gid"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0",
              "auto_expand": {
                "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg==": 12884901888
              }
            }
          },
          "wM8ZVC/LDTg=": {
            "query": "sshd.config.params[\"Protocol\"] == 2",
            "checksum": "5AZ45nRiz7c=",
            "datapoints": [
              "si5aO2CnDJDGjvjZg+zIvTfCuB9mnXsh8IJG0wn96t1JdXEXr+K50k3qLLXGw700pXAocIyFuwtOqxU4K/Vm/A==",
              "CqLfIuM83K6QnYqrOADKAF9mFRzPIrtPZcx3DNIevpXojwGW9nDM8JKdx6LF69F5sWATva7cBRDwNgiDT0dM9Q=="
            ],
            "code": {
              "code_v2": {
                "id": "wM8ZVC/LDTg=",
                "blocks": [
                  {
                    "chunks": [
                      {
                        "call": 1,
                        "id": "sshd.config"
                      },
                      {
                        "call": 1,
                        "id": "params",
                        "function": {
                          "type": "\u001a\u0007\u0007",
                          "binding": 4294967297
                        }
                      },
                      {
                        "call": 1,
                        "id": "[]",
                        "function": {
                          "type": "\u0007",
                          "args": [
                            {
                              "type": "\u0007",
                              "value": "UHJvdG9jb2w="
                            }
                          ],
                          "binding": 4294967298
                        }
                      },
                      {
                        "call": 1,
                        "id": "==\u0005",
                        "function": {
                          "type": "\u0004",
                          "args": [
                            {
                              "type": "\u0005",
                              "value": "BA=="
                            }
                          ],
                          "binding": 4294967299
                        }
                      }
                    ],
                    "entrypoints": [
                      4294967300
                    ],
                    "datapoints": [
                      4294967299
                    ]
                  }
                ],
                "checksums": {
                  "4294967297": "h1EPuzo5A02wYUOeDzbzv9YfwPO5Km0r1tmJ0UOceHGyO+M2vrEpnF3/XVJu0hOtyAITe0M4O6XOjLOTc8i8lA==",
                  "4294967298": "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw==",
                  "4294967299": "si5aO2CnDJDGjvjZg+zIvTfCuB9mnXsh8IJG0wn96t1JdXEXr+K50k3qLLXGw700pXAocIyFuwtOqxU4K/Vm/A==",
                  "4294967300": "CqLfIuM83K6QnYqrOADKAF9mFRzPIrtPZcx3DNIevpXojwGW9nDM8JKdx6LF69F5sWATva7cBRDwNgiDT0dM9Q=="
                }
              },
              "source": "sshd.config.params[\"Protocol\"] == 2",
              "labels": {
                "labels": {
                  "CqLfIuM83K6QnYqrOADKAF9mFRzPIrtPZcx3DNIevpXojwGW9nDM8JKdx6LF69F5sWATva7cBRDwNgiDT0dM9Q==": "sshd.config.params[Protocol] == 2",
                  "si5aO2CnDJDGjvjZg+zIvTfCuB9mnXsh8IJG0wn96t1JdXEXr+K50k3qLLXGw700pXAocIyFuwtOqxU4K/Vm/A==": "sshd.config.params[Protocol]"
                }
              },
              "version": "unstable",
              "min_mondoo_version": "5.15.0"
            }
          }
        }
      },
      "collector_job": {
        "checksum": "fJtiwU6zc/k=",
        "reporting_jobs": {
          "+8XxwMSldJc=": {
            "checksum": "aCDRzNMXCAU=",
            "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assetversion",
            "uuid": "+8XxwMSldJc=",
            "notify": [
              "hMfRch/5E7s="
            ],
            "child_jobs": {
              "b8u0fLYh6Ww=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/asset-overview-assetversion"
            ]
          },
          "+f2+gX7Aw8M=": {
            "checksum": "n3N2zZaPfts=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-group-names-exist",
            "uuid": "+f2+gX7Aw8M=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "OR/xo0TTW4U=": {
                "value": 80
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-group-names-exist"
            ]
          },
          "+z45mboBOrg=": {
            "checksum": "y7vGNwqEEFs=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow-are-configured",
            "uuid": "+z45mboBOrg=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "vlRTpNpdbqs=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow-are-configured"
            ]
          },
          "/IOMW5A09Zw=": {
            "checksum": "arsheilW8+Y=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow-are-configured",
            "uuid": "/IOMW5A09Zw=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "m0XUO0vuNxs=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow-are-configured"
            ]
          },
          "/QceqJPywQ4=": {
            "checksum": "Wp+c7hix2KM=",
            "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assettitle",
            "uuid": "/QceqJPywQ4=",
            "notify": [
              "hMfRch/5E7s="
            ],
            "child_jobs": {
              "OFCOzm9l2UE=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/asset-overview-assettitle"
            ]
          },
          "/ZYVGxL4+LE=": {
            "checksum": "nHOmC2Ygj4E=",
            "qr_id": "tLW4zUJij+I=",
            "uuid": "/ZYVGxL4+LE=",
            "notify": [
              "5Ph4g47qmu4="
            ],
            "datapoints": {
              "+kCnzP6P15iffB7fsSLxopgvKnvzgc/3r+tVJKi0/jXOuzSiB+kuL07/4iiiJJcQuwSzmD8ERaS7ivitzXV7FA==": true,
              "OSG/mAQsQ08cruLamBggOYG8t2LKZwGF9iVNcSn1u8IAlfikLhKrZSYpDYAzm/4mfiIwbjrI1Q+Cw/8fzfcLPA==": true
            },
            "type": 8
          },
          "1Glku2ryjpM=": {
            "checksum": "3xqzpnHZXuc=",
            "qr_id": "003uGoeCJx8=",
            "uuid": "1Glku2ryjpM=",
            "notify": [
              "O6g7JMQXD+g="
            ],
            "datapoints": {
              "OcxjyMNzPsQob5d23efk6/D/qbV2XftiD+stAvXITuJOOmdoVb4hcGjt+IT0AldkoHCFowQ2mx+Yhdj0ktI5AA==": true,
              "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA==": true
            },
            "type": 8
          },
          "1deQbPfSNIo=": {
            "checksum": "W/N2Z+8hWtY=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-platform",
            "uuid": "1deQbPfSNIo=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "tciqXkjzMO8=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-platform"
            ]
          },
          "3qGYYihyMx8=": {
            "checksum": "yOA0jEZkCBs=",
            "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-d-3",
            "uuid": "3qGYYihyMx8=",
            "notify": [
              "m3zCspo+few="
            ],
            "child_jobs": {
              "QYWFkyOZ9Ww=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/sshd-sshd-d-3"
            ]
          },
          "4Fv4IOs6DEk=": {
            "checksum": "A8emCU9ZzeY=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-gids-exist",
            "uuid": "4Fv4IOs6DEk=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "jayNDfW+Dz0=": {
                "value": 80
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-gids-exist"
            ]
          },
          "52Iy6+s1IIE=": {
            "checksum": "0xM319hN+Qs=",
            "qr_id": "Yw5maGeSxtI=",
            "uuid": "52Iy6+s1IIE=",
            "notify": [
              "TynRh8RPZKY="
            ],
            "datapoints": {
              "4FTu8UX2yMVeEc5N/Ouz0BE6bDRPuZ/7ZuriB9Y3C2baQ1MHggGswbvcjtBxOJc+b5QzE7VSE6wEmmmnkcpubg==": true
            },
            "type": 8
          },
          "52cLTik2+sc=": {
            "checksum": "fQ28N8vcylA=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-cpu-type",
            "uuid": "52cLTik2+sc=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "MGby+YSFjvk=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-cpu-type"
            ]
          },
          "56pTR0BBV1o=": {
            "checksum": "ClKDg+tMbGM=",
            "qr_id": "/Kj/I7IqKvY=",
            "uuid": "56pTR0BBV1o=",
            "notify": [
              "Y3LgSLkoexE="
            ],
            "datapoints": {
              "3dOFooH1gr1YosAmtEfQsyCvPDAkblqinIpavjPxu888CvjcGms1x5M7lhrJeMiQ3YeVxTpt0OLEDNUWaJVrsQ==": true,
              "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg==": true
            },
            "type": 8
          },
          "5Ph4g47qmu4=": {
            "checksum": "ur2mQruAfcA=",
            "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-11",
            "uuid": "5Ph4g47qmu4=",
            "notify": [
              "m3zCspo+few="
            ],
            "child_jobs": {
              "/ZYVGxL4+LE=": {}
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/sshd-sshd-11"
            ]
          },
          "611B9DDlakA=": {
            "checksum": "JvgOj4nZBLc=",
            "qr_id": "nTE51L+DiAo=",
            "uuid": "611B9DDlakA=",
            "notify": [
              "Ii1/LoaoyY8="
            ],
            "datapoints": {
              "5tcBgzPZQz8/zm7UDznoBcP9St4ycw7/V4O91ZoA+XW9Vk1/amP/ow2gP8VKh0XV+fx1IaRBbfzoOT0OQ2pvWw==": true,
              "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ==": true
            },
            "type": 8
          },
          "6Mkas+JrCSk=": {
            "checksum": "Z20YcV2B4jM=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-groups-wheel",
            "uuid": "6Mkas+JrCSk=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "m3q7cHIO+jg=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-groups-wheel"
            ]
          },
          "7RiO9Z9/F9c=": {
            "checksum": "Gui54GLSJzY=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-asset-info",
            "uuid": "7RiO9Z9/F9c=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "A07dzetUJrg=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-asset-info"
            ]
          },
          "7XV+Xzb474I=": {
            "checksum": "JFHNivwumuI=",
            "qr_id": "mpBx19SqXqo=",
            "uuid": "7XV+Xzb474I=",
            "notify": [
              "xzU90XZHKcE="
            ],
            "datapoints": {
              "kvbn2Yj+Sqcv41rX1QLr8Pa/wcxZC+dyiDl9KUYv7F8q4jGETZ749fSrFV7Mm2qgK3fM/84Woxb0ni1c/rn2ow==": true
            },
            "type": 8
          },
          "8bfzmX8vlr8=": {
            "checksum": "SauasUx8tAI=",
            "qr_id": "/xtAflG+77k=",
            "uuid": "8bfzmX8vlr8=",
            "notify": [
              "Go2fHDQR/Tg="
            ],
            "datapoints": {
              "CQXUv/QbKcO1F5LvHFZ2NWFYNovHloaexe9lAEkpEll9s03HI4ecB5bwGd/DasLoHdaNambHL/g4zkz1siZb7w==": true,
              "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ==": true
            },
            "type": 8
          },
          "8e5Nskw1XJs=": {
            "checksum": "JKJ+tvKVxKo=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup-are-configured",
            "uuid": "8e5Nskw1XJs=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "NcgSq6GKUK8=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup-are-configured"
            ]
          },
          "9QciZNQSIVI=": {
            "checksum": "CfmTx8Qw1Jo=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-asset",
            "uuid": "9QciZNQSIVI=",
            "notify": [
              "im7AFOo7QXM="
            ],
            "child_jobs": {
              "qw1fBZxaPgw=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-sbom-internal-asset"
            ]
          },
          "9bBKB3Hk3ik=": {
            "checksum": "IlaPIIdapKo=",
            "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assetarch",
            "uuid": "9bBKB3Hk3ik=",
            "notify": [
              "hMfRch/5E7s="
            ],
            "child_jobs": {
              "aEJ8z536VaI=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/asset-overview-assetarch"
            ]
          },
          "9d7vkmqW8KA=": {
            "checksum": "eqIrQJJPFx8=",
            "qr_id": "wM8ZVC/LDTg=",
            "uuid": "9d7vkmqW8KA=",
            "notify": [
              "l/p4g47rmu4="
            ],
            "datapoints": {
              "CqLfIuM83K6QnYqrOADKAF9mFRzPIrtPZcx3DNIevpXojwGW9nDM8JKdx6LF69F5sWATva7cBRDwNgiDT0dM9Q==": true,
              "si5aO2CnDJDGjvjZg+zIvTfCuB9mnXsh8IJG0wn96t1JdXEXr+K50k3qLLXGw700pXAocIyFuwtOqxU4K/Vm/A==": true
            },
            "type": 8
          },
          "9tUfwfi5Tbg=": {
            "checksum": "hFvp+gZ1SyA=",
            "qr_id": "//policy.api.mondoo.app/policies/risk-factors",
            "uuid": "9tUfwfi5Tbg=",
            "notify": [
              "ZrUwpPBaI/8="
            ],
            "scoring_system": "average",
            "child_jobs": {
              "UTbAc24ADO8=": {
                "scoring": "ignore score",
                "action": 4
              },
              "b6bv9p/4J+I=": {
                "scoring": "ignore score",
                "action": 4
              }
            },
            "type": 4,
            "mrns": [
              "//policy.api.mondoo.app/policies/risk-factors"
            ]
          },
          "A07dzetUJrg=": {
            "checksum": "tudnqlkunoc=",
            "qr_id": "Hl4/DeiN8wc=",
            "uuid": "A07dzetUJrg=",
            "notify": [
              "7RiO9Z9/F9c="
            ],
            "datapoints": {
              "ib2pfAMXIQISTa5wN7PCTp8xzRB+RdPOJplleR021jwn7eaBc/LMfl3f1svA4Njp50r9CW4XchPxEqfDUWBA0g==": true
            },
            "type": 8
          },
          "A2OoIFziMh8=": {
            "checksum": "3zVLAo6Ycno=",
            "qr_id": "NX7Fhn2QkMk=",
            "uuid": "A2OoIFziMh8=",
            "notify": [
              "VioInc0JY+0="
            ],
            "datapoints": {
              "cePaHhIQT0r/Q/uOnqJiCe2fzy+jKj8vKmZMzte8HkLbxCFtAB88sJxgEk7pM7dF5yt1jNfaqRuUgcLxAuajww==": true
            },
            "type": 8
          },
          "AQ1WytbKWqA=": {
            "checksum": "ylcpSmxK/bE=",
            "qr_id": "eteO7RzprLM=",
            "uuid": "AQ1WytbKWqA=",
            "notify": [
              "eJ6YYihwMx8="
            ],
            "datapoints": {
              "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw==": true
            },
            "type": 8
          },
          "BJnVhDXk9I8=": {
            "checksum": "hTFrPWMxom4=",
            "qr_id": "WIu9j8nCbRo=",
            "uuid": "BJnVhDXk9I8=",
            "notify": [
              "g39262/2z1Q="
            ],
            "datapoints": {
              "oRvSYIoFygbNmc7Hg3IaXhHOt4EwyTTzarxgx0Sp6y+Zho2hbs2qyZYrPAyFsuemLy6Uk+CQ+aXY4xM9UzS4xA==": true
            },
            "type": 8
          },
          "BKuiHMJRXuM=": {
            "checksum": "o5IcgOzFz4Q=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-system-accounts-are-non-login",
            "uuid": "BKuiHMJRXuM=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "PEI+RqY7u3o=": {
                "value": 70
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-system-accounts-are-non-login"
            ]
          },
          "D0xH6OdewXM=": {
            "checksum": "DWzkPTD1yp0=",
            "qr_id": "l8G0PTcuvmM=",
            "uuid": "D0xH6OdewXM=",
            "notify": [
              "ZVDOB1MLQWo="
            ],
            "datapoints": {
              "ANF22c2hJk/VGnp1zb6eP1uRao9RejTrGTHE4u8pfNBhdj5M2K/6O8ScVyAfzjc1ve2fMMwXtDpmOVBuCQQXUA==": true
            },
            "type": 8
          },
          "ElIojdNsWs0=": {
            "checksum": "RFoIFd33N1k=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup--are-configured",
            "uuid": "ElIojdNsWs0=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "awqaISSD9L0=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgroup--are-configured"
            ]
          },
          "F2cnLUrcvog=": {
            "checksum": "iYtuRMWn4ew=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-root-volume",
            "uuid": "F2cnLUrcvog=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "t0zXsKaGOGk=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-root-volume"
            ]
          },
          "FNk7Fny4W8E=": {
            "checksum": "XhS78SaOV40=",
            "qr_id": "Weu8LLZyY6g=",
            "uuid": "FNk7Fny4W8E=",
            "notify": [
              "jDuuCTnSb4s="
            ],
            "datapoints": {
              "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA==": true,
              "zkQO5VqK4KADLajxTmptIOrP5ngwLGNY+FhS/h9qIJdZBxBNQwFoT0xZZgHBU5r9Lq9PuMOnhzb9PdGhVvha+w==": true
            },
            "type": 8
          },
          "G03LzZsGQLM=": {
            "checksum": "bsMm4SGlAJw=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd--are-configured",
            "uuid": "G03LzZsGQLM=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "oyCU5WCswEk=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd--are-configured"
            ]
          },
          "GaynjgcwpBA=": {
            "checksum": "Gj6gUaUxWMo=",
            "qr_id": "n2Oxd+mY57E=",
            "uuid": "GaynjgcwpBA=",
            "notify": [
              "Y6TAhe0SJ7I="
            ],
            "datapoints": {
              "o79/eN5svDRVY7PTXsEyQaRNTF+XwKLUq1qTtO7WPq68D/oVRbsp6xjp/w5pbRWdd3pcPAZp/wNTSfaTtP6fcw==": true
            },
            "type": 8
          },
          "Go2fHDQR/Tg=": {
            "checksum": "PkY3SxJtR1A=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-uids-exist",
            "uuid": "Go2fHDQR/Tg=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "8bfzmX8vlr8=": {
                "value": 80
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-uids-exist"
            ]
          },
          "Gwx3FKEfNoA=": {
            "checksum": "7P7VxwlE1lI=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-each-user-member-of-a-group",
            "uuid": "Gwx3FKEfNoA=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "UxwGhpbK8cc=": {
                "value": 70
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-each-user-member-of-a-group"
            ]
          },
          "HYwn6xUumDg=": {
            "checksum": "eh9cOFVmZjE=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-physical-memory",
            "uuid": "HYwn6xUumDg=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "Id7IgPCsykE=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-physical-memory"
            ]
          },
          "I4M53Qbs06Q=": {
            "checksum": "TVissy+7afk=",
            "qr_id": "F7bdJ3U4G0g=",
            "uuid": "I4M53Qbs06Q=",
            "notify": [
              "u4Cx6PgzhJ8="
            ],
            "datapoints": {
              "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw==": true
            },
            "type": 8
          },
          "I7QuPT/qoqM=": {
            "checksum": "4qpb/mqPbqg=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-hostname",
            "uuid": "I7QuPT/qoqM=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "PcNBawC4CTM=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-hostname"
            ]
          },
          "Id7IgPCsykE=": {
            "checksum": "GkLH0zKPbAc=",
            "qr_id": "g7SQRtln0e0=",
            "uuid": "Id7IgPCsykE=",
            "notify": [
              "HYwn6xUumDg="
            ],
            "datapoints": {
              "1bJiVdNJy+oHfcFSfCtRhI1LR5igKR07aS98tqbUe+biod6mugYAv4lxijplx4S0rxSi9M8Z0wYuFSxickckNA==": true
            },
            "type": 8
          },
          "Ii1/LoaoyY8=": {
            "checksum": "H51ddkWNpeE=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-default-group-for-the-root-account-is-gid-0",
            "uuid": "Ii1/LoaoyY8=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "611B9DDlakA=": {
                "value": 80
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-default-group-for-the-root-account-is-gid-0"
            ]
          },
          "IwDFUPSHO18=": {
            "checksum": "pQPDehHZc5k=",
            "qr_id": "kv1OUBUCnBA=",
            "uuid": "IwDFUPSHO18=",
            "notify": [
              "syfEYcBJRq0="
            ],
            "datapoints": {
              "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ==": true
            },
            "type": 8
          },
          "Jae3sc/MGQI=": {
            "checksum": "LoxMEf38d1Y=",
            "qr_id": "Jd+Gypq2iUU=",
            "uuid": "Jae3sc/MGQI=",
            "notify": [
              "Qbx2g47ml+4="
            ],
            "datapoints": {
              "L1uVAC1Xk4VwI/Qi2VdbZmacln2sPsRupgEa+wu3tZMkFHQl/raDrrtmmhXpPial8vIcCqRvPSX0oh2iZDuASA==": true,
              "NoAJV6/zn4XKsJILgugtSNBjw59X84Ynkrep3rpQe/frNdQMeG1O+KNawC+McOt8RU9UQErAbHspg7H0R2dhSA==": true,
              "XmES4jlqYB9VGoEFhptxhc2aEc8dqob2jjig2/vA50M5Gyo6YZGtxRlM8tZRMWFuXs7YxZ1kYsq6YNcoHYaixw==": true
            },
            "type": 8
          },
          "LHbAgXMX1tI=": {
            "checksum": "J2rdk/TdLOg=",
            "qr_id": "aS95c8UVV00=",
            "uuid": "LHbAgXMX1tI=",
            "notify": [
              "snzCi/1Kdmk="
            ],
            "datapoints": {
              "2hZ3z+3H/QD+mlekH8q+XJI8LKLWCorG6amoVQPvfWzaq07JXZgflggDlzI/ysKXy1pKUdzt+483lluQXxsJ4Q==": true,
              "6GV7OiQSU1fwRwmB2MtE0u8IG8j6PQJTDKj3GqbPCWek07rjs0E4nE2JNttpY+0OuGo2gk8KUE/saFGxeq2gYQ==": true
            },
            "type": 8
          },
          "LJQ7hYuHTMo=": {
            "checksum": "nBHaPX9tstI=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-mounts",
            "uuid": "LJQ7hYuHTMo=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "j60Crh2icHU=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-mounts"
            ]
          },
          "LgqZ+5/krhw=": {
            "checksum": "iXctPo3zIQk=",
            "qr_id": "TtjnwMN2RWY=",
            "uuid": "LgqZ+5/krhw=",
            "notify": [
              "hO2tL7wzzDQ="
            ],
            "datapoints": {
              "TBJjOKtZT1BQwIMS0l5Z3hbtRx/A8zOmfy1HsmroznS1SMQupwq0ed8VXfh9zIlQEH8MmsCiM5EXkWhvHU/v5w==": true
            },
            "type": 8
          },
          "MGby+YSFjvk=": {
            "checksum": "csLj0L2v9a4=",
            "qr_id": "/tUd3Rzfo5c=",
            "uuid": "MGby+YSFjvk=",
            "notify": [
              "52cLTik2+sc="
            ],
            "datapoints": {
              "kLnVPjiZ6SHX22uG9vP3Dj5LzONhJGq5lSimtav8imr+diU48/XH0aFixUB4REzwB7t9I0508qiEEb2JJvX/9A==": true
            },
            "type": 8
          },
          "MJQdqWkvFXY=": {
            "checksum": "743JcYVbSlE=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-shadow-group-is-empty",
            "uuid": "MJQdqWkvFXY=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "whYcFcFhCSc=": {
                "value": 80
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-shadow-group-is-empty"
            ]
          },
          "NcgSq6GKUK8=": {
            "checksum": "AHRXrxA2zNQ=",
            "qr_id": "m7DAOFbL9Qg=",
            "uuid": "NcgSq6GKUK8=",
            "notify": [
              "8e5Nskw1XJs="
            ],
            "datapoints": {
              "8UFMaOXC4SMhWK+Vx/3T7dr6xt0crU2tSRurKy4l3M/pETdqnDy2+5XZAVoyskOku7hIGVb7HJ06XzuQhgvjMQ==": true
            },
            "type": 8
          },
          "O6g7JMQXD+g=": {
            "checksum": "GJhd+ckigz8=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-user-names-exist",
            "uuid": "O6g7JMQXD+g=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "1Glku2ryjpM=": {
                "value": 80
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-no-duplicate-user-names-exist"
            ]
          },
          "OFCOzm9l2UE=": {
            "checksum": "Ea0OIvARZKk=",
            "qr_id": "pIimpRGhyBc=",
            "uuid": "OFCOzm9l2UE=",
            "notify": [
              "/QceqJPywQ4="
            ],
            "datapoints": {
              "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": true
            },
            "type": 8
          },
          "OR/xo0TTW4U=": {
            "checksum": "u+cVdTMZ7bc=",
            "qr_id": "YNN6XbHEMSg=",
            "uuid": "OR/xo0TTW4U=",
            "notify": [
              "+f2+gX7Aw8M="
            ],
            "datapoints": {
              "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw==": true,
              "gnQzZeSAHrQV35V8XMTtz9hHVuRLLkmvsgmgVe93eDzEWW9NrV/hP7Wu409x5z0m+ZibsdLlck3xAamyu7arLw==": true
            },
            "type": 8
          },
          "OXTwDwuip7M=": {
            "checksum": "40C7GGm6uQo=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-window-system-is-not-installed",
            "uuid": "OXTwDwuip7M=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "hIRe+iykhLc=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-window-system-is-not-installed"
            ]
          },
          "PEI+RqY7u3o=": {
            "checksum": "O32zqNrEKSk=",
            "qr_id": "usnsqpdfgm4=",
            "uuid": "PEI+RqY7u3o=",
            "notify": [
              "BKuiHMJRXuM="
            ],
            "datapoints": {
              "N6OGcsq2186ftBhko1yfnn6Dgbmd+R5SvlBcylRBdep3Dg+KDFT2L0HiBnXJZ1jK/yTtTQ3PFBtevIs0jYmloQ==": true
            },
            "type": 8
          },
          "PcNBawC4CTM=": {
            "checksum": "7L9rBQZjf9I=",
            "qr_id": "aRSd7vfjN/s=",
            "uuid": "PcNBawC4CTM=",
            "notify": [
              "I7QuPT/qoqM="
            ],
            "datapoints": {
              "VYvXd9DoeA22juTEFywXJb89sXLsOc7eHhrCj6WwJqVtuEUXvgQeEsFXaVhe72J+NBCOk9tV3F4BZ4g67moVHA==": true
            },
            "type": 8
          },
          "QOuf6p9hhNY=": {
            "checksum": "7/6YYYbHO44=",
            "qr_id": "Xs984txmLXk=",
            "uuid": "QOuf6p9hhNY=",
            "notify": [
              "qagr6OPE4HQ="
            ],
            "datapoints": {
              "9JRnRD0qcwHdUJtCGMTAJe3H1iY2xdZ5QNY+Bji5zt7EG1rgcxmWYBO6pOuPOvrDsHa8dnSx9hbE92vZlnyJQg==": true
            },
            "type": 8
          },
          "QYWFkyOZ9Ww=": {
            "checksum": "PjPhIwqtSCw=",
            "qr_id": "RYuR9x9ICNA=",
            "uuid": "QYWFkyOZ9Ww=",
            "notify": [
              "3qGYYihyMx8="
            ],
            "datapoints": {
              "k6rlXoYpV48Qd19gKeNl+/IiPnkI5VNQBiqZBca3gDKsIRiLcpXQUlDv52x9sscIWiqOMpC7+x/aBpY0IUq0ww==": true
            },
            "type": 8
          },
          "Qbx2g47ml+4=": {
            "checksum": "+bU7VHl+L8A=",
            "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-01",
            "uuid": "Qbx2g47ml+4=",
            "notify": [
              "m3zCspo+few="
            ],
            "child_jobs": {
              "Jae3sc/MGQI=": {}
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/sshd-sshd-01"
            ]
          },
          "R23z6hrQMG8=": {
            "checksum": "RRn1ty3ckaY=",
            "qr_id": "OFWIXTzBv00=",
            "uuid": "R23z6hrQMG8=",
            "notify": [
              "wqKb5Bz0v7I="
            ],
            "datapoints": {
              "S0pi0XR2kSuGxhNT7T1roRClJpvyWDf2tbqf4WiaICdLeN4J+5clf8CQzREt32vqpf9puBNedCGXo27OvRaflw==": true
            },
            "type": 8
          },
          "R8p+y2MeycQ=": {
            "checksum": "yZh1gfPw3Cg=",
            "qr_id": "8PjpfkfABtA=",
            "uuid": "R8p+y2MeycQ=",
            "notify": [
              "dPcz7yhysGc="
            ],
            "datapoints": {
              "J4anmJ+mXJX380Qslh563U7Bs5d6fiD2ghVxV9knAU0iy/P+IVNZsDhBbCmbpJch3Tm0NliAMiaY47lmw887Jw==": true
            },
            "type": 8
          },
          "SeD6b7lC/Nc=": {
            "checksum": "HlYIBVXkzmU=",
            "qr_id": "SHeBTCW066c=",
            "uuid": "SeD6b7lC/Nc=",
            "notify": [
              "UTbAc24ADO8="
            ],
            "datapoints": {
              "7j2j9tDKzkFhSbsr8SPpFRpuOv8WV66N7eN5pH1HVUQ6fmFTHoPEqtgETb4LzUuiNl8TFBn4DxX2sciznRYxjw==": true,
              "j3I61cJvMNTVhZ14xpxulHfTgqmTJOWxgoAl0zGo9Osrk2b8p9ZxD+rugv2N7Hs34dVi1hb+m+7R4F4g+FyC5Q==": true
            },
            "type": 8
          },
          "TynRh8RPZKY=": {
            "checksum": "uxRvDehFQnI=",
            "qr_id": "//policy.api.mondoo.app/queries/asset-overview-assetkind",
            "uuid": "TynRh8RPZKY=",
            "notify": [
              "hMfRch/5E7s="
            ],
            "child_jobs": {
              "52Iy6+s1IIE=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/asset-overview-assetkind"
            ]
          },
          "USQvgRwM2Bw=": {
            "checksum": "HUqWC4cLmJE=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-logged-in-users",
            "uuid": "USQvgRwM2Bw=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "bh/SHE5Egvw=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-logged-in-users"
            ]
          },
          "UTbAc24ADO8=": {
            "checksum": "eO+oR9mmXfA=",
            "qr_id": "//policy.api.mondoo.app/risks/open-ports",
            "uuid": "UTbAc24ADO8=",
            "notify": [
              "9tUfwfi5Tbg="
            ],
            "child_jobs": {
              "SeD6b7lC/Nc=": {
                "scoring": "ignore score",
                "action": 4
              }
            },
            "type": 6,
            "mrns": [
              "//policy.api.mondoo.app/risks/open-ports"
            ]
          },
          "UxwGhpbK8cc=": {
            "checksum": "ZoukDBvoxLU=",
            "qr_id": "wE8/X4w6/GQ=",
            "uuid": "UxwGhpbK8cc=",
            "notify": [
              "Gwx3FKEfNoA="
            ],
            "datapoints": {
              "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg==": true,
              "Ft7Jxk6egFeEfekzy9up3kbujKcTudJA6dcsS5nmUN5/GA5GWgvEPNW6BirbXZ10qgWuP8T3ILrx4WGESSNi7w==": true
            },
            "type": 8
          },
          "VioInc0JY+0=": {
            "checksum": "qHjmoTwwwyQ=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-internal-packages",
            "uuid": "VioInc0JY+0=",
            "notify": [
              "im7AFOo7QXM="
            ],
            "child_jobs": {
              "A2OoIFziMh8=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-sbom-internal-packages"
            ]
          },
          "Y3LgSLkoexE=": {
            "checksum": "DLAGgx33aN8=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-gid-in-passwd-exists-in-group",
            "uuid": "Y3LgSLkoexE=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "56pTR0BBV1o=": {
                "value": 80
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-gid-in-passwd-exists-in-group"
            ]
          },
          "Y6TAhe0SJ7I=": {
            "checksum": "kOg+/yUkVaE=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-bios",
            "uuid": "Y6TAhe0SJ7I=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "GaynjgcwpBA=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-smbios-bios"
            ]
          },
          "ZVDOB1MLQWo=": {
            "checksum": "YyfczSG7zwA=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-system",
            "uuid": "ZVDOB1MLQWo=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "D0xH6OdewXM=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-smbios-system"
            ]
          },
          "ZrUwpPBaI/8=": {
            "checksum": "u0nd+7unT7Q=",
            "qr_id": "//captain.api.mondoo.app/spaces/test-infallible-taussig-796596",
            "uuid": "ZrUwpPBaI/8=",
            "notify": [
              "x+RDfm9rabs="
            ],
            "scoring_system": "average",
            "child_jobs": {
              "9tUfwfi5Tbg=": {},
              "fKB6QKvhkr8=": {},
              "hMfRch/5E7s=": {},
              "im7AFOo7QXM=": {},
              "m3zCspo+few=": {},
              "phpHwguMgqw=": {}
            },
            "type": 4,
            "mrns": [
              "//captain.api.mondoo.app/spaces/test-infallible-taussig-796596"
            ]
          },
          "aEJ8z536VaI=": {
            "checksum": "W8lHJKUECOY=",
            "qr_id": "12kX/uYrBPU=",
            "uuid": "aEJ8z536VaI=",
            "notify": [
              "9bBKB3Hk3ik="
            ],
            "datapoints": {
              "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ==": true
            },
            "type": 8
          },
          "awqaISSD9L0=": {
            "checksum": "o5drwnBr+rA=",
            "qr_id": "Kd0nC0U7dfs=",
            "uuid": "awqaISSD9L0=",
            "notify": [
              "ElIojdNsWs0="
            ],
            "datapoints": {
              "H7H0YG5evkzzLDZSd6Ayb6abAXcrzwkoCcfUXx1AmiAOybkTo7ujzAM6rwO63/MF8k+IkPNQz4cLNqT/1KnYnw==": true
            },
            "type": 8
          },
          "b6bv9p/4J+I=": {
            "checksum": "6o/MeyrhVek=",
            "qr_id": "//policy.api.mondoo.app/risks/private-ssh-keys",
            "uuid": "b6bv9p/4J+I=",
            "notify": [
              "9tUfwfi5Tbg="
            ],
            "child_jobs": {
              "cwxY/8qImGI=": {
                "scoring": "ignore score",
                "action": 4
              }
            },
            "type": 6,
            "mrns": [
              "//policy.api.mondoo.app/risks/private-ssh-keys"
            ]
          },
          "b8u0fLYh6Ww=": {
            "checksum": "gA8jCqUKI3U=",
            "qr_id": "MMPvbEnxkzM=",
            "uuid": "b8u0fLYh6Ww=",
            "notify": [
              "+8XxwMSldJc="
            ],
            "datapoints": {
              "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": true
            },
            "type": 8
          },
          "bh/SHE5Egvw=": {
            "checksum": "QtRISmCencs=",
            "qr_id": "VDW0zuKNTNA=",
            "uuid": "bh/SHE5Egvw=",
            "notify": [
              "USQvgRwM2Bw="
            ],
            "datapoints": {
              "f6zruMb0IvG6WXtG+K5yuHnlZWNaDvVxwhETUa3C31JKY/uN/FTNwIRm3mU8VTUy2cL4BfTenisUBBbzXBThzQ==": true
            },
            "type": 8
          },
          "cA4/CDUi5YY=": {
            "checksum": "K09y08pJLTA=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-chassis",
            "uuid": "cA4/CDUi5YY=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "rxFzGGLjfv4=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-smbios-chassis"
            ]
          },
          "cwxY/8qImGI=": {
            "checksum": "nHpfdctht1Y=",
            "qr_id": "QS1431IjXdM=",
            "uuid": "cwxY/8qImGI=",
            "notify": [
              "b6bv9p/4J+I="
            ],
            "datapoints": {
              "9YkvN1Tog2VFrCsfbkt7WCb0Uju/0Co8g3qlC724FFJbejgL1VpD8EXWg+hZHbNePFOUaSB4gsH8n7Xk3qNSeg==": true,
              "ANVso+zEuxoUfM2V+LC0ZsKhhuGV4NkxnwM6tBChYQtESc1xymFyRH96dzy0qaEl+n0a6iFsEihCwlxIU+4d3g==": true
            },
            "type": 8
          },
          "dPcz7yhysGc=": {
            "checksum": "Jgvtyma7Yn0=",
            "qr_id": "//policy.api.mondoo.app/queries/asset-overview-clientversion",
            "uuid": "dPcz7yhysGc=",
            "notify": [
              "hMfRch/5E7s="
            ],
            "child_jobs": {
              "R8p+y2MeycQ=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/asset-overview-clientversion"
            ]
          },
          "eJ6YYihwMx8=": {
            "checksum": "7paLD0BhBlU=",
            "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-d-1",
            "uuid": "eJ6YYihwMx8=",
            "notify": [
              "m3zCspo+few="
            ],
            "child_jobs": {
              "AQ1WytbKWqA=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/sshd-sshd-d-1"
            ]
          },
          "fKB6QKvhkr8=": {
            "checksum": "L4oLrhA+wW8=",
            "qr_id": "//policy.api.mondoo.app/policies/mondoo-linux-security",
            "uuid": "fKB6QKvhkr8=",
            "notify": [
              "ZrUwpPBaI/8="
            ],
            "scoring_system": "highest impact",
            "child_jobs": {
              "+f2+gX7Aw8M=": {},
              "+z45mboBOrg=": {},
              "/IOMW5A09Zw=": {},
              "4Fv4IOs6DEk=": {},
              "8e5Nskw1XJs=": {},
              "BKuiHMJRXuM=": {},
              "ElIojdNsWs0=": {},
              "G03LzZsGQLM=": {},
              "Go2fHDQR/Tg=": {},
              "Gwx3FKEfNoA=": {},
              "Ii1/LoaoyY8=": {},
              "MJQdqWkvFXY=": {},
              "O6g7JMQXD+g=": {},
              "OXTwDwuip7M=": {},
              "Y3LgSLkoexE=": {},
              "jDuuCTnSb4s=": {},
              "qagr6OPE4HQ=": {},
              "snzCi/1Kdmk=": {},
              "uPd80hqxo2U=": {},
              "wqKb5Bz0v7I=": {}
            },
            "type": 4,
            "mrns": [
              "//policy.api.mondoo.app/policies/mondoo-linux-security"
            ]
          },
          "g39262/2z1Q=": {
            "checksum": "IJi7UvaZilo=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-python-packages",
            "uuid": "g39262/2z1Q=",
            "notify": [
              "im7AFOo7QXM="
            ],
            "child_jobs": {
              "BJnVhDXk9I8=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-sbom-python-packages"
            ]
          },
          "hIRe+iykhLc=": {
            "checksum": "bmf+jYYXtqM=",
            "qr_id": "ceocEcP6Hmo=",
            "uuid": "hIRe+iykhLc=",
            "notify": [
              "OXTwDwuip7M="
            ],
            "datapoints": {
              "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q==": true,
              "7zMfskozHqhiScbU2kNsfYC2uQ0B1f+XOtt3Q2+qCfjPNBkxtKNoKM707TK6ctUb4TfHI6tuQlIO34S4RBfOsw==": true
            },
            "type": 8
          },
          "hMfRch/5E7s=": {
            "checksum": "0vkGg8+5X0s=",
            "qr_id": "//policy.api.mondoo.app/policies/asset-overview",
            "uuid": "hMfRch/5E7s=",
            "notify": [
              "ZrUwpPBaI/8="
            ],
            "scoring_system": "data only",
            "child_jobs": {
              "+8XxwMSldJc=": {
                "scoring": "ignore score",
                "action": 4
              },
              "/QceqJPywQ4=": {
                "scoring": "ignore score",
                "action": 4
              },
              "9bBKB3Hk3ik=": {
                "scoring": "ignore score",
                "action": 4
              },
              "TynRh8RPZKY=": {
                "scoring": "ignore score",
                "action": 4
              },
              "dPcz7yhysGc=": {
                "scoring": "ignore score",
                "action": 4
              }
            },
            "type": 4,
            "mrns": [
              "//policy.api.mondoo.app/policies/asset-overview"
            ]
          },
          "hO2tL7wzzDQ=": {
            "checksum": "twuLQmIejOY=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-sbom-npm-packages",
            "uuid": "hO2tL7wzzDQ=",
            "notify": [
              "im7AFOo7QXM="
            ],
            "child_jobs": {
              "LgqZ+5/krhw=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-sbom-npm-packages"
            ]
          },
          "im7AFOo7QXM=": {
            "checksum": "ysRVfn01azc=",
            "qr_id": "//policy.api.mondoo.app/policies/mondoo-sbom",
            "uuid": "im7AFOo7QXM=",
            "notify": [
              "ZrUwpPBaI/8="
            ],
            "scoring_system": "data only",
            "child_jobs": {
              "9QciZNQSIVI=": {
                "scoring": "ignore score",
                "action": 4
              },
              "VioInc0JY+0=": {
                "scoring": "ignore score",
                "action": 4
              },
              "g39262/2z1Q=": {
                "scoring": "ignore score",
                "action": 4
              },
              "hO2tL7wzzDQ=": {
                "scoring": "ignore score",
                "action": 4
              }
            },
            "type": 4,
            "mrns": [
              "//policy.api.mondoo.app/policies/mondoo-sbom"
            ]
          },
          "j60Crh2icHU=": {
            "checksum": "we80orILGB0=",
            "qr_id": "5pm2mmNGelY=",
            "uuid": "j60Crh2icHU=",
            "notify": [
              "LJQ7hYuHTMo="
            ],
            "datapoints": {
              "7wsOp4YGaSjHvRvBmFaAZ0PIPxNKcO6DjOochPbOJKUhzMH/pVkkQO0Ziw+hFT2hMePykJHfBtrzr0uzpNKzcw==": true
            },
            "type": 8
          },
          "jDuuCTnSb4s=": {
            "checksum": "eociXULv4zM=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-root-group-is-empty",
            "uuid": "jDuuCTnSb4s=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "FNk7Fny4W8E=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-root-group-is-empty"
            ]
          },
          "jayNDfW+Dz0=": {
            "checksum": "hlfjjK6UOe0=",
            "qr_id": "vf3LKN6rpLg=",
            "uuid": "jayNDfW+Dz0=",
            "notify": [
              "4Fv4IOs6DEk="
            ],
            "datapoints": {
              "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g==": true,
              "wqBMlXbmQSD5agbjcVBO765mJg9Fzk/jOE/5PQtEu4HX/IOZ/DbSqCkml6Gb16wcJn0O3ePnfI/AqgtJz0nWbg==": true
            },
            "type": 8
          },
          "kG/ViQo2k1s=": {
            "checksum": "TP1BIP2T/aw=",
            "qr_id": "NsQ1E+4hzxs=",
            "uuid": "kG/ViQo2k1s=",
            "notify": [
              "rkawoHDXjU4="
            ],
            "datapoints": {
              "PtunGFObCqSZRTCGP7b3oq6W69r5SfxHvJ9xQhO4bCUu/fK6KMIIo9ur5/0WhLQ6+ZEMhdlHhyz9DsP805sDnQ==": true
            },
            "type": 8
          },
          "l/p4g47rmu4=": {
            "checksum": "K9cvqsf31R0=",
            "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-10",
            "uuid": "l/p4g47rmu4=",
            "notify": [
              "m3zCspo+few="
            ],
            "child_jobs": {
              "9d7vkmqW8KA=": {}
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/sshd-sshd-10"
            ]
          },
          "m0XUO0vuNxs=": {
            "checksum": "4XnQrB9mky8=",
            "qr_id": "htUqKZYa860=",
            "uuid": "m0XUO0vuNxs=",
            "notify": [
              "/IOMW5A09Zw="
            ],
            "datapoints": {
              "G0bUwMGEwUqkQiCcj4R04tMFYAp3dSRhbU6dBPoLeX2lyTqPVGvreUvu5qov/OCoWc/Q5eaLopy2nQF9xeDEHw==": true
            },
            "type": 8
          },
          "m3q7cHIO+jg=": {
            "checksum": "WmLIVhoCw+k=",
            "qr_id": "HnD55hbNskM=",
            "uuid": "m3q7cHIO+jg=",
            "notify": [
              "6Mkas+JrCSk="
            ],
            "datapoints": {
              "R1EtIO0IHYcNITt63nhdkbe+zbZw9l9TG5fmOGZWTycdIbQUB3zh3hSMHTlo9dpdId0Os1CQF4cSyWayMhHslA==": true
            },
            "type": 8
          },
          "m3zCspo+few=": {
            "checksum": "eBO88bIAKpc=",
            "qr_id": "//policy.api.mondoo.app/policies/sshd-policy",
            "uuid": "m3zCspo+few=",
            "notify": [
              "ZrUwpPBaI/8="
            ],
            "scoring_system": "average",
            "child_jobs": {
              "3qGYYihyMx8=": {
                "scoring": "ignore score",
                "action": 4
              },
              "5Ph4g47qmu4=": {},
              "Qbx2g47ml+4=": {},
              "eJ6YYihwMx8=": {
                "scoring": "ignore score",
                "action": 4
              },
              "l/p4g47rmu4=": {},
              "p792g47ol+4=": {}
            },
            "type": 4,
            "mrns": [
              "//policy.api.mondoo.app/policies/sshd-policy"
            ]
          },
          "ntgmPVVqwdw=": {
            "checksum": "Mj2G6cEWoR8=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-installed-packages",
            "uuid": "ntgmPVVqwdw=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "xdFJJRdvLTA=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-installed-packages"
            ]
          },
          "oyCU5WCswEk=": {
            "checksum": "xrF34tOV1Gk=",
            "qr_id": "Gjm+13rDf3o=",
            "uuid": "oyCU5WCswEk=",
            "notify": [
              "G03LzZsGQLM="
            ],
            "datapoints": {
              "ti7hCRw84/H2JY4BAPf7DEkA2PjQyb47e/xmjNi47NX245E/xIVlpGdsyd6KeuNAhAnmSaDCpxpxt3Z+aapULg==": true
            },
            "type": 8
          },
          "p792g47ol+4=": {
            "checksum": "SCzUGGfXR2w=",
            "qr_id": "//policy.api.mondoo.app/queries/sshd-sshd-07",
            "uuid": "p792g47ol+4=",
            "notify": [
              "m3zCspo+few="
            ],
            "child_jobs": {
              "xvMenSw2EPg=": {}
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/sshd-sshd-07"
            ]
          },
          "phpHwguMgqw=": {
            "checksum": "VTC39YJ/N4o=",
            "qr_id": "//policy.api.mondoo.app/policies/mondoo-linux-inventory",
            "uuid": "phpHwguMgqw=",
            "notify": [
              "ZrUwpPBaI/8="
            ],
            "scoring_system": "data only",
            "child_jobs": {
              "1deQbPfSNIo=": {
                "scoring": "ignore score",
                "action": 4
              },
              "52cLTik2+sc=": {
                "scoring": "ignore score",
                "action": 4
              },
              "6Mkas+JrCSk=": {
                "scoring": "ignore score",
                "action": 4
              },
              "7RiO9Z9/F9c=": {
                "scoring": "ignore score",
                "action": 4
              },
              "F2cnLUrcvog=": {
                "scoring": "ignore score",
                "action": 4
              },
              "HYwn6xUumDg=": {
                "scoring": "ignore score",
                "action": 4
              },
              "I7QuPT/qoqM=": {
                "scoring": "ignore score",
                "action": 4
              },
              "LJQ7hYuHTMo=": {
                "scoring": "ignore score",
                "action": 4
              },
              "USQvgRwM2Bw=": {
                "scoring": "ignore score",
                "action": 4
              },
              "Y6TAhe0SJ7I=": {
                "scoring": "ignore score",
                "action": 4
              },
              "ZVDOB1MLQWo=": {
                "scoring": "ignore score",
                "action": 4
              },
              "cA4/CDUi5YY=": {
                "scoring": "ignore score",
                "action": 4
              },
              "ntgmPVVqwdw=": {
                "scoring": "ignore score",
                "action": 4
              },
              "rkawoHDXjU4=": {
                "scoring": "ignore score",
                "action": 4
              },
              "syfEYcBJRq0=": {
                "scoring": "ignore score",
                "action": 4
              },
              "u4Cx6PgzhJ8=": {
                "scoring": "ignore score",
                "action": 4
              },
              "xzU90XZHKcE=": {
                "scoring": "ignore score",
                "action": 4
              }
            },
            "type": 4,
            "mrns": [
              "//policy.api.mondoo.app/policies/mondoo-linux-inventory"
            ]
          },
          "qagr6OPE4HQ=": {
            "checksum": "1ihC6FZELfM=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow--are-configured",
            "uuid": "qagr6OPE4HQ=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "QOuf6p9hhNY=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcshadow--are-configured"
            ]
          },
          "qw1fBZxaPgw=": {
            "checksum": "m94glH0+z1M=",
            "qr_id": "jx6ZnSyFr0o=",
            "uuid": "qw1fBZxaPgw=",
            "notify": [
              "9QciZNQSIVI="
            ],
            "datapoints": {
              "6Jmw4SvWNGUQWnNEC6bYKQtODzyw2fVYAss537ffZOtGT3P0gME7PU8eHmTp9RZ7gesPlRwl6DuMQUxI7WLLJw==": true
            },
            "type": 8
          },
          "rkawoHDXjU4=": {
            "checksum": "bsdhCKxD3Ok=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-users",
            "uuid": "rkawoHDXjU4=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "kG/ViQo2k1s=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-users"
            ]
          },
          "rxFzGGLjfv4=": {
            "checksum": "AFqe/YSyQIM=",
            "qr_id": "3d75ZaJW3Vw=",
            "uuid": "rxFzGGLjfv4=",
            "notify": [
              "cA4/CDUi5YY="
            ],
            "datapoints": {
              "+TuSckCE/rICzK1m2A6GAGpm/EqMe3Oj/iwAJtd4G1gravRD6neZiYL+70dSlBCdvDv5rWOKOoNeLQTYvMv2Dw==": true
            },
            "type": 8
          },
          "snzCi/1Kdmk=": {
            "checksum": "FQGPe0PrTpo=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-prelink-is-disabled",
            "uuid": "snzCi/1Kdmk=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "LHbAgXMX1tI=": {
                "value": 70
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-prelink-is-disabled"
            ]
          },
          "syfEYcBJRq0=": {
            "checksum": "md4fp/+VusU=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-system-manufacturer",
            "uuid": "syfEYcBJRq0=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "IwDFUPSHO18=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-system-manufacturer"
            ]
          },
          "t0zXsKaGOGk=": {
            "checksum": "5a39sR/4EE0=",
            "qr_id": "WmxWYi4ILtg=",
            "uuid": "t0zXsKaGOGk=",
            "notify": [
              "F2cnLUrcvog="
            ],
            "datapoints": {
              "aPd1sU0622HV0ZtikUUO281iDvW8IUZ98MxVZJ9u5XA5GcEWFdYk4ghEuC278CrJaisTkYNYgQCrtW4EPUjjDQ==": true
            },
            "type": 8
          },
          "tciqXkjzMO8=": {
            "checksum": "Kcp44wHDEvw=",
            "qr_id": "qXLiKKJcpv8=",
            "uuid": "tciqXkjzMO8=",
            "notify": [
              "1deQbPfSNIo="
            ],
            "datapoints": {
              "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": true
            },
            "type": 8
          },
          "u4Cx6PgzhJ8=": {
            "checksum": "1cQDZ+KezBA=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-system-product-name",
            "uuid": "u4Cx6PgzhJ8=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "I4M53Qbs06Q=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-system-product-name"
            ]
          },
          "uPd80hqxo2U=": {
            "checksum": "Uii0J3p4Btc=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow--are-configured",
            "uuid": "uPd80hqxo2U=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "zitijICz/Xw=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcgshadow--are-configured"
            ]
          },
          "vlRTpNpdbqs=": {
            "checksum": "yo8XP44AlCs=",
            "qr_id": "FrdMe+1q6Bc=",
            "uuid": "vlRTpNpdbqs=",
            "notify": [
              "+z45mboBOrg="
            ],
            "datapoints": {
              "aG7oUlIyH0BK4klvDQqsSbeRERfPhyfR1CvToYn4IPcrWZ2bsEkv4nTkHsDHTXrpQmqJRX4jye0IibRgTFLbCg==": true
            },
            "type": 8
          },
          "whYcFcFhCSc=": {
            "checksum": "Y7nwEMLlBNw=",
            "qr_id": "8KD9vCPQy4E=",
            "uuid": "whYcFcFhCSc=",
            "notify": [
              "MJQdqWkvFXY="
            ],
            "datapoints": {
              "4qO2/DvCJcr+mzdEAL+xbDRjZ4YGY27+Oko2KZa8zA1tEnNYMoQv1loDgRpoWbTWKxVfaz04F9YcSmORhvAH4w==": true,
              "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A==": true
            },
            "type": 8
          },
          "wqKb5Bz0v7I=": {
            "checksum": "tpk/AF2U1EQ=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd-are-configured",
            "uuid": "wqKb5Bz0v7I=",
            "notify": [
              "fKB6QKvhkr8="
            ],
            "child_jobs": {
              "R23z6hrQMG8=": {
                "value": 100
              }
            },
            "type": 1,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-security-permissions-on-etcpasswd-are-configured"
            ]
          },
          "x+RDfm9rabs=": {
            "checksum": "kW6OWmBIMZs=",
            "qr_id": "root",
            "uuid": "x+RDfm9rabs=",
            "child_jobs": {
              "ZrUwpPBaI/8=": {}
            },
            "type": 4
          },
          "xdFJJRdvLTA=": {
            "checksum": "hU0QQtlShZA=",
            "qr_id": "XAoGqylTzOA=",
            "uuid": "xdFJJRdvLTA=",
            "notify": [
              "ntgmPVVqwdw="
            ],
            "datapoints": {
              "h9mRqgC6ItFuY4nxvN3oY5U+wr3b3Kj0SyAhXFRF33zQ6r+VsDt47ca8OUp6XwvInz88f9QiRHS7dp3Ch0zkhw==": true
            },
            "type": 8
          },
          "xvMenSw2EPg=": {
            "checksum": "Mjf1DtsEOSc=",
            "qr_id": "3/6XnKp0RJM=",
            "uuid": "xvMenSw2EPg=",
            "notify": [
              "p792g47ol+4="
            ],
            "datapoints": {
              "XTYgIWSTRTxQRAJEqKLCeHUeuTRLgVTPNG5mG21Ma5nj2HbCyC/HGelkOUBaakbRsYyKopLSow8A2xmRz0jpGA==": true,
              "t5XFdpQHRCGELcCtnRUjV6RqTpctewjWT5fmt7B/G+hFfI9ow/bh6Wy/rvuxakj3ehFXKAK8MSnDp7tw5kQ4iQ==": true
            },
            "type": 8
          },
          "xzU90XZHKcE=": {
            "checksum": "HqHbf4+JtKs=",
            "qr_id": "//policy.api.mondoo.app/queries/mondoo-linux-smbios-baseboard",
            "uuid": "xzU90XZHKcE=",
            "notify": [
              "phpHwguMgqw="
            ],
            "child_jobs": {
              "7XV+Xzb474I=": {}
            },
            "type": 2,
            "mrns": [
              "//policy.api.mondoo.app/queries/mondoo-linux-smbios-baseboard"
            ]
          },
          "zitijICz/Xw=": {
            "checksum": "fqgFXGvk8Qk=",
            "qr_id": "vdDFAY9Qxko=",
            "uuid": "zitijICz/Xw=",
            "notify": [
              "uPd80hqxo2U="
            ],
            "datapoints": {
              "Du9pIpUoqm70Hbkk8MN4QKib35zuHmPRHjPC99qQyzN/WyImA+6x4gpaODsnDQNp545XqXx/EjY1vSWhYwIrOw==": true
            },
            "type": 8
          }
        },
        "reporting_queries": {
          "/Kj/I7IqKvY=": {
            "items": [
              "56pTR0BBV1o="
            ]
          },
          "/xtAflG+77k=": {
            "items": [
              "8bfzmX8vlr8="
            ]
          },
          "003uGoeCJx8=": {
            "items": [
              "1Glku2ryjpM="
            ]
          },
          "3/6XnKp0RJM=": {
            "items": [
              "xvMenSw2EPg="
            ]
          },
          "8KD9vCPQy4E=": {
            "items": [
              "whYcFcFhCSc="
            ]
          },
          "FrdMe+1q6Bc=": {
            "items": [
              "vlRTpNpdbqs="
            ]
          },
          "Gjm+13rDf3o=": {
            "items": [
              "oyCU5WCswEk="
            ]
          },
          "Jd+Gypq2iUU=": {
            "items": [
              "Jae3sc/MGQI="
            ]
          },
          "Kd0nC0U7dfs=": {
            "items": [
              "awqaISSD9L0="
            ]
          },
          "OFWIXTzBv00=": {
            "items": [
              "R23z6hrQMG8="
            ]
          },
          "Weu8LLZyY6g=": {
            "items": [
              "FNk7Fny4W8E="
            ]
          },
          "Xs984txmLXk=": {
            "items": [
              "QOuf6p9hhNY="
            ]
          },
          "YNN6XbHEMSg=": {
            "items": [
              "OR/xo0TTW4U="
            ]
          },
          "aS95c8UVV00=": {
            "items": [
              "LHbAgXMX1tI="
            ]
          },
          "ceocEcP6Hmo=": {
            "items": [
              "hIRe+iykhLc="
            ]
          },
          "htUqKZYa860=": {
            "items": [
              "m0XUO0vuNxs="
            ]
          },
          "m7DAOFbL9Qg=": {
            "items": [
              "NcgSq6GKUK8="
            ]
          },
          "nTE51L+DiAo=": {
            "items": [
              "611B9DDlakA="
            ]
          },
          "tLW4zUJij+I=": {
            "items": [
              "/ZYVGxL4+LE="
            ]
          },
          "usnsqpdfgm4=": {
            "items": [
              "PEI+RqY7u3o="
            ]
          },
          "vdDFAY9Qxko=": {
            "items": [
              "zitijICz/Xw="
            ]
          },
          "vf3LKN6rpLg=": {
            "items": [
              "jayNDfW+Dz0="
            ]
          },
          "wE8/X4w6/GQ=": {
            "items": [
              "UxwGhpbK8cc="
            ]
          },
          "wM8ZVC/LDTg=": {
            "items": [
              "9d7vkmqW8KA="
            ]
          }
        },
        "datapoints": {
          "+TuSckCE/rICzK1m2A6GAGpm/EqMe3Oj/iwAJtd4G1gravRD6neZiYL+70dSlBCdvDv5rWOKOoNeLQTYvMv2Dw==": {
            "type": "\f",
            "notify": [
              "rxFzGGLjfv4="
            ]
          },
          "+kCnzP6P15iffB7fsSLxopgvKnvzgc/3r+tVJKi0/jXOuzSiB+kuL07/4iiiJJcQuwSzmD8ERaS7ivitzXV7FA==": {
            "type": "\u0007",
            "notify": [
              "/ZYVGxL4+LE="
            ]
          },
          "0iyubSPgwQLoLv1XelfGN/H3n+NeXAwHaxOB97bpY233cOg1RQmrZRW8ExqVgBeN6a01QuXWpv3vgb/tvOux8Q==": {
            "type": "\u0019\f",
            "notify": [
              "hIRe+iykhLc="
            ]
          },
          "1bJiVdNJy+oHfcFSfCtRhI1LR5igKR07aS98tqbUe+biod6mugYAv4lxijplx4S0rxSi9M8Z0wYuFSxickckNA==": {
            "type": "\u0007",
            "notify": [
              "Id7IgPCsykE="
            ]
          },
          "2hZ3z+3H/QD+mlekH8q+XJI8LKLWCorG6amoVQPvfWzaq07JXZgflggDlzI/ysKXy1pKUdzt+483lluQXxsJ4Q==": {
            "type": "\u0004",
            "notify": [
              "LHbAgXMX1tI="
            ]
          },
          "3dOFooH1gr1YosAmtEfQsyCvPDAkblqinIpavjPxu888CvjcGms1x5M7lhrJeMiQ3YeVxTpt0OLEDNUWaJVrsQ==": {
            "type": "\u0004",
            "notify": [
              "56pTR0BBV1o="
            ]
          },
          "4FTu8UX2yMVeEc5N/Ouz0BE6bDRPuZ/7ZuriB9Y3C2baQ1MHggGswbvcjtBxOJc+b5QzE7VSE6wEmmmnkcpubg==": {
            "type": "\u0007",
            "notify": [
              "52Iy6+s1IIE="
            ]
          },
          "4qO2/DvCJcr+mzdEAL+xbDRjZ4YGY27+Oko2KZa8zA1tEnNYMoQv1loDgRpoWbTWKxVfaz04F9YcSmORhvAH4w==": {
            "type": "\u0004",
            "notify": [
              "whYcFcFhCSc="
            ]
          },
          "5cSfxEGXxucePJiOs0YrGWku3mayXp5BLTuPd4BAtQ/HRLjAtKJUd4JW1uVv5cF1jdLx0FsyA8knGbM0YVJLbg==": {
            "type": "\u0019\f",
            "notify": [
              "UxwGhpbK8cc="
            ]
          },
          "5d4FZxbPkZu02MQaHp3C356NJ9TeVsJBw8Enu+TDyBGdWlZM/AE+J5UT/TQ72AmDViKZe97Hxz1Jt3MjcEH/9Q==": {
            "type": "\u0007",
            "notify": [
              "b8u0fLYh6Ww="
            ]
          },
          "5tcBgzPZQz8/zm7UDznoBcP9St4ycw7/V4O91ZoA+XW9Vk1/amP/ow2gP8VKh0XV+fx1IaRBbfzoOT0OQ2pvWw==": {
            "type": "\u0004",
            "notify": [
              "611B9DDlakA="
            ]
          },
          "6GV7OiQSU1fwRwmB2MtE0u8IG8j6PQJTDKj3GqbPCWek07rjs0E4nE2JNttpY+0OuGo2gk8KUE/saFGxeq2gYQ==": {
            "type": "\u0004",
            "notify": [
              "LHbAgXMX1tI="
            ]
          },
          "6Jmw4SvWNGUQWnNEC6bYKQtODzyw2fVYAss537ffZOtGT3P0gME7PU8eHmTp9RZ7gesPlRwl6DuMQUxI7WLLJw==": {
            "type": "\f",
            "notify": [
              "qw1fBZxaPgw="
            ]
          },
          "7j2j9tDKzkFhSbsr8SPpFRpuOv8WV66N7eN5pH1HVUQ6fmFTHoPEqtgETb4LzUuiNl8TFBn4DxX2sciznRYxjw==": {
            "type": "\u0004",
            "notify": [
              "SeD6b7lC/Nc="
            ]
          },
          "7wsOp4YGaSjHvRvBmFaAZ0PIPxNKcO6DjOochPbOJKUhzMH/pVkkQO0Ziw+hFT2hMePykJHfBtrzr0uzpNKzcw==": {
            "type": "\u0019\f",
            "notify": [
              "j60Crh2icHU="
            ]
          },
          "7zMfskozHqhiScbU2kNsfYC2uQ0B1f+XOtt3Q2+qCfjPNBkxtKNoKM707TK6ctUb4TfHI6tuQlIO34S4RBfOsw==": {
            "type": "\u0004",
            "notify": [
              "hIRe+iykhLc="
            ]
          },
          "8UFMaOXC4SMhWK+Vx/3T7dr6xt0crU2tSRurKy4l3M/pETdqnDy2+5XZAVoyskOku7hIGVb7HJ06XzuQhgvjMQ==": {
            "type": "\f",
            "notify": [
              "NcgSq6GKUK8="
            ]
          },
          "9JRnRD0qcwHdUJtCGMTAJe3H1iY2xdZ5QNY+Bji5zt7EG1rgcxmWYBO6pOuPOvrDsHa8dnSx9hbE92vZlnyJQg==": {
            "type": "\f",
            "notify": [
              "QOuf6p9hhNY="
            ]
          },
          "9YkvN1Tog2VFrCsfbkt7WCb0Uju/0Co8g3qlC724FFJbejgL1VpD8EXWg+hZHbNePFOUaSB4gsH8n7Xk3qNSeg==": {
            "type": "\u0005",
            "notify": [
              "cwxY/8qImGI="
            ]
          },
          "ANF22c2hJk/VGnp1zb6eP1uRao9RejTrGTHE4u8pfNBhdj5M2K/6O8ScVyAfzjc1ve2fMMwXtDpmOVBuCQQXUA==": {
            "type": "\f",
            "notify": [
              "D0xH6OdewXM="
            ]
          },
          "ANVso+zEuxoUfM2V+LC0ZsKhhuGV4NkxnwM6tBChYQtESc1xymFyRH96dzy0qaEl+n0a6iFsEihCwlxIU+4d3g==": {
            "type": "\u0004",
            "notify": [
              "cwxY/8qImGI="
            ]
          },
          "Bh9j9HZlDt8TWQX/bN4P3MgYRejIzj9dgd1p4rgMU9b8X6NSFnfz520S6pltOhMwTBYW7fhwOm0VRwT5lYfM+g==": {
            "type": "\u0019\f",
            "notify": [
              "jayNDfW+Dz0="
            ]
          },
          "C7pIcdgckyNvi+tVzcT8yFhoTd6ED2MmNVDVonPDYW+VJqRi1fdC0qykrqv9Hg8ULS9be5SuVTtnCzem7+MqvQ==": {
            "type": "\u0007",
            "notify": [
              "OFCOzm9l2UE="
            ]
          },
          "CQXUv/QbKcO1F5LvHFZ2NWFYNovHloaexe9lAEkpEll9s03HI4ecB5bwGd/DasLoHdaNambHL/g4zkz1siZb7w==": {
            "type": "\u0004",
            "notify": [
              "8bfzmX8vlr8="
            ]
          },
          "CqLfIuM83K6QnYqrOADKAF9mFRzPIrtPZcx3DNIevpXojwGW9nDM8JKdx6LF69F5sWATva7cBRDwNgiDT0dM9Q==": {
            "type": "\u0004",
            "notify": [
              "9d7vkmqW8KA="
            ]
          },
          "Du9pIpUoqm70Hbkk8MN4QKib35zuHmPRHjPC99qQyzN/WyImA+6x4gpaODsnDQNp545XqXx/EjY1vSWhYwIrOw==": {
            "type": "\f",
            "notify": [
              "zitijICz/Xw="
            ]
          },
          "Ft7Jxk6egFeEfekzy9up3kbujKcTudJA6dcsS5nmUN5/GA5GWgvEPNW6BirbXZ10qgWuP8T3ILrx4WGESSNi7w==": {
            "type": "\u0004",
            "notify": [
              "UxwGhpbK8cc="
            ]
          },
          "G0bUwMGEwUqkQiCcj4R04tMFYAp3dSRhbU6dBPoLeX2lyTqPVGvreUvu5qov/OCoWc/Q5eaLopy2nQF9xeDEHw==": {
            "type": "\f",
            "notify": [
              "m0XUO0vuNxs="
            ]
          },
          "H7H0YG5evkzzLDZSd6Ayb6abAXcrzwkoCcfUXx1AmiAOybkTo7ujzAM6rwO63/MF8k+IkPNQz4cLNqT/1KnYnw==": {
            "type": "\f",
            "notify": [
              "awqaISSD9L0="
            ]
          },
          "HqzoGatqZWT/EC95/9U75RwCem4mYhIOoBA+CLhhFQGnV5Bx3jft/j58ivFgU0K2gjRg6viIvngB5bCX/+2hbA==": {
            "type": "\u0019\f",
            "notify": [
              "FNk7Fny4W8E="
            ]
          },
          "J4anmJ+mXJX380Qslh563U7Bs5d6fiD2ghVxV9knAU0iy/P+IVNZsDhBbCmbpJch3Tm0NliAMiaY47lmw887Jw==": {
            "type": "\u0007",
            "notify": [
              "R8p+y2MeycQ="
            ]
          },
          "K/iSicFsNRnABMWDI/sCiOOwKTn8REU1GecAXDp5HHiBfbqKB9mGDBGtuMXfhv+ewr+U+ZHM9XPjkL8pkrUDLw==": {
            "type": "\u0019\f",
            "notify": [
              "OR/xo0TTW4U="
            ]
          },
          "K0DaGol5d32MZC3V9ZLSBvNpnxgG9nzBK5g6Z8F8op+6911vlpRissBaxdOs0RpJ0TwBH7+ZeHKE3jTWvbhKqQ==": {
            "type": "\u0019\f",
            "notify": [
              "8bfzmX8vlr8="
            ]
          },
          "L1uVAC1Xk4VwI/Qi2VdbZmacln2sPsRupgEa+wu3tZMkFHQl/raDrrtmmhXpPial8vIcCqRvPSX0oh2iZDuASA==": {
            "type": "\u0019\u0007",
            "notify": [
              "Jae3sc/MGQI="
            ]
          },
          "N6OGcsq2186ftBhko1yfnn6Dgbmd+R5SvlBcylRBdep3Dg+KDFT2L0HiBnXJZ1jK/yTtTQ3PFBtevIs0jYmloQ==": {
            "type": "\u0019\f",
            "notify": [
              "PEI+RqY7u3o="
            ]
          },
          "NHrdRzRdnH8RhdMx+eaVOihc+5p/vix2/q80Bk2iJXVMcI9YXHD745UZl0bPizz93JsTx1bC3xYsQwv771OixQ==": {
            "type": "\u0007",
            "notify": [
              "IwDFUPSHO18="
            ]
          },
          "NoAJV6/zn4XKsJILgugtSNBjw59X84Ynkrep3rpQe/frNdQMeG1O+KNawC+McOt8RU9UQErAbHspg7H0R2dhSA==": {
            "type": "\u0019\u0007",
            "notify": [
              "Jae3sc/MGQI="
            ]
          },
          "OSG/mAQsQ08cruLamBggOYG8t2LKZwGF9iVNcSn1u8IAlfikLhKrZSYpDYAzm/4mfiIwbjrI1Q+Cw/8fzfcLPA==": {
            "type": "\u0004",
            "notify": [
              "/ZYVGxL4+LE="
            ]
          },
          "OcxjyMNzPsQob5d23efk6/D/qbV2XftiD+stAvXITuJOOmdoVb4hcGjt+IT0AldkoHCFowQ2mx+Yhdj0ktI5AA==": {
            "type": "\u0004",
            "notify": [
              "1Glku2ryjpM="
            ]
          },
          "PajQbuIy7yumyL6veB0h7FOJ5NyLMwFP1PdFOzy+2dlZBz4KyQOhEPP/PT//v/xa7amciRIS65ECw9hiqgqgFQ==": {
            "type": "\u0007",
            "notify": [
              "aEJ8z536VaI="
            ]
          },
          "PtunGFObCqSZRTCGP7b3oq6W69r5SfxHvJ9xQhO4bCUu/fK6KMIIo9ur5/0WhLQ6+ZEMhdlHhyz9DsP805sDnQ==": {
            "type": "\u0019\f",
            "notify": [
              "kG/ViQo2k1s="
            ]
          },
          "R1EtIO0IHYcNITt63nhdkbe+zbZw9l9TG5fmOGZWTycdIbQUB3zh3hSMHTlo9dpdId0Os1CQF4cSyWayMhHslA==": {
            "type": "\u0019\f",
            "notify": [
              "m3q7cHIO+jg="
            ]
          },
          "S0pi0XR2kSuGxhNT7T1roRClJpvyWDf2tbqf4WiaICdLeN4J+5clf8CQzREt32vqpf9puBNedCGXo27OvRaflw==": {
            "type": "\f",
            "notify": [
              "R23z6hrQMG8="
            ]
          },
          "TBJjOKtZT1BQwIMS0l5Z3hbtRx/A8zOmfy1HsmroznS1SMQupwq0ed8VXfh9zIlQEH8MmsCiM5EXkWhvHU/v5w==": {
            "type": "\u0019\f",
            "notify": [
              "LgqZ+5/krhw="
            ]
          },
          "VYvXd9DoeA22juTEFywXJb89sXLsOc7eHhrCj6WwJqVtuEUXvgQeEsFXaVhe72J+NBCOk9tV3F4BZ4g67moVHA==": {
            "type": "\u0007",
            "notify": [
              "PcNBawC4CTM="
            ]
          },
          "W+8HW/v60Fx0nqrVz+yTIQjImy4ki4AiqxcedooTPP3jkbCESy77ptEhq9PlrKjgLafHFn8w4vrimU4bwCi6aQ==": {
            "type": "\u0007",
            "notify": [
              "tciqXkjzMO8="
            ]
          },
          "XTYgIWSTRTxQRAJEqKLCeHUeuTRLgVTPNG5mG21Ma5nj2HbCyC/HGelkOUBaakbRsYyKopLSow8A2xmRz0jpGA==": {
            "type": "\u0004",
            "notify": [
              "xvMenSw2EPg="
            ]
          },
          "XmES4jlqYB9VGoEFhptxhc2aEc8dqob2jjig2/vA50M5Gyo6YZGtxRlM8tZRMWFuXs7YxZ1kYsq6YNcoHYaixw==": {
            "type": "\u0004",
            "notify": [
              "Jae3sc/MGQI="
            ]
          },
          "aG7oUlIyH0BK4klvDQqsSbeRERfPhyfR1CvToYn4IPcrWZ2bsEkv4nTkHsDHTXrpQmqJRX4jye0IibRgTFLbCg==": {
            "type": "\f",
            "notify": [
              "vlRTpNpdbqs="
            ]
          },
          "aPd1sU0622HV0ZtikUUO281iDvW8IUZ98MxVZJ9u5XA5GcEWFdYk4ghEuC278CrJaisTkYNYgQCrtW4EPUjjDQ==": {
            "type": "\u0007",
            "notify": [
              "t0zXsKaGOGk="
            ]
          },
          "ajc0jSWdVtW2inxQWkRHq7bwbm+kHyca9cys7y4YNC2p1vH9rPuJ23PPoe7I6sVdEXgbIFOlZQNk8dMO4J9d5A==": {
            "type": "\u0019\f",
            "notify": [
              "whYcFcFhCSc="
            ]
          },
          "cePaHhIQT0r/Q/uOnqJiCe2fzy+jKj8vKmZMzte8HkLbxCFtAB88sJxgEk7pM7dF5yt1jNfaqRuUgcLxAuajww==": {
            "type": "\u0019\f",
            "notify": [
              "A2OoIFziMh8="
            ]
          },
          "djP32G9AaxRcoHg7WH7GnRk58T7K1gripxG3lmdPl2XOvyo6rq6XIpyKZOFjxBWCJ+1hwBv4WTPc1w1QsoJslg==": {
            "type": "\u0019\f",
            "notify": [
              "56pTR0BBV1o="
            ]
          },
          "f6zruMb0IvG6WXtG+K5yuHnlZWNaDvVxwhETUa3C31JKY/uN/FTNwIRm3mU8VTUy2cL4BfTenisUBBbzXBThzQ==": {
            "type": "\u0007",
            "notify": [
              "bh/SHE5Egvw="
            ]
          },
          "gTvQfzfBTcLac5tESAqT5w/oYH2O0U6u5VSRkG36X9s6YpD6S2ZMtB/9y8RvGey0nBEUFXmFN/5egbF3FuWKsQ==": {
            "type": "\u0019\f",
            "notify": [
              "611B9DDlakA="
            ]
          },
          "gnQzZeSAHrQV35V8XMTtz9hHVuRLLkmvsgmgVe93eDzEWW9NrV/hP7Wu409x5z0m+ZibsdLlck3xAamyu7arLw==": {
            "type": "\u0004",
            "notify": [
              "OR/xo0TTW4U="
            ]
          },
          "h9mRqgC6ItFuY4nxvN3oY5U+wr3b3Kj0SyAhXFRF33zQ6r+VsDt47ca8OUp6XwvInz88f9QiRHS7dp3Ch0zkhw==": {
            "type": "\u0019\f",
            "notify": [
              "xdFJJRdvLTA="
            ]
          },
          "ib2pfAMXIQISTa5wN7PCTp8xzRB+RdPOJplleR021jwn7eaBc/LMfl3f1svA4Njp50r9CW4XchPxEqfDUWBA0g==": {
            "type": "\f",
            "notify": [
              "A07dzetUJrg="
            ]
          },
          "j3I61cJvMNTVhZ14xpxulHfTgqmTJOWxgoAl0zGo9Osrk2b8p9ZxD+rugv2N7Hs34dVi1hb+m+7R4F4g+FyC5Q==": {
            "type": "\u0005",
            "notify": [
              "SeD6b7lC/Nc="
            ]
          },
          "k6rlXoYpV48Qd19gKeNl+/IiPnkI5VNQBiqZBca3gDKsIRiLcpXQUlDv52x9sscIWiqOMpC7+x/aBpY0IUq0ww==": {
            "type": "\u0007",
            "notify": [
              "QYWFkyOZ9Ww="
            ]
          },
          "kLnVPjiZ6SHX22uG9vP3Dj5LzONhJGq5lSimtav8imr+diU48/XH0aFixUB4REzwB7t9I0508qiEEb2JJvX/9A==": {
            "type": "\u0007",
            "notify": [
              "MGby+YSFjvk="
            ]
          },
          "kvbn2Yj+Sqcv41rX1QLr8Pa/wcxZC+dyiDl9KUYv7F8q4jGETZ749fSrFV7Mm2qgK3fM/84Woxb0ni1c/rn2ow==": {
            "type": "\f",
            "notify": [
              "7XV+Xzb474I="
            ]
          },
          "lwAAKHsQ98MBLjxrKI00XjjJVCLgN0grFMrInELo9nM7Uh/fQevhRD8hjxKfB2gfNrEukMAilPH98TJliZIqYA==": {
            "type": "\u0019\f",
            "notify": [
              "1Glku2ryjpM="
            ]
          },
          "mhgTAYWyl4RGL8my4EskNtiC8WdZdCnvto9+Vp+vdGvTXrsmNCZF2I1dGbbT/2LS8npk1ULPyVFyX4MEE7zwkw==": {
            "type": "\u001a\u0007\u0007",
            "notify": [
              "AQ1WytbKWqA="
            ]
          },
          "nYiOaK8tGSbYFIljYNbWufmM2j0W7DAjhGcj7x8fShWOz3K5F+/+Q1g+T0pIvMYNQfQd/Pv2ljQfm3N7x/KGuw==": {
            "type": "\u0019\u0007"
          },
          "o79/eN5svDRVY7PTXsEyQaRNTF+XwKLUq1qTtO7WPq68D/oVRbsp6xjp/w5pbRWdd3pcPAZp/wNTSfaTtP6fcw==": {
            "type": "\f",
            "notify": [
              "GaynjgcwpBA="
            ]
          },
          "oRvSYIoFygbNmc7Hg3IaXhHOt4EwyTTzarxgx0Sp6y+Zho2hbs2qyZYrPAyFsuemLy6Uk+CQ+aXY4xM9UzS4xA==": {
            "type": "\u0019\f",
            "notify": [
              "BJnVhDXk9I8="
            ]
          },
          "si5aO2CnDJDGjvjZg+zIvTfCuB9mnXsh8IJG0wn96t1JdXEXr+K50k3qLLXGw700pXAocIyFuwtOqxU4K/Vm/A==": {
            "type": "\u0007",
            "notify": [
              "9d7vkmqW8KA="
            ]
          },
          "t5XFdpQHRCGELcCtnRUjV6RqTpctewjWT5fmt7B/G+hFfI9ow/bh6Wy/rvuxakj3ehFXKAK8MSnDp7tw5kQ4iQ==": {
            "type": "\u0007",
            "notify": [
              "xvMenSw2EPg="
            ]
          },
          "ti7hCRw84/H2JY4BAPf7DEkA2PjQyb47e/xmjNi47NX245E/xIVlpGdsyd6KeuNAhAnmSaDCpxpxt3Z+aapULg==": {
            "type": "\f",
            "notify": [
              "oyCU5WCswEk="
            ]
          },
          "vQLwphNfiqzec/YNibO5P8batOzxxdpXmEaST9tWSCooYc3S0moW1J2EJbFiMF+/DO51mPQcXMoxUDDn8CUtKw==": {
            "type": "\u0007",
            "notify": [
              "I4M53Qbs06Q="
            ]
          },
          "wqBMlXbmQSD5agbjcVBO765mJg9Fzk/jOE/5PQtEu4HX/IOZ/DbSqCkml6Gb16wcJn0O3ePnfI/AqgtJz0nWbg==": {
            "type": "\u0004",
            "notify": [
              "jayNDfW+Dz0="
            ]
          },
          "zkQO5VqK4KADLajxTmptIOrP5ngwLGNY+FhS/h9qIJdZBxBNQwFoT0xZZgHBU5r9Lq9PuMOnhzb9PdGhVvha+w==": {
            "type": "\u0004",
            "notify": [
              "FNk7Fny4W8E="
            ]
          }
        },
        "risk_mrns": {
          "SeD6b7lC/Nc=": {
            "items": [
              "//policy.api.mondoo.app/risks/open-ports"
            ]
          },
          "cwxY/8qImGI=": {
            "items": [
              "//policy.api.mondoo.app/risks/private-ssh-keys"
            ]
          }
        },
        "risk_factors": {
          "//policy.api.mondoo.app/risks/open-ports": {
            "mrn": "//policy.api.mondoo.app/risks/open-ports",
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            }
          },
          "//policy.api.mondoo.app/risks/private-ssh-keys": {
            "mrn": "//policy.api.mondoo.app/risks/private-ssh-keys",
            "scope": 1,
            "deprecated_v11_magnitude": 0.05,
            "magnitude": {
              "value": 0.05
            }
          }
        }
      },
      "filters": [
        {
          "query": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
          "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
          "code_id": "0YsqcS4odYM=",
          "checksum": "zbKYoN7MmTA=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/0YsqcS4odYM=",
          "type": "\u0004",
          "title": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
          "filters": {}
        },
        {
          "query": "asset.name != \"\"",
          "mql": "asset.name != \"\"",
          "code_id": "0nvpSmfgEbc=",
          "checksum": "oV65aMg8aPQ=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/0nvpSmfgEbc=",
          "type": "\u0004",
          "title": "asset.name != \"\"",
          "filters": {}
        },
        {
          "query": "asset.family.contains(_ == 'linux')",
          "mql": "asset.family.contains(_ == 'linux')",
          "code_id": "2/RKPdovsIM=",
          "checksum": "K5KNW2oztJk=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/2/RKPdovsIM=",
          "type": "\u0004",
          "title": "asset.family.contains(_ == 'linux')",
          "filters": {}
        },
        {
          "query": "asset.family.contains('os')",
          "mql": "asset.family.contains('os')",
          "code_id": "6MyoXYw7VKE=",
          "checksum": "ZUDg/SGXtjw=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/6MyoXYw7VKE=",
          "type": "\u0004",
          "title": "asset.family.contains('os')",
          "filters": {}
        },
        {
          "query": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"vmware-esxi\" || asset.platform == \"vmware-vsphere\" || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
          "mql": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"vmware-esxi\" || asset.platform == \"vmware-vsphere\" || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
          "code_id": "F+ghXkR5x/0=",
          "checksum": "iX0bE9Kpwvo=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/F+ghXkR5x/0=",
          "type": "\u0004",
          "title": "asset.family.contains('linux') || asset.family.contains('windows') || asset.platform == \"vmware-esxi\" || asset.platform == \"vmware-vsphere\" || asset.platform == \"macos\" || asset.platform == \"aix\"\n",
          "filters": {}
        },
        {
          "query": "asset.family.contains(/redhat|debian/) == true",
          "mql": "asset.family.contains(/redhat|debian/) == true",
          "code_id": "Hgs86AORbWw=",
          "checksum": "72HM5iQ50Zg=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/Hgs86AORbWw=",
          "type": "\u0004",
          "title": "asset.family.contains(/redhat|debian/) == true",
          "filters": {}
        },
        {
          "query": "asset.labels[\"windows.mondoo.com/product-type\"] != \"0\"",
          "mql": "asset.labels[\"windows.mondoo.com/product-type\"] != \"0\"",
          "code_id": "HkeKGQEOnC8=",
          "checksum": "x6naK8rhEMI=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/HkeKGQEOnC8=",
          "type": "\u0004",
          "title": "asset.labels[\"windows.mondoo.com/product-type\"] != \"0\"",
          "filters": {}
        },
        {
          "query": "asset.kind != \"\"",
          "mql": "asset.kind != \"\"",
          "code_id": "OITnYRAA4Lw=",
          "checksum": "u7c8YezsXyI=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/OITnYRAA4Lw=",
          "type": "\u0004",
          "title": "asset.kind != \"\"",
          "filters": {}
        },
        {
          "query": "asset.family.contains(\"debian\")",
          "mql": "asset.family.contains(\"debian\")",
          "code_id": "Z50YyJG54ZE=",
          "checksum": "VyK368ynJo8=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/Z50YyJG54ZE=",
          "type": "\u0004",
          "title": "asset.family.contains(\"debian\")",
          "filters": {}
        },
        {
          "query": "asset.arch != \"\"",
          "mql": "asset.arch != \"\"",
          "code_id": "jzQMFuDxQus=",
          "checksum": "m2wii/R5WZs=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/jzQMFuDxQus=",
          "type": "\u0004",
          "title": "asset.arch != \"\"",
          "filters": {}
        },
        {
          "query": "true",
          "mql": "true",
          "code_id": "lcBOE/v/1Mw=",
          "checksum": "71xaCUKsT9w=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/lcBOE/v/1Mw=",
          "type": "\u0004",
          "title": "true",
          "filters": {}
        },
        {
          "query": "asset.family.contains('linux')\n",
          "mql": "asset.family.contains('linux')\n",
          "code_id": "qZ0RZfIjQ18=",
          "checksum": "oeF22XdhM5k=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/qZ0RZfIjQ18=",
          "type": "\u0004",
          "title": "asset.family.contains('linux')\n",
          "filters": {}
        },
        {
          "query": "asset.version != \"\"",
          "mql": "asset.version != \"\"",
          "code_id": "sGKyqpiAJwo=",
          "checksum": "Z0xz8X67EV0=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/sGKyqpiAJwo=",
          "type": "\u0004",
          "title": "asset.version != \"\"",
          "filters": {}
        },
        {
          "query": "asset.family.contains('unix')",
          "mql": "asset.family.contains('unix')",
          "code_id": "u6qtHYJqMdA=",
          "checksum": "4bjQZF2dHWQ=",
          "mrn": "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc/assetfilter/u6qtHYJqMdA=",
          "type": "\u0004",
          "title": "asset.family.contains('unix')",
          "filters": {}
        }
      ],
      "graph_execution_checksum": "6+kRFHvaz8A=",
      "filters_checksum": "9uLJwQZEQYY=",
      "reporting_job_uuid": "x+RDfm9rabs="
    }
  },
  "vuln_reports": {
    "//assets.api.mondoo.app/spaces/test-infallible-taussig-796596/assets/310qEuaqCbVCMU5tGa1HbLx8TZc": {
      "stats": {
        "advisories": {},
        "cves": {},
        "packages": {
          "total": 93
        },
        "exploits": {}
      }
    }
  }
}