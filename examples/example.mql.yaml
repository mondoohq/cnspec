# To run this file:
#   cnspec scan -f examples/example.mql.yaml
#
# This section lists all the policies that are part of this bundle.
# In our case, we only have 1 policy: example1
policies:
  - uid: example1
    name: Example policy 1
    version: "1.0.0"
    # If your policies has queries that have a "severity", you should set
    # the scoring system to "highest impact" (like in this case). It makes
    # sure that the lowest score (i.e. highest impact failure) is used as
    # the overall score for the report.
    scoring_system: highest impact
    authors:
      - name: Mondoo
        email: hello@mondoo.com
    # Specs are a way to specify all the queries (and other policies)
    # that we want to apply. Specs are grouped together and can be filtered.
    # This allows you to only apply a group of queries if the condition is met.
    groups:
      - checks:
          # These are checks that will be scored and contribute to the
          # final score of this policy.
          - uid: sshd-01
            title: Set the port to 22
            mql: sshd.config.params["Port"] == 22
            # Impact are used for scoring. 100 = critical. 0 = informational.
            impact: 30

          - uid: sshd-02
            title: Configure the address family
            mql: sshd.config.params["AddressFamily"] == /inet|inet6|any/
            impact: 40

            # Here we use a referenced query. You can put multiple policies
            # into a bundle, which may share theirtheir checks and data queries.
          - uid: shared

        queries:
          # These are queries which only collect data. They don't say
          # what you should or shouldn't do, they only provide insights.
          - uid: sshd-d-1
            title: Gather SSH config params
            mql: sshd.config.params

          # Here is an example of a query that uses embedded properties. 
          # These allow users to fine-tune the policy.
          - uid: home-info
            mql: file(props.home) { * }
            title: Gather info about the user's home
            props:
              - uid: home
                mql: |
                  "/home"

        filters:
          # Here we specify that the queries in this spec are only applied
          # when the asset satisfies this condition:
          - mql: asset.family.contains('unix')

# These are all the queries that are part of this bundle. They are used
# by the policies specified above.
queries:
  # Every query can be identified by its UID
  # The title helps in printing it.
  - uid: shared
    title: Enable strict mode
    mql: sshd.config.params["StrictModes"] == "yes"
    impact: 70

