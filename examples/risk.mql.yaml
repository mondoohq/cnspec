# Copyright (c) Mondoo, Inc.
# SPDX-License-Identifier: BUSL-1.1

policies:
  - uid: example1
    name: Example Risk policy
    version: "1.0.0"
    # If your policy has checks with impacts, specify the
    # "highest impact" scoring system. This system uses the lowest
    # score (the highest impact failure) as the overall report score.
    scoring_system: highest impact
    authors:
      - name: Mondoo
        email: hello@mondoo.com
    # Specs are a way to specify all the queries (and other policies)
    # to apply. Specs are grouped together and can be filtered.
    # This lets you apply a group of queries only if the condition is met.
    groups:
      - checks:
          # These are checks that will be scored and contribute to the
          # final score of this policy.
          - uid: sshd-01
            title: Use SSH Protocol set to 2
            mql: sshd.config.params.Protocol == 2
            # Impact is used for scoring. 100 = critical. 0 = informational.
            impact: 100

          - uid: sshd-02
            title: Prevent weaker CBC ciphers from being used
            mql: sshd.config.ciphers.all( /cbc/ )
            impact: 80

            # Here we use a referenced query. You can put multiple policies
            # in a bundle and share checks and queries between them.

        filters:
          # Here we specify that the queries in this spec only apply
          # when the asset satisfies this condition:
          - mql: asset.family.contains('unix')
    risk_factors:
      - uid: sshd-service
        title: SSHd Service running
        docs:
          active: The SSH service is running and can expose security issues in SSH or the asset to outside attackers.
          inactive: The SSH service is not running, which reduces the attack surface on the asset.
        magnitude: 0.7
        software:
          - name: openssh-server
          - type: alpm
            name: openssh
        resources:
          - mql: sshd
        filters:
          - mql: |
              asset.family.contains('os')
              && service('sshd').installed
        checks:
          - uid: sshd-service-running
            mql: service('sshd').running

