// Copyright (c) Mondoo, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: scan.proto

package scan

import (
	inventory "go.mondoo.com/cnquery/v11/providers-sdk/v1/inventory"
	policy "go.mondoo.com/cnspec/v11/policy"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines the possible outputs for a scan. If NONE is used, then no output is returned. If FULL is used,
// then a raw object ReportCollection object is returned.
type ReportType int32

const (
	ReportType_FULL  ReportType = 0
	ReportType_ERROR ReportType = 1
	ReportType_NONE  ReportType = 2
)

// Enum value maps for ReportType.
var (
	ReportType_name = map[int32]string{
		0: "FULL",
		1: "ERROR",
		2: "NONE",
	}
	ReportType_value = map[string]int32{
		"FULL":  0,
		"ERROR": 1,
		"NONE":  2,
	}
)

func (x ReportType) Enum() *ReportType {
	p := new(ReportType)
	*p = x
	return p
}

func (x ReportType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportType) Descriptor() protoreflect.EnumDescriptor {
	return file_scan_proto_enumTypes[0].Descriptor()
}

func (ReportType) Type() protoreflect.EnumType {
	return &file_scan_proto_enumTypes[0]
}

func (x ReportType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportType.Descriptor instead.
func (ReportType) EnumDescriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3 // Used only by the Watch method.
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scan_proto_enumTypes[1].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_scan_proto_enumTypes[1]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{8, 0}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_scan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{0}
}

type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inventory     *inventory.Inventory   `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
	Bundle        *policy.Bundle         `protobuf:"bytes,2,opt,name=bundle,proto3" json:"bundle,omitempty"`
	DoRecord      bool                   `protobuf:"varint,20,opt,name=do_record,json=doRecord,proto3" json:"do_record,omitempty"`
	PolicyFilters []string               `protobuf:"bytes,21,rep,name=policy_filters,json=policyFilters,proto3" json:"policy_filters,omitempty"`
	Props         map[string]string      `protobuf:"bytes,23,rep,name=props,proto3" json:"props,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Vault configuration + credentials query
	// Report type configuration
	ReportType    ReportType `protobuf:"varint,22,opt,name=report_type,json=reportType,proto3,enum=cnspec.policy.scan.ReportType" json:"report_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_scan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetInventory() *inventory.Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *Job) GetBundle() *policy.Bundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

func (x *Job) GetDoRecord() bool {
	if x != nil {
		return x.DoRecord
	}
	return false
}

func (x *Job) GetPolicyFilters() []string {
	if x != nil {
		return x.PolicyFilters
	}
	return nil
}

func (x *Job) GetProps() map[string]string {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Job) GetReportType() ReportType {
	if x != nil {
		return x.ReportType
	}
	return ReportType_FULL
}

type AdmissionReviewJob struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Data  *structpb.Struct       `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Map of string keys and values that can be used to organize and categorize the assets
	Labels     map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ReportType ReportType        `protobuf:"varint,3,opt,name=report_type,json=reportType,proto3,enum=cnspec.policy.scan.ReportType" json:"report_type,omitempty"`
	// Additional options for the manifest job
	Options map[string]string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Additional discovery settings for the manifest job
	Discovery     *inventory.Discovery `protobuf:"bytes,5,opt,name=discovery,proto3" json:"discovery,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdmissionReviewJob) Reset() {
	*x = AdmissionReviewJob{}
	mi := &file_scan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdmissionReviewJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdmissionReviewJob) ProtoMessage() {}

func (x *AdmissionReviewJob) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdmissionReviewJob.ProtoReflect.Descriptor instead.
func (*AdmissionReviewJob) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{2}
}

func (x *AdmissionReviewJob) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AdmissionReviewJob) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AdmissionReviewJob) GetReportType() ReportType {
	if x != nil {
		return x.ReportType
	}
	return ReportType_FULL
}

func (x *AdmissionReviewJob) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AdmissionReviewJob) GetDiscovery() *inventory.Discovery {
	if x != nil {
		return x.Discovery
	}
	return nil
}

type GarbageCollectOptions struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OlderThan       string                 `protobuf:"bytes,1,opt,name=older_than,json=olderThan,proto3" json:"older_than,omitempty"` // RFC3339
	ManagedBy       string                 `protobuf:"bytes,2,opt,name=managed_by,json=managedBy,proto3" json:"managed_by,omitempty"`
	PlatformRuntime string                 `protobuf:"bytes,3,opt,name=platform_runtime,json=platformRuntime,proto3" json:"platform_runtime,omitempty"`
	Labels          map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GarbageCollectOptions) Reset() {
	*x = GarbageCollectOptions{}
	mi := &file_scan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GarbageCollectOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GarbageCollectOptions) ProtoMessage() {}

func (x *GarbageCollectOptions) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GarbageCollectOptions.ProtoReflect.Descriptor instead.
func (*GarbageCollectOptions) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{3}
}

func (x *GarbageCollectOptions) GetOlderThan() string {
	if x != nil {
		return x.OlderThan
	}
	return ""
}

func (x *GarbageCollectOptions) GetManagedBy() string {
	if x != nil {
		return x.ManagedBy
	}
	return ""
}

func (x *GarbageCollectOptions) GetPlatformRuntime() string {
	if x != nil {
		return x.PlatformRuntime
	}
	return ""
}

func (x *GarbageCollectOptions) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_scan_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{4}
}

func (x *File) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ScanResult struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	WorstScore *policy.Score          `protobuf:"bytes,1,opt,name=worstScore,proto3" json:"worstScore,omitempty"`
	Ok         bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ScanResult_Full
	//	*ScanResult_Errors
	//	*ScanResult_None
	Result        isScanResult_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResult) Reset() {
	*x = ScanResult{}
	mi := &file_scan_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult) ProtoMessage() {}

func (x *ScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult.ProtoReflect.Descriptor instead.
func (*ScanResult) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{5}
}

func (x *ScanResult) GetWorstScore() *policy.Score {
	if x != nil {
		return x.WorstScore
	}
	return nil
}

func (x *ScanResult) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ScanResult) GetResult() isScanResult_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScanResult) GetFull() *policy.ReportCollection {
	if x != nil {
		if x, ok := x.Result.(*ScanResult_Full); ok {
			return x.Full
		}
	}
	return nil
}

func (x *ScanResult) GetErrors() *ErrorCollection {
	if x != nil {
		if x, ok := x.Result.(*ScanResult_Errors); ok {
			return x.Errors
		}
	}
	return nil
}

func (x *ScanResult) GetNone() *Empty {
	if x != nil {
		if x, ok := x.Result.(*ScanResult_None); ok {
			return x.None
		}
	}
	return nil
}

type isScanResult_Result interface {
	isScanResult_Result()
}

type ScanResult_Full struct {
	// Set only if report_type is FULL.
	Full *policy.ReportCollection `protobuf:"bytes,3,opt,name=full,proto3,oneof"`
}

type ScanResult_Errors struct {
	// Set only if report_type is ERROR.
	Errors *ErrorCollection `protobuf:"bytes,4,opt,name=errors,proto3,oneof"`
}

type ScanResult_None struct {
	// Set only if report_type is NONE.
	None *Empty `protobuf:"bytes,5,opt,name=none,proto3,oneof"`
}

func (*ScanResult_Full) isScanResult_Result() {}

func (*ScanResult_Errors) isScanResult_Result() {}

func (*ScanResult_None) isScanResult_Result() {}

type ErrorCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Errors        map[string]string      `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorCollection) Reset() {
	*x = ErrorCollection{}
	mi := &file_scan_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorCollection) ProtoMessage() {}

func (x *ErrorCollection) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorCollection.ProtoReflect.Descriptor instead.
func (*ErrorCollection) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorCollection) GetErrors() map[string]string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_scan_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state  protoimpl.MessageState            `protogen:"open.v1"`
	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=cnspec.policy.scan.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	// returns rfc 3339 timestamp
	Time string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// returns the major api version
	ApiVersion string `protobuf:"bytes,3,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	// returns the git commit checksum
	Build string `protobuf:"bytes,4,opt,name=build,proto3" json:"build,omitempty"`
	// returns the version of cnspec
	Version       string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_scan_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scan_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_scan_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func (x *HealthCheckResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *HealthCheckResponse) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *HealthCheckResponse) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_scan_proto protoreflect.FileDescriptor

const file_scan_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"scan.proto\x12\x12cnspec.policy.scan\x1a*providers-sdk/v1/inventory/inventory.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1apolicy/cnspec_policy.proto\"\a\n" +
	"\x05Empty\"\xef\x02\n" +
	"\x03Job\x12=\n" +
	"\tinventory\x18\x01 \x01(\v2\x1f.cnquery.providers.v1.InventoryR\tinventory\x120\n" +
	"\x06bundle\x18\x02 \x01(\v2\x18.cnspec.policy.v1.BundleR\x06bundle\x12\x1b\n" +
	"\tdo_record\x18\x14 \x01(\bR\bdoRecord\x12%\n" +
	"\x0epolicy_filters\x18\x15 \x03(\tR\rpolicyFilters\x128\n" +
	"\x05props\x18\x17 \x03(\v2\".cnspec.policy.scan.Job.PropsEntryR\x05props\x12?\n" +
	"\vreport_type\x18\x16 \x01(\x0e2\x1e.cnspec.policy.scan.ReportTypeR\n" +
	"reportType\x1a8\n" +
	"\n" +
	"PropsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\x03\n" +
	"\x12AdmissionReviewJob\x12+\n" +
	"\x04data\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x04data\x12J\n" +
	"\x06labels\x18\x02 \x03(\v22.cnspec.policy.scan.AdmissionReviewJob.LabelsEntryR\x06labels\x12?\n" +
	"\vreport_type\x18\x03 \x01(\x0e2\x1e.cnspec.policy.scan.ReportTypeR\n" +
	"reportType\x12M\n" +
	"\aoptions\x18\x04 \x03(\v23.cnspec.policy.scan.AdmissionReviewJob.OptionsEntryR\aoptions\x12=\n" +
	"\tdiscovery\x18\x05 \x01(\v2\x1f.cnquery.providers.v1.DiscoveryR\tdiscovery\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8a\x02\n" +
	"\x15GarbageCollectOptions\x12\x1d\n" +
	"\n" +
	"older_than\x18\x01 \x01(\tR\tolderThan\x12\x1d\n" +
	"\n" +
	"managed_by\x18\x02 \x01(\tR\tmanagedBy\x12)\n" +
	"\x10platform_runtime\x18\x03 \x01(\tR\x0fplatformRuntime\x12M\n" +
	"\x06labels\x18\x04 \x03(\v25.cnspec.policy.scan.GarbageCollectOptions.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1a\n" +
	"\x04File\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\x89\x02\n" +
	"\n" +
	"ScanResult\x127\n" +
	"\n" +
	"worstScore\x18\x01 \x01(\v2\x17.cnspec.policy.v1.ScoreR\n" +
	"worstScore\x12\x0e\n" +
	"\x02ok\x18\x02 \x01(\bR\x02ok\x128\n" +
	"\x04full\x18\x03 \x01(\v2\".cnspec.policy.v1.ReportCollectionH\x00R\x04full\x12=\n" +
	"\x06errors\x18\x04 \x01(\v2#.cnspec.policy.scan.ErrorCollectionH\x00R\x06errors\x12/\n" +
	"\x04none\x18\x05 \x01(\v2\x19.cnspec.policy.scan.EmptyH\x00R\x04noneB\b\n" +
	"\x06result\"\x95\x01\n" +
	"\x0fErrorCollection\x12G\n" +
	"\x06errors\x18\x01 \x03(\v2/.cnspec.policy.scan.ErrorCollection.ErrorsEntryR\x06errors\x1a9\n" +
	"\vErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x99\x02\n" +
	"\x13HealthCheckResponse\x12M\n" +
	"\x06status\x18\x01 \x01(\x0e25.cnspec.policy.scan.HealthCheckResponse.ServingStatusR\x06status\x12\x12\n" +
	"\x04time\x18\x02 \x01(\tR\x04time\x12\x1e\n" +
	"\n" +
	"apiVersion\x18\x03 \x01(\tR\n" +
	"apiVersion\x12\x14\n" +
	"\x05build\x18\x04 \x01(\tR\x05build\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\"O\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\x12\x13\n" +
	"\x0fSERVICE_UNKNOWN\x10\x03*+\n" +
	"\n" +
	"ReportType\x12\b\n" +
	"\x04FULL\x10\x00\x12\t\n" +
	"\x05ERROR\x10\x01\x12\b\n" +
	"\x04NONE\x10\x022\xf7\x03\n" +
	"\x04Scan\x12@\n" +
	"\x03Run\x12\x17.cnspec.policy.scan.Job\x1a\x1e.cnspec.policy.scan.ScanResult\"\x00\x12I\n" +
	"\fRunIncognito\x12\x17.cnspec.policy.scan.Job\x1a\x1e.cnspec.policy.scan.ScanResult\"\x00\x12@\n" +
	"\bSchedule\x12\x17.cnspec.policy.scan.Job\x1a\x19.cnspec.policy.scan.Empty\"\x00\x12^\n" +
	"\x12RunAdmissionReview\x12&.cnspec.policy.scan.AdmissionReviewJob\x1a\x1e.cnspec.policy.scan.ScanResult\"\x00\x12^\n" +
	"\x14GarbageCollectAssets\x12).cnspec.policy.scan.GarbageCollectOptions\x1a\x19.cnspec.policy.scan.Empty\"\x00\x12`\n" +
	"\vHealthCheck\x12&.cnspec.policy.scan.HealthCheckRequest\x1a'.cnspec.policy.scan.HealthCheckResponse\"\x00B&Z$go.mondoo.com/cnspec/v11/policy/scanb\x06proto3"

var (
	file_scan_proto_rawDescOnce sync.Once
	file_scan_proto_rawDescData []byte
)

func file_scan_proto_rawDescGZIP() []byte {
	file_scan_proto_rawDescOnce.Do(func() {
		file_scan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scan_proto_rawDesc), len(file_scan_proto_rawDesc)))
	})
	return file_scan_proto_rawDescData
}

var file_scan_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_scan_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_scan_proto_goTypes = []any{
	(ReportType)(0),                        // 0: cnspec.policy.scan.ReportType
	(HealthCheckResponse_ServingStatus)(0), // 1: cnspec.policy.scan.HealthCheckResponse.ServingStatus
	(*Empty)(nil),                          // 2: cnspec.policy.scan.Empty
	(*Job)(nil),                            // 3: cnspec.policy.scan.Job
	(*AdmissionReviewJob)(nil),             // 4: cnspec.policy.scan.AdmissionReviewJob
	(*GarbageCollectOptions)(nil),          // 5: cnspec.policy.scan.GarbageCollectOptions
	(*File)(nil),                           // 6: cnspec.policy.scan.File
	(*ScanResult)(nil),                     // 7: cnspec.policy.scan.ScanResult
	(*ErrorCollection)(nil),                // 8: cnspec.policy.scan.ErrorCollection
	(*HealthCheckRequest)(nil),             // 9: cnspec.policy.scan.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 10: cnspec.policy.scan.HealthCheckResponse
	nil,                                    // 11: cnspec.policy.scan.Job.PropsEntry
	nil,                                    // 12: cnspec.policy.scan.AdmissionReviewJob.LabelsEntry
	nil,                                    // 13: cnspec.policy.scan.AdmissionReviewJob.OptionsEntry
	nil,                                    // 14: cnspec.policy.scan.GarbageCollectOptions.LabelsEntry
	nil,                                    // 15: cnspec.policy.scan.ErrorCollection.ErrorsEntry
	(*inventory.Inventory)(nil),            // 16: cnquery.providers.v1.Inventory
	(*policy.Bundle)(nil),                  // 17: cnspec.policy.v1.Bundle
	(*structpb.Struct)(nil),                // 18: google.protobuf.Struct
	(*inventory.Discovery)(nil),            // 19: cnquery.providers.v1.Discovery
	(*policy.Score)(nil),                   // 20: cnspec.policy.v1.Score
	(*policy.ReportCollection)(nil),        // 21: cnspec.policy.v1.ReportCollection
}
var file_scan_proto_depIdxs = []int32{
	16, // 0: cnspec.policy.scan.Job.inventory:type_name -> cnquery.providers.v1.Inventory
	17, // 1: cnspec.policy.scan.Job.bundle:type_name -> cnspec.policy.v1.Bundle
	11, // 2: cnspec.policy.scan.Job.props:type_name -> cnspec.policy.scan.Job.PropsEntry
	0,  // 3: cnspec.policy.scan.Job.report_type:type_name -> cnspec.policy.scan.ReportType
	18, // 4: cnspec.policy.scan.AdmissionReviewJob.data:type_name -> google.protobuf.Struct
	12, // 5: cnspec.policy.scan.AdmissionReviewJob.labels:type_name -> cnspec.policy.scan.AdmissionReviewJob.LabelsEntry
	0,  // 6: cnspec.policy.scan.AdmissionReviewJob.report_type:type_name -> cnspec.policy.scan.ReportType
	13, // 7: cnspec.policy.scan.AdmissionReviewJob.options:type_name -> cnspec.policy.scan.AdmissionReviewJob.OptionsEntry
	19, // 8: cnspec.policy.scan.AdmissionReviewJob.discovery:type_name -> cnquery.providers.v1.Discovery
	14, // 9: cnspec.policy.scan.GarbageCollectOptions.labels:type_name -> cnspec.policy.scan.GarbageCollectOptions.LabelsEntry
	20, // 10: cnspec.policy.scan.ScanResult.worstScore:type_name -> cnspec.policy.v1.Score
	21, // 11: cnspec.policy.scan.ScanResult.full:type_name -> cnspec.policy.v1.ReportCollection
	8,  // 12: cnspec.policy.scan.ScanResult.errors:type_name -> cnspec.policy.scan.ErrorCollection
	2,  // 13: cnspec.policy.scan.ScanResult.none:type_name -> cnspec.policy.scan.Empty
	15, // 14: cnspec.policy.scan.ErrorCollection.errors:type_name -> cnspec.policy.scan.ErrorCollection.ErrorsEntry
	1,  // 15: cnspec.policy.scan.HealthCheckResponse.status:type_name -> cnspec.policy.scan.HealthCheckResponse.ServingStatus
	3,  // 16: cnspec.policy.scan.Scan.Run:input_type -> cnspec.policy.scan.Job
	3,  // 17: cnspec.policy.scan.Scan.RunIncognito:input_type -> cnspec.policy.scan.Job
	3,  // 18: cnspec.policy.scan.Scan.Schedule:input_type -> cnspec.policy.scan.Job
	4,  // 19: cnspec.policy.scan.Scan.RunAdmissionReview:input_type -> cnspec.policy.scan.AdmissionReviewJob
	5,  // 20: cnspec.policy.scan.Scan.GarbageCollectAssets:input_type -> cnspec.policy.scan.GarbageCollectOptions
	9,  // 21: cnspec.policy.scan.Scan.HealthCheck:input_type -> cnspec.policy.scan.HealthCheckRequest
	7,  // 22: cnspec.policy.scan.Scan.Run:output_type -> cnspec.policy.scan.ScanResult
	7,  // 23: cnspec.policy.scan.Scan.RunIncognito:output_type -> cnspec.policy.scan.ScanResult
	2,  // 24: cnspec.policy.scan.Scan.Schedule:output_type -> cnspec.policy.scan.Empty
	7,  // 25: cnspec.policy.scan.Scan.RunAdmissionReview:output_type -> cnspec.policy.scan.ScanResult
	2,  // 26: cnspec.policy.scan.Scan.GarbageCollectAssets:output_type -> cnspec.policy.scan.Empty
	10, // 27: cnspec.policy.scan.Scan.HealthCheck:output_type -> cnspec.policy.scan.HealthCheckResponse
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_scan_proto_init() }
func file_scan_proto_init() {
	if File_scan_proto != nil {
		return
	}
	file_scan_proto_msgTypes[5].OneofWrappers = []any{
		(*ScanResult_Full)(nil),
		(*ScanResult_Errors)(nil),
		(*ScanResult_None)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scan_proto_rawDesc), len(file_scan_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scan_proto_goTypes,
		DependencyIndexes: file_scan_proto_depIdxs,
		EnumInfos:         file_scan_proto_enumTypes,
		MessageInfos:      file_scan_proto_msgTypes,
	}.Build()
	File_scan_proto = out.File
	file_scan_proto_goTypes = nil
	file_scan_proto_depIdxs = nil
}
